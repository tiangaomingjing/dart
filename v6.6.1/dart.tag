<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>BulletCollisionDetector.cpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>db/d73/BulletCollisionDetector_8cpp</filename>
    <includes id="d9/d70/BulletCollisionDetector_8hpp" name="BulletCollisionDetector.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionDetector.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="db/dc4/BulletTypes_8hpp" name="BulletTypes.hpp" local="yes" imported="no">dart/collision/bullet/BulletTypes.hpp</includes>
    <includes id="d2/dc2/BulletCollisionObject_8hpp" name="BulletCollisionObject.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionObject.hpp</includes>
    <includes id="db/d12/BulletCollisionGroup_8hpp" name="BulletCollisionGroup.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionGroup.hpp</includes>
    <includes id="dc/d78/BulletCollisionDispatcher_8hpp" name="BulletCollisionDispatcher.hpp" local="yes" imported="no">dart/collision/bullet/detail/BulletCollisionDispatcher.hpp</includes>
    <includes id="d8/dad/BulletOverlapFilterCallback_8hpp" name="BulletOverlapFilterCallback.hpp" local="yes" imported="no">dart/collision/bullet/detail/BulletOverlapFilterCallback.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="d7/d74/HeightmapShape_8hpp" name="HeightmapShape.hpp" local="yes" imported="no">dart/dynamics/HeightmapShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkGroupValidity</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a182ab6f87ec676fa33c9ded227e47d73</anchor>
      <arglist>(BulletCollisionDetector *cd, CollisionGroup *group)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isCollision</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac1bfaaced4362d8990a1c5fc7bf23aea</anchor>
      <arglist>(btCollisionWorld *world)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filterOutCollisions</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a55c49df9631d223285fc8011c9c7b07e</anchor>
      <arglist>(btCollisionWorld *world)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BulletCollisionDetector.hpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>d9/d70/BulletCollisionDetector_8hpp</filename>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="db/d12/BulletCollisionGroup_8hpp" name="BulletCollisionGroup.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionGroup.hpp</includes>
    <includes id="d4/d75/BulletCollisionShape_8hpp" name="BulletCollisionShape.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionShape.hpp</includes>
    <class kind="class">dart::collision::BulletCollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionGroup.cpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>d4/d5a/BulletCollisionGroup_8cpp</filename>
    <includes id="db/d12/BulletCollisionGroup_8hpp" name="BulletCollisionGroup.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionGroup.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d2/dc2/BulletCollisionObject_8hpp" name="BulletCollisionObject.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionObject.hpp</includes>
    <includes id="dc/d78/BulletCollisionDispatcher_8hpp" name="BulletCollisionDispatcher.hpp" local="yes" imported="no">dart/collision/bullet/detail/BulletCollisionDispatcher.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionGroup.hpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>db/d12/BulletCollisionGroup_8hpp</filename>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <class kind="class">dart::collision::BulletCollisionGroup</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionObject.cpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>d4/d8f/BulletCollisionObject_8cpp</filename>
    <includes id="d2/dc2/BulletCollisionObject_8hpp" name="BulletCollisionObject.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionObject.hpp</includes>
    <includes id="db/dc4/BulletTypes_8hpp" name="BulletTypes.hpp" local="yes" imported="no">dart/collision/bullet/BulletTypes.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionObject.hpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>d2/dc2/BulletCollisionObject_8hpp</filename>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d4/d75/BulletCollisionShape_8hpp" name="BulletCollisionShape.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionShape.hpp</includes>
    <class kind="class">dart::collision::BulletCollisionObject</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionShape.cpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>d2/d65/BulletCollisionShape_8cpp</filename>
    <includes id="d4/d75/BulletCollisionShape_8hpp" name="BulletCollisionShape.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionShape.hpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>d4/d75/BulletCollisionShape_8hpp</filename>
    <class kind="struct">dart::collision::BulletCollisionShape</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletTypes.cpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>d7/da3/BulletTypes_8cpp</filename>
    <includes id="db/dc4/BulletTypes_8hpp" name="BulletTypes.hpp" local="yes" imported="no">dart/collision/bullet/BulletTypes.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af48f34ae3d323de6bee3c08842ed7a41</anchor>
      <arglist>(const btVector3 &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btVector3</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2f06b4ac7aeef37633e3b3420ab5973c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btMatrix3x3</type>
      <name>convertMatrix3x3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a483f89f8346675830080e7699933100f</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>btTransform</type>
      <name>convertTransform</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac24cea5ee84f5eb396ac2c302296e14</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BulletTypes.hpp</name>
    <path>/dart/collision/bullet/</path>
    <filename>db/dc4/BulletTypes_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionDispatcher.cpp</name>
    <path>/dart/collision/bullet/detail/</path>
    <filename>da/dbc/BulletCollisionDispatcher_8cpp</filename>
    <includes id="dc/d78/BulletCollisionDispatcher_8hpp" name="BulletCollisionDispatcher.hpp" local="yes" imported="no">dart/collision/bullet/detail/BulletCollisionDispatcher.hpp</includes>
    <includes id="d2/dc2/BulletCollisionObject_8hpp" name="BulletCollisionObject.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionDispatcher.hpp</name>
    <path>/dart/collision/bullet/detail/</path>
    <filename>dc/d78/BulletCollisionDispatcher_8hpp</filename>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <class kind="class">dart::collision::detail::BulletCollisionDispatcher</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>BulletOverlapFilterCallback.cpp</name>
    <path>/dart/collision/bullet/detail/</path>
    <filename>df/d99/BulletOverlapFilterCallback_8cpp</filename>
    <includes id="d8/dad/BulletOverlapFilterCallback_8hpp" name="BulletOverlapFilterCallback.hpp" local="yes" imported="no">dart/collision/bullet/detail/BulletOverlapFilterCallback.hpp</includes>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="d2/dc2/BulletCollisionObject_8hpp" name="BulletCollisionObject.hpp" local="yes" imported="no">dart/collision/bullet/BulletCollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>BulletOverlapFilterCallback.hpp</name>
    <path>/dart/collision/bullet/detail/</path>
    <filename>d8/dad/BulletOverlapFilterCallback_8hpp</filename>
    <includes id="de/df0/CollisionOption_8hpp" name="CollisionOption.hpp" local="yes" imported="no">dart/collision/CollisionOption.hpp</includes>
    <includes id="db/d44/CollisionResult_8hpp" name="CollisionResult.hpp" local="yes" imported="no">dart/collision/CollisionResult.hpp</includes>
    <class kind="struct">dart::collision::detail::BulletOverlapFilterCallback</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionDetector.cpp</name>
    <path>/dart/collision/</path>
    <filename>d6/d5e/CollisionDetector_8cpp</filename>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionDetector.hpp</name>
    <path>/dart/collision/</path>
    <filename>d1/d6e/CollisionDetector_8hpp</filename>
    <includes id="d5/d03/Factory_8hpp" name="Factory.hpp" local="yes" imported="no">dart/common/Factory.hpp</includes>
    <includes id="df/d90/Contact_8hpp" name="Contact.hpp" local="yes" imported="no">dart/collision/Contact.hpp</includes>
    <includes id="de/df0/CollisionOption_8hpp" name="CollisionOption.hpp" local="yes" imported="no">dart/collision/CollisionOption.hpp</includes>
    <includes id="db/d44/CollisionResult_8hpp" name="CollisionResult.hpp" local="yes" imported="no">dart/collision/CollisionResult.hpp</includes>
    <includes id="d6/d07/DistanceOption_8hpp" name="DistanceOption.hpp" local="yes" imported="no">dart/collision/DistanceOption.hpp</includes>
    <includes id="df/de9/DistanceResult_8hpp" name="DistanceResult.hpp" local="yes" imported="no">dart/collision/DistanceResult.hpp</includes>
    <includes id="da/d45/collision_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/collision/SmartPointer.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d3/d50/detail_2CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/detail/CollisionDetector.hpp</includes>
    <class kind="class">dart::collision::CollisionDetector</class>
    <class kind="class">dart::collision::CollisionDetector::CollisionObjectManager</class>
    <class kind="class">dart::collision::CollisionDetector::ManagerForUnsharableCollisionObjects</class>
    <class kind="struct">dart::collision::CollisionDetector::ManagerForUnsharableCollisionObjects::CollisionObjectDeleter</class>
    <class kind="class">dart::collision::CollisionDetector::ManagerForSharableCollisionObjects</class>
    <class kind="struct">dart::collision::CollisionDetector::ManagerForSharableCollisionObjects::CollisionObjectDeleter</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionDetector.hpp</name>
    <path>/dart/collision/detail/</path>
    <filename>d3/d50/detail_2CollisionDetector_8hpp</filename>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionFilter.cpp</name>
    <path>/dart/collision/</path>
    <filename>d1/de0/CollisionFilter_8cpp</filename>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionFilter.hpp</name>
    <path>/dart/collision/</path>
    <filename>d6/de0/CollisionFilter_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d4/dba/UnorderedPairs_8hpp" name="UnorderedPairs.hpp" local="yes" imported="no">dart/collision/detail/UnorderedPairs.hpp</includes>
    <class kind="class">dart::collision::CollisionFilter</class>
    <class kind="class">dart::collision::CompositeCollisionFilter</class>
    <class kind="class">dart::collision::BodyNodeCollisionFilter</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionGroup.cpp</name>
    <path>/dart/collision/</path>
    <filename>d1/dac/CollisionGroup_8cpp</filename>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionGroup.hpp</name>
    <path>/dart/collision/</path>
    <filename>db/d05/CollisionGroup_8hpp</filename>
    <includes id="da/d45/collision_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/collision/SmartPointer.hpp</includes>
    <includes id="de/df0/CollisionOption_8hpp" name="CollisionOption.hpp" local="yes" imported="no">dart/collision/CollisionOption.hpp</includes>
    <includes id="db/d44/CollisionResult_8hpp" name="CollisionResult.hpp" local="yes" imported="no">dart/collision/CollisionResult.hpp</includes>
    <includes id="d6/d07/DistanceOption_8hpp" name="DistanceOption.hpp" local="yes" imported="no">dart/collision/DistanceOption.hpp</includes>
    <includes id="df/de9/DistanceResult_8hpp" name="DistanceResult.hpp" local="yes" imported="no">dart/collision/DistanceResult.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d8/d59/detail_2CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/detail/CollisionGroup.hpp</includes>
    <class kind="class">dart::collision::CollisionGroup</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionGroup.hpp</name>
    <path>/dart/collision/detail/</path>
    <filename>d8/d59/detail_2CollisionGroup_8hpp</filename>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionObject.cpp</name>
    <path>/dart/collision/</path>
    <filename>db/d4c/CollisionObject_8cpp</filename>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionObject.hpp</name>
    <path>/dart/collision/</path>
    <filename>dc/d78/CollisionObject_8hpp</filename>
    <includes id="da/d45/collision_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/collision/SmartPointer.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="class">dart::collision::CollisionObject</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionOption.cpp</name>
    <path>/dart/collision/</path>
    <filename>da/d1b/CollisionOption_8cpp</filename>
    <includes id="de/df0/CollisionOption_8hpp" name="CollisionOption.hpp" local="yes" imported="no">dart/collision/CollisionOption.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionOption.hpp</name>
    <path>/dart/collision/</path>
    <filename>de/df0/CollisionOption_8hpp</filename>
    <class kind="struct">dart::collision::CollisionOption</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionResult.cpp</name>
    <path>/dart/collision/</path>
    <filename>d9/dda/CollisionResult_8cpp</filename>
    <includes id="db/d44/CollisionResult_8hpp" name="CollisionResult.hpp" local="yes" imported="no">dart/collision/CollisionResult.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <includes id="db/de3/dynamics_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/ShapeNode.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionResult.hpp</name>
    <path>/dart/collision/</path>
    <filename>db/d44/CollisionResult_8hpp</filename>
    <includes id="df/d90/Contact_8hpp" name="Contact.hpp" local="yes" imported="no">dart/collision/Contact.hpp</includes>
    <class kind="class">dart::collision::CollisionResult</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>Contact.cpp</name>
    <path>/dart/collision/</path>
    <filename>d4/d26/Contact_8cpp</filename>
    <includes id="df/d90/Contact_8hpp" name="Contact.hpp" local="yes" imported="no">dart/collision/Contact.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>Contact.hpp</name>
    <path>/dart/collision/</path>
    <filename>df/d90/Contact_8hpp</filename>
    <includes id="da/d45/collision_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/collision/SmartPointer.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d1/df7/Contact-impl_8hpp" name="Contact-impl.hpp" local="yes" imported="no">dart/collision/detail/Contact-impl.hpp</includes>
    <class kind="struct">dart::collision::Contact</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollide.cpp</name>
    <path>/dart/collision/dart/</path>
    <filename>d2/db2/DARTCollide_8cpp</filename>
    <includes id="dc/dbd/DARTCollide_8hpp" name="DARTCollide.hpp" local="yes" imported="no">dart/collision/dart/DARTCollide.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <class kind="struct">dart::collision::dContactGeom</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_COLLISION_EPS</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a654af0a082cd2c354076e585e9b9af7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dMULTIPLYOP0_331</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>acd7c95f0b919f96b818a3793644058f9</anchor>
      <arglist>(A, op, B, C)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dMULTIPLYOP1_331</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>aadc8a10a7a740934f6be6e88a8d61032</anchor>
      <arglist>(A, op, B, C)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dRecip</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a8d68a516c6cf1719b4169ee9e8eba19f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TST</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>aeeb3066b2701c8ecff449645fe45ea6f</anchor>
      <arglist>(expr1, expr2, norm, cc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TST</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a19e189e2e0a0a91b06a684bd017070d2</anchor>
      <arglist>(expr1, expr2, n1, n2, n3, cc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEMP_INNER14</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a32ca4c87185a2e44eccd27fe6962f483</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a06cbc8d8bf1b517485a30f5fb5f59c7e</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dVector4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a31d67aec6c73cf30b210e20f78cae13d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a41017ac8839d38f79668c697222cddbb</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a615dc3d4662e37b804eecac1b3a6c1ac</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix6</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a91e09b519847bdf69dcf0ca7e307195e</anchor>
      <arglist>[48]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dQuaternion</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac42a4d9a17315ebd549ede1a4651511b</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convVector</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2ba103455befd217da9a68983578bd34</anchor>
      <arglist>(const Eigen::Vector3d &amp;p0, dVector3 &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convMatrix</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae5963bdaf13514a32a6a6ca2927e7fa4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T0, dMatrix3 &amp;R0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a582e2b248c47e0301f4f53bc9fbc9fd5</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner14</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ade2fe0e9de532caa8d4b317f59cb6cce</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner41</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5930bfa267cb2944c3f9b3e3dbd9b314</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner44</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9468049d0828ec2acded2d76495dc68a</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY0_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6c1b007d5021df4e7c86a53b2983e7f2</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY1_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae6653a9f95446d3454b7ffed271c7bc7</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cullPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae70b4278338a6fa4c3412e30d58b9c18</anchor>
      <arglist>(int n, double p[], int m, int i0, int iret[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dLineClosestApproach</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac47b960e83b7d7722dc787cc8d7efd2</anchor>
      <arglist>(const dVector3 pa, const dVector3 ua, const dVector3 pb, const dVector3 ub, double *alpha, double *beta)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>intersectRectQuad</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a3a0ff848fc18f09ae206645081fcab0e</anchor>
      <arglist>(double h[2], double p[8], double ret[16])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dClosestLineBoxPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a8bbea9f76289149a458a4b776ff71e97</anchor>
      <arglist>(const dVector3 p1, const dVector3 p2, const dVector3 c, const dMatrix3 R, const dVector3 side, dVector3 lret, dVector3 bret)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a7409462147751a0632c98ea71b3fc564</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const dVector3 p1, const dMatrix3 R1, const dVector3 side1, const dVector3 p2, const dMatrix3 R2, const dVector3 side2, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6a499c2347bdc35fbe5ff0489644bc98</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a48703ab40948227ad20b3469a15c24b2</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const double &amp;r1, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a688aee8a11cd6c22f133ede3bc6ce6a8</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;r0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4453cc30dabf1e28b86d1ff0e1bfe302</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;_r0, const Eigen::Isometry3d &amp;c0, const double &amp;_r1, const Eigen::Isometry3d &amp;c1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9a39956d9986c714d982e6661bd3558f</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const double &amp;sphere_rad, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderPlane</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac644b76c4859b4252238750710da3413</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;plane_normal, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collide</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6edd9ffac5cdd22908b5fc9d5d49c5fc</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>MAX_CYLBOX_CLIP_POINTS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a80ba017c7bf196a9663e0a9d3cd8578b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_AXIS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4146747250f23fa87196b56d54138c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_SEGMENT</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae7562cb943cd38b057831387484bea04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DARTCollide.hpp</name>
    <path>/dart/collision/dart/</path>
    <filename>dc/dbd/DARTCollide_8hpp</filename>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollisionDetector.cpp</name>
    <path>/dart/collision/dart/</path>
    <filename>dc/d01/DARTCollisionDetector_8cpp</filename>
    <includes id="dc/dc2/DARTCollisionDetector_8hpp" name="DARTCollisionDetector.hpp" local="yes" imported="no">dart/collision/dart/DARTCollisionDetector.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="dc/dbd/DARTCollide_8hpp" name="DARTCollide.hpp" local="yes" imported="no">dart/collision/dart/DARTCollide.hpp</includes>
    <includes id="d8/dd0/DARTCollisionObject_8hpp" name="DARTCollisionObject.hpp" local="yes" imported="no">dart/collision/dart/DARTCollisionObject.hpp</includes>
    <includes id="d2/d42/DARTCollisionGroup_8hpp" name="DARTCollisionGroup.hpp" local="yes" imported="no">dart/collision/dart/DARTCollisionGroup.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkGroupValidity</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a33f770a0a4b825f5dd930d4437648721</anchor>
      <arglist>(DARTCollisionDetector *cd, CollisionGroup *group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warnUnsupportedShapeType</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a520e56bcf5668d2de3a482a12cf447e3</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DARTCollisionDetector.hpp</name>
    <path>/dart/collision/dart/</path>
    <filename>dc/dc2/DARTCollisionDetector_8hpp</filename>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <class kind="class">dart::collision::DARTCollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollisionGroup.cpp</name>
    <path>/dart/collision/dart/</path>
    <filename>d3/d23/DARTCollisionGroup_8cpp</filename>
    <includes id="d2/d42/DARTCollisionGroup_8hpp" name="DARTCollisionGroup.hpp" local="yes" imported="no">dart/collision/dart/DARTCollisionGroup.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollisionGroup.hpp</name>
    <path>/dart/collision/dart/</path>
    <filename>d2/d42/DARTCollisionGroup_8hpp</filename>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <class kind="class">dart::collision::DARTCollisionGroup</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollisionObject.cpp</name>
    <path>/dart/collision/dart/</path>
    <filename>de/db9/DARTCollisionObject_8cpp</filename>
    <includes id="d8/dd0/DARTCollisionObject_8hpp" name="DARTCollisionObject.hpp" local="yes" imported="no">dart/collision/dart/DARTCollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollisionObject.hpp</name>
    <path>/dart/collision/dart/</path>
    <filename>d8/dd0/DARTCollisionObject_8hpp</filename>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <class kind="class">dart::collision::DARTCollisionObject</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>Contact-impl.hpp</name>
    <path>/dart/collision/detail/</path>
    <filename>d1/df7/Contact-impl_8hpp</filename>
    <includes id="df/d90/Contact_8hpp" name="Contact.hpp" local="yes" imported="no">dart/collision/Contact.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>UnorderedPairs.hpp</name>
    <path>/dart/collision/detail/</path>
    <filename>d4/dba/UnorderedPairs_8hpp</filename>
    <class kind="class">dart::collision::detail::UnorderedPairs</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>DistanceFilter.cpp</name>
    <path>/dart/collision/</path>
    <filename>df/d6c/DistanceFilter_8cpp</filename>
    <includes id="de/dcb/DistanceFilter_8hpp" name="DistanceFilter.hpp" local="yes" imported="no">dart/collision/DistanceFilter.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DistanceFilter.hpp</name>
    <path>/dart/collision/</path>
    <filename>de/dcb/DistanceFilter_8hpp</filename>
    <class kind="struct">dart::collision::DistanceFilter</class>
    <class kind="struct">dart::collision::BodyNodeDistanceFilter</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DistanceOption.cpp</name>
    <path>/dart/collision/</path>
    <filename>d8/ddb/DistanceOption_8cpp</filename>
    <includes id="d6/d07/DistanceOption_8hpp" name="DistanceOption.hpp" local="yes" imported="no">dart/collision/DistanceOption.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DistanceOption.hpp</name>
    <path>/dart/collision/</path>
    <filename>d6/d07/DistanceOption_8hpp</filename>
    <class kind="struct">dart::collision::DistanceOption</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DistanceResult.cpp</name>
    <path>/dart/collision/</path>
    <filename>d6/d78/DistanceResult_8cpp</filename>
    <includes id="df/de9/DistanceResult_8hpp" name="DistanceResult.hpp" local="yes" imported="no">dart/collision/DistanceResult.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFAULT_MIN_DISTANCE</name>
      <anchorfile>d6/d78/DistanceResult_8cpp.html</anchorfile>
      <anchor>ab67aee2317f65a3a9f07dd90e3188201</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFAULT_UNCLAMPED_MIN_DISTANCE</name>
      <anchorfile>d6/d78/DistanceResult_8cpp.html</anchorfile>
      <anchor>a27ff14d1bba9b6e5a2f42552c476900f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceResult.hpp</name>
    <path>/dart/collision/</path>
    <filename>df/de9/DistanceResult_8hpp</filename>
    <class kind="struct">dart::collision::DistanceResult</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BackwardCompatibility.cpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>df/d42/BackwardCompatibility_8cpp</filename>
    <includes id="de/dfe/BackwardCompatibility_8hpp" name="BackwardCompatibility.hpp" local="yes" imported="no">dart/collision/fcl/BackwardCompatibility.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::fcl</namespace>
    <member kind="function">
      <type>double</type>
      <name>length</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a486fdd4db83a0dc8eaebfa06575f14d4</anchor>
      <arglist>(const dart::collision::fcl::Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>length2</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a5263b0f58a2dc8bea8974f1f186f28ad</anchor>
      <arglist>(const dart::collision::fcl::Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>dart::collision::fcl::Vector3</type>
      <name>getTranslation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ad4dc2b212d5cea3447f79646467438c7</anchor>
      <arglist>(const dart::collision::fcl::Transform3 &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranslation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a098d3ad5425ad0917552e6856e688d20</anchor>
      <arglist>(dart::collision::fcl::Transform3 &amp;T, const dart::collision::fcl::Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>dart::collision::fcl::Matrix3</type>
      <name>getRotation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ad78d195fadad96f4952a4f8265976d04</anchor>
      <arglist>(const dart::collision::fcl::Transform3 &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a6aabf622da025a1ff6900cd2b435d268</anchor>
      <arglist>(dart::collision::fcl::Transform3 &amp;T, const dart::collision::fcl::Matrix3 &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEulerZYX</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a24b2cba41f1dda722b03a939288f3770</anchor>
      <arglist>(dart::collision::fcl::Matrix3 &amp;rot, double eulerX, double eulerY, double eulerZ)</arglist>
    </member>
    <member kind="function">
      <type>dart::collision::fcl::Vector3</type>
      <name>transform</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a9c8a8a78b267e61ccb660fc5bcc86c94</anchor>
      <arglist>(const dart::collision::fcl::Transform3 &amp;t, const dart::collision::fcl::Vector3 &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BackwardCompatibility.hpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>de/dfe/BackwardCompatibility_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::fcl</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FCL_VERSION_AT_LEAST</name>
      <anchorfile>de/dfe/BackwardCompatibility_8hpp.html</anchorfile>
      <anchor>a6791c3dd766d6e264155b65053d85bf9</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FCL_MAJOR_MINOR_VERSION_AT_MOST</name>
      <anchorfile>de/dfe/BackwardCompatibility_8hpp.html</anchorfile>
      <anchor>a4cab79acdaca7bc60a9337d9db7cc98d</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>fcl_shared_ptr</name>
      <anchorfile>de/dfe/BackwardCompatibility_8hpp.html</anchorfile>
      <anchor>a6715e066d0d8d2e0cabab99057ff9288</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; T &gt;</type>
      <name>fcl_weak_ptr</name>
      <anchorfile>de/dfe/BackwardCompatibility_8hpp.html</anchorfile>
      <anchor>a5189f1a97953bf2b7a65a7bb8fca0b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Vec3f</type>
      <name>Vector3</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a96f4ac9c1b4b6f6d7931ddf495424618</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Matrix3f</type>
      <name>Matrix3</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ab8e71fdd2fbd858079bac04f0fcb267f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Transform3f</type>
      <name>Transform3</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>aa4c0a9939fa73b3ac8ab4a5f4695f5dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Box</type>
      <name>Box</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ae0206cae9d16a672147e2c25ac9e7c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Cylinder</type>
      <name>Cylinder</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a9f36eed4f687d02f443700b0dea638c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Halfspace</type>
      <name>Halfspace</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a8f5f31361f9a57d1812650aa716568d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Sphere</type>
      <name>Sphere</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a1201f599fb543c2c3879cde624aa02ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionObject</type>
      <name>CollisionObject</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a0a019f924a9e97a217ac76e11f05fccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionGeometry</type>
      <name>CollisionGeometry</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a05ac3708e93121547a6f84eaa933d262</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::DynamicAABBTreeCollisionManager</type>
      <name>DynamicAABBTreeCollisionManager</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a965a1ef907332c83ab6bb99859708cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::OBBRSS</type>
      <name>OBBRSS</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a6947311197bbe3938a83e14f5afe2be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionRequest</type>
      <name>CollisionRequest</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>aaf4c8c8e6ac3ef70d809e9ccc7f6262c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionResult</type>
      <name>CollisionResult</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a80f9eff1dc089bd849edbdc8902c4fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::DistanceRequest</type>
      <name>DistanceRequest</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>aff276f0bf6f82166cfcf0191ce8cf0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::DistanceResult</type>
      <name>DistanceResult</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ab6e1b664bdb7026c8de2bd894d266390</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Contact</type>
      <name>Contact</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>af4f7b98de497f3e04d9a581598fe4af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>fcl_shared_ptr&lt; T &gt;</type>
      <name>fcl_make_shared</name>
      <anchorfile>de/dfe/BackwardCompatibility_8hpp.html</anchorfile>
      <anchor>af7855abfb028590df0564ab023938cab</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CollisionShapes.hpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d5/d51/CollisionShapes_8hpp</filename>
    <includes id="de/dfe/BackwardCompatibility_8hpp" name="BackwardCompatibility.hpp" local="yes" imported="no">dart/collision/fcl/BackwardCompatibility.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6f8ea4e6deb9c89d59e4049fa4113b0f</anchor>
      <arglist>(float _scaleX, float _scaleY, float _scaleZ, const aiScene *_mesh, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createEllipsoid</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aef85de675695006f198ed465eec12f8a</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCube</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9c4a1f300451a39d8ce05910e3aaf0bf</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCylinder</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a81629a83f81c50ad4318050a655ff217</anchor>
      <arglist>(double _baseRadius, double _topRadius, double _height, int _slices, int _stacks, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FCLCollisionDetector.cpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d2/d00/FCLCollisionDetector_8cpp</filename>
    <includes id="d4/d9d/FCLCollisionDetector_8hpp" name="FCLCollisionDetector.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionDetector.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="de/dcb/DistanceFilter_8hpp" name="DistanceFilter.hpp" local="yes" imported="no">dart/collision/DistanceFilter.hpp</includes>
    <includes id="d6/df8/FCLTypes_8hpp" name="FCLTypes.hpp" local="yes" imported="no">dart/collision/fcl/FCLTypes.hpp</includes>
    <includes id="db/def/FCLCollisionObject_8hpp" name="FCLCollisionObject.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionObject.hpp</includes>
    <includes id="d9/d30/FCLCollisionGroup_8hpp" name="FCLCollisionGroup.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionGroup.hpp</includes>
    <includes id="d9/df5/tri__tri__intersection__test_8hpp" name="tri_tri_intersection_test.hpp" local="yes" imported="no">dart/collision/fcl/tri_tri_intersection_test.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="dc/ddf/VoxelGridShape_8hpp" name="VoxelGridShape.hpp" local="yes" imported="no">dart/dynamics/VoxelGridShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkGroupValidity</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4b0e21997b89b43620b925d9ff1a1517</anchor>
      <arglist>(FCLCollisionDetector *cd, CollisionGroup *group)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FCLCollisionDetector.hpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d4/d9d/FCLCollisionDetector_8hpp</filename>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="d6/df8/FCLTypes_8hpp" name="FCLTypes.hpp" local="yes" imported="no">dart/collision/fcl/FCLTypes.hpp</includes>
    <class kind="class">dart::collision::FCLCollisionDetector</class>
    <class kind="class">dart::collision::FCLCollisionDetector::FCLCollisionGeometryDeleter</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLCollisionGroup.cpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>dc/d0b/FCLCollisionGroup_8cpp</filename>
    <includes id="d9/d30/FCLCollisionGroup_8hpp" name="FCLCollisionGroup.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionGroup.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="db/def/FCLCollisionObject_8hpp" name="FCLCollisionObject.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLCollisionGroup.hpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d9/d30/FCLCollisionGroup_8hpp</filename>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <includes id="de/dfe/BackwardCompatibility_8hpp" name="BackwardCompatibility.hpp" local="yes" imported="no">dart/collision/fcl/BackwardCompatibility.hpp</includes>
    <class kind="class">dart::collision::FCLCollisionGroup</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLCollisionObject.cpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d7/da0/FCLCollisionObject_8cpp</filename>
    <includes id="db/def/FCLCollisionObject_8hpp" name="FCLCollisionObject.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionObject.hpp</includes>
    <includes id="d6/df8/FCLTypes_8hpp" name="FCLTypes.hpp" local="yes" imported="no">dart/collision/fcl/FCLTypes.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLCollisionObject.hpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>db/def/FCLCollisionObject_8hpp</filename>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="de/dfe/BackwardCompatibility_8hpp" name="BackwardCompatibility.hpp" local="yes" imported="no">dart/collision/fcl/BackwardCompatibility.hpp</includes>
    <class kind="class">dart::collision::FCLCollisionObject</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLTypes.cpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d5/d57/FCLTypes_8cpp</filename>
    <includes id="d6/df8/FCLTypes_8hpp" name="FCLTypes.hpp" local="yes" imported="no">dart/collision/fcl/FCLTypes.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLTypes.hpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d6/df8/FCLTypes_8hpp</filename>
    <includes id="de/dfe/BackwardCompatibility_8hpp" name="BackwardCompatibility.hpp" local="yes" imported="no">dart/collision/fcl/BackwardCompatibility.hpp</includes>
    <class kind="class">dart::collision::FCLTypes</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>tri_tri_intersection_test.hpp</name>
    <path>/dart/collision/fcl/</path>
    <filename>d9/df5/tri__tri__intersection__test_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>FABS</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a9b649f4d878e64a80b4cd2cad45f43b3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_EPSILON_TEST</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a30e72ae9306395819bee85199878fa9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSILON</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a002b2f4894492820fe708b1b7e7c5e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_CONTACT</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a5409f11a5d10becb9f8625cde63924cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COPLANAR_CONTACT</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a033fad011269e0c02323d1634fcd64f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERIAL_CONTACT</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>aa2bd9d44ef5e226062ca9f56307d82cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CROSS</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a275587ce22080c4c09deb818b1ce3564</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a7942047af87f6f42fe6880a4c7c842ae</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a241dda3a0a43611f1187bdfebc3391d7</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADD</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>ae4523d8a54d733effac8236546decd4c</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULT</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>af3dd211b007998f1568cde5e9a25d6bc</anchor>
      <arglist>(dest, v, factor)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a08e256370d129272d4b47df0710a366c</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>aa7ff16bef9247f63b96fd79e1833bc1c</anchor>
      <arglist>(dest, src)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SORT</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>ac226bc1ed04fd7d4865263484ed22a47</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWAP</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>aac9153aee4bdb92701df902e06a74eb3</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISECT</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>acbc500e8e7812f102a89fa065c80c36e</anchor>
      <arglist>(VV0, VV1, VV2, D0, D1, D2, isect0, isect1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPUTE_INTERVALS</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>abde7de24036af5d1c5257bb6b6738335</anchor>
      <arglist>(VV0, VV1, VV2, D0, D1, D2, D0D1, D0D2, isect0, isect1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edge_tri_intersect</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>a5e7babd88a23c7455a0c82a06dd1ff10</anchor>
      <arglist>(float V0[3], float V1[3], float DV0, float DV1, float V[3])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tri_tri_intersect</name>
      <anchorfile>d9/df5/tri__tri__intersection__test_8hpp.html</anchorfile>
      <anchor>aee3759bc183c9ffcf6418784164c2a87</anchor>
      <arglist>(float V0[3], float V1[3], float V2[3], float U0[3], float U1[3], float U2[3], float res1[3], float res2[3])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OdeBox.cpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>dc/d6d/OdeBox_8cpp</filename>
    <includes id="d0/dcc/OdeBox_8hpp" name="OdeBox.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeBox.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeBox.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d0/dcc/OdeBox_8hpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <class kind="class">dart::collision::detail::OdeBox</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCapsule.cpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d2/dcf/OdeCapsule_8cpp</filename>
    <includes id="df/d9a/OdeCapsule_8hpp" name="OdeCapsule.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeCapsule.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCapsule.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>df/d9a/OdeCapsule_8hpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <class kind="class">dart::collision::detail::OdeCapsule</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCylinder.cpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d5/d01/OdeCylinder_8cpp</filename>
    <includes id="d5/de8/OdeCylinder_8hpp" name="OdeCylinder.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeCylinder.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCylinder.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d5/de8/OdeCylinder_8hpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <class kind="class">dart::collision::detail::OdeCylinder</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeGeom.cpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d4/d20/OdeGeom_8cpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeGeom.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d6/dbb/OdeGeom_8hpp</filename>
    <includes id="df/d30/OdeCollisionObject_8hpp" name="OdeCollisionObject.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionObject.hpp</includes>
    <includes id="d6/d50/OdeCollisionDetector_8hpp" name="OdeCollisionDetector.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionDetector.hpp</includes>
    <class kind="class">dart::collision::detail::OdeGeom</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeHeightmap-impl.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>dd/d19/OdeHeightmap-impl_8hpp</filename>
    <includes id="d6/d9d/OdeHeightmap_8hpp" name="OdeHeightmap.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeHeightmap.hpp</includes>
    <includes id="d7/d74/HeightmapShape_8hpp" name="HeightmapShape.hpp" local="yes" imported="no">dart/dynamics/HeightmapShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HF_THICKNESS</name>
      <anchorfile>dd/d19/OdeHeightmap-impl_8hpp.html</anchorfile>
      <anchor>a0c1d201f3daf24a60e163fad1550020b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOdeHeightfieldDetails</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>a7ca90766bca331fafdd9eb50fe04b983</anchor>
      <arglist>(const dHeightfieldDataID odeHeightfieldId, const S *heights, const std::size_t &amp;width, const std::size_t &amp;height, const Eigen::Vector3d &amp;scale, typename std::enable_if&lt; std::is_same&lt; float, S &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOdeHeightfieldDetails</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>a974c044508931d62167a94dc2eb3d77c</anchor>
      <arglist>(const dHeightfieldDataID odeHeightfieldId, const S *heights, const std::size_t &amp;width, const std::size_t &amp;height, const Eigen::Vector3d &amp;scale, typename std::enable_if&lt; std::is_same&lt; double, S &gt;::value &gt;::type *=0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OdeHeightmap.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d6/d9d/OdeHeightmap_8hpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <includes id="d7/d74/HeightmapShape_8hpp" name="HeightmapShape.hpp" local="yes" imported="no">dart/dynamics/HeightmapShape.hpp</includes>
    <includes id="dd/d19/OdeHeightmap-impl_8hpp" name="OdeHeightmap-impl.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeHeightmap-impl.hpp</includes>
    <class kind="class">dart::collision::detail::OdeHeightmap</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
    <member kind="typedef">
      <type>OdeHeightmap&lt; float &gt;</type>
      <name>OdeHeightmapf</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>ac3a8d12bdca17410fec7d245ad135ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OdeHeightmap&lt; double &gt;</type>
      <name>OdeHeightmapd</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>a594fc234e04ce655e5199d0e783d3fbb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OdeMesh.cpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d6/dd3/OdeMesh_8cpp</filename>
    <includes id="d8/d75/OdeMesh_8hpp" name="OdeMesh.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeMesh.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeMesh.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d8/d75/OdeMesh_8hpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <class kind="class">dart::collision::detail::OdeMesh</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdePlane.cpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d1/d79/OdePlane_8cpp</filename>
    <includes id="d6/db2/OdePlane_8hpp" name="OdePlane.hpp" local="yes" imported="no">dart/collision/ode/detail/OdePlane.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdePlane.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d6/db2/OdePlane_8hpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <class kind="class">dart::collision::detail::OdePlane</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeSphere.cpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d0/dc6/OdeSphere_8cpp</filename>
    <includes id="d5/d6a/OdeSphere_8hpp" name="OdeSphere.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeSphere.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeSphere.hpp</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>d5/d6a/OdeSphere_8hpp</filename>
    <includes id="d6/dbb/OdeGeom_8hpp" name="OdeGeom.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeGeom.hpp</includes>
    <class kind="class">dart::collision::detail::OdeSphere</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCollisionDetector.cpp</name>
    <path>/dart/collision/ode/</path>
    <filename>df/d71/OdeCollisionDetector_8cpp</filename>
    <includes id="d6/d50/OdeCollisionDetector_8hpp" name="OdeCollisionDetector.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionDetector.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="d7/d91/OdeTypes_8hpp" name="OdeTypes.hpp" local="yes" imported="no">dart/collision/ode/OdeTypes.hpp</includes>
    <includes id="d9/d2f/OdeCollisionGroup_8hpp" name="OdeCollisionGroup.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionGroup.hpp</includes>
    <includes id="df/d30/OdeCollisionObject_8hpp" name="OdeCollisionObject.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCollisionDetector.hpp</name>
    <path>/dart/collision/ode/</path>
    <filename>d6/d50/OdeCollisionDetector_8hpp</filename>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <class kind="class">dart::collision::OdeCollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAX_COLLIDE_RETURNS</name>
      <anchorfile>d6/d50/OdeCollisionDetector_8hpp.html</anchorfile>
      <anchor>ad98df403ce79bcd9055a57bddaf95d95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OdeCollisionGroup.cpp</name>
    <path>/dart/collision/ode/</path>
    <filename>dc/d17/OdeCollisionGroup_8cpp</filename>
    <includes id="d9/d2f/OdeCollisionGroup_8hpp" name="OdeCollisionGroup.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionGroup.hpp</includes>
    <includes id="df/d30/OdeCollisionObject_8hpp" name="OdeCollisionObject.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCollisionGroup.hpp</name>
    <path>/dart/collision/ode/</path>
    <filename>d9/d2f/OdeCollisionGroup_8hpp</filename>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <class kind="class">dart::collision::OdeCollisionGroup</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>OdeCollisionObject.cpp</name>
    <path>/dart/collision/ode/</path>
    <filename>de/d75/OdeCollisionObject_8cpp</filename>
    <includes id="df/d30/OdeCollisionObject_8hpp" name="OdeCollisionObject.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionObject.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="d7/d74/HeightmapShape_8hpp" name="HeightmapShape.hpp" local="yes" imported="no">dart/dynamics/HeightmapShape.hpp</includes>
    <includes id="d7/d91/OdeTypes_8hpp" name="OdeTypes.hpp" local="yes" imported="no">dart/collision/ode/OdeTypes.hpp</includes>
    <includes id="d0/dcc/OdeBox_8hpp" name="OdeBox.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeBox.hpp</includes>
    <includes id="df/d9a/OdeCapsule_8hpp" name="OdeCapsule.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeCapsule.hpp</includes>
    <includes id="d5/de8/OdeCylinder_8hpp" name="OdeCylinder.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeCylinder.hpp</includes>
    <includes id="d8/d75/OdeMesh_8hpp" name="OdeMesh.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeMesh.hpp</includes>
    <includes id="d6/db2/OdePlane_8hpp" name="OdePlane.hpp" local="yes" imported="no">dart/collision/ode/detail/OdePlane.hpp</includes>
    <includes id="d5/d6a/OdeSphere_8hpp" name="OdeSphere.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeSphere.hpp</includes>
    <includes id="d6/d9d/OdeHeightmap_8hpp" name="OdeHeightmap.hpp" local="yes" imported="no">dart/collision/ode/detail/OdeHeightmap.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function" static="yes">
      <type>static detail::OdeGeom *</type>
      <name>createOdeGeom</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a39d43959bb3bd71fd9a31ce6dd16bad2</anchor>
      <arglist>(OdeCollisionObject *collObj, const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OdeCollisionObject.hpp</name>
    <path>/dart/collision/ode/</path>
    <filename>df/d30/OdeCollisionObject_8hpp</filename>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d6/d50/OdeCollisionDetector_8hpp" name="OdeCollisionDetector.hpp" local="yes" imported="no">dart/collision/ode/OdeCollisionDetector.hpp</includes>
    <class kind="class">dart::collision::OdeCollisionObject</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::collision::detail</namespace>
  </compound>
  <compound kind="file">
    <name>OdeTypes.cpp</name>
    <path>/dart/collision/ode/</path>
    <filename>d7/dea/OdeTypes_8cpp</filename>
    <includes id="d7/d91/OdeTypes_8hpp" name="OdeTypes.hpp" local="yes" imported="no">dart/collision/ode/OdeTypes.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>OdeTypes.hpp</name>
    <path>/dart/collision/ode/</path>
    <filename>d7/d91/OdeTypes_8hpp</filename>
    <class kind="class">dart::collision::OdeTypes</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>Option.hpp</name>
    <path>/dart/collision/</path>
    <filename>dc/d86/Option_8hpp</filename>
    <includes id="de/df0/CollisionOption_8hpp" name="CollisionOption.hpp" local="yes" imported="no">dart/collision/CollisionOption.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Result.hpp</name>
    <path>/dart/collision/</path>
    <filename>d3/db2/Result_8hpp</filename>
    <includes id="db/d44/CollisionResult_8hpp" name="CollisionResult.hpp" local="yes" imported="no">dart/collision/CollisionResult.hpp</includes>
  </compound>
  <compound kind="file">
    <name>SmartPointer.hpp</name>
    <path>/dart/collision/</path>
    <filename>da/d45/collision_2SmartPointer_8hpp</filename>
    <includes id="d9/d30/common_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/common/SmartPointer.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CollisionDetector &gt;</type>
      <name>CollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a60235dadb9725d7b0a8478778a91f56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CollisionDetector &gt;</type>
      <name>ConstCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4967af4a5980fcbac544c4519a1393ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CollisionDetector &gt;</type>
      <name>WeakCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a718f43438129cea01a736d083c96df24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CollisionDetector &gt;</type>
      <name>WeakConstCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae647289fb5cbc03dd578cad1bcdcfbea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; FCLCollisionDetector &gt;</type>
      <name>FCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a60a6efdfe5b171c688f73af2c80ef374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const FCLCollisionDetector &gt;</type>
      <name>ConstFCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5999bf821b54466b65c2a3531686199c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; FCLCollisionDetector &gt;</type>
      <name>WeakFCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae2cf5979a04e90082b670eee06acef2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const FCLCollisionDetector &gt;</type>
      <name>WeakConstFCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>adea85c6523da01c84d80f15954b2d03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; DARTCollisionDetector &gt;</type>
      <name>DARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aeae4a50fd9551bf8cac3211e2bad3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const DARTCollisionDetector &gt;</type>
      <name>ConstDARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2420d60ebe3b5c524f01697c25f57b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; DARTCollisionDetector &gt;</type>
      <name>WeakDARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a731d09757a7575fe47b770b3f05bb650</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const DARTCollisionDetector &gt;</type>
      <name>WeakConstDARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6a2b8bebc557aa346e56dd276d63a150</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CollisionObject &gt;</type>
      <name>CollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a7d0bb99e3e9f7e0ddab35eddb0704ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CollisionObject &gt;</type>
      <name>ConstCollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4208796df09bb53943f44c9411de0e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CollisionObject &gt;</type>
      <name>WeakCollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9902101c21fae61f818285c1597f2d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CollisionObject &gt;</type>
      <name>WeakConstCollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a966c82275ca8cea5f120fc150297921e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CollisionGroup &gt;</type>
      <name>CollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aeab70bdc8cdf02ba1537651124e0c64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CollisionGroup &gt;</type>
      <name>ConstCollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>acf2273026eaef143314a77d7de43dc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CollisionGroup &gt;</type>
      <name>WeakCollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ab70519b4fab66dd261c4e58b1dde9169</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CollisionGroup &gt;</type>
      <name>WeakConstCollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a37834b14d4c668a3ae91385186a7d650</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SmartPointer.hpp</name>
    <path>/dart/common/</path>
    <filename>d9/d30/common_2SmartPointer_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_DECLARE_SHARED_WEAK</name>
      <anchorfile>d9/d30/common_2SmartPointer_8hpp.html</anchorfile>
      <anchor>aa47e4f5747c17c5684a582c6292b74c6</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_MAKE_SHARED_WEAK</name>
      <anchorfile>d9/d30/common_2SmartPointer_8hpp.html</anchorfile>
      <anchor>a53e9d3715034193bbacd12826d954f5f</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_DECLARE_SMART_POINTERS</name>
      <anchorfile>d9/d30/common_2SmartPointer_8hpp.html</anchorfile>
      <anchor>aabeb24b4ea78470e4bc546b9ab7fa76a</anchor>
      <arglist>(X)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SmartPointer.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d7/d8e/constraint_2SmartPointer_8hpp</filename>
    <includes id="d9/d30/common_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/common/SmartPointer.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ConstrainedGroup &gt;</type>
      <name>ConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>afc4782be19429311ad4563a94358cf16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ConstrainedGroup &gt;</type>
      <name>ConstConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a527abbf9cf43ffe2319eb4f2d742e9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ConstrainedGroup &gt;</type>
      <name>WeakConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>add803338118c60f060c728071243a201</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ConstrainedGroup &gt;</type>
      <name>WeakConstConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a6b189cda86a601ae5a4d02db720a97d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ConstraintBase &gt;</type>
      <name>ConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>adb8950a182abb73848fc8458b483fb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ConstraintBase &gt;</type>
      <name>ConstConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a3ae5d631b2d6c8987428247b2cea65fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ConstraintBase &gt;</type>
      <name>WeakConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a480dac993825ff2b18dbb3ac77f0e158</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ConstraintBase &gt;</type>
      <name>WeakConstConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a7af37508138f2fe8d6bc61bbc45064ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ClosedLoopConstraint &gt;</type>
      <name>ClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a8b894f5e25e6331f5945cf26e6e39d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ClosedLoopConstraint &gt;</type>
      <name>ConstClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aab1860afa6bb3339722ee1ceece6a74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ClosedLoopConstraint &gt;</type>
      <name>WeakClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2b065dcf29054b77f80e441b921eaeea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ClosedLoopConstraint &gt;</type>
      <name>WeakConstClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a6756354b842dd65293812bdca65cbcef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ContactConstraint &gt;</type>
      <name>ContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5be6b5c1132cc919959550b5ef668fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ContactConstraint &gt;</type>
      <name>ConstContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a05f745ccf54b76f23a2442f5bb98f6a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ContactConstraint &gt;</type>
      <name>WeakContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a9c600b04ddf304336c92e6f752deb7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ContactConstraint &gt;</type>
      <name>WeakConstContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ad538e9dfe143c54c0d7dcc0486c3bbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; SoftContactConstraint &gt;</type>
      <name>SoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>adb9403286439e588f177c91f6cc1b44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const SoftContactConstraint &gt;</type>
      <name>ConstSoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ae51cf4ebf0637e2cef700c7cc4f06105</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; SoftContactConstraint &gt;</type>
      <name>WeakSoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a42a7ea1cbcbe8a75fd4b20e44991f511</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const SoftContactConstraint &gt;</type>
      <name>WeakConstSoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a545e8c2573833e88c4e1aeee7020d047</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; JointLimitConstraint &gt;</type>
      <name>JointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aa2d68b5dedda5176b708d0eefe921eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const JointLimitConstraint &gt;</type>
      <name>ConstJointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2a1b0dc555feec38478656899ca8805e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; JointLimitConstraint &gt;</type>
      <name>WeakJointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ad4c528b59999959e2ed4576121184921</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const JointLimitConstraint &gt;</type>
      <name>WeakConstJointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a9141ca3b0c4a3469ebc5149b3402b85c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ServoMotorConstraint &gt;</type>
      <name>ServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a80965400303e48cdd03407f1c25519e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ServoMotorConstraint &gt;</type>
      <name>ConstServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>adccb2d718a0d7d12b8973a38a5ce75b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ServoMotorConstraint &gt;</type>
      <name>WeakServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a36f116da30971fb5bc2862f0b50e7342</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ServoMotorConstraint &gt;</type>
      <name>WeakConstServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a63996316be6a2b599a1fb0ac9fe0d67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; JointCoulombFrictionConstraint &gt;</type>
      <name>JointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a1df8988e39bb299e1446a79e1c60a788</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const JointCoulombFrictionConstraint &gt;</type>
      <name>ConstJointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a6cd9908ffdec14bb26e0b9c1896a1f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; JointCoulombFrictionConstraint &gt;</type>
      <name>WeakJointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a0b566227d1ca07451bc7634cc5785a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const JointCoulombFrictionConstraint &gt;</type>
      <name>WeakConstJointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a4f84438ee4a414c3aabd9064eb9aecad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; JointConstraint &gt;</type>
      <name>JointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aef3776502a9f2b724daa95545db1d4f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const JointConstraint &gt;</type>
      <name>ConstJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a879fd5fc2d155df55ac2d8a94ea7df03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; JointConstraint &gt;</type>
      <name>WeakJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aa1825041750218f8528c738fbebd5a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const JointConstraint &gt;</type>
      <name>WeakConstJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a7aba86c0ecb5497a2883b1f1645b7c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LCPSolver &gt;</type>
      <name>LCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a8d3115d0d90a9fd9f0d9db05d66f8c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const LCPSolver &gt;</type>
      <name>ConstLCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5f8f005d85b25b54b1e1c0ffed388b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; LCPSolver &gt;</type>
      <name>WeakLCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aa8cbf4fe9c4a273c435afe320aeef91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const LCPSolver &gt;</type>
      <name>WeakConstLCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>af628b2b6ce3e2c0bb4b69bb103233691</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; BallJointConstraint &gt;</type>
      <name>BallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aac05e86e72a7c69327e28a7b762f1d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const BallJointConstraint &gt;</type>
      <name>ConstBallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ad5bbeae5e9a1b8aa6e4c83777c91034d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; BallJointConstraint &gt;</type>
      <name>WeakBallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>af15dc1ac7a4d69bd567fc9d50ad80c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const BallJointConstraint &gt;</type>
      <name>WeakConstBallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a788277f7f83802060b080a90c4f7bd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; WeldJointConstraint &gt;</type>
      <name>WeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2bfad1e6ef096f7b783fe259641ef943</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const WeldJointConstraint &gt;</type>
      <name>ConstWeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a3080ffe2f847dd7c5a3deb5b556f6c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; WeldJointConstraint &gt;</type>
      <name>WeakWeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a82725809ad906f618f407823fa7ba898</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const WeldJointConstraint &gt;</type>
      <name>WeakConstWeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5b730042ba60cb007528627826e6ca27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; BalanceConstraint &gt;</type>
      <name>BalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a766adb46770b93d88f3f44e7804a4453</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const BalanceConstraint &gt;</type>
      <name>ConstBalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5ce6b1a17dad94db6748feee719156d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; BalanceConstraint &gt;</type>
      <name>WeakBalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>acc4d02a0bbd62f6cdb0a51550c451e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const BalanceConstraint &gt;</type>
      <name>WeakConstBalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ac4051f812f9352581afd76295deafd62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SmartPointer.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/d9c/dynamics_2SmartPointer_8hpp</filename>
    <includes id="d9/d30/common_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/common/SmartPointer.hpp</includes>
    <includes id="d5/dd4/BodyNodePtr_8hpp" name="BodyNodePtr.hpp" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.hpp</includes>
    <includes id="da/db6/DegreeOfFreedomPtr_8hpp" name="DegreeOfFreedomPtr.hpp" local="yes" imported="no">dart/dynamics/detail/DegreeOfFreedomPtr.hpp</includes>
    <includes id="d8/d11/InverseKinematicsPtr_8hpp" name="InverseKinematicsPtr.hpp" local="yes" imported="no">dart/dynamics/detail/InverseKinematicsPtr.hpp</includes>
    <includes id="d8/d8b/JointPtr_8hpp" name="JointPtr.hpp" local="yes" imported="no">dart/dynamics/detail/JointPtr.hpp</includes>
    <includes id="de/da4/NodePtr_8hpp" name="NodePtr.hpp" local="yes" imported="no">dart/dynamics/detail/NodePtr.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_BODYNODEPTR</name>
      <anchorfile>d2/d9c/dynamics_2SmartPointer_8hpp.html</anchorfile>
      <anchor>ab97cb6ca79847b58b9e862f916bb3a8a</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_BN_DEPENDENT_PTR</name>
      <anchorfile>d2/d9c/dynamics_2SmartPointer_8hpp.html</anchorfile>
      <anchor>a660a98f95ab4c939d746eeca7d873d09</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_NODEPTR</name>
      <anchorfile>d2/d9c/dynamics_2SmartPointer_8hpp.html</anchorfile>
      <anchor>a3e63e076d7030d20e90c41457294d90d</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_IK_PTR</name>
      <anchorfile>d2/d9c/dynamics_2SmartPointer_8hpp.html</anchorfile>
      <anchor>a6a7079f2f5fe96fc0d05f315fbdb0e79</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ShapeFrame &gt;</type>
      <name>ShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a28b78f54c40628b7f58f9f72140563df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ShapeFrame &gt;</type>
      <name>ConstShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1fcc945a265236da324a476dac491878</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ShapeFrame &gt;</type>
      <name>WeakShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad247b15722635c95f73ff032380e5074</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ShapeFrame &gt;</type>
      <name>WeakConstShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8a3b628646ae9f7557fb9adf3f3cba1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>SimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad33cf7bc1221fccb979fedcfec21f1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const SimpleFrame &gt;</type>
      <name>ConstSimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab62ad2053ca30a78ab75ecad9b143c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; SimpleFrame &gt;</type>
      <name>WeakSimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8097fd57011344faed86ff153e866eff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const SimpleFrame &gt;</type>
      <name>WeakConstSimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a285407d9fcf0729ae4abe5d73a0349d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>NodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab60f35ede315bf59884651e8d4b5c574</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const NodeDestructor &gt;</type>
      <name>ConstNodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a23cfd0f4ba57582ddc0c39b2003ed562</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; NodeDestructor &gt;</type>
      <name>WeakNodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7b044ec64af5c0bafc5d3bddde4ef775</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const NodeDestructor &gt;</type>
      <name>WeakConstNodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a37f87c97eac78b5079c65e71fc5da664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Skeleton &gt;</type>
      <name>SkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af869536bb870ff2c8c99acff9817b618</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>ConstSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a03ae028443aa91160079807d80e4ca10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>WeakSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4966abf275fb043dbbf1eb1b73a8c147</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Skeleton &gt;</type>
      <name>WeakConstSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3ab15e8ca0795c0adcaf2d4f5e4b1c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; MetaSkeleton &gt;</type>
      <name>MetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af1ed930a61b5be44b595e5ad1de55680</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const MetaSkeleton &gt;</type>
      <name>ConstMetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9b2b272797f282b0277d1e6e198d2a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; MetaSkeleton &gt;</type>
      <name>WeakMetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad5496c8a57b8a6fbb62e6562862610b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const MetaSkeleton &gt;</type>
      <name>WeakConstMetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a178dc75f0385da36d766e3543980f4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ReferentialSkeleton &gt;</type>
      <name>ReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4430f579c82a8c27774c7c5a64e3d697</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ReferentialSkeleton &gt;</type>
      <name>ConstReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a85676f2f9858238e746c51e466edc31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ReferentialSkeleton &gt;</type>
      <name>WeakReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a43d14f28f883f02fd1bc835ca4f424ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ReferentialSkeleton &gt;</type>
      <name>WeakConstReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9598532db16a1da9f50c581663b402c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Group &gt;</type>
      <name>GroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afcfa19d43073de0c7052dbd3f0da7c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Group &gt;</type>
      <name>ConstGroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a361dbce5053678757c1ac2bc91e8fe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Group &gt;</type>
      <name>WeakGroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a98049c50145d55fd545ed3e0330227e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Group &gt;</type>
      <name>WeakConstGroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af0bb08f205acc91267510813a827af4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Linkage &gt;</type>
      <name>LinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a51ef1015baab899c152d15a14e109529</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Linkage &gt;</type>
      <name>ConstLinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af05687da44b508d0758b82a458b477d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Linkage &gt;</type>
      <name>WeakLinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4eb4963d5af4d3388d7ab983937f9163</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Linkage &gt;</type>
      <name>WeakConstLinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea917567a1835f1779542d2e3ff900c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Branch &gt;</type>
      <name>BranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5db6f8e054b01e41fbaa050b3b8f4b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Branch &gt;</type>
      <name>ConstBranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a606e54c320494e8b34c88d8b8a793e2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Branch &gt;</type>
      <name>WeakBranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a945b511984087047000b96bbaa7bdee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Branch &gt;</type>
      <name>WeakConstBranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0fd01d28466dc4d968d0be469cf3c87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Chain &gt;</type>
      <name>ChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a93fce1643f23951f8f6996cb63293c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Chain &gt;</type>
      <name>ConstChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af360493bab027647b0410efd8bc7e553</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Chain &gt;</type>
      <name>WeakChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3d40a2d6e20b12301f5dddc0f0d6adb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Chain &gt;</type>
      <name>WeakConstChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a888717018a8bfc1bd227c59a96838420</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Shape &gt;</type>
      <name>ShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a197b71f7beb8ffb36e02fb67fbdd9a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Shape &gt;</type>
      <name>ConstShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4de1edc02520709ac34deba1a48637da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Shape &gt;</type>
      <name>WeakShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a99d533ab1884dbd5f44531a12fd2ff2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Shape &gt;</type>
      <name>WeakConstShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>adb0ed417054fafc9d4c63e55a983f544</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ArrowShape &gt;</type>
      <name>ArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8bc4878eb0ff8d2b2d8d710347fbfccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ArrowShape &gt;</type>
      <name>ConstArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a00f5492c8511c1d45322e9d2c4f626ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ArrowShape &gt;</type>
      <name>WeakArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5075c4c6a5f684ed740432a3e0782b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ArrowShape &gt;</type>
      <name>WeakConstArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab7b8e08a6b64f16ec4696f35ce95b9de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; BoxShape &gt;</type>
      <name>BoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a16087d4d2bac44b7e5bb896a8b55186f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const BoxShape &gt;</type>
      <name>ConstBoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a10bd496f2adbcd2fcf363bf3d32a746f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; BoxShape &gt;</type>
      <name>WeakBoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06263ddf091fbc3f592e96538c88972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const BoxShape &gt;</type>
      <name>WeakConstBoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aab9e1f52a71f0835572253f5f011b0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CylinderShape &gt;</type>
      <name>CylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>adf468e4e1d197cc16513dc57d1c80cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CylinderShape &gt;</type>
      <name>ConstCylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7c40943336684ec7e74a4ba6a4c312e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CylinderShape &gt;</type>
      <name>WeakCylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aad924e6b6f01259e4221afd7f7ed5985</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CylinderShape &gt;</type>
      <name>WeakConstCylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a89509c874dc74e56b82f03cefb98bfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; EllipsoidShape &gt;</type>
      <name>EllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8d7d1fae9619cb0c986ae87da0015430</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const EllipsoidShape &gt;</type>
      <name>ConstEllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeff1c7d5d6da698b3b91b3cd6c68a675</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; EllipsoidShape &gt;</type>
      <name>WeakEllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af922b3608082012187234f6cf664ae83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const EllipsoidShape &gt;</type>
      <name>WeakConstEllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a39226682f797a92b4e4315da900df8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LineSegmentShape &gt;</type>
      <name>LineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a102cfc3a3625c2ea727fc9e400263d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const LineSegmentShape &gt;</type>
      <name>ConstLineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4adac4ca209e362a7fec4bc18adc382c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; LineSegmentShape &gt;</type>
      <name>WeakLineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad35ca7d96199d911b444fb8c32fc1bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const LineSegmentShape &gt;</type>
      <name>WeakConstLineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a75121cb9e4e5cc85b114119b6391e012</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; MeshShape &gt;</type>
      <name>MeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a147536e721dadceca5ffb8d3327e536c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const MeshShape &gt;</type>
      <name>ConstMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8b0cd29d86bf7677546315a02a5a9c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; MeshShape &gt;</type>
      <name>WeakMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae8e0c2e67aa440e4d5e1f3dd237377ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const MeshShape &gt;</type>
      <name>WeakConstMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a37b4f57089f486a6e775d8716bc57eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PlaneShape &gt;</type>
      <name>PlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8cf8f43d4b7b92174a46a4a854dcdbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const PlaneShape &gt;</type>
      <name>ConstPlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acd6df41f9f676e3a21a3e66c9526cc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; PlaneShape &gt;</type>
      <name>WeakPlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abf7b2adaa3b029399d60221e36c2b062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const PlaneShape &gt;</type>
      <name>WeakConstPlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2962dd7960c94da365e92782e577bbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; SoftMeshShape &gt;</type>
      <name>SoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a396098b2ab2a0d84cfb668cf5046bf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const SoftMeshShape &gt;</type>
      <name>ConstSoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1a6fe56a0e5f513bc35c760d05c0d7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; SoftMeshShape &gt;</type>
      <name>WeakSoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5119173daa9135eae4eccca8700b0576</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const SoftMeshShape &gt;</type>
      <name>WeakConstSoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6b779181999b3456f19b5e7195c1dbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; BodyNode &gt;</type>
      <name>BodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae7a75ced23de5265002eb406324cb245</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; const BodyNode &gt;</type>
      <name>ConstBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a909fac14cf3f40e5cbc810f3067a0203</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; BodyNode &gt;</type>
      <name>WeakBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac39da7eb397981164893f258386452ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; const BodyNode &gt;</type>
      <name>WeakConstBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a358a080068a18ba03ca81676c7fdabe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; SoftBodyNode &gt;</type>
      <name>SoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1fae9dad1eb2bc1e326ad6819e1f3732</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; const SoftBodyNode &gt;</type>
      <name>ConstSoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8e54c71a53bf0cde41a4e9150f6939b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; SoftBodyNode &gt;</type>
      <name>WeakSoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a32b44a858d7b9a7d1bc24d4b2d8de246</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; const SoftBodyNode &gt;</type>
      <name>WeakConstSoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae5d946507cf4800bf720804525208e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateJointPtr&lt; Joint, BodyNode &gt;</type>
      <name>JointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af2f9534ad92072abc50ab60cb375a2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateJointPtr&lt; const Joint, const BodyNode &gt;</type>
      <name>ConstJointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9a4caf56610c021dc2994ec834e57134</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakJointPtr&lt; Joint, BodyNode &gt;</type>
      <name>WeakJointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7811748e2c5f374a0a256a1b99603e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakJointPtr&lt; const Joint, const BodyNode &gt;</type>
      <name>WeakConstJointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0efd94bbd4abcaba48e631e2fae5ff38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateDegreeOfFreedomPtr&lt; DegreeOfFreedom, BodyNode &gt;</type>
      <name>DegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06795bffc8bb4a7cacacc58700f8317b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateDegreeOfFreedomPtr&lt; const DegreeOfFreedom, const BodyNode &gt;</type>
      <name>ConstDegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af85231954cf63cb50cabd69664f8844a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakDegreeOfFreedomPtr&lt; DegreeOfFreedom, BodyNode &gt;</type>
      <name>WeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0d9f5464c0e6d27db0ff979c8b360239</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakDegreeOfFreedomPtr&lt; const DegreeOfFreedom, const BodyNode &gt;</type>
      <name>WeakConstDegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a922ff5805e1ed72308dfeadb6deb781c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; Node, BodyNode &gt;</type>
      <name>NodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae38b06e5b47bf29165aad76417efbb82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const Node, const BodyNode &gt;</type>
      <name>ConstNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a163b7b476fff561636afd7d8605aea46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; Node, BodyNode &gt;</type>
      <name>WeakNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4a7f57f2269209b8c5cf3c5f95d4e1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const Node, const BodyNode &gt;</type>
      <name>WeakConstNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a286d8228cd5a9be674a043bc9d622eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; JacobianNode, BodyNode &gt;</type>
      <name>JacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acfa87487d282e91d10811dc118b9bfee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const JacobianNode, const BodyNode &gt;</type>
      <name>ConstJacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abc95c234c31cf5f184c3bcb265519761</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; JacobianNode, BodyNode &gt;</type>
      <name>WeakJacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a166d308b742be302f737c0c7128a2091</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const JacobianNode, const BodyNode &gt;</type>
      <name>WeakConstJacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a13e5200e28b480f8e06a32faf7b6a1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; EndEffector, BodyNode &gt;</type>
      <name>EndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a40deb491d7f16e6bcfec54adde18a72e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const EndEffector, const BodyNode &gt;</type>
      <name>ConstEndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a02b81b1c209f885678a3383a9e54da67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; EndEffector, BodyNode &gt;</type>
      <name>WeakEndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a728f12c934592651b2956bce57ee5661</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const EndEffector, const BodyNode &gt;</type>
      <name>WeakConstEndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a09c461cb60aa04e293977cff1581ca89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; ShapeNode, BodyNode &gt;</type>
      <name>ShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9f8338c1df5c6b41f2f0cd706cb26071</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const ShapeNode, const BodyNode &gt;</type>
      <name>ConstShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac7af125ec6851e1404080ea13d0c778c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; ShapeNode, BodyNode &gt;</type>
      <name>WeakShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a020636f60849f5122d14d317d456e658</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const ShapeNode, const BodyNode &gt;</type>
      <name>WeakConstShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a77798fd01879c86eaf2622af528a48d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateInverseKinematicsPtr&lt; InverseKinematics, JacobianNodePtr &gt;</type>
      <name>InverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a63cb201673acbcd3143f2382f3ce5f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateInverseKinematicsPtr&lt; const InverseKinematics, ConstJacobianNodePtr &gt;</type>
      <name>ConstInverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad95c15e5ef3fb7251f795bed5c286121</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakInverseKinematicsPtr&lt; InverseKinematics, JacobianNodePtr &gt;</type>
      <name>WeakInverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab0823ec9a16f933ccb32324516a0e97b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakInverseKinematicsPtr&lt; const InverseKinematics, ConstJacobianNodePtr &gt;</type>
      <name>WeakConstInverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a45443e5b1dd9e892ec0bc54b0be02db2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Aspect.cpp</name>
    <path>/dart/common/</path>
    <filename>dc/dc8/Aspect_8cpp</filename>
    <includes id="d4/d97/Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/Aspect.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Aspect.hpp</name>
    <path>/dart/common/</path>
    <filename>d4/d97/Aspect_8hpp</filename>
    <includes id="dd/d84/Cloneable_8hpp" name="Cloneable.hpp" local="yes" imported="no">dart/common/Cloneable.hpp</includes>
    <includes id="db/df2/NoOp_8hpp" name="NoOp.hpp" local="yes" imported="no">dart/common/detail/NoOp.hpp</includes>
    <includes id="d0/dc7/detail_2Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/detail/Aspect.hpp</includes>
    <class kind="class">dart::common::Aspect</class>
    <class kind="class">dart::common::Aspect::State</class>
    <class kind="class">dart::common::Aspect::Properties</class>
    <class kind="class">dart::common::CompositeTrackingAspect</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_ASPECT_PROPERTY_CONSTRUCTOR</name>
      <anchorfile>d4/d97/Aspect_8hpp.html</anchorfile>
      <anchor>aafa6d614d23c1dbf5371ef0b5f5348cb</anchor>
      <arglist>(ClassName, UpdatePropertiesMacro)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_ASPECT_STATE_PROPERTY_CONSTRUCTORS</name>
      <anchorfile>d4/d97/Aspect_8hpp.html</anchorfile>
      <anchor>af7c393dd3687db38cad84853343c9872</anchor>
      <arglist>(ClassName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_SET_ASPECT_PROPERTY_CUSTOM</name>
      <anchorfile>d4/d97/Aspect_8hpp.html</anchorfile>
      <anchor>a5ffa0ee5f0566026daf70c7ad82eede2</anchor>
      <arglist>(Type, Name, Update)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_SET_ASPECT_PROPERTY</name>
      <anchorfile>d4/d97/Aspect_8hpp.html</anchorfile>
      <anchor>aa562593cbaa66daa3a5f35f51b0a0725</anchor>
      <arglist>(Type, Name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_GET_ASPECT_PROPERTY</name>
      <anchorfile>d4/d97/Aspect_8hpp.html</anchorfile>
      <anchor>ab4cde4434e88c0d55e5efa94e383f70b</anchor>
      <arglist>(Type, Name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_SET_GET_ASPECT_PROPERTY</name>
      <anchorfile>d4/d97/Aspect_8hpp.html</anchorfile>
      <anchor>a4bc78bec0238569437a550238273195f</anchor>
      <arglist>(Type, Name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Aspect.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d0/dc7/detail_2Aspect_8hpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d4/d97/Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/Aspect.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>AspectWithVersion.hpp</name>
    <path>/dart/common/</path>
    <filename>d7/d2a/AspectWithVersion_8hpp</filename>
    <includes id="df/d43/detail_2AspectWithVersion_8hpp" name="AspectWithVersion.hpp" local="yes" imported="no">dart/common/detail/AspectWithVersion.hpp</includes>
    <class kind="class">dart::common::AspectWithStateAndVersionedProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>detail::AspectWithState&lt; CompositeTrackingAspect&lt; CompositeT &gt;, DerivedT, StateDataT, CompositeT, updateState &gt;</type>
      <name>AspectWithState</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>af70d2d565a1b60c7c28a9a5e66f1f55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::AspectWithVersionedProperties&lt; CompositeTrackingAspect&lt; CompositeT &gt;, DerivedT, PropertiesDataT, CompositeT, updateProperties &gt;</type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a9d41a28250160c17bbe5beb31574aec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>AspectWithStateAndVersionedProperties</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a4151dcb847dcc5e51fe9bd7d4cdeb8e2</anchor>
      <arglist>)(DerivedT *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AspectWithVersion.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>df/d43/detail_2AspectWithVersion_8hpp</filename>
    <includes id="d4/d97/Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/Aspect.hpp</includes>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <class kind="class">dart::common::detail::AspectWithState</class>
    <class kind="class">dart::common::detail::AspectWithVersionedProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>AspectWithState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a17361dd86ca4d8be3dcbb8c88f12924f</anchor>
      <arglist>)(DerivedT *)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a9242e5beed6356bf086376e8d0e766a7</anchor>
      <arglist>)(DerivedT *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Cloneable.hpp</name>
    <path>/dart/common/</path>
    <filename>dd/d84/Cloneable_8hpp</filename>
    <includes id="d4/d18/Memory_8hpp" name="Memory.hpp" local="yes" imported="no">dart/common/Memory.hpp</includes>
    <includes id="de/d99/detail_2Cloneable_8hpp" name="Cloneable.hpp" local="yes" imported="no">dart/common/detail/Cloneable.hpp</includes>
    <class kind="class">dart::common::Cloneable</class>
    <class kind="class">dart::common::MakeCloneable</class>
    <class kind="class">dart::common::ProxyCloneable</class>
    <class kind="class">dart::common::CloneableMap</class>
    <class kind="class">dart::common::CloneableVector</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Cloneable.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>de/d99/detail_2Cloneable_8hpp</filename>
    <includes id="dd/d84/Cloneable_8hpp" name="Cloneable.hpp" local="yes" imported="no">dart/common/Cloneable.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Composite.cpp</name>
    <path>/dart/common/</path>
    <filename>dd/d81/Composite_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/d3b/Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/Composite.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extractDataFromObjectTypeMap</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a449bddb1b71c18772e571de37d50e01b</anchor>
      <arglist>(DataMap &amp;dataMap, const ObjectMap &amp;objectMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setObjectsFromDataTypeMap</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afa850a6e5ba6a843959f22f656a9d31e</anchor>
      <arglist>(ObjectMap &amp;objectMap, const DataMap &amp;dataMap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Composite.hpp</name>
    <path>/dart/common/</path>
    <filename>d8/d3b/Composite_8hpp</filename>
    <includes id="d2/d01/CompositeData_8hpp" name="CompositeData.hpp" local="yes" imported="no">dart/common/detail/CompositeData.hpp</includes>
    <includes id="db/da6/detail_2Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/detail/Composite.hpp</includes>
    <class kind="class">dart::common::Composite</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="function">
      <type>void</type>
      <name>createAspects</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a5ee3f6c02abacb6b0d814e9db309de50</anchor>
      <arglist>(T *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createAspects</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>aa1d5ed052c8a49e8e8ac173dff1a46b4</anchor>
      <arglist>(T *comp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Composite.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>db/da6/detail_2Composite_8hpp</filename>
    <includes id="d8/d3b/Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/Composite.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_COMMON_CHECK_ILLEGAL_ASPECT_ERASE</name>
      <anchorfile>db/da6/detail_2Composite_8hpp.html</anchorfile>
      <anchor>afd1af89206125eceab04e9df8f94882f</anchor>
      <arglist>(Func, T, ReturnType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_ASPECT_IRREGULAR</name>
      <anchorfile>db/da6/detail_2Composite_8hpp.html</anchorfile>
      <anchor>aa9524d55ac4ccd826748999a316bbbb6</anchor>
      <arglist>(TypeName, AspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_ASPECT</name>
      <anchorfile>db/da6/detail_2Composite_8hpp.html</anchorfile>
      <anchor>a70b699c168672d09f9b19fb402771d2e</anchor>
      <arglist>(AspectName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompositeJoiner.hpp</name>
    <path>/dart/common/</path>
    <filename>d8/d03/CompositeJoiner_8hpp</filename>
    <includes id="d8/d3b/Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/Composite.hpp</includes>
    <includes id="d9/d98/Empty_8hpp" name="Empty.hpp" local="yes" imported="no">dart/common/Empty.hpp</includes>
    <includes id="d9/deb/detail_2CompositeJoiner_8hpp" name="CompositeJoiner.hpp" local="yes" imported="no">dart/common/detail/CompositeJoiner.hpp</includes>
    <class kind="class">dart::common::CompositeJoiner</class>
    <class kind="class">dart::common::CompositeJoiner&lt; Base1 &gt;</class>
    <class kind="class">dart::common::CompositeJoiner&lt; Base1, Base2 &gt;</class>
    <class kind="class">dart::common::CompositeJoiner&lt; Base1, Base2, OtherBases...&gt;</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>CompositeJoiner.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d9/deb/detail_2CompositeJoiner_8hpp</filename>
    <includes id="d8/d03/CompositeJoiner_8hpp" name="CompositeJoiner.hpp" local="yes" imported="no">dart/common/CompositeJoiner.hpp</includes>
    <includes id="df/d24/TemplateJoinerDispatchMacro_8hpp" name="TemplateJoinerDispatchMacro.hpp" local="yes" imported="no">dart/common/detail/TemplateJoinerDispatchMacro.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Console.cpp</name>
    <path>/dart/common/</path>
    <filename>d5/d1a/Console_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorMsg</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>af7e228b6914a47b7f42e43d0ed615e7b</anchor>
      <arglist>(const std::string &amp;_msg, int _color)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorErr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afe69bb6c9e434a7421aee6dbeaa7c195</anchor>
      <arglist>(const std::string &amp;_msg, const std::string &amp;_file, unsigned int _line, int _color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Console.hpp</name>
    <path>/dart/common/</path>
    <filename>d2/d4f/Console_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="define">
      <type>#define</type>
      <name>dtmsg</name>
      <anchorfile>d2/d4f/Console_8hpp.html</anchorfile>
      <anchor>a826562d8b387d3249a9bbd1f851f57b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dtdbg</name>
      <anchorfile>d2/d4f/Console_8hpp.html</anchorfile>
      <anchor>abd8537185ba9af5be734e69ce6bfcf9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dtwarn</name>
      <anchorfile>d2/d4f/Console_8hpp.html</anchorfile>
      <anchor>a9713004034ce30e0de1fe34de5096a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dterr</name>
      <anchorfile>d2/d4f/Console_8hpp.html</anchorfile>
      <anchor>a629c9358594739a393fed2a82f8f8137</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Deprecated.hpp</name>
    <path>/dart/common/</path>
    <filename>d8/dbb/Deprecated_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEPRECATED</name>
      <anchorfile>d8/dbb/Deprecated_8hpp.html</anchorfile>
      <anchor>ac4a19939c6bdb3dafe1202b7059d53cd</anchor>
      <arglist>(version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_FORCEINLINE</name>
      <anchorfile>d8/dbb/Deprecated_8hpp.html</anchorfile>
      <anchor>aca6ad1db78f3e6928fb470aaec91f704</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AlignedAllocator.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d1/d6b/AlignedAllocator_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>CompositeData.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d2/d01/CompositeData_8hpp</filename>
    <includes id="d4/d97/Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/Aspect.hpp</includes>
    <class kind="struct">dart::common::detail::GetAspectImpl</class>
    <class kind="struct">dart::common::detail::GetAspectImpl&lt; AspectOrComposite, false &gt;</class>
    <class kind="struct">dart::common::detail::GetAspect</class>
    <class kind="struct">dart::common::detail::GetState</class>
    <class kind="struct">dart::common::detail::GetProperties</class>
    <class kind="class">dart::common::detail::CompositeData</class>
    <class kind="class">dart::common::detail::ComposeData</class>
    <class kind="struct">dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;</class>
    <class kind="struct">dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;::ConvertIfData</class>
    <class kind="struct">dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;::ConvertIfComposite</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; Aspect::State &gt; &gt;</type>
      <name>CompositeStateMap</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>aed6306dde5f3f35fe2a036787487aaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; Aspect::Properties &gt; &gt;</type>
      <name>CompositePropertiesMap</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>ac5efe7f02bffc5d580b2cb6a9a8e0ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeData&lt; CompositeStateMap, GetState &gt;</type>
      <name>CompositeState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a07001b9f5b0ab09a89a32c45c8b316b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeData&lt; CompositePropertiesMap, GetProperties &gt;</type>
      <name>CompositeProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>afb29e9d6d02100b54c50bc344b6e7fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ComposeData&lt; CompositeState, GetState, Aspects...&gt;</type>
      <name>MakeCompositeState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a855093375949addf79563aff8f23551e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ComposeData&lt; CompositeProperties, GetProperties, Data...&gt;</type>
      <name>MakeCompositeProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>affa22f1cf1a3e6f6e23572f6217a8483</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConnectionBody.cpp</name>
    <path>/dart/common/detail/</path>
    <filename>dd/de9/ConnectionBody_8cpp</filename>
    <includes id="d7/de3/ConnectionBody_8hpp" name="ConnectionBody.hpp" local="yes" imported="no">dart/common/detail/ConnectionBody.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::signal</namespace>
    <namespace>dart::common::signal::detail</namespace>
  </compound>
  <compound kind="file">
    <name>ConnectionBody.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d7/de3/ConnectionBody_8hpp</filename>
    <class kind="class">dart::common::signal::detail::ConnectionBodyBase</class>
    <class kind="class">dart::common::signal::detail::ConnectionBody</class>
    <class kind="struct">dart::common::signal::detail::DefaultCombiner</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::signal</namespace>
    <namespace>dart::common::signal::detail</namespace>
  </compound>
  <compound kind="file">
    <name>EmbeddedAspect.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>de/d1c/detail_2EmbeddedAspect_8hpp</filename>
    <includes id="d4/d97/Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/Aspect.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <class kind="class">dart::common::detail::EmbeddedStateAspect</class>
    <class kind="struct">dart::common::detail::EmbeddedStateAspect::ConvertIfState</class>
    <class kind="class">dart::common::detail::EmbeddedPropertiesAspect</class>
    <class kind="struct">dart::common::detail::EmbeddedPropertiesAspect::ConvertIfProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
    <member kind="function">
      <type>void</type>
      <name>DefaultSetEmbeddedState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a14834fc099d26feab94e204afc944f10</anchor>
      <arglist>(AspectT *aspect, const StateT &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const StateT &amp;</type>
      <name>DefaultGetEmbeddedState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a2a2f8ce04195f9a3371d593f6cfdb7f5</anchor>
      <arglist>(const AspectT *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefaultSetEmbeddedProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a06e67830e86a4da0d2c2540883519d09</anchor>
      <arglist>(AspectT *aspect, const PropertiesT &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const PropertiesT &amp;</type>
      <name>DefaultGetEmbeddedProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a4597045ad808e556c1eda3fa525d0660</anchor>
      <arglist>(const AspectT *aspect)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>af0240976a16c38b1dc483532858b3012</anchor>
      <arglist>)(DerivedT *, const StateT &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a970f990cb694ef206b320e8127131500</anchor>
      <arglist>)(DerivedT *, const PropertiesT &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EmbeddedAspect.hpp</name>
    <path>/dart/common/</path>
    <filename>d6/da8/EmbeddedAspect_8hpp</filename>
    <includes id="de/d1c/detail_2EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/detail/EmbeddedAspect.hpp</includes>
    <includes id="d4/d73/RequiresAspect_8hpp" name="RequiresAspect.hpp" local="yes" imported="no">dart/common/RequiresAspect.hpp</includes>
    <includes id="d8/d03/CompositeJoiner_8hpp" name="CompositeJoiner.hpp" local="yes" imported="no">dart/common/CompositeJoiner.hpp</includes>
    <class kind="class">dart::common::EmbeddedStateAspect</class>
    <class kind="class">dart::common::EmbedState</class>
    <class kind="class">dart::common::EmbedStateOnTopOf</class>
    <class kind="class">dart::common::EmbeddedPropertiesAspect</class>
    <class kind="class">dart::common::EmbedProperties</class>
    <class kind="class">dart::common::EmbedPropertiesOnTopOf</class>
    <class kind="class">dart::common::EmbeddedStateAndPropertiesAspect</class>
    <class kind="class">dart::common::EmbedStateAndProperties</class>
    <class kind="class">dart::common::EmbedStateAndPropertiesOnTopOf</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Factory-impl.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d4/db7/Factory-impl_8hpp</filename>
    <includes id="d5/d03/Factory_8hpp" name="Factory.hpp" local="yes" imported="no">dart/common/Factory.hpp</includes>
    <includes id="d4/d18/Memory_8hpp" name="Memory.hpp" local="yes" imported="no">dart/common/Memory.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <class kind="struct">dart::common::detail::DefaultCreator</class>
    <class kind="struct">dart::common::detail::DefaultCreator&lt; T, std::unique_ptr&lt; T &gt;, Args...&gt;</class>
    <class kind="struct">dart::common::detail::DefaultCreator&lt; T, std::shared_ptr&lt; T &gt;, Args...&gt;</class>
    <class kind="struct">dart::common::Factory::EnumClassHash</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
  </compound>
  <compound kind="file">
    <name>LockableReference-impl.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d6/d7f/LockableReference-impl_8hpp</filename>
    <includes id="df/d66/LockableReference_8hpp" name="LockableReference.hpp" local="yes" imported="no">dart/common/LockableReference.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Memory-impl.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d2/d9e/Memory-impl_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="function">
      <type>std::shared_ptr&lt; _Tp &gt;</type>
      <name>make_aligned_shared</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a6aeb41adeea1ddb77d3f436d1fac232c</anchor>
      <arglist>(_Args &amp;&amp;...__args)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; T &gt;</type>
      <name>make_unique</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afef23b0eaca1dd9f4bdb74e62917a7ab</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NameManager.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d0/d76/detail_2NameManager_8hpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/de1/NameManager_8hpp" name="NameManager.hpp" local="yes" imported="no">dart/common/NameManager.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>NameManager.hpp</name>
    <path>/dart/common/</path>
    <filename>d8/de1/NameManager_8hpp</filename>
    <includes id="d0/d76/detail_2NameManager_8hpp" name="NameManager.hpp" local="yes" imported="no">dart/common/detail/NameManager.hpp</includes>
    <class kind="class">dart::common::NameManager</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>NoOp.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>db/df2/NoOp_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_BLANK</name>
      <anchorfile>db/df2/NoOp_8hpp.html</anchorfile>
      <anchor>a1d76df0b80c992cf94808ecf22031028</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoOp</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a276818d8b4f9fe0a7fa23f009176e1d8</anchor>
      <arglist>(Args...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ProxyAspect.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>da/d6c/detail_2ProxyAspect_8hpp</filename>
    <includes id="d4/d97/Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/Aspect.hpp</includes>
    <class kind="class">dart::common::detail::ProxyStateAspect</class>
    <class kind="class">dart::common::detail::ProxyPropertiesAspect</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
  </compound>
  <compound kind="file">
    <name>ProxyAspect.hpp</name>
    <path>/dart/common/</path>
    <filename>d9/dde/ProxyAspect_8hpp</filename>
    <includes id="da/d6c/detail_2ProxyAspect_8hpp" name="ProxyAspect.hpp" local="yes" imported="no">dart/common/detail/ProxyAspect.hpp</includes>
    <class kind="class">dart::common::ProxyStateAndPropertiesAspect</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>detail::ProxyStateAspect&lt; common::CompositeTrackingAspect&lt; CompositeT &gt;, CompositeT, StateT &gt;</type>
      <name>ProxyStateAspect</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a52908372446d45b1fd44556197a83796</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::ProxyPropertiesAspect&lt; common::CompositeTrackingAspect&lt; CompositeT &gt;, CompositeT, PropertiesT &gt;</type>
      <name>ProxyPropertiesAspect</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a70630056cf85b3dc619da0be67c45669</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RequiresAspect.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>dc/d9b/detail_2RequiresAspect_8hpp</filename>
    <includes id="d4/d73/RequiresAspect_8hpp" name="RequiresAspect.hpp" local="yes" imported="no">dart/common/RequiresAspect.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>RequiresAspect.hpp</name>
    <path>/dart/common/</path>
    <filename>d4/d73/RequiresAspect_8hpp</filename>
    <includes id="da/dfe/SpecializedForAspect_8hpp" name="SpecializedForAspect.hpp" local="yes" imported="no">dart/common/SpecializedForAspect.hpp</includes>
    <includes id="dc/d9b/detail_2RequiresAspect_8hpp" name="RequiresAspect.hpp" local="yes" imported="no">dart/common/detail/RequiresAspect.hpp</includes>
    <class kind="class">dart::common::RequiresAspect</class>
    <class kind="class">dart::common::RequiresAspect&lt; ReqAspect &gt;</class>
    <class kind="class">dart::common::RequiresAspect&lt; ReqAspect1, OtherReqAspects...&gt;</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>SharedLibraryManager.cpp</name>
    <path>/dart/common/detail/</path>
    <filename>de/ddd/SharedLibraryManager_8cpp</filename>
    <includes id="d8/d14/SharedLibraryManager_8hpp" name="SharedLibraryManager.hpp" local="yes" imported="no">dart/common/detail/SharedLibraryManager.hpp</includes>
    <includes id="d4/da5/SharedLibrary_8hpp" name="SharedLibrary.hpp" local="yes" imported="no">dart/common/SharedLibrary.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
  </compound>
  <compound kind="file">
    <name>SharedLibraryManager.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d8/d14/SharedLibraryManager_8hpp</filename>
    <includes id="de/d21/Singleton_8hpp" name="Singleton.hpp" local="yes" imported="no">dart/common/Singleton.hpp</includes>
    <class kind="struct">std::hash&lt; boost::filesystem::path &gt;</class>
    <class kind="class">dart::common::detail::SharedLibraryManager</class>
    <namespace>std</namespace>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
  </compound>
  <compound kind="file">
    <name>Signal.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>dd/dc7/detail_2Signal_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Signal.hpp</name>
    <path>/dart/common/</path>
    <filename>d8/d84/Signal_8hpp</filename>
    <includes id="d7/de3/ConnectionBody_8hpp" name="ConnectionBody.hpp" local="yes" imported="no">dart/common/detail/ConnectionBody.hpp</includes>
    <includes id="dd/dc7/detail_2Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/detail/Signal.hpp</includes>
    <class kind="class">dart::common::Connection</class>
    <class kind="class">dart::common::ScopedConnection</class>
    <class kind="class">dart::common::Signal</class>
    <class kind="class">dart::common::Signal&lt; _Res(_ArgTypes...), Combiner &gt;</class>
    <class kind="class">dart::common::Signal&lt; void(_ArgTypes...)&gt;</class>
    <class kind="class">dart::common::SlotRegister</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Singleton-impl.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d0/d7d/Singleton-impl_8hpp</filename>
    <includes id="de/d21/Singleton_8hpp" name="Singleton.hpp" local="yes" imported="no">dart/common/Singleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>SpecializedForAspect.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>da/dc6/detail_2SpecializedForAspect_8hpp</filename>
    <includes id="da/dfe/SpecializedForAspect_8hpp" name="SpecializedForAspect.hpp" local="yes" imported="no">dart/common/SpecializedForAspect.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>SpecializedForAspect.hpp</name>
    <path>/dart/common/</path>
    <filename>da/dfe/SpecializedForAspect_8hpp</filename>
    <includes id="d8/d3b/Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/Composite.hpp</includes>
    <includes id="d8/d03/CompositeJoiner_8hpp" name="CompositeJoiner.hpp" local="yes" imported="no">dart/common/CompositeJoiner.hpp</includes>
    <includes id="d7/d55/Virtual_8hpp" name="Virtual.hpp" local="yes" imported="no">dart/common/Virtual.hpp</includes>
    <includes id="da/dc6/detail_2SpecializedForAspect_8hpp" name="SpecializedForAspect.hpp" local="yes" imported="no">dart/common/detail/SpecializedForAspect.hpp</includes>
    <class kind="class">dart::common::SpecializedForAspect</class>
    <class kind="class">dart::common::SpecializedForAspect&lt; SpecAspect &gt;</class>
    <class kind="struct">dart::common::SpecializedForAspect&lt; SpecAspect &gt;::type</class>
    <class kind="class">dart::common::SpecializedForAspect&lt; SpecAspect1, OtherSpecAspects...&gt;</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>sub_ptr.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>d9/d51/detail_2sub__ptr_8hpp</filename>
    <includes id="d3/dba/sub__ptr_8hpp" name="sub_ptr.hpp" local="yes" imported="no">dart/common/sub_ptr.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>sub_ptr.hpp</name>
    <path>/dart/common/</path>
    <filename>d3/dba/sub__ptr_8hpp</filename>
    <includes id="d6/dd2/Observer_8hpp" name="Observer.hpp" local="yes" imported="no">dart/common/Observer.hpp</includes>
    <includes id="d9/d51/detail_2sub__ptr_8hpp" name="sub_ptr.hpp" local="yes" imported="no">dart/common/detail/sub_ptr.hpp</includes>
    <class kind="class">dart::common::sub_ptr</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>common::sub_ptr&lt; T &gt;</type>
      <name>sub_ptr</name>
      <anchorfile>d1/d83/namespacedart.html</anchorfile>
      <anchor>aaf0980612cd4d36f879823eb69711522</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TemplateJoinerDispatchMacro.hpp</name>
    <path>/dart/common/detail/</path>
    <filename>df/d24/TemplateJoinerDispatchMacro_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_COMMON_IRREGULAR_TEMPLATEJOINERDISPATCH_IMPL</name>
      <anchorfile>df/d24/TemplateJoinerDispatchMacro_8hpp.html</anchorfile>
      <anchor>a222920e7056ab5208edbb60680d69976</anchor>
      <arglist>(ReturnType, ClassName, Function, Suffix, SpecializationChecker, Args)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_COMMON_TEMPLATEJOINERDISPATCH_IMPL</name>
      <anchorfile>df/d24/TemplateJoinerDispatchMacro_8hpp.html</anchorfile>
      <anchor>a9db35f5851d559754d9492182f1229f4</anchor>
      <arglist>(ReturnType, ClassName, Function, Suffix, Args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Empty.hpp</name>
    <path>/dart/common/</path>
    <filename>d9/d98/Empty_8hpp</filename>
    <class kind="struct">dart::common::Empty</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="enumeration">
      <type></type>
      <name>NoArgTag</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a50bf4d472a6d45531614669484f3db28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NoArg</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a50bf4d472a6d45531614669484f3db28a62dc35536406a079c5cf8a102c529534</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Factory.hpp</name>
    <path>/dart/common/</path>
    <filename>d5/d03/Factory_8hpp</filename>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <includes id="de/d21/Singleton_8hpp" name="Singleton.hpp" local="yes" imported="no">dart/common/Singleton.hpp</includes>
    <includes id="d4/db7/Factory-impl_8hpp" name="Factory-impl.hpp" local="yes" imported="no">dart/common/detail/Factory-impl.hpp</includes>
    <class kind="class">dart::common::Factory</class>
    <class kind="class">dart::common::FactoryRegistrar</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>LocalResource.cpp</name>
    <path>/dart/common/</path>
    <filename>d3/d79/LocalResource_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d3/d30/LocalResource_8hpp" name="LocalResource.hpp" local="yes" imported="no">LocalResource.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>LocalResource.hpp</name>
    <path>/dart/common/</path>
    <filename>d3/d30/LocalResource_8hpp</filename>
    <includes id="d7/d6a/Resource_8hpp" name="Resource.hpp" local="yes" imported="no">dart/common/Resource.hpp</includes>
    <class kind="class">dart::common::LocalResource</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>LocalResourceRetriever.cpp</name>
    <path>/dart/common/</path>
    <filename>d4/dbd/LocalResourceRetriever_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <includes id="d3/d30/LocalResource_8hpp" name="LocalResource.hpp" local="yes" imported="no">dart/common/LocalResource.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>LocalResourceRetriever.hpp</name>
    <path>/dart/common/</path>
    <filename>d8/dfb/LocalResourceRetriever_8hpp</filename>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <class kind="class">dart::common::LocalResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LocalResourceRetriever &gt;</type>
      <name>LocalResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a7e980fe2587497d7848324ae6a805c32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LockableReference.hpp</name>
    <path>/dart/common/</path>
    <filename>df/d66/LockableReference_8hpp</filename>
    <includes id="d6/d7f/LockableReference-impl_8hpp" name="LockableReference-impl.hpp" local="yes" imported="no">dart/common/detail/LockableReference-impl.hpp</includes>
    <class kind="class">dart::common::LockableReference</class>
    <class kind="class">dart::common::SingleLockableReference</class>
    <class kind="class">dart::common::MultiLockableReference</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Memory.hpp</name>
    <path>/dart/common/</path>
    <filename>d4/d18/Memory_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d1/d6b/AlignedAllocator_8hpp" name="AlignedAllocator.hpp" local="yes" imported="no">dart/common/detail/AlignedAllocator.hpp</includes>
    <includes id="d2/d9e/Memory-impl_8hpp" name="Memory-impl.hpp" local="yes" imported="no">dart/common/detail/Memory-impl.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_RAW_PTR_CREATOR_NAME</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a75b5ce4e4264c82c89b09fac8cd98269</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SHARED_PTR_CREATOR_NAME</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>aaadc186e0cfe656a6f9e8d0514148791</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_UNIQUE_PTR_CREATOR_NAME</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>af24dccd11672301275c37c8309ad1662</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_DART_DEFINE_OBJECT_CREATOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a7f73d6c6bf70a7df38eca0cfdfabecd8</anchor>
      <arglist>(class_name, func_name, ptr_type, creator)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_DART_DEFINE_OBJECT_CREATOR_FOR_PROTECTED_CTOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>aab290f6c50ce388328b506e3afe43c5a</anchor>
      <arglist>(class_name, func_name, ptr_type, creator)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_RAW_OBJECT_CREATOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a63ff308b5097c11871bfe8005657d7b3</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_SHARED_OBJECT_CREATOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a38be5be5ecf01a2594399ac487a470d2</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_SHARED_OBJECT_CREATOR_FOR_PROTECTED_CTOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a92815262d3d98118a9c0ae1ead7041f1</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_ALIGNED_SHARED_OBJECT_CREATOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a1a963203788c788a0b20b34e08be07b6</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_ALIGNED_SHARED_OBJECT_CREATOR_FOR_PROTECTED_CTOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a56ca5e04ad262cab679cd37718c90dba</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_UNIQUE_OBJECT_CREATOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a5660b43bb58eb3bcd92224506bf76e33</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_UNIQUE_OBJECT_CREATOR_FOR_PROTECTED_CTOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a399034c43716066631336d8a2492cc2d</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_OBJECT_CREATORS</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a35e8b1bb98bf3097dae2bb98962981cf</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_OBJECT_CREATORS_FOR_PROTECTED_CTOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>aab97860fed65d3479dc15f8df661f16c</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_ALIGNED_OBJECT_CREATORS</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>ab03c4699bcbf95c8403453387572cd9a</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEFINE_ALIGNED_OBJECT_CREATORS_FOR_PROTECTED_CTOR</name>
      <anchorfile>d4/d18/Memory_8hpp.html</anchorfile>
      <anchor>a12f5e672c9d069cd5b2a3f3b4fd1a7f1</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; _Tp, Eigen::aligned_allocator&lt; _Tp &gt;&gt;</type>
      <name>aligned_vector</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>aecb9811e400bd1c505f0aa1950bbc589</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; _Key, _Tp, _Compare, Eigen::aligned_allocator&lt; std::pair&lt; const _Key, _Tp &gt;&gt;&gt;</type>
      <name>aligned_map</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a4fc79cf745df255937c48682a55a1862</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Observer.cpp</name>
    <path>/dart/common/</path>
    <filename>d8/d56/Observer_8cpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d6/dd2/Observer_8hpp" name="Observer.hpp" local="yes" imported="no">dart/common/Observer.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Observer.hpp</name>
    <path>/dart/common/</path>
    <filename>d6/dd2/Observer_8hpp</filename>
    <class kind="class">dart::common::Observer</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Platform.hpp</name>
    <path>/dart/common/</path>
    <filename>d5/d40/Platform_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>DART_OS_WINDOWS</name>
      <anchorfile>d5/d40/Platform_8hpp.html</anchorfile>
      <anchor>a07d4511eebe737483e65a98b1b5999a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_OS_LINUX</name>
      <anchorfile>d5/d40/Platform_8hpp.html</anchorfile>
      <anchor>af6d382154f9a6ff8ee1656f23d8d2462</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_OS_MACOS</name>
      <anchorfile>d5/d40/Platform_8hpp.html</anchorfile>
      <anchor>aa3bbf471e9aa13f5c07bb97eec674615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ARCH_32BITS</name>
      <anchorfile>d5/d40/Platform_8hpp.html</anchorfile>
      <anchor>ae56a7021ccef1e6dbeb5dff475016508</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ARCH_64BITS</name>
      <anchorfile>d5/d40/Platform_8hpp.html</anchorfile>
      <anchor>a500be8eebd2266b893a622c68c02c93a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Resource.cpp</name>
    <path>/dart/common/</path>
    <filename>d5/d63/Resource_8cpp</filename>
    <includes id="d7/d6a/Resource_8hpp" name="Resource.hpp" local="yes" imported="no">dart/common/Resource.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Resource.hpp</name>
    <path>/dart/common/</path>
    <filename>d7/d6a/Resource_8hpp</filename>
    <class kind="class">dart::common::Resource</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Resource &gt;</type>
      <name>ResourcePtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a17b6f1fe8c719e1059adc09c4f43df67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ResourceRetriever.cpp</name>
    <path>/dart/common/</path>
    <filename>d2/d09/ResourceRetriever_8cpp</filename>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>ResourceRetriever.hpp</name>
    <path>/dart/common/</path>
    <filename>da/d83/ResourceRetriever_8hpp</filename>
    <includes id="d7/d6a/Resource_8hpp" name="Resource.hpp" local="yes" imported="no">dart/common/Resource.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <class kind="class">dart::common::ResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ResourceRetriever &gt;</type>
      <name>ResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a79a12a817633757c8465245b78d91bfc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SharedLibrary.cpp</name>
    <path>/dart/common/</path>
    <filename>da/d0b/SharedLibrary_8cpp</filename>
    <includes id="d4/da5/SharedLibrary_8hpp" name="SharedLibrary.hpp" local="yes" imported="no">dart/common/SharedLibrary.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/d14/SharedLibraryManager_8hpp" name="SharedLibraryManager.hpp" local="yes" imported="no">dart/common/detail/SharedLibraryManager.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>SharedLibrary.hpp</name>
    <path>/dart/common/</path>
    <filename>d4/da5/SharedLibrary_8hpp</filename>
    <includes id="d5/d40/Platform_8hpp" name="Platform.hpp" local="yes" imported="no">dart/common/Platform.hpp</includes>
    <class kind="class">dart::common::SharedLibrary</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::detail</namespace>
  </compound>
  <compound kind="file">
    <name>Signal.cpp</name>
    <path>/dart/common/</path>
    <filename>d1/de5/Signal_8cpp</filename>
    <includes id="d8/d84/Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/Signal.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Singleton.hpp</name>
    <path>/dart/common/</path>
    <filename>de/d21/Singleton_8hpp</filename>
    <includes id="d0/d7d/Singleton-impl_8hpp" name="Singleton-impl.hpp" local="yes" imported="no">dart/common/detail/Singleton-impl.hpp</includes>
    <class kind="class">dart::common::Singleton</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>StlHelpers.hpp</name>
    <path>/dart/common/</path>
    <filename>dc/d2e/StlHelpers_8hpp</filename>
    <includes id="d4/d18/Memory_8hpp" name="Memory.hpp" local="yes" imported="no">Memory.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_UNUSED</name>
      <anchorfile>dc/d2e/StlHelpers_8hpp.html</anchorfile>
      <anchor>aecc20302b2b15174be0146a004b02045</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a7c4351ff43c76315b2549773a6fa57bc</anchor>
      <arglist>(std::size_t index, const std::vector&lt; T &gt; &amp;vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Subject.cpp</name>
    <path>/dart/common/</path>
    <filename>d7/d91/Subject_8cpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d6/dd2/Observer_8hpp" name="Observer.hpp" local="yes" imported="no">dart/common/Observer.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Subject.hpp</name>
    <path>/dart/common/</path>
    <filename>d7/d5f/Subject_8hpp</filename>
    <class kind="class">dart::common::Subject</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.cpp</name>
    <path>/dart/common/</path>
    <filename>d0/dc2/Timer_8cpp</filename>
    <includes id="d8/dbf/Timer_8hpp" name="Timer.hpp" local="yes" imported="no">dart/common/Timer.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.hpp</name>
    <path>/dart/common/</path>
    <filename>d8/dbf/Timer_8hpp</filename>
    <class kind="class">dart::common::Timer</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Uri.cpp</name>
    <path>/dart/common/</path>
    <filename>d0/da2/Uri_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>startsWith</name>
      <anchorfile>d0/da2/Uri_8cpp.html</anchorfile>
      <anchor>a778722d7d766708ae393458b4529ffa3</anchor>
      <arglist>(const std::string &amp;_target, const std::string &amp;_prefix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Uri.hpp</name>
    <path>/dart/common/</path>
    <filename>dd/d85/Uri_8hpp</filename>
    <class kind="class">dart::common::UriComponent</class>
    <class kind="struct">dart::common::Uri</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>VersionCounter.cpp</name>
    <path>/dart/common/</path>
    <filename>d0/d2a/VersionCounter_8cpp</filename>
    <includes id="d9/db7/VersionCounter_8hpp" name="VersionCounter.hpp" local="yes" imported="no">dart/common/VersionCounter.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>VersionCounter.hpp</name>
    <path>/dart/common/</path>
    <filename>d9/db7/VersionCounter_8hpp</filename>
    <class kind="class">dart::common::VersionCounter</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Virtual.hpp</name>
    <path>/dart/common/</path>
    <filename>d7/d55/Virtual_8hpp</filename>
    <class kind="class">dart::common::Virtual</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>BalanceConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>db/d7c/BalanceConstraint_8cpp</filename>
    <includes id="d8/d37/BalanceConstraint_8hpp" name="BalanceConstraint.hpp" local="yes" imported="no">dart/constraint/BalanceConstraint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d3/d78/EndEffector_8hpp" name="EndEffector.hpp" local="yes" imported="no">dart/dynamics/EndEffector.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDampedPseudoInverseToGradient</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ab1ca16fdd4b156f83993421c1f0c11df</anchor>
      <arglist>(Eigen::Map&lt; Eigen::VectorXd &gt; &amp;grad, const JacType &amp;J, const Eigen::MatrixXd &amp;nullspace, const Eigen::Vector3d &amp;error, double damping)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BalanceConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d8/d37/BalanceConstraint_8hpp</filename>
    <includes id="d1/d9a/HierarchicalIK_8hpp" name="HierarchicalIK.hpp" local="yes" imported="no">dart/dynamics/HierarchicalIK.hpp</includes>
    <class kind="class">dart::constraint::BalanceConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>BallJointConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d0/d37/BallJointConstraint_8cpp</filename>
    <includes id="dc/d5c/BallJointConstraint_8hpp" name="BallJointConstraint.hpp" local="yes" imported="no">dart/constraint/BallJointConstraint.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>BallJointConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>dc/d5c/BallJointConstraint_8hpp</filename>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <includes id="d1/d80/JointConstraint_8hpp" name="JointConstraint.hpp" local="yes" imported="no">dart/constraint/JointConstraint.hpp</includes>
    <class kind="class">dart::constraint::BallJointConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstrainedGroup.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d5/d6e/ConstrainedGroup_8cpp</filename>
    <includes id="dc/dc6/ConstrainedGroup_8hpp" name="ConstrainedGroup.hpp" local="yes" imported="no">dart/constraint/ConstrainedGroup.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <includes id="d0/ddb/ConstraintSolver_8hpp" name="ConstraintSolver.hpp" local="yes" imported="no">dart/constraint/ConstraintSolver.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstrainedGroup.hpp</name>
    <path>/dart/constraint/</path>
    <filename>dc/dc6/ConstrainedGroup_8hpp</filename>
    <includes id="d7/d8e/constraint_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/constraint/SmartPointer.hpp</includes>
    <class kind="class">dart::constraint::ConstrainedGroup</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintBase.cpp</name>
    <path>/dart/constraint/</path>
    <filename>df/de2/ConstraintBase_8cpp</filename>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintBase.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d9/d4f/ConstraintBase_8hpp</filename>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="struct">dart::constraint::ConstraintInfo</class>
    <class kind="class">dart::constraint::ConstraintBase</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintSolver.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d7/dc0/ConstraintSolver_8cpp</filename>
    <includes id="d0/ddb/ConstraintSolver_8hpp" name="ConstraintSolver.hpp" local="yes" imported="no">dart/constraint/ConstraintSolver.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <includes id="d6/de0/CollisionFilter_8hpp" name="CollisionFilter.hpp" local="yes" imported="no">dart/collision/CollisionFilter.hpp</includes>
    <includes id="df/d90/Contact_8hpp" name="Contact.hpp" local="yes" imported="no">dart/collision/Contact.hpp</includes>
    <includes id="d4/d9d/FCLCollisionDetector_8hpp" name="FCLCollisionDetector.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionDetector.hpp</includes>
    <includes id="dc/dc2/DARTCollisionDetector_8hpp" name="DARTCollisionDetector.hpp" local="yes" imported="no">dart/collision/dart/DARTCollisionDetector.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="dc/dc6/ConstrainedGroup_8hpp" name="ConstrainedGroup.hpp" local="yes" imported="no">dart/constraint/ConstrainedGroup.hpp</includes>
    <includes id="d2/d6e/ContactConstraint_8hpp" name="ContactConstraint.hpp" local="yes" imported="no">dart/constraint/ContactConstraint.hpp</includes>
    <includes id="d3/dfe/SoftContactConstraint_8hpp" name="SoftContactConstraint.hpp" local="yes" imported="no">dart/constraint/SoftContactConstraint.hpp</includes>
    <includes id="de/d01/JointLimitConstraint_8hpp" name="JointLimitConstraint.hpp" local="yes" imported="no">dart/constraint/JointLimitConstraint.hpp</includes>
    <includes id="d9/d8d/ServoMotorConstraint_8hpp" name="ServoMotorConstraint.hpp" local="yes" imported="no">dart/constraint/ServoMotorConstraint.hpp</includes>
    <includes id="d7/dbe/JointCoulombFrictionConstraint_8hpp" name="JointCoulombFrictionConstraint.hpp" local="yes" imported="no">dart/constraint/JointCoulombFrictionConstraint.hpp</includes>
    <includes id="dd/d53/DantzigLCPSolver_8hpp" name="DantzigLCPSolver.hpp" local="yes" imported="no">dart/constraint/DantzigLCPSolver.hpp</includes>
    <includes id="d9/d58/PGSLCPSolver_8hpp" name="PGSLCPSolver.hpp" local="yes" imported="no">dart/constraint/PGSLCPSolver.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintSolver.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d0/ddb/ConstraintSolver_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d7/d8e/constraint_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/constraint/SmartPointer.hpp</includes>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <class kind="class">dart::constraint::ConstraintSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ContactConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d7/d27/ContactConstraint_8cpp</filename>
    <includes id="d2/d6e/ContactConstraint_8hpp" name="ContactConstraint.hpp" local="yes" imported="no">dart/constraint/ContactConstraint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_EPSILON</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a965dd71b99bacf40a89e0acf48b2e6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_RESTITUTION_COEFF_THRESHOLD</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a35d6849d333ec9b11821ef7e55207bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_FRICTION_COEFF_THRESHOLD</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a2b0dcfb1536ff83c9edc47cedca73be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BOUNCING_VELOCITY_THRESHOLD</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>aa9d7023df6b58e42d8db01389e573f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_BOUNCING_VELOCITY</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>ae53f26ba1a39411bfa968a3fbfeceb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CONTACT_CONSTRAINT_EPSILON_SQUARED</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a17817975ccbb0022d1df8b76f8aca558</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ContactConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d2/d6e/ContactConstraint_8hpp</filename>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <class kind="class">dart::constraint::ContactConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>DantzigLCPSolver.cpp</name>
    <path>/dart/constraint/</path>
    <filename>de/de8/DantzigLCPSolver_8cpp</filename>
    <includes id="dd/d53/DantzigLCPSolver_8hpp" name="DantzigLCPSolver.hpp" local="yes" imported="no">dart/constraint/DantzigLCPSolver.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <includes id="dc/dc6/ConstrainedGroup_8hpp" name="ConstrainedGroup.hpp" local="yes" imported="no">dart/constraint/ConstrainedGroup.hpp</includes>
    <includes id="d1/d53/Lemke_8hpp" name="Lemke.hpp" local="yes" imported="no">dart/lcpsolver/Lemke.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>DantzigLCPSolver.hpp</name>
    <path>/dart/constraint/</path>
    <filename>dd/d53/DantzigLCPSolver_8hpp</filename>
    <includes id="d6/db1/LCPSolver_8hpp" name="LCPSolver.hpp" local="yes" imported="no">dart/constraint/LCPSolver.hpp</includes>
    <class kind="class">dart::constraint::DantzigLCPSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>JointConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>db/d4f/JointConstraint_8cpp</filename>
    <includes id="d1/d80/JointConstraint_8hpp" name="JointConstraint.hpp" local="yes" imported="no">dart/constraint/JointConstraint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d1/d80/JointConstraint_8hpp</filename>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <class kind="class">dart::constraint::JointConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>JointCoulombFrictionConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d1/dfc/JointCoulombFrictionConstraint_8cpp</filename>
    <includes id="d7/dbe/JointCoulombFrictionConstraint_8hpp" name="JointCoulombFrictionConstraint.hpp" local="yes" imported="no">dart/constraint/JointCoulombFrictionConstraint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>d1/dfc/JointCoulombFrictionConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointCoulombFrictionConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d7/dbe/JointCoulombFrictionConstraint_8hpp</filename>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <class kind="class">dart::constraint::JointCoulombFrictionConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>JointLimitConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>db/d5d/JointLimitConstraint_8cpp</filename>
    <includes id="de/d01/JointLimitConstraint_8hpp" name="JointLimitConstraint.hpp" local="yes" imported="no">dart/constraint/JointLimitConstraint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointLimitConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>de/d01/JointLimitConstraint_8hpp</filename>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <class kind="class">dart::constraint::JointLimitConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>LCPSolver.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d1/daf/LCPSolver_8cpp</filename>
    <includes id="d6/db1/LCPSolver_8hpp" name="LCPSolver.hpp" local="yes" imported="no">dart/constraint/LCPSolver.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>LCPSolver.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d6/db1/LCPSolver_8hpp</filename>
    <class kind="class">dart::constraint::LCPSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>PGSLCPSolver.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d1/db9/PGSLCPSolver_8cpp</filename>
    <includes id="d9/d58/PGSLCPSolver_8hpp" name="PGSLCPSolver.hpp" local="yes" imported="no">dart/constraint/PGSLCPSolver.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <includes id="dc/dc6/ConstrainedGroup_8hpp" name="ConstrainedGroup.hpp" local="yes" imported="no">dart/constraint/ConstrainedGroup.hpp</includes>
    <includes id="d1/d53/Lemke_8hpp" name="Lemke.hpp" local="yes" imported="no">dart/lcpsolver/Lemke.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_RANDOMLY_REORDER_CONSTRAINTS</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a7f8d7fb96da573afb60cada093143fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_ITERMAX</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>acb33719ae019e129af9d77479de5b1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_SOR_W</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a90cde0f6bb4d579b2bf57d27b692e4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_EPS_EA</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a55644215c3cd9ecd81e3846bc1f919a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_EPS_RESIDUAL</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a2ececabb62c8e647230b12d7a1f55223</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_EPS_DIVIDE</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a3fcb206991a0a45b4b6f8b2aab8a37fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solvePGS</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2488681e6db07eb614b77f7715eac2c1</anchor>
      <arglist>(int n, int nskip, int, double *A, double *x, double *b, double *lo, double *hi, int *findex, PGSOption *option)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PGSLCPSolver.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d9/d58/PGSLCPSolver_8hpp</filename>
    <includes id="d6/db1/LCPSolver_8hpp" name="LCPSolver.hpp" local="yes" imported="no">dart/constraint/LCPSolver.hpp</includes>
    <class kind="class">dart::constraint::PGSLCPSolver</class>
    <class kind="struct">dart::constraint::PGSOption</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ServoMotorConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>da/dbb/ServoMotorConstraint_8cpp</filename>
    <includes id="d9/d8d/ServoMotorConstraint_8hpp" name="ServoMotorConstraint.hpp" local="yes" imported="no">dart/constraint/ServoMotorConstraint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>da/dbb/ServoMotorConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServoMotorConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d9/d8d/ServoMotorConstraint_8hpp</filename>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <class kind="class">dart::constraint::ServoMotorConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>SoftContactConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>d2/d9e/SoftContactConstraint_8cpp</filename>
    <includes id="d3/dfe/SoftContactConstraint_8hpp" name="SoftContactConstraint.hpp" local="yes" imported="no">dart/constraint/SoftContactConstraint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/dd0/PointMass_8hpp" name="PointMass.hpp" local="yes" imported="no">dart/dynamics/PointMass.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_EPSILON</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a965dd71b99bacf40a89e0acf48b2e6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_RESTITUTION_COEFF_THRESHOLD</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a35d6849d333ec9b11821ef7e55207bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_FRICTION_COEFF_THRESHOLD</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a2b0dcfb1536ff83c9edc47cedca73be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BOUNCING_VELOCITY_THRESHOLD</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>aa9d7023df6b58e42d8db01389e573f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_BOUNCING_VELOCITY</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>ae53f26ba1a39411bfa968a3fbfeceb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CONTACT_CONSTRAINT_EPSILON</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a30e2fcf76be9305b552146a7b93cf064</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PointMassT</type>
      <name>selectCollidingPointMassT</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a638541c0a4b2f8e00d73f873393ffa5f</anchor>
      <arglist>(SoftBodyNodeT _softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftContactConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d3/dfe/SoftContactConstraint_8hpp</filename>
    <includes id="d9/d4f/ConstraintBase_8hpp" name="ConstraintBase.hpp" local="yes" imported="no">dart/constraint/ConstraintBase.hpp</includes>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <class kind="class">dart::constraint::SoftContactConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>WeldJointConstraint.cpp</name>
    <path>/dart/constraint/</path>
    <filename>de/d2b/WeldJointConstraint_8cpp</filename>
    <includes id="d7/da8/WeldJointConstraint_8hpp" name="WeldJointConstraint.hpp" local="yes" imported="no">dart/constraint/WeldJointConstraint.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>WeldJointConstraint.hpp</name>
    <path>/dart/constraint/</path>
    <filename>d7/da8/WeldJointConstraint_8hpp</filename>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <includes id="d1/d80/JointConstraint_8hpp" name="JointConstraint.hpp" local="yes" imported="no">dart/constraint/JointConstraint.hpp</includes>
    <class kind="class">dart::constraint::WeldJointConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>dart.cpp</name>
    <path>/dart/</path>
    <filename>d1/dd1/dart_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>dart.hpp</name>
    <path>/dart/</path>
    <filename>db/d58/dart_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>ArrowShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/dbf/ArrowShape_8cpp</filename>
    <includes id="d2/de6/ArrowShape_8hpp" name="ArrowShape.hpp" local="yes" imported="no">dart/dynamics/ArrowShape.hpp</includes>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowTip</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ace0e10253d7750c9df732e6def570171</anchor>
      <arglist>(aiMesh *mesh, double base, double tip, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowBody</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a005aad3c4bb6a8dd38dbd2905fd2a7c4</anchor>
      <arglist>(aiMesh *mesh, double z1, double z2, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrowShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/de6/ArrowShape_8hpp</filename>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <class kind="class">dart::dynamics::ArrowShape</class>
    <class kind="struct">dart::dynamics::ArrowShape::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>AssimpInputResourceAdaptor.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/d4c/AssimpInputResourceAdaptor_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dd/d0a/AssimpInputResourceAdaptor_8hpp" name="AssimpInputResourceAdaptor.hpp" local="yes" imported="no">dart/dynamics/AssimpInputResourceAdaptor.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function">
      <type>aiFileIO</type>
      <name>createFileIO</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3933ea3434b7470b1d7ebb0dc3d0681a</anchor>
      <arglist>(Assimp::IOSystem *_system)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssimpInputResourceAdaptor.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>dd/d0a/AssimpInputResourceAdaptor_8hpp</filename>
    <includes id="d7/d6a/Resource_8hpp" name="Resource.hpp" local="yes" imported="no">dart/common/Resource.hpp</includes>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <class kind="class">dart::dynamics::AssimpInputResourceRetrieverAdaptor</class>
    <class kind="class">dart::dynamics::AssimpInputResourceAdaptor</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BallJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/dfc/BallJoint_8cpp</filename>
    <includes id="d7/d41/BallJoint_8hpp" name="BallJoint.hpp" local="yes" imported="no">dart/dynamics/BallJoint.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BallJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/d41/BallJoint_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="class">dart::dynamics::BallJoint</class>
    <class kind="struct">dart::dynamics::BallJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BodyNode.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/db2/BodyNode_8cpp</filename>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="df/ddb/Chain_8hpp" name="Chain.hpp" local="yes" imported="no">dart/dynamics/Chain.hpp</includes>
    <includes id="d8/d1a/Marker_8hpp" name="Marker.hpp" local="yes" imported="no">dart/dynamics/Marker.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="d3/d78/EndEffector_8hpp" name="EndEffector.hpp" local="yes" imported="no">dart/dynamics/EndEffector.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SKEL_SET_FLAGS</name>
      <anchorfile>d0/db2/BodyNode_8cpp.html</anchorfile>
      <anchor>a12950e5e7271c907db724cb529b7adf2</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_FLAGS</name>
      <anchorfile>d0/db2/BodyNode_8cpp.html</anchorfile>
      <anchor>af4cabc94cbe068e28b7d2000253b2b52</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_FLAG</name>
      <anchorfile>d0/db2/BodyNode_8cpp.html</anchorfile>
      <anchor>a3c9adcbaac5076e42568bbea6bf84974</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; Entity * &gt;</type>
      <name>EntityPtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac56a7745ab08dd1273216cac7df61326</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extractDataFromNodeTypeMap</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a87a1709d4355f5b7a23e2ff54dcf2394</anchor>
      <arglist>(DataMap &amp;dataMap, const BodyNode::NodeMap &amp;nodeMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNodesFromDataTypeMap</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aec86d4e1019b2cfede999a88ef74fcbd</anchor>
      <arglist>(BodyNode::NodeMap &amp;nodeMap, const DataMap &amp;dataMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a7e366ec5caeb45e4e6438941fef6845a</anchor>
      <arglist>(BodyNode *bodyNode, const AllNodeStates &amp;states)</arglist>
    </member>
    <member kind="function">
      <type>AllNodeStates</type>
      <name>getAllNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2aff6b16ec63babb4cc302e6e406d08e</anchor>
      <arglist>(const BodyNode *bodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a6236f0f4250283f166a0e24091fdd204</anchor>
      <arglist>(BodyNode *bodyNode, const AllNodeProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>AllNodeProperties</type>
      <name>getAllNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a13831b6192989f6e2fdf966bd3caeb82</anchor>
      <arglist>(const BodyNode *bodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkMass</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0a606738487efbd1d247033b2f47b305</anchor>
      <arglist>(const BodyNode &amp;bodyNode, const double mass)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkSkeletonNodeAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a017de4d6b353f1c1881e496dc1066f90</anchor>
      <arglist>(const BodyNode *_bodyNode, const ConstSkeletonPtr &amp;_newSkeleton, const BodyNode *_newParent, const std::string &amp;_function, const std::string &amp;_operation)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BodyNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/dc6/BodyNode_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d8/d84/Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/Signal.hpp</includes>
    <includes id="d6/da8/EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/EmbeddedAspect.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <includes id="d3/dae/Frame_8hpp" name="Frame.hpp" local="yes" imported="no">dart/dynamics/Frame.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d3/d00/TemplatedJacobianNode_8hpp" name="TemplatedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/TemplatedJacobianNode.hpp</includes>
    <includes id="df/d86/SpecializedNodeManager_8hpp" name="SpecializedNodeManager.hpp" local="yes" imported="no">dart/dynamics/SpecializedNodeManager.hpp</includes>
    <includes id="d3/db6/BodyNodeAspect_8hpp" name="BodyNodeAspect.hpp" local="yes" imported="no">dart/dynamics/detail/BodyNodeAspect.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d2/dde/detail_2BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/detail/BodyNode.hpp</includes>
    <class kind="class">dart::dynamics::BodyNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BodyNode.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d2/dde/detail_2BodyNode_8hpp</filename>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BoxShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d8/db4/BoxShape_8cpp</filename>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BoxShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/d22/BoxShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::BoxShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Branch.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/d4d/Branch_8cpp</filename>
    <includes id="d4/d98/Branch_8hpp" name="Branch.hpp" local="yes" imported="no">dart/dynamics/Branch.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Branch.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/d98/Branch_8hpp</filename>
    <includes id="d5/d94/Linkage_8hpp" name="Linkage.hpp" local="yes" imported="no">dart/dynamics/Linkage.hpp</includes>
    <class kind="class">dart::dynamics::Branch</class>
    <class kind="struct">dart::dynamics::Branch::Criteria</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CapsuleShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/dac/CapsuleShape_8cpp</filename>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CapsuleShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d9/db5/CapsuleShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::CapsuleShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Chain.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/d94/Chain_8cpp</filename>
    <includes id="df/ddb/Chain_8hpp" name="Chain.hpp" local="yes" imported="no">dart/dynamics/Chain.hpp</includes>
    <includes id="d1/d8d/FreeJoint_8hpp" name="FreeJoint.hpp" local="yes" imported="no">dart/dynamics/FreeJoint.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Chain.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/ddb/Chain_8hpp</filename>
    <includes id="d5/d94/Linkage_8hpp" name="Linkage.hpp" local="yes" imported="no">dart/dynamics/Linkage.hpp</includes>
    <class kind="class">dart::dynamics::Chain</class>
    <class kind="struct">dart::dynamics::Chain::Criteria</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CompositeNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d8/def/CompositeNode_8hpp</filename>
    <includes id="d8/d3b/Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/Composite.hpp</includes>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <includes id="d4/d2e/detail_2CompositeNode_8hpp" name="CompositeNode.hpp" local="yes" imported="no">dart/dynamics/detail/CompositeNode.hpp</includes>
    <class kind="class">dart::dynamics::CompositeStateNode</class>
    <class kind="class">dart::dynamics::CompositePropertiesNode</class>
    <class kind="class">dart::dynamics::CompositeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CompositeNode.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d4/d2e/detail_2CompositeNode_8hpp</filename>
    <includes id="d8/def/CompositeNode_8hpp" name="CompositeNode.hpp" local="yes" imported="no">dart/dynamics/CompositeNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ConeShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/d0c/ConeShape_8cpp</filename>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ConeShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/d62/ConeShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::ConeShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CylinderShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/d9f/CylinderShape_8cpp</filename>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CylinderShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/d3e/CylinderShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::CylinderShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>DegreeOfFreedom.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/d56/DegreeOfFreedom_8cpp</filename>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>DegreeOfFreedom.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>da/d28/DegreeOfFreedom_8hpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="class">dart::dynamics::DegreeOfFreedom</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BasicNodeManager.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d2/d9a/BasicNodeManager_8hpp</filename>
    <includes id="d8/de1/NameManager_8hpp" name="NameManager.hpp" local="yes" imported="no">dart/common/NameManager.hpp</includes>
    <includes id="d9/d98/Empty_8hpp" name="Empty.hpp" local="yes" imported="no">dart/common/Empty.hpp</includes>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <class kind="class">dart::dynamics::detail::BasicNodeManagerForBodyNode</class>
    <class kind="struct">dart::dynamics::detail::BasicNodeManagerForBodyNode::type</class>
    <class kind="class">dart::dynamics::detail::BasicNodeManagerForSkeleton</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_IRREGULAR</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>a47e1a13a4a9d7d90d8d47cf19c35815f</anchor>
      <arglist>(TypeName, AspectName, PluralAspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>a819c54fe5226806f171e7fd0293e813e</anchor>
      <arglist>(AspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_SKEL_IRREGULAR</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>a285c351694ada1dcf13810c10bc67093</anchor>
      <arglist>(TypeName, AspectName, PluralAspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_SKEL</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>ad5423f688cdaa394b0740a64501c4a28</anchor>
      <arglist>(AspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_IRREGULAR_DECLARATIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>a2788fbcce7d214c2a05b2d9f443854ec</anchor>
      <arglist>(TypeName, AspectName, PluralAspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_DECLARATIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>a75edb8ffb44f1228c2cc570f37313baf</anchor>
      <arglist>(AspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_SKEL_IRREGULAR_DECLARATIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>acc7143826d636e8389dc2a41e4cc1596</anchor>
      <arglist>(TypeName, AspectName, PluralAspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_SKEL_DECLARATIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>ad5178c14d3fcc2ef190a59a75fea6ff2</anchor>
      <arglist>(AspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_IRREGULAR_DEFINITIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>ad22d0beea89a44686d67a47ce4e1373d</anchor>
      <arglist>(ClassName, TypeName, AspectName, PluralAspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_DEFINITIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>ae0fccaf01ec25a8a6adf649e93caa7f8</anchor>
      <arglist>(ClassName, AspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_SKEL_IRREGULAR_DEFINITIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>a74ac7e651343bf5016a28accbc98b8d4</anchor>
      <arglist>(ClassName, TypeName, AspectName, PluralAspectName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BAKE_SPECIALIZED_NODE_SKEL_DEFINITIONS</name>
      <anchorfile>d2/d9a/BasicNodeManager_8hpp.html</anchorfile>
      <anchor>a50e2e006d29b957a55a3c8403263c3b4</anchor>
      <arglist>(ClassName, AspectName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BodyNodeAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d3/db6/BodyNodeAspect_8hpp</filename>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <includes id="dc/d13/Inertia_8hpp" name="Inertia.hpp" local="yes" imported="no">dart/dynamics/Inertia.hpp</includes>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <includes id="d9/dde/ProxyAspect_8hpp" name="ProxyAspect.hpp" local="yes" imported="no">dart/common/ProxyAspect.hpp</includes>
    <includes id="d6/da8/EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/EmbeddedAspect.hpp</includes>
    <class kind="struct">dart::dynamics::detail::BodyNodeState</class>
    <class kind="struct">dart::dynamics::detail::BodyNodeAspectProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::CloneableVector&lt; std::unique_ptr&lt; Node::State &gt; &gt;</type>
      <name>NodeTypeStateVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0bb77b3df8f4729a1189ebf5e76e79a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; NodeTypeStateVector &gt; &gt;</type>
      <name>NodeStateMap</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a8e01543d64ab01361bcea6831dd01655</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::CloneableMap&lt; NodeStateMap &gt;</type>
      <name>AllNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ac68d5abb54c13d76c09882beda0851e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::CloneableVector&lt; std::unique_ptr&lt; Node::Properties &gt; &gt;</type>
      <name>NodeTypePropertiesVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad09659995f9beca3baf4f082ec8e6a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; NodeTypePropertiesVector &gt; &gt;</type>
      <name>NodePropertiesMap</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>aa5c53de4d87f7dc0ad7515c12d29eafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::CloneableMap&lt; NodePropertiesMap &gt;</type>
      <name>AllNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>abd946c9ce9009c72a8dd719ba3bd624b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::State, BodyNode, AllNodeStates,&amp;setAllNodeStates,&amp;getAllNodeStates &gt;</type>
      <name>NodeVectorProxyAspectState</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a1f93b7ec0c4d7a16a227206f7d683ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::Properties, BodyNode, AllNodeProperties,&amp;setAllNodeProperties,&amp;getAllNodeProperties &gt;</type>
      <name>NodeVectorProxyAspectProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a91b0675d6e58afb0e87db8d4f3c795ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyStateAndPropertiesAspect&lt; BodyNode, NodeVectorProxyAspectState, NodeVectorProxyAspectProperties &gt;</type>
      <name>NodeVectorProxyAspect</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>aa9a3d57c3321925384db8730cea50723</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedStateAndPropertiesOnTopOf&lt; BodyNode, BodyNodeState, BodyNodeAspectProperties, common::RequiresAspect&lt; NodeVectorProxyAspect &gt; &gt;</type>
      <name>BodyNodeCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a3d48b185c21758d3ba6df083f4ce78ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_FRICTION_COEFF</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2bf1880222d199764458d14155b0aeeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_RESTITUTION_COEFF</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5ad5d8d0d531c1762c3c73dd49fc4639</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BodyNodePtr.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d5/dd4/BodyNodePtr_8hpp</filename>
    <class kind="struct">dart::dynamics::MutexedWeakSkeletonPtr</class>
    <class kind="class">dart::dynamics::SkeletonRefCountingBase</class>
    <class kind="class">dart::dynamics::TemplateBodyNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakBodyNodePtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>DegreeOfFreedomPtr.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>da/db6/DegreeOfFreedomPtr_8hpp</filename>
    <includes id="d5/dd4/BodyNodePtr_8hpp" name="BodyNodePtr.hpp" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.hpp</includes>
    <includes id="da/d59/InvalidIndex_8hpp" name="InvalidIndex.hpp" local="yes" imported="no">dart/dynamics/InvalidIndex.hpp</includes>
    <class kind="class">dart::dynamics::TemplateDegreeOfFreedomPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakDegreeOfFreedomPtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EndEffectorAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d0/dc9/EndEffectorAspect_8hpp</filename>
    <includes id="d8/def/CompositeNode_8hpp" name="CompositeNode.hpp" local="yes" imported="no">dart/dynamics/CompositeNode.hpp</includes>
    <includes id="da/dfe/SpecializedForAspect_8hpp" name="SpecializedForAspect.hpp" local="yes" imported="no">dart/common/SpecializedForAspect.hpp</includes>
    <class kind="struct">dart::dynamics::detail::EndEffectorProperties</class>
    <class kind="struct">dart::dynamics::detail::SupportStateData</class>
    <class kind="struct">dart::dynamics::detail::SupportPropertiesData</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>CompositeNode&lt; common::CompositeJoiner&lt; FixedJacobianNode, common::SpecializedForAspect&lt; Support &gt; &gt; &gt;</type>
      <name>EndEffectorCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af6cde2aadfb7e22b97a31c5c82b379be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SupportUpdate</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad8664b3ecfd84e54059150806c0da334</anchor>
      <arglist>(Support *support)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EntityNode.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>df/d0e/detail_2EntityNode_8hpp</filename>
    <includes id="de/d24/EntityNode_8hpp" name="EntityNode.hpp" local="yes" imported="no">dart/dynamics/EntityNode.hpp</includes>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EntityNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d24/EntityNode_8hpp</filename>
    <includes id="d1/d82/EntityNodeAspect_8hpp" name="EntityNodeAspect.hpp" local="yes" imported="no">dart/dynamics/detail/EntityNodeAspect.hpp</includes>
    <includes id="df/d0e/detail_2EntityNode_8hpp" name="EntityNode.hpp" local="yes" imported="no">dart/dynamics/detail/EntityNode.hpp</includes>
    <class kind="class">dart::dynamics::EntityNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EntityNodeAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>df/dd0/EntityNodeAspect_8cpp</filename>
    <includes id="d1/d82/EntityNodeAspect_8hpp" name="EntityNodeAspect.hpp" local="yes" imported="no">dart/dynamics/detail/EntityNodeAspect.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>EntityNodeAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d1/d82/EntityNodeAspect_8hpp</filename>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <class kind="class">dart::dynamics::EntityNode</class>
    <class kind="struct">dart::dynamics::detail::EntityNodeProperties</class>
    <class kind="class">dart::dynamics::detail::EntityNodeBase</class>
    <class kind="class">dart::dynamics::detail::EntityNodeBase&lt; Base, true &gt;</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedProperties&lt; EntityNode&lt; Base &gt;, EntityNodeProperties &gt;</type>
      <name>EntityNodeAspectBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ac3030876c2da54903586141d1a099615</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EulerJointAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>dc/deb/EulerJointAspect_8cpp</filename>
    <includes id="d5/d0a/EulerJoint_8hpp" name="EulerJoint.hpp" local="yes" imported="no">dart/dynamics/EulerJoint.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>EulerJointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d3/d1c/EulerJointAspect_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="struct">dart::dynamics::detail::EulerJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::EulerJointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; EulerJoint, EulerJointUniqueProperties, GenericJoint&lt; math::R3Space &gt; &gt;</type>
      <name>EulerJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a871bfe90c32e14bbc5ea26a940e07132</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisOrder</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0b735c7227b11e97b9323ea1054337c0</anchor>
      <arglist></arglist>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="a0b735c7227b11e97b9323ea1054337c0a6811254e01b3550bdb2dc46f204730dc">ZYX</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="a0b735c7227b11e97b9323ea1054337c0ae65075d550f9b5bf9992fa1d71a131be">XYZ</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>FixedFrameAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d6/dcc/FixedFrameAspect_8hpp</filename>
    <class kind="struct">dart::dynamics::detail::FixedFrameProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>FixedJacobianNode.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d9/d2a/detail_2FixedJacobianNode_8hpp</filename>
    <includes id="d3/d00/TemplatedJacobianNode_8hpp" name="TemplatedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/TemplatedJacobianNode.hpp</includes>
    <includes id="d6/d97/FixedFrame_8hpp" name="FixedFrame.hpp" local="yes" imported="no">dart/dynamics/FixedFrame.hpp</includes>
    <includes id="de/d24/EntityNode_8hpp" name="EntityNode.hpp" local="yes" imported="no">dart/dynamics/EntityNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::CompositeJoiner&lt; EntityNode&lt; TemplatedJacobianNode&lt; FixedJacobianNode &gt; &gt;, common::Virtual&lt; FixedFrame &gt; &gt;</type>
      <name>FixedJacobianNodeCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad675665d7dde22b7118bdf65d9ae7372</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FixedJacobianNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/dc3/FixedJacobianNode_8hpp</filename>
    <includes id="d9/d2a/detail_2FixedJacobianNode_8hpp" name="FixedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/detail/FixedJacobianNode.hpp</includes>
    <class kind="class">dart::dynamics::FixedJacobianNode</class>
    <class kind="struct">dart::dynamics::FixedJacobianNode::Cache</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>GenericJoint.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>df/d64/detail_2GenericJoint_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d9/d3d/ConfigurationSpace_8hpp" name="ConfigurationSpace.hpp" local="yes" imported="no">dart/math/ConfigurationSpace.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>GenericJoint_REPORT_DIM_MISMATCH</name>
      <anchorfile>df/d64/detail_2GenericJoint_8hpp.html</anchorfile>
      <anchor>abe5140a557d93551efa93398925846fc</anchor>
      <arglist>(func, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GenericJoint_REPORT_OUT_OF_RANGE</name>
      <anchorfile>df/d64/detail_2GenericJoint_8hpp.html</anchorfile>
      <anchor>ac080386b2f77ec6a437d6bd6df23547e</anchor>
      <arglist>(func, index)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GenericJoint_REPORT_UNSUPPORTED_ACTUATOR</name>
      <anchorfile>df/d64/detail_2GenericJoint_8hpp.html</anchorfile>
      <anchor>ab9e593535198045a900486babc74ebce</anchor>
      <arglist>(func)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GenericJoint_SET_IF_DIFFERENT</name>
      <anchorfile>df/d64/detail_2GenericJoint_8hpp.html</anchorfile>
      <anchor>ae86e91d44cc57baa7119133e7ab70038</anchor>
      <arglist>(mField, value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GenericJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/d79/GenericJoint_8hpp</filename>
    <includes id="d6/dd1/GenericJointAspect_8hpp" name="GenericJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/GenericJointAspect.hpp</includes>
    <includes id="df/d64/detail_2GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/detail/GenericJoint.hpp</includes>
    <class kind="class">dart::dynamics::GenericJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>GenericJointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d6/dd1/GenericJointAspect_8hpp</filename>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d7/d2a/AspectWithVersion_8hpp" name="AspectWithVersion.hpp" local="yes" imported="no">dart/common/AspectWithVersion.hpp</includes>
    <class kind="class">dart::dynamics::GenericJoint</class>
    <class kind="struct">dart::dynamics::detail::GenericJointState</class>
    <class kind="struct">dart::dynamics::detail::GenericJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::GenericJointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedStateAndPropertiesOnTopOf&lt; Derived, GenericJointState&lt; ConfigSpaceT &gt;, GenericJointUniqueProperties&lt; ConfigSpaceT &gt;, Joint &gt;</type>
      <name>GenericJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2ec06480eb51b62082dea00c718660ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HeightmapShape-impl.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d4/dcc/HeightmapShape-impl_8hpp</filename>
    <includes id="d7/d74/HeightmapShape_8hpp" name="HeightmapShape.hpp" local="yes" imported="no">dart/dynamics/HeightmapShape.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>InverseKinematics.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d7/dff/detail_2InverseKinematics_8hpp</filename>
    <includes id="de/d6a/InverseKinematics_8hpp" name="InverseKinematics.hpp" local="yes" imported="no">dart/dynamics/InverseKinematics.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>InverseKinematics.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d6a/InverseKinematics_8hpp</filename>
    <includes id="d3/dba/sub__ptr_8hpp" name="sub_ptr.hpp" local="yes" imported="no">dart/common/sub_ptr.hpp</includes>
    <includes id="d8/d84/Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/Signal.hpp</includes>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d1/d19/Solver_8hpp" name="Solver.hpp" local="yes" imported="no">dart/optimizer/Solver.hpp</includes>
    <includes id="d8/da6/Problem_8hpp" name="Problem.hpp" local="yes" imported="no">dart/optimizer/Problem.hpp</includes>
    <includes id="d4/d59/Function_8hpp" name="Function.hpp" local="yes" imported="no">dart/optimizer/Function.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="df/d5d/JacobianNode_8hpp" name="JacobianNode.hpp" local="yes" imported="no">dart/dynamics/JacobianNode.hpp</includes>
    <includes id="d7/dff/detail_2InverseKinematics_8hpp" name="InverseKinematics.hpp" local="yes" imported="no">dart/dynamics/detail/InverseKinematics.hpp</includes>
    <class kind="class">dart::dynamics::InverseKinematics</class>
    <class kind="class">dart::dynamics::InverseKinematics::Function</class>
    <class kind="class">dart::dynamics::InverseKinematics::ErrorMethod</class>
    <class kind="struct">dart::dynamics::InverseKinematics::ErrorMethod::Properties</class>
    <class kind="class">dart::dynamics::InverseKinematics::TaskSpaceRegion</class>
    <class kind="struct">dart::dynamics::InverseKinematics::TaskSpaceRegion::UniqueProperties</class>
    <class kind="struct">dart::dynamics::InverseKinematics::TaskSpaceRegion::Properties</class>
    <class kind="class">dart::dynamics::InverseKinematics::GradientMethod</class>
    <class kind="struct">dart::dynamics::InverseKinematics::GradientMethod::Properties</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianDLS</class>
    <class kind="struct">dart::dynamics::InverseKinematics::JacobianDLS::UniqueProperties</class>
    <class kind="struct">dart::dynamics::InverseKinematics::JacobianDLS::Properties</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianTranspose</class>
    <class kind="class">dart::dynamics::InverseKinematics::Analytical</class>
    <class kind="struct">dart::dynamics::InverseKinematics::Analytical::Solution</class>
    <class kind="struct">dart::dynamics::InverseKinematics::Analytical::UniqueProperties</class>
    <class kind="struct">dart::dynamics::InverseKinematics::Analytical::Properties</class>
    <class kind="class">dart::dynamics::InverseKinematics::Objective</class>
    <class kind="class">dart::dynamics::InverseKinematics::Constraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="typedef">
      <type>InverseKinematics</type>
      <name>IK</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6f0ee24293403ed241b0db7ca2195965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKTolerance</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5e784e02b14816f6c3357797d342e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKErrorClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afa5d93e10f876e3f4c019333c084772b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06dc2b3d9522262637840806902b23e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abbca53d13a176c5a3272364fc8e58e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKDLSCoefficient</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab121f3e4478bbcaadebce57698c1d8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKAngularWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a69e6c0a07f5cc5a0b94a7d8a48fa24f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKLinearWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a705e6ff8260f78604f09fcefe7a164f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InverseKinematicsPtr.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d8/d11/InverseKinematicsPtr_8hpp</filename>
    <includes id="de/da4/NodePtr_8hpp" name="NodePtr.hpp" local="yes" imported="no">dart/dynamics/detail/NodePtr.hpp</includes>
    <class kind="class">dart::dynamics::TemplateInverseKinematicsPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakInverseKinematicsPtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a374a7787cd9e06ac1bd8b90c56496959</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a90308c07aec0b5955d232f5bac673636</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa792f620923afd884f9e00973a30f960</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab908c35377add3ba671437a53a1c782a</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d9/dbd/JointAspect_8hpp</filename>
    <class kind="struct">dart::dynamics::detail::JointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ActuatorType</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FORCE</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aa608bb1a5dae8ccdb1d4129e8fc0d45ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PASSIVE</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aa0b6d66b2a41077512e0d881e0fec534d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SERVO</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aad208e58c4d83b05782777f5f4972b547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACCELERATION</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aaa7c6c02911d59c0fc523cc354757ceae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VELOCITY</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aa6fd7d9fb59a285178b4d1df19e42d957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOCKED</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aafacacfc07d9f8fa233b29280f25a1a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ActuatorType</type>
      <name>DefaultActuatorType</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad6a50ba5f92327e066b19284f950b32e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointPtr.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d8/d8b/JointPtr_8hpp</filename>
    <includes id="d5/dd4/BodyNodePtr_8hpp" name="BodyNodePtr.hpp" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.hpp</includes>
    <class kind="class">dart::dynamics::TemplateJointPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakJointPtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MarkerAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d1/d67/MarkerAspect_8hpp</filename>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <class kind="struct">dart::dynamics::detail::MarkerProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>Node.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d3/d71/detail_2Node_8hpp</filename>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_ENABLE_NODE_SPECIALIZATION</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a4f613f496542d5353a9544d281669c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_INSTANTIATE_SPECIALIZED_NODE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a02a93a92bcb24c9d16a12187405e4c5d</anchor>
      <arglist>(NodeName, it)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_INSTANTIATE_SPECIALIZED_NODE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a5a0f4cf7223a4582d76399fb5d4c2a61</anchor>
      <arglist>(NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_INSTANTIATE_SPECALIZED_NODE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>ad418963a1c2643b1dcf1c3329e1b7679</anchor>
      <arglist>(NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SPECIALIZED_NODE_INLINE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>ab99775629b407c631941dc091461bb20</anchor>
      <arglist>(NodeName, PluralName, it)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_INLINE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a4f38479a44676a3215574f847547cba9</anchor>
      <arglist>(NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_INTERNAL</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>aefb2f35088b86fa984ddd65fb9d9bc3e</anchor>
      <arglist>(NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SPECIALIZED_NODE_DECLARE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>aa4e6092b9fcb4868b5a691cd49c48da4</anchor>
      <arglist>(NodeName, PluralName, it)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_DECLARE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a234afde0d8773afabe8f54c6fe3f8682</anchor>
      <arglist>(NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_DECLARE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a8e3c7c1b233d6d068941218f8ac38039</anchor>
      <arglist>(NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SPECIALIZED_NODE_DEFINE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>ab5fa36b41caac22ff9005fdd79669b79</anchor>
      <arglist>(BodyNodeType, NodeName, PluralName, it)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_DEFINE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a96016b472ad5ad112b1070ffb304bd6c</anchor>
      <arglist>(BodyNodeType, NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_DEFINE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>ac630bea18d72f8b8d90c4469bed37488</anchor>
      <arglist>(BodyNodeType, NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SPECIALIZED_NODE_TEMPLATE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a3008b16610239e97529005cdbc44e217</anchor>
      <arglist>(BodyNodeType, NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_TEMPLATE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a1a80e685617f9e5b19c442dddc1d65b7</anchor>
      <arglist>(BodyNodeType, NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SPECIALIZED_NODE_TEMPLATE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a12d461834810901f339ca03e95045b5f</anchor>
      <arglist>(BodyNodeType, NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_ENABLE_NODE_SPECIALIZATION</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>aadd09606eb3eeb881d97fadd833988b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_INSTANTIATE_SPECIALIZED_NODE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a0f379fc093da4096c5804e4ea874549d</anchor>
      <arglist>(NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_INSTANTIATE_SPECIALIZED_NODE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>af4fa57a10d8296dae5a2dd9ae894805b</anchor>
      <arglist>(NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_WARN_TREE_INDEX</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a28704047a2d773ced38fd4c3c34aaf8d</anchor>
      <arglist>(treeIts, treeIndex, func)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SKEL_SPECIALIZED_NODE_INLINE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>abebaf5099e3789ca6abf9fc23db9feeb</anchor>
      <arglist>(NodeName, PluralName, skelIt, treeIts, NameMgr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_INLINE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a783eb542da16de9128b459f8894ff01f</anchor>
      <arglist>(NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_INLINE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a089c14d6f737832eb0a99fcfa49681f6</anchor>
      <arglist>(NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SKEL_SPECIALIZED_NODE_DECLARE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a4206c62c5097ecf98da44be0b479422c</anchor>
      <arglist>(NodeName, PluralName, skelIt, treeIts, NameMgr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_DECLARE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>adb49a0c9e59ff1ffa093f45d19093c79</anchor>
      <arglist>(NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_DECLARE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a124abc74611454d0d3c670ddc66c4cc2</anchor>
      <arglist>(NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SKEL_SPECIALIZED_NODE_DEFINE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a4ef46b29e84bebe1188215b973152caa</anchor>
      <arglist>(SkeletonType, NodeName, PluralName, skelIt, treeIts, NameMgr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_DEFINED_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a16fd6b6283cca6a45e1f06ad442a2654</anchor>
      <arglist>(SkeletonType, NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_DEFINE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a0547a9de3dd2c63d7e3e25f0551a8c3a</anchor>
      <arglist>(SkeletonType, NodeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DETAIL_DART_SKEL_SPECIALIZED_NODE_TEMPLATE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>aa2a3c2c9b02ad9255de37f3db4017788</anchor>
      <arglist>(SkelType, NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_TEMPLATE_IRREGULAR</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>ab576fd852f424689212817bcbf667bc0</anchor>
      <arglist>(SkelType, NodeName, PluralName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_SKEL_SPECIALIZED_NODE_TEMPLATE</name>
      <anchorfile>d3/d71/detail_2Node_8hpp.html</anchorfile>
      <anchor>a07dcf4b454c50be20664752070c49cdb</anchor>
      <arglist>(SkelType, NodeName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Node.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/dc6/Node_8hpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="dd/d84/Cloneable_8hpp" name="Cloneable.hpp" local="yes" imported="no">dart/common/Cloneable.hpp</includes>
    <includes id="d9/db7/VersionCounter_8hpp" name="VersionCounter.hpp" local="yes" imported="no">dart/common/VersionCounter.hpp</includes>
    <includes id="d6/da8/EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/EmbeddedAspect.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d3/d71/detail_2Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/detail/Node.hpp</includes>
    <class kind="class">dart::dynamics::NodeDestructor</class>
    <class kind="class">dart::dynamics::Node</class>
    <class kind="class">dart::dynamics::Node::State</class>
    <class kind="class">dart::dynamics::Node::Properties</class>
    <class kind="class">dart::dynamics::AccessoryNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>NodeManagerJoiner.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d6/d91/detail_2NodeManagerJoiner_8hpp</filename>
    <includes id="de/d37/NodeManagerJoiner_8hpp" name="NodeManagerJoiner.hpp" local="yes" imported="no">dart/dynamics/NodeManagerJoiner.hpp</includes>
    <includes id="df/d24/TemplateJoinerDispatchMacro_8hpp" name="TemplateJoinerDispatchMacro.hpp" local="yes" imported="no">dart/common/detail/TemplateJoinerDispatchMacro.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>NodeManagerJoiner.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d37/NodeManagerJoiner_8hpp</filename>
    <includes id="d9/d98/Empty_8hpp" name="Empty.hpp" local="yes" imported="no">dart/common/Empty.hpp</includes>
    <includes id="d6/d91/detail_2NodeManagerJoiner_8hpp" name="NodeManagerJoiner.hpp" local="yes" imported="no">dart/dynamics/detail/NodeManagerJoiner.hpp</includes>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1, Base2 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1, Base2, OtherBases...&gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1, Base2 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1, Base2, OtherBases...&gt;</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>NodePtr.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>de/da4/NodePtr_8hpp</filename>
    <includes id="d5/dd4/BodyNodePtr_8hpp" name="BodyNodePtr.hpp" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.hpp</includes>
    <class kind="class">dart::dynamics::TemplateNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakNodePtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlanarJointAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d4/d4f/PlanarJointAspect_8cpp</filename>
    <includes id="df/ded/PlanarJoint_8hpp" name="PlanarJoint.hpp" local="yes" imported="no">dart/dynamics/PlanarJoint.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>PlanarJointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>dd/d80/PlanarJointAspect_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="struct">dart::dynamics::detail::PlanarJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::PlanarJointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; PlanarJoint, PlanarJointUniqueProperties, GenericJoint&lt; math::R3Space &gt; &gt;</type>
      <name>PlanarJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a7734200743d1e31da67838482cb72237</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlaneType</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad2af5d362eab803b59153e85269a2979</anchor>
      <arglist></arglist>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979a74c53bcd3dcb2bb79993b2fec37d362a">XY</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979affa4ba973372c3650fd0881abeca6512">YZ</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979a7d40f0d6c4baa81950b1759d3712a225">ZX</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979a936fcdfeb660189dfb3e7907cc099f10">ARBITRARY</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>PrismaticJointAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d4/d7b/PrismaticJointAspect_8cpp</filename>
    <includes id="de/d07/PrismaticJoint_8hpp" name="PrismaticJoint.hpp" local="yes" imported="no">dart/dynamics/PrismaticJoint.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>PrismaticJointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d2/dad/PrismaticJointAspect_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="struct">dart::dynamics::detail::PrismaticJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::PrismaticJointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; PrismaticJoint, PrismaticJointUniqueProperties, GenericJoint&lt; math::R1Space &gt; &gt;</type>
      <name>PrismaticJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a325dabe3143c7fcf19a3ccd480e12a42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RevoluteJointAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d9/d1b/RevoluteJointAspect_8cpp</filename>
    <includes id="d0/ded/RevoluteJoint_8hpp" name="RevoluteJoint.hpp" local="yes" imported="no">dart/dynamics/RevoluteJoint.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>RevoluteJointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d4/d97/RevoluteJointAspect_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="struct">dart::dynamics::detail::RevoluteJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::RevoluteJointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; RevoluteJoint, RevoluteJointUniqueProperties, GenericJoint&lt; math::R1Space &gt; &gt;</type>
      <name>RevoluteJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>aac8bdbd040dc2165af15d54487722651</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ScrewJointAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d3/ddd/ScrewJointAspect_8cpp</filename>
    <includes id="d1/dca/ScrewJoint_8hpp" name="ScrewJoint.hpp" local="yes" imported="no">dart/dynamics/ScrewJoint.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>ScrewJointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d0/d6d/ScrewJointAspect_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="struct">dart::dynamics::detail::ScrewJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::ScrewJointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; ScrewJoint, ScrewJointUniqueProperties, GenericJoint&lt; math::R1Space &gt; &gt;</type>
      <name>ScrewJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>abec9e2d5c3505354710b055e839cb1b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shape.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d1/d9a/detail_2Shape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Shape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/df8/Shape_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d1/d9a/detail_2Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/detail/Shape.hpp</includes>
    <class kind="class">dart::dynamics::Shape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeFrameAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d2/d45/ShapeFrameAspect_8hpp</filename>
    <includes id="d6/da8/EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/EmbeddedAspect.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="struct">dart::dynamics::detail::VisualAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::CollisionAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::DynamicsAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::ShapeFrameProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; ShapeFrame, ShapeFrameProperties, common::SpecializedForAspect&lt; VisualAspect, CollisionAspect, DynamicsAspect &gt; &gt;</type>
      <name>ShapeFrameCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a4901effea02ce600c09f9f869bb9bdce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShapeNode.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d7/da0/dynamics_2detail_2ShapeNode_8hpp</filename>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <includes id="d7/dc3/FixedJacobianNode_8hpp" name="FixedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/FixedJacobianNode.hpp</includes>
    <includes id="d8/def/CompositeNode_8hpp" name="CompositeNode.hpp" local="yes" imported="no">dart/dynamics/CompositeNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>CompositeNode&lt; common::CompositeJoiner&lt; FixedJacobianNode, ShapeFrame &gt; &gt;</type>
      <name>ShapeNodeCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ae9264a068658d0df0e25a9136d415651</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShapeNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>db/de3/dynamics_2ShapeNode_8hpp</filename>
    <includes id="d8/d84/Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/Signal.hpp</includes>
    <includes id="d7/da0/dynamics_2detail_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/detail/ShapeNode.hpp</includes>
    <class kind="class">dart::dynamics::ShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d5/d44/gui_2osg_2render_2ShapeNode_8hpp</filename>
    <class kind="class">dart::gui::osg::render::ShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>Skeleton.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>dd/dfc/detail_2Skeleton_8hpp</filename>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Skeleton.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/d58/Skeleton_8hpp</filename>
    <includes id="d8/de1/NameManager_8hpp" name="NameManager.hpp" local="yes" imported="no">dart/common/NameManager.hpp</includes>
    <includes id="d9/db7/VersionCounter_8hpp" name="VersionCounter.hpp" local="yes" imported="no">dart/common/VersionCounter.hpp</includes>
    <includes id="d0/d96/MetaSkeleton_8hpp" name="MetaSkeleton.hpp" local="yes" imported="no">dart/dynamics/MetaSkeleton.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d1/d9a/HierarchicalIK_8hpp" name="HierarchicalIK.hpp" local="yes" imported="no">dart/dynamics/HierarchicalIK.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="db/de3/dynamics_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/ShapeNode.hpp</includes>
    <includes id="d3/d78/EndEffector_8hpp" name="EndEffector.hpp" local="yes" imported="no">dart/dynamics/EndEffector.hpp</includes>
    <includes id="d8/d1a/Marker_8hpp" name="Marker.hpp" local="yes" imported="no">dart/dynamics/Marker.hpp</includes>
    <includes id="d3/db6/BodyNodeAspect_8hpp" name="BodyNodeAspect.hpp" local="yes" imported="no">dart/dynamics/detail/BodyNodeAspect.hpp</includes>
    <includes id="df/d86/SpecializedNodeManager_8hpp" name="SpecializedNodeManager.hpp" local="yes" imported="no">dart/dynamics/SpecializedNodeManager.hpp</includes>
    <includes id="d9/de0/SkeletonAspect_8hpp" name="SkeletonAspect.hpp" local="yes" imported="no">dart/dynamics/detail/SkeletonAspect.hpp</includes>
    <includes id="dd/dfc/detail_2Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/detail/Skeleton.hpp</includes>
    <class kind="class">dart::dynamics::Skeleton</class>
    <class kind="struct">dart::dynamics::Skeleton::Configuration</class>
    <class kind="struct">dart::dynamics::Skeleton::DirtyFlags</class>
    <class kind="struct">dart::dynamics::Skeleton::DataCache</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d9/de0/SkeletonAspect_8hpp</filename>
    <includes id="d8/d3b/Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/Composite.hpp</includes>
    <includes id="d9/dde/ProxyAspect_8hpp" name="ProxyAspect.hpp" local="yes" imported="no">dart/common/ProxyAspect.hpp</includes>
    <includes id="d6/da8/EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/EmbeddedAspect.hpp</includes>
    <includes id="d4/d73/RequiresAspect_8hpp" name="RequiresAspect.hpp" local="yes" imported="no">dart/common/RequiresAspect.hpp</includes>
    <class kind="struct">dart::dynamics::detail::SkeletonAspectProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::State &gt;</type>
      <name>BodyNodeStateVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a24624b2cd98e5dca494939284e2b7c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::Properties &gt;</type>
      <name>BodyNodePropertiesVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a9400e827a63ecb181e980fcae3426728</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::State &gt;</type>
      <name>JointStateVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0e7e7b6d2bfdce1c2f0f491ca942886e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::Properties &gt;</type>
      <name>JointPropertiesVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5dfe831477a4a3c00a0b240b3a7916b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::State, Skeleton, BodyNodeStateVector,&amp;setAllBodyNodeStates,&amp;getAllBodyNodeStates &gt;</type>
      <name>BodyNodeVectorProxyAspectState</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0b09daf7985999916adfa1d7e1eed296</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::Properties, Skeleton, BodyNodePropertiesVector,&amp;setAllBodyNodeProperties,&amp;getAllBodyNodeProperties &gt;</type>
      <name>BodyNodeVectorProxyAspectProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a333d57f02511f2cd03bd38a98b1808c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyStateAndPropertiesAspect&lt; Skeleton, BodyNodeVectorProxyAspectState, BodyNodeVectorProxyAspectProperties &gt;</type>
      <name>BodyNodeVectorProxyAspect</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a839775f80ee2d9bd4f0b06a9ff7f27a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::State, Skeleton, JointStateVector,&amp;setAllJointStates,&amp;getAllJointStates &gt;</type>
      <name>JointVectorProxyAspectState</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2900ec5087e76af09cd275689573af3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::Properties, Skeleton, JointPropertiesVector,&amp;setAllJointProperties,&amp;getAllJointProperties &gt;</type>
      <name>JointVectorProxyAspectProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a3587b3b60b3dc312beb359606cf3ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyStateAndPropertiesAspect&lt; Skeleton, JointVectorProxyAspectState, JointVectorProxyAspectProperties &gt;</type>
      <name>JointVectorProxyAspect</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af9ca993f938f805c330cc4a753badf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::RequiresAspect&lt; BodyNodeVectorProxyAspect, JointVectorProxyAspect &gt;</type>
      <name>SkeletonProxyAspects</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a86fa99a8336318b3d034e5ab3c465eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; Skeleton, SkeletonAspectProperties, SkeletonProxyAspects &gt;</type>
      <name>SkeletonAspectBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ac9856c632169526cff610581782e328e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllBodyNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a9e0324a032e49ef575c49cff81b9e1f6</anchor>
      <arglist>(Skeleton *skel, const BodyNodeStateVector &amp;states)</arglist>
    </member>
    <member kind="function">
      <type>BodyNodeStateVector</type>
      <name>getAllBodyNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad82cc7386f4742977a7f7737d48a4ed5</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllBodyNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a7ad7f537b605edfecb966a31ea70de58</anchor>
      <arglist>(Skeleton *skel, const BodyNodePropertiesVector &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>BodyNodePropertiesVector</type>
      <name>getAllBodyNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a03975ea60dd67170d319696dfaaf2da2</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllJointStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af3fb2daaef68eab86d8682c0aa820bb3</anchor>
      <arglist>(Skeleton *skel, const JointStateVector &amp;states)</arglist>
    </member>
    <member kind="function">
      <type>JointStateVector</type>
      <name>getAllJointStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a732e2426f63fdb95b9c8118a53812624</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllJointProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2d750c44cb460233ca37e5be01e81a13</anchor>
      <arglist>(Skeleton *skel, const JointPropertiesVector &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>JointPropertiesVector</type>
      <name>getAllJointProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2aaa138b27ccb31c2c299532d6a3c986</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftBodyNodeAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d3/d64/SoftBodyNodeAspect_8hpp</filename>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/dd0/PointMass_8hpp" name="PointMass.hpp" local="yes" imported="no">dart/dynamics/PointMass.hpp</includes>
    <includes id="d4/d73/RequiresAspect_8hpp" name="RequiresAspect.hpp" local="yes" imported="no">dart/common/RequiresAspect.hpp</includes>
    <class kind="struct">dart::dynamics::detail::SoftBodyNodeUniqueState</class>
    <class kind="struct">dart::dynamics::detail::SoftBodyNodeUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::SoftBodyNodeProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedStateAndPropertiesOnTopOf&lt; SoftBodyNode, SoftBodyNodeUniqueState, SoftBodyNodeUniqueProperties, BodyNode &gt;</type>
      <name>SoftBodyNodeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2af87d640f97d8f79695b3ab43489bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_VERTEX_STIFFNESS</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aaa243f1bb20e8b5cb57f10cd9283d686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_EDGE_STIFNESS</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afbdb878a4b3b904685b455b2c368a0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_DAMPING_COEFF</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1e2f2ee08c480b9bf178428e48a371af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpecializedNodeManager.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d6/d3b/detail_2SpecializedNodeManager_8hpp</filename>
    <includes id="df/d86/SpecializedNodeManager_8hpp" name="SpecializedNodeManager.hpp" local="yes" imported="no">dart/dynamics/SpecializedNodeManager.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SpecializedNodeManager.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/d86/SpecializedNodeManager_8hpp</filename>
    <includes id="d7/d55/Virtual_8hpp" name="Virtual.hpp" local="yes" imported="no">dart/common/Virtual.hpp</includes>
    <includes id="d2/d9a/BasicNodeManager_8hpp" name="BasicNodeManager.hpp" local="yes" imported="no">dart/dynamics/detail/BasicNodeManager.hpp</includes>
    <includes id="de/d37/NodeManagerJoiner_8hpp" name="NodeManagerJoiner.hpp" local="yes" imported="no">dart/dynamics/NodeManagerJoiner.hpp</includes>
    <includes id="d6/d3b/detail_2SpecializedNodeManager_8hpp" name="SpecializedNodeManager.hpp" local="yes" imported="no">dart/dynamics/detail/SpecializedNodeManager.hpp</includes>
    <class kind="class">dart::dynamics::BodyNodeSpecializedFor</class>
    <class kind="class">dart::dynamics::BodyNodeSpecializedFor&lt; SpecNode &gt;</class>
    <class kind="class">dart::dynamics::BodyNodeSpecializedFor&lt; SpecNode1, OtherSpecNodes...&gt;</class>
    <class kind="class">dart::dynamics::SkeletonSpecializedFor</class>
    <class kind="class">dart::dynamics::SkeletonSpecializedFor&lt; SpecNode &gt;</class>
    <class kind="class">dart::dynamics::SkeletonSpecializedFor&lt; SpecNode1, OtherSpecNodes...&gt;</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TemplatedJacobianNode.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>df/d2c/detail_2TemplatedJacobianNode_8hpp</filename>
    <includes id="d3/d00/TemplatedJacobianNode_8hpp" name="TemplatedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/TemplatedJacobianNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TemplatedJacobianNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/d00/TemplatedJacobianNode_8hpp</filename>
    <includes id="df/d5d/JacobianNode_8hpp" name="JacobianNode.hpp" local="yes" imported="no">dart/dynamics/JacobianNode.hpp</includes>
    <includes id="df/d2c/detail_2TemplatedJacobianNode_8hpp" name="TemplatedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/detail/TemplatedJacobianNode.hpp</includes>
    <class kind="class">dart::dynamics::TemplatedJacobianNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint2DAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d1/da8/TranslationalJoint2DAspect_8cpp</filename>
    <includes id="d6/d57/TranslationalJoint2D_8hpp" name="TranslationalJoint2D.hpp" local="yes" imported="no">dart/dynamics/TranslationalJoint2D.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint2DAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d8/d1c/TranslationalJoint2DAspect_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <includes id="dd/d80/PlanarJointAspect_8hpp" name="PlanarJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/PlanarJointAspect.hpp</includes>
    <class kind="class">dart::dynamics::detail::TranslationalJoint2DUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::TranslationalJoint2DProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; TranslationalJoint2D, TranslationalJoint2DUniqueProperties, GenericJoint&lt; math::R2Space &gt;&gt;</type>
      <name>TranslationalJoint2DBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a1b9a1a3fb2d13e4b796307cbf4b1c8db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniversalJointAspect.cpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>d2/d4f/UniversalJointAspect_8cpp</filename>
    <includes id="dc/d57/UniversalJoint_8hpp" name="UniversalJoint.hpp" local="yes" imported="no">dart/dynamics/UniversalJoint.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="function">
      <type></type>
      <name>UniversalJointUniqueProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a8bbc4754ef6a7586417a9eb0fb136781</anchor>
      <arglist>(universalProperties)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UniversalJointAspect.hpp</name>
    <path>/dart/dynamics/detail/</path>
    <filename>db/d38/UniversalJointAspect_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="struct">dart::dynamics::detail::UniversalJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::UniversalJointProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; UniversalJoint, UniversalJointUniqueProperties, GenericJoint&lt; math::R2Space &gt; &gt;</type>
      <name>UniversalJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af4e6a4cf6d29406aa671d56f9bd8a276</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EllipsoidShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/d4f/EllipsoidShape_8cpp</filename>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EllipsoidShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>dd/d4f/EllipsoidShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::EllipsoidShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EndEffector.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/d4b/EndEffector_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d3/d78/EndEffector_8hpp" name="EndEffector.hpp" local="yes" imported="no">dart/dynamics/EndEffector.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>EndEffector.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/d78/EndEffector_8hpp</filename>
    <includes id="d4/d97/Aspect_8hpp" name="Aspect.hpp" local="yes" imported="no">dart/common/Aspect.hpp</includes>
    <includes id="da/dfe/SpecializedForAspect_8hpp" name="SpecializedForAspect.hpp" local="yes" imported="no">dart/common/SpecializedForAspect.hpp</includes>
    <includes id="d7/d2a/AspectWithVersion_8hpp" name="AspectWithVersion.hpp" local="yes" imported="no">dart/common/AspectWithVersion.hpp</includes>
    <includes id="d7/dc3/FixedJacobianNode_8hpp" name="FixedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/FixedJacobianNode.hpp</includes>
    <includes id="d8/def/CompositeNode_8hpp" name="CompositeNode.hpp" local="yes" imported="no">dart/dynamics/CompositeNode.hpp</includes>
    <includes id="d0/dc9/EndEffectorAspect_8hpp" name="EndEffectorAspect.hpp" local="yes" imported="no">dart/dynamics/detail/EndEffectorAspect.hpp</includes>
    <class kind="class">dart::dynamics::Support</class>
    <class kind="class">dart::dynamics::EndEffector</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Entity.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/de9/Entity_8cpp</filename>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <includes id="d3/dae/Frame_8hpp" name="Frame.hpp" local="yes" imported="no">dart/dynamics/Frame.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Entity.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/da6/Entity_8hpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d8/d84/Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/Signal.hpp</includes>
    <includes id="d8/d3b/Composite_8hpp" name="Composite.hpp" local="yes" imported="no">dart/common/Composite.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="class">dart::dynamics::Entity</class>
    <class kind="class">dart::dynamics::Detachable</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EulerJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/d32/EulerJoint_8cpp</filename>
    <includes id="d5/d0a/EulerJoint_8hpp" name="EulerJoint.hpp" local="yes" imported="no">dart/dynamics/EulerJoint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EulerJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d5/d0a/EulerJoint_8hpp</filename>
    <includes id="d3/d1c/EulerJointAspect_8hpp" name="EulerJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/EulerJointAspect.hpp</includes>
    <class kind="class">dart::dynamics::EulerJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FixedFrame.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/dec/FixedFrame_8cpp</filename>
    <includes id="d6/d97/FixedFrame_8hpp" name="FixedFrame.hpp" local="yes" imported="no">dart/dynamics/FixedFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>FixedFrame.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/d97/FixedFrame_8hpp</filename>
    <includes id="d3/dae/Frame_8hpp" name="Frame.hpp" local="yes" imported="no">dart/dynamics/Frame.hpp</includes>
    <includes id="d6/da8/EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/EmbeddedAspect.hpp</includes>
    <includes id="d9/db7/VersionCounter_8hpp" name="VersionCounter.hpp" local="yes" imported="no">dart/common/VersionCounter.hpp</includes>
    <includes id="d6/dcc/FixedFrameAspect_8hpp" name="FixedFrameAspect.hpp" local="yes" imported="no">dart/dynamics/detail/FixedFrameAspect.hpp</includes>
    <class kind="class">dart::dynamics::FixedFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FixedJacobianNode.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/d9a/FixedJacobianNode_8cpp</filename>
    <includes id="d7/dc3/FixedJacobianNode_8hpp" name="FixedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/FixedJacobianNode.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Frame.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d5/de0/Frame_8cpp</filename>
    <includes id="d3/dae/Frame_8hpp" name="Frame.hpp" local="yes" imported="no">dart/dynamics/Frame.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="typedef">
      <type>std::set&lt; Frame * &gt;</type>
      <name>FramePtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a932d96e287e22d44ace7fe96aa2e4069</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::set&lt; const T * &gt;</type>
      <name>convertToConstSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8157d817e7cab6ecb1199a81666a2b58</anchor>
      <arglist>(const std::set&lt; T * &gt; &amp;_set)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Frame.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/dae/Frame_8hpp</filename>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <class kind="class">dart::dynamics::Frame</class>
    <class kind="class">dart::dynamics::WorldFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FreeJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>dd/d98/FreeJoint_8cpp</filename>
    <includes id="d1/d8d/FreeJoint_8hpp" name="FreeJoint.hpp" local="yes" imported="no">dart/dynamics/FreeJoint.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FreeJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/d8d/FreeJoint_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="class">dart::dynamics::FreeJoint</class>
    <class kind="struct">dart::dynamics::FreeJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Group.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d74/Group_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d1/d6f/Group_8hpp" name="Group.hpp" local="yes" imported="no">dart/dynamics/Group.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Group.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/d6f/Group_8hpp</filename>
    <includes id="db/d02/ReferentialSkeleton_8hpp" name="ReferentialSkeleton.hpp" local="yes" imported="no">dart/dynamics/ReferentialSkeleton.hpp</includes>
    <class kind="class">dart::dynamics::Group</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>HeightmapShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/d74/HeightmapShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d4/dcc/HeightmapShape-impl_8hpp" name="HeightmapShape-impl.hpp" local="yes" imported="no">dart/dynamics/detail/HeightmapShape-impl.hpp</includes>
    <class kind="class">dart::dynamics::HeightmapShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="typedef">
      <type>HeightmapShape&lt; float &gt;</type>
      <name>HeightmapShapef</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea145e27c3cc189a4bf25774ea29b466</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HeightmapShape&lt; double &gt;</type>
      <name>HeightmapShaped</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a083989a945ec4636b6820498398ed686</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HierarchicalIK.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/dfa/HierarchicalIK_8cpp</filename>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="d1/d9a/HierarchicalIK_8hpp" name="HierarchicalIK.hpp" local="yes" imported="no">dart/dynamics/HierarchicalIK.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d3/d78/EndEffector_8hpp" name="EndEffector.hpp" local="yes" imported="no">dart/dynamics/EndEffector.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d0/d30/GradientDescentSolver_8hpp" name="GradientDescentSolver.hpp" local="yes" imported="no">dart/optimizer/GradientDescentSolver.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a18ebc4a3d3b183651b06c870144b2150</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HierarchicalIK.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/d9a/HierarchicalIK_8hpp</filename>
    <includes id="de/d6a/InverseKinematics_8hpp" name="InverseKinematics.hpp" local="yes" imported="no">dart/dynamics/InverseKinematics.hpp</includes>
    <class kind="class">dart::dynamics::HierarchicalIK</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Function</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Objective</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Constraint</class>
    <class kind="class">dart::dynamics::CompositeIK</class>
    <class kind="class">dart::dynamics::WholeBodyIK</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt; &gt;</type>
      <name>IKHierarchy</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a20a6cf4d8a08635e9bd0f74f415e8223</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IkFast.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d5/db7/IkFast_8cpp</filename>
    <includes id="d4/d06/IkFast_8hpp" name="IkFast.hpp" local="yes" imported="no">dart/dynamics/IkFast.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>IkFast.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/d06/IkFast_8hpp</filename>
    <includes id="de/d6a/InverseKinematics_8hpp" name="InverseKinematics.hpp" local="yes" imported="no">dart/dynamics/InverseKinematics.hpp</includes>
    <class kind="class">dart::dynamics::IkFast</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>IKFAST_HAS_LIBRARY</name>
      <anchorfile>d4/d06/IkFast_8hpp.html</anchorfile>
      <anchor>aa9b5df21ca9479bf3deaa7da9845cd6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Inertia.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>da/dbf/Inertia_8cpp</filename>
    <includes id="dc/d13/Inertia_8hpp" name="Inertia.hpp" local="yes" imported="no">dart/dynamics/Inertia.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Inertia.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/d13/Inertia_8hpp</filename>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <class kind="class">dart::dynamics::Inertia</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>InvalidIndex.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>da/d59/InvalidIndex_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>INVALID_INDEX</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acc27ab0704bc21556d25948075c2c253</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InverseKinematics.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/d44/InverseKinematics_8cpp</filename>
    <includes id="de/d6a/InverseKinematics_8hpp" name="InverseKinematics.hpp" local="yes" imported="no">dart/dynamics/InverseKinematics.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <includes id="d0/d30/GradientDescentSolver_8hpp" name="GradientDescentSolver.hpp" local="yes" imported="no">dart/optimizer/GradientDescentSolver.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6db9fbab0ef1b3c1ebfb7942692d47a6</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, InverseKinematics *_ik)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JacobianNode.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d8/dbf/JacobianNode_8cpp</filename>
    <includes id="df/d5d/JacobianNode_8hpp" name="JacobianNode.hpp" local="yes" imported="no">dart/dynamics/JacobianNode.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="de/d6a/InverseKinematics_8hpp" name="InverseKinematics.hpp" local="yes" imported="no">dart/dynamics/InverseKinematics.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>JacobianNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/d5d/JacobianNode_8hpp</filename>
    <includes id="d3/dae/Frame_8hpp" name="Frame.hpp" local="yes" imported="no">dart/dynamics/Frame.hpp</includes>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="class">dart::dynamics::JacobianNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Joint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/de6/Joint_8cpp</filename>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>Joint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>db/d4a/Joint_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d9/db7/VersionCounter_8hpp" name="VersionCounter.hpp" local="yes" imported="no">dart/common/VersionCounter.hpp</includes>
    <includes id="d6/da8/EmbeddedAspect_8hpp" name="EmbeddedAspect.hpp" local="yes" imported="no">dart/common/EmbeddedAspect.hpp</includes>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d9/dbd/JointAspect_8hpp" name="JointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/JointAspect.hpp</includes>
    <class kind="class">dart::dynamics::Joint</class>
    <class kind="struct">dart::dynamics::Joint::ExtendedProperties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>LineSegmentShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d9/d14/LineSegmentShape_8cpp</filename>
    <includes id="d4/d17/LineSegmentShape_8hpp" name="LineSegmentShape.hpp" local="yes" imported="no">dart/dynamics/LineSegmentShape.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>LineSegmentShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/d17/LineSegmentShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::LineSegmentShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Linkage.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/d21/Linkage_8cpp</filename>
    <includes id="d5/d94/Linkage_8hpp" name="Linkage.hpp" local="yes" imported="no">dart/dynamics/Linkage.hpp</includes>
    <includes id="d1/d8d/FreeJoint_8hpp" name="FreeJoint.hpp" local="yes" imported="no">dart/dynamics/FreeJoint.hpp</includes>
    <class kind="struct">dart::dynamics::Recording</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function">
      <type>void</type>
      <name>stepToNextChild</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acce1eec9363f7ec1c90586f0480f1caa</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap, int _initValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stepToParent</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab59f5213bd9516b054afbb3407807fcc</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Linkage.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d5/d94/Linkage_8hpp</filename>
    <includes id="db/d02/ReferentialSkeleton_8hpp" name="ReferentialSkeleton.hpp" local="yes" imported="no">dart/dynamics/ReferentialSkeleton.hpp</includes>
    <class kind="class">dart::dynamics::Linkage</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Target</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Terminal</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Marker.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/d5e/Marker_8cpp</filename>
    <includes id="d8/d1a/Marker_8hpp" name="Marker.hpp" local="yes" imported="no">dart/dynamics/Marker.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>Marker.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d8/d1a/Marker_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d1/d67/MarkerAspect_8hpp" name="MarkerAspect.hpp" local="yes" imported="no">dart/dynamics/detail/MarkerAspect.hpp</includes>
    <includes id="d7/dc3/FixedJacobianNode_8hpp" name="FixedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/FixedJacobianNode.hpp</includes>
    <class kind="class">dart::dynamics::Marker</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MeshShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/d6a/MeshShape_8cpp</filename>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="dd/d0a/AssimpInputResourceAdaptor_8hpp" name="AssimpInputResourceAdaptor.hpp" local="yes" imported="no">dart/dynamics/AssimpInputResourceAdaptor.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MeshShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/d74/MeshShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <class kind="class">dart::dynamics::MeshShape</class>
    <namespace>Assimp</namespace>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MetaSkeleton.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/de4/MetaSkeleton_8cpp</filename>
    <includes id="d0/d96/MetaSkeleton_8hpp" name="MetaSkeleton.hpp" local="yes" imported="no">dart/dynamics/MetaSkeleton.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="df/d5d/JacobianNode_8hpp" name="JacobianNode.hpp" local="yes" imported="no">dart/dynamics/JacobianNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayValidity</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4868404c6e1440295345b2ae712fd27d</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a600d1111406ddfa5095d6145d54a95f2</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a774f666dfca09e27a909122600b75ab8</anchor>
      <arglist>(MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setAllValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a61cbc6ea951344563de318c5d171c779</anchor>
      <arglist>(MetaSkeleton *skel, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a85ef65628134cb9b864b89b55ec8dd57</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeec6fec6649364d7d6b4c7133d7e3023</anchor>
      <arglist>(const MetaSkeleton *skel, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyToAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6d722984d4bd1f183d0d7dce473a1fb5</anchor>
      <arglist>(MetaSkeleton *skel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7d48d2233fea14b94adc1070ab3568ef</anchor>
      <arglist>(MetaSkeleton *skel, std::size_t _index, double _value, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae15bd534caaeb4f5fd2fe4c5a0b38e3c</anchor>
      <arglist>(const MetaSkeleton *skel, std::size_t _index, const std::string &amp;_fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MetaSkeleton.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/d96/MetaSkeleton_8hpp</filename>
    <includes id="df/d66/LockableReference_8hpp" name="LockableReference.hpp" local="yes" imported="no">dart/common/LockableReference.hpp</includes>
    <includes id="d8/d84/Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/Signal.hpp</includes>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d3/dae/Frame_8hpp" name="Frame.hpp" local="yes" imported="no">dart/dynamics/Frame.hpp</includes>
    <includes id="da/d59/InvalidIndex_8hpp" name="InvalidIndex.hpp" local="yes" imported="no">dart/dynamics/InvalidIndex.hpp</includes>
    <class kind="class">dart::dynamics::MetaSkeleton</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MultiSphereConvexHullShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/df4/MultiSphereConvexHullShape_8cpp</filename>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MultiSphereConvexHullShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/d41/MultiSphereConvexHullShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::MultiSphereConvexHullShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="typedef">
      <type>MultiSphereConvexHullShape</type>
      <name>MultiSphereShape</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a64de1d508ad60e554847a3dc34a7732e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MultiSphereShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/d22/MultiSphereShape_8hpp</filename>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Node.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/d73/Node_8cpp</filename>
    <includes id="d7/dc6/Node_8hpp" name="Node.hpp" local="yes" imported="no">dart/dynamics/Node.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>REPORT_INVALID_NODE</name>
      <anchorfile>dc/d73/Node_8cpp.html</anchorfile>
      <anchor>aa27ba2849f2c09b4895d72da2c8f75f1</anchor>
      <arglist>(func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PlanarJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d5/d9e/PlanarJoint_8cpp</filename>
    <includes id="df/ded/PlanarJoint_8hpp" name="PlanarJoint.hpp" local="yes" imported="no">dart/dynamics/PlanarJoint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlanarJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/ded/PlanarJoint_8hpp</filename>
    <includes id="dd/d80/PlanarJointAspect_8hpp" name="PlanarJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/PlanarJointAspect.hpp</includes>
    <class kind="class">dart::dynamics::PlanarJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlaneShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/d48/PlaneShape_8cpp</filename>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlaneShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/de1/PlaneShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::PlaneShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PointMass.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d03/PointMass_8cpp</filename>
    <includes id="d4/dd0/PointMass_8hpp" name="PointMass.hpp" local="yes" imported="no">dart/dynamics/PointMass.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RETURN_FALSE_IF_OTHER_IS_EQUAL</name>
      <anchorfile>de/d03/PointMass_8cpp.html</anchorfile>
      <anchor>a9483e7f2a10f763e8767212740d4050f</anchor>
      <arglist>(X)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PointMass.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/dd0/PointMass_8hpp</filename>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <class kind="class">dart::dynamics::PointMass</class>
    <class kind="struct">dart::dynamics::PointMass::State</class>
    <class kind="struct">dart::dynamics::PointMass::Properties</class>
    <class kind="class">dart::dynamics::PointMassNotifier</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PrismaticJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>dd/d1b/PrismaticJoint_8cpp</filename>
    <includes id="de/d07/PrismaticJoint_8hpp" name="PrismaticJoint.hpp" local="yes" imported="no">dart/dynamics/PrismaticJoint.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PrismaticJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d07/PrismaticJoint_8hpp</filename>
    <includes id="d2/dad/PrismaticJointAspect_8hpp" name="PrismaticJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/PrismaticJointAspect.hpp</includes>
    <class kind="class">dart::dynamics::PrismaticJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ReferentialSkeleton.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>db/d2f/ReferentialSkeleton_8cpp</filename>
    <includes id="db/d02/ReferentialSkeleton_8hpp" name="ReferentialSkeleton.hpp" local="yes" imported="no">dart/dynamics/ReferentialSkeleton.hpp</includes>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static std::vector&lt; T2 &gt; &amp;</type>
      <name>convertVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a44efb6e764576cd42a718f6c8efe23c7</anchor>
      <arglist>(const std::vector&lt; T1 &gt; &amp;t1_vec, std::vector&lt; T2 &gt; &amp;t2_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acdc21b49ade69175e14e82a9d8c37634</anchor>
      <arglist>(const ReferentialSkeleton *, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a11d89a5d479b439acd934b0c09f58f95</anchor>
      <arglist>(JacobianType &amp;_J, const ReferentialSkeleton *_refSkel, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeafbd1f0646cf8b8653313ffad705725</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6bc0da146d655196db0cce75525acadb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae51822c055651adf97a8dbbc51267d0f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2d6232c4b019551651cb66cad69192cb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a569dd6c528bd7b77541790e117e67a9f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa1c701e2d1bf2a17376c59b040d8a911</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>accf08966c21ed703d6a978f2c58405c4</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5fcd78c264e693295537438a26ffc6f1</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>setMatrixFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a27632bed7583432d63949f1de70a1817</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>setVectorFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea4199124d21f60d4f6c1a0c3dfa409f</anchor>
      <arglist>(Eigen::VectorXd &amp;V, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0dafd76a5568876a927cfa778d8ea729</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a78f04f14872e7db37d45f20a0a471361</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_inCoordinatesOf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ReferentialSkeleton.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>db/d02/ReferentialSkeleton_8hpp</filename>
    <includes id="d0/d96/MetaSkeleton_8hpp" name="MetaSkeleton.hpp" local="yes" imported="no">dart/dynamics/MetaSkeleton.hpp</includes>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="class">dart::dynamics::ReferentialSkeleton</class>
    <class kind="struct">dart::dynamics::ReferentialSkeleton::IndexMap</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>RevoluteJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>db/da2/RevoluteJoint_8cpp</filename>
    <includes id="d0/ded/RevoluteJoint_8hpp" name="RevoluteJoint.hpp" local="yes" imported="no">dart/dynamics/RevoluteJoint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>RevoluteJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/ded/RevoluteJoint_8hpp</filename>
    <includes id="d4/d97/RevoluteJointAspect_8hpp" name="RevoluteJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/RevoluteJointAspect.hpp</includes>
    <class kind="class">dart::dynamics::RevoluteJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ScrewJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/de5/ScrewJoint_8cpp</filename>
    <includes id="d1/dca/ScrewJoint_8hpp" name="ScrewJoint.hpp" local="yes" imported="no">dart/dynamics/ScrewJoint.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ScrewJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/dca/ScrewJoint_8hpp</filename>
    <includes id="d0/d6d/ScrewJointAspect_8hpp" name="ScrewJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/ScrewJointAspect.hpp</includes>
    <class kind="class">dart::dynamics::ScrewJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Shape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/dbd/Shape_8cpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PRIMITIVE_MAGIC_NUMBER</name>
      <anchorfile>d6/dbd/Shape_8cpp.html</anchorfile>
      <anchor>acbc824e22045a51d87e7d4678e0f7eb1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShapeFrame.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d7/d5e/ShapeFrame_8cpp</filename>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeFrame.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>db/dd7/ShapeFrame_8hpp</filename>
    <includes id="d8/d84/Signal_8hpp" name="Signal.hpp" local="yes" imported="no">dart/common/Signal.hpp</includes>
    <includes id="d7/d2a/AspectWithVersion_8hpp" name="AspectWithVersion.hpp" local="yes" imported="no">dart/common/AspectWithVersion.hpp</includes>
    <includes id="da/dfe/SpecializedForAspect_8hpp" name="SpecializedForAspect.hpp" local="yes" imported="no">dart/common/SpecializedForAspect.hpp</includes>
    <includes id="d6/d97/FixedFrame_8hpp" name="FixedFrame.hpp" local="yes" imported="no">dart/dynamics/FixedFrame.hpp</includes>
    <includes id="d3/d00/TemplatedJacobianNode_8hpp" name="TemplatedJacobianNode.hpp" local="yes" imported="no">dart/dynamics/TemplatedJacobianNode.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d2/d45/ShapeFrameAspect_8hpp" name="ShapeFrameAspect.hpp" local="yes" imported="no">dart/dynamics/detail/ShapeFrameAspect.hpp</includes>
    <class kind="class">dart::dynamics::VisualAspect</class>
    <class kind="class">dart::dynamics::CollisionAspect</class>
    <class kind="class">dart::dynamics::DynamicsAspect</class>
    <class kind="class">dart::dynamics::ShapeFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeNode.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/df4/dynamics_2ShapeNode_8cpp</filename>
    <includes id="db/de3/dynamics_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/ShapeNode.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d5/d55/gui_2osg_2render_2ShapeNode_8cpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <includes id="dc/d9b/ShapeFrameNode_8hpp" name="ShapeFrameNode.hpp" local="yes" imported="no">dart/gui/osg/ShapeFrameNode.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>SharedLibraryIkFast.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/de2/SharedLibraryIkFast_8cpp</filename>
    <includes id="da/d1d/SharedLibraryIkFast_8hpp" name="SharedLibraryIkFast.hpp" local="yes" imported="no">dart/dynamics/SharedLibraryIkFast.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d4/da5/SharedLibrary_8hpp" name="SharedLibrary.hpp" local="yes" imported="no">dart/common/SharedLibrary.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SharedLibraryIkFast.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>da/d1d/SharedLibraryIkFast_8hpp</filename>
    <includes id="d4/da5/SharedLibrary_8hpp" name="SharedLibrary.hpp" local="yes" imported="no">dart/common/SharedLibrary.hpp</includes>
    <includes id="d4/d06/IkFast_8hpp" name="IkFast.hpp" local="yes" imported="no">dart/dynamics/IkFast.hpp</includes>
    <class kind="class">dart::dynamics::SharedLibraryIkFast</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleFrame.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d4/d78/SimpleFrame_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleFrame.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/dd8/SimpleFrame_8hpp</filename>
    <includes id="db/de3/dynamics_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/ShapeNode.hpp</includes>
    <class kind="class">dart::dynamics::SimpleFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Skeleton.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d2/d7c/Skeleton_8cpp</filename>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="db/de3/dynamics_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/ShapeNode.hpp</includes>
    <includes id="d3/d78/EndEffector_8hpp" name="EndEffector.hpp" local="yes" imported="no">dart/dynamics/EndEffector.hpp</includes>
    <includes id="de/d6a/InverseKinematics_8hpp" name="InverseKinematics.hpp" local="yes" imported="no">dart/dynamics/InverseKinematics.hpp</includes>
    <includes id="d8/d1a/Marker_8hpp" name="Marker.hpp" local="yes" imported="no">dart/dynamics/Marker.hpp</includes>
    <includes id="d4/dd0/PointMass_8hpp" name="PointMass.hpp" local="yes" imported="no">dart/dynamics/PointMass.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_ALL_FLAGS</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>ab070056e0c123283bd2468fe2f4ccef2</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_FLAG</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>a55d0d715116e5d09c9a47c5bdb0a31b4</anchor>
      <arglist>(Y, X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ON_ALL_TREES</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>a942e04afdbc545b6dd31b615a1a137ed</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_CONFIG_VECTOR_SIZE</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>a2b375903609c12db04688fe4e78069e0</anchor>
      <arglist>(V)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN_IF_CONFIG_VECTOR_IS_INEQ</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>ac8b4a979428a234fb4aae5231ba6bd9c</anchor>
      <arglist>(V)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_CONFIG_VECTOR</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>a8636f17552d3c6c75c36d9e5a0fcab2d</anchor>
      <arglist>(V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllMemberObjectData</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a9e64ffbc1a2eb44b7c8d93442c36a9f6</anchor>
      <arglist>(Owner *owner, const std::vector&lt; Data &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Data &gt;</type>
      <name>getAllMemberObjectData</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a145658fee7245102b5af5579255b3157</anchor>
      <arglist>(const Owner *owner)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; const T * &gt; &amp;</type>
      <name>convertToConstPtrVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac87221859d0f539d865fc1966b22544e</anchor>
      <arglist>(const std::vector&lt; T * &gt; &amp;vec, std::vector&lt; const T * &gt; &amp;const_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>templatedGetIndexOf</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a92e34d13e871ed57f7010ba60acdcb14</anchor>
      <arglist>(const Skeleton *_skel, const ObjectT *_obj, const std::string &amp;_type, bool _warning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa8651d00389646e874adaec94a4bcfa3</anchor>
      <arglist>(const Skeleton *_skeleton, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4306bf824fa8f4696a92ab1558e5a70c</anchor>
      <arglist>(JacobianType &amp;_J, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a277114afe56c75b8e5ce038a9941ba64</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a626a8cc5b7d8a86110d1028b0c011c23</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a70da7968bce560d07638306d4dbb3b57</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6f759f85b89a1c6d56dcb2e3b55e34a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af1595ed12eebb5d91c5c2b1752a73589</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3a9685dc77f11303d4c82359bfb5c5ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a495dd6ef2917f7397cd606035aa181ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a07d54b76c16e3597a6424d7f8e9bab6a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveConstructBodyNodeTree</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a683db3338ffffeb0faba7e3c5d58274c</anchor>
      <arglist>(std::vector&lt; BodyNodeT * &gt; &amp;tree, BodyNodeT *_currentBodyNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeSupportPolygon</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a01cf4ba6e04c7ea69113aea67fb8038c</anchor>
      <arglist>(const Skeleton *skel, math::SupportPolygon &amp;polygon, math::SupportGeometry &amp;geometry, std::vector&lt; std::size_t &gt; &amp;ee_indices, Eigen::Vector3d &amp;axis1, Eigen::Vector3d &amp;axis2, Eigen::Vector2d &amp;centroid, std::size_t treeIndex)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7ca835d48302d7cd9875cf948d522174</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6afa2bc9b0d14e17b499feaed8712fa</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_inCoordinatesOf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftBodyNode.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d0/d22/SoftBodyNode_8cpp</filename>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d4/dd0/PointMass_8hpp" name="PointMass.hpp" local="yes" imported="no">dart/dynamics/PointMass.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::dynamics::detail</namespace>
  </compound>
  <compound kind="file">
    <name>SoftBodyNode.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d3/d5b/SoftBodyNode_8hpp</filename>
    <includes id="d3/d64/SoftBodyNodeAspect_8hpp" name="SoftBodyNodeAspect.hpp" local="yes" imported="no">dart/dynamics/detail/SoftBodyNodeAspect.hpp</includes>
    <class kind="class">dart::dynamics::SoftBodyNode</class>
    <class kind="class">dart::dynamics::SoftBodyNodeHelper</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SoftMeshShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d9/de2/SoftMeshShape_8cpp</filename>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d4/dd0/PointMass_8hpp" name="PointMass.hpp" local="yes" imported="no">dart/dynamics/PointMass.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SoftMeshShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d8d/SoftMeshShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::SoftMeshShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SphereShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>de/d9a/SphereShape_8cpp</filename>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SphereShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d1/dc2/SphereShape_8hpp</filename>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <class kind="class">dart::dynamics::SphereShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>df/d58/TranslationalJoint_8cpp</filename>
    <includes id="d9/d26/TranslationalJoint_8hpp" name="TranslationalJoint.hpp" local="yes" imported="no">dart/dynamics/TranslationalJoint.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d9/d26/TranslationalJoint_8hpp</filename>
    <includes id="df/d79/GenericJoint_8hpp" name="GenericJoint.hpp" local="yes" imported="no">dart/dynamics/GenericJoint.hpp</includes>
    <class kind="class">dart::dynamics::TranslationalJoint</class>
    <class kind="struct">dart::dynamics::TranslationalJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint2D.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d5/db1/TranslationalJoint2D_8cpp</filename>
    <includes id="d6/d57/TranslationalJoint2D_8hpp" name="TranslationalJoint2D.hpp" local="yes" imported="no">dart/dynamics/TranslationalJoint2D.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint2D.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d6/d57/TranslationalJoint2D_8hpp</filename>
    <includes id="dd/d80/PlanarJointAspect_8hpp" name="PlanarJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/PlanarJointAspect.hpp</includes>
    <includes id="d8/d1c/TranslationalJoint2DAspect_8hpp" name="TranslationalJoint2DAspect.hpp" local="yes" imported="no">dart/dynamics/detail/TranslationalJoint2DAspect.hpp</includes>
    <class kind="class">dart::dynamics::TranslationalJoint2D</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>UniversalJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d9/dc8/UniversalJoint_8cpp</filename>
    <includes id="dc/d57/UniversalJoint_8hpp" name="UniversalJoint.hpp" local="yes" imported="no">dart/dynamics/UniversalJoint.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>UniversalJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/d57/UniversalJoint_8hpp</filename>
    <includes id="db/d38/UniversalJointAspect_8hpp" name="UniversalJointAspect.hpp" local="yes" imported="no">dart/dynamics/detail/UniversalJointAspect.hpp</includes>
    <class kind="class">dart::dynamics::UniversalJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>VoxelGridShape.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>db/ddc/VoxelGridShape_8cpp</filename>
    <includes id="dc/ddf/VoxelGridShape_8hpp" name="VoxelGridShape.hpp" local="yes" imported="no">dart/dynamics/VoxelGridShape.hpp</includes>
  </compound>
  <compound kind="file">
    <name>VoxelGridShape.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/ddf/VoxelGridShape_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>WeldJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d9/d32/WeldJoint_8cpp</filename>
    <includes id="dc/de8/WeldJoint_8hpp" name="WeldJoint.hpp" local="yes" imported="no">dart/dynamics/WeldJoint.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>WeldJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>dc/de8/WeldJoint_8hpp</filename>
    <includes id="d8/d9e/ZeroDofJoint_8hpp" name="ZeroDofJoint.hpp" local="yes" imported="no">dart/dynamics/ZeroDofJoint.hpp</includes>
    <class kind="class">dart::dynamics::WeldJoint</class>
    <class kind="struct">dart::dynamics::WeldJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ZeroDofJoint.cpp</name>
    <path>/dart/dynamics/</path>
    <filename>d9/dd9/ZeroDofJoint_8cpp</filename>
    <includes id="d8/d9e/ZeroDofJoint_8hpp" name="ZeroDofJoint.hpp" local="yes" imported="no">dart/dynamics/ZeroDofJoint.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ZeroDofJoint.hpp</name>
    <path>/dart/dynamics/</path>
    <filename>d8/d9e/ZeroDofJoint_8hpp</filename>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <class kind="class">dart::dynamics::ZeroDofJoint</class>
    <class kind="struct">dart::dynamics::ZeroDofJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>GLFuncs.cpp</name>
    <path>/dart/gui/</path>
    <filename>db/dd2/GLFuncs_8cpp</filename>
    <includes id="d7/d36/GLFuncs_8hpp" name="GLFuncs.hpp" local="yes" imported="no">dart/gui/GLFuncs.hpp</includes>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <includes id="dc/da2/LoadOpengl_8hpp" name="LoadOpengl.hpp" local="yes" imported="no">dart/gui/LoadOpengl.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <member kind="function">
      <type>void</type>
      <name>drawStringOnScreen</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aed01baef32d8b5e219071ebcdd9f8279</anchor>
      <arglist>(float _x, float _y, const std::string &amp;_s, bool _bigFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow3D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a6737073c5dc3bbeca4c8c3fa02bcf57d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_pt, const Eigen::Vector3d &amp;_dir, const double _length, const double _thickness, const double _arrowThickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow2D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a136a9ef3518f5e063d4b8f8b025723cc</anchor>
      <arglist>(const Eigen::Vector2d &amp;_pt, const Eigen::Vector2d &amp;_vec, double _thickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawProgressBar</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2813fb1495c904db58809b2b7741614d</anchor>
      <arglist>(int _currFrame, int _totalFrame)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GLFuncs.hpp</name>
    <path>/dart/gui/</path>
    <filename>d7/d36/GLFuncs_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GlutWindow.cpp</name>
    <path>/dart/gui/</path>
    <filename>d2/d3f/GlutWindow_8cpp</filename>
    <includes id="d3/d4b/GlutWindow_8hpp" name="GlutWindow.hpp" local="yes" imported="no">dart/gui/GlutWindow.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <includes id="d7/d36/GLFuncs_8hpp" name="GLFuncs.hpp" local="yes" imported="no">dart/gui/GLFuncs.hpp</includes>
    <includes id="de/db8/OpenGLRenderInterface_8hpp" name="OpenGLRenderInterface.hpp" local="yes" imported="no">dart/gui/OpenGLRenderInterface.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GlutWindow.hpp</name>
    <path>/dart/gui/</path>
    <filename>d3/d4b/GlutWindow_8hpp</filename>
    <includes id="dc/da2/LoadOpengl_8hpp" name="LoadOpengl.hpp" local="yes" imported="no">dart/gui/LoadOpengl.hpp</includes>
    <includes id="d0/dc8/RenderInterface_8hpp" name="RenderInterface.hpp" local="yes" imported="no">dart/gui/RenderInterface.hpp</includes>
    <class kind="class">dart::gui::GlutWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GraphWindow.cpp</name>
    <path>/dart/gui/</path>
    <filename>de/d3b/GraphWindow_8cpp</filename>
    <includes id="d0/d45/GraphWindow_8hpp" name="GraphWindow.hpp" local="yes" imported="no">dart/gui/GraphWindow.hpp</includes>
    <includes id="d7/d36/GLFuncs_8hpp" name="GLFuncs.hpp" local="yes" imported="no">dart/gui/GLFuncs.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GraphWindow.hpp</name>
    <path>/dart/gui/</path>
    <filename>d0/d45/GraphWindow_8hpp</filename>
    <includes id="de/ddb/Win2D_8hpp" name="Win2D.hpp" local="yes" imported="no">dart/gui/Win2D.hpp</includes>
    <class kind="class">dart::gui::GraphWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>LoadGlut.hpp</name>
    <path>/dart/gui/</path>
    <filename>d5/d0f/LoadGlut_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>LoadOpengl.hpp</name>
    <path>/dart/gui/</path>
    <filename>dc/da2/LoadOpengl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MotionBlurSimWindow.cpp</name>
    <path>/dart/gui/</path>
    <filename>d7/d8b/MotionBlurSimWindow_8cpp</filename>
    <includes id="d1/d96/MotionBlurSimWindow_8hpp" name="MotionBlurSimWindow.hpp" local="yes" imported="no">dart/gui/MotionBlurSimWindow.hpp</includes>
    <includes id="d0/ddb/ConstraintSolver_8hpp" name="ConstraintSolver.hpp" local="yes" imported="no">dart/constraint/ConstraintSolver.hpp</includes>
    <includes id="d7/d36/GLFuncs_8hpp" name="GLFuncs.hpp" local="yes" imported="no">dart/gui/GLFuncs.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>MotionBlurSimWindow.hpp</name>
    <path>/dart/gui/</path>
    <filename>d1/d96/MotionBlurSimWindow_8hpp</filename>
    <includes id="de/d15/SimWindow_8hpp" name="SimWindow.hpp" local="yes" imported="no">dart/gui/SimWindow.hpp</includes>
    <class kind="class">dart::gui::MotionBlurSimWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>OpenGLRenderInterface.cpp</name>
    <path>/dart/gui/</path>
    <filename>d1/d1c/OpenGLRenderInterface_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="db/de3/dynamics_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/ShapeNode.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="d4/d17/LineSegmentShape_8hpp" name="LineSegmentShape.hpp" local="yes" imported="no">dart/dynamics/LineSegmentShape.hpp</includes>
    <includes id="dc/da2/LoadOpengl_8hpp" name="LoadOpengl.hpp" local="yes" imported="no">dart/gui/LoadOpengl.hpp</includes>
    <includes id="de/db8/OpenGLRenderInterface_8hpp" name="OpenGLRenderInterface.hpp" local="yes" imported="no">dart/gui/OpenGLRenderInterface.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <member kind="define">
      <type>#define</type>
      <name>QUAD_OBJ_INIT</name>
      <anchorfile>d1/d1c/OpenGLRenderInterface_8cpp.html</anchorfile>
      <anchor>ac0622674f5e3b0eb0bb851ca8d546b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initQuadObj</name>
      <anchorfile>d1/d1c/OpenGLRenderInterface_8cpp.html</anchorfile>
      <anchor>a1a38f46db4dfb742a0e7a1e348c2de17</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawOpenCylinderConnectingTwoSpheres</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a14f5a30b86b70102621c36eff99b818e</anchor>
      <arglist>(OpenGLRenderInterface *ri, const std::pair&lt; double, Eigen::Vector3d &gt; &amp;sphere0, const std::pair&lt; double, Eigen::Vector3d &gt; &amp;sphere1, int slices, int stacks)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawOpenDome</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a04f5f1da1e786a77c7f1b8a0c60d1fed</anchor>
      <arglist>(double radius, int slices, int stacks)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static GLUquadricObj *</type>
      <name>quadObj</name>
      <anchorfile>d1/d1c/OpenGLRenderInterface_8cpp.html</anchorfile>
      <anchor>a9c21aafe8a5cb6e9c2c39ee114289e9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenGLRenderInterface.hpp</name>
    <path>/dart/gui/</path>
    <filename>de/db8/OpenGLRenderInterface_8hpp</filename>
    <includes id="d0/dc8/RenderInterface_8hpp" name="RenderInterface.hpp" local="yes" imported="no">dart/gui/RenderInterface.hpp</includes>
    <includes id="dc/da2/LoadOpengl_8hpp" name="LoadOpengl.hpp" local="yes" imported="no">dart/gui/LoadOpengl.hpp</includes>
    <class kind="class">dart::gui::OpenGLRenderInterface</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>DefaultEventHandler.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>da/d7d/DefaultEventHandler_8cpp</filename>
    <includes id="d8/db1/DefaultEventHandler_8hpp" name="DefaultEventHandler.hpp" local="yes" imported="no">dart/gui/osg/DefaultEventHandler.hpp</includes>
    <includes id="d2/d28/MouseEventHandler_8hpp" name="MouseEventHandler.hpp" local="yes" imported="no">dart/gui/osg/MouseEventHandler.hpp</includes>
    <includes id="d3/db5/Viewer_8hpp" name="Viewer.hpp" local="yes" imported="no">dart/gui/osg/Viewer.hpp</includes>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <includes id="dc/d9b/ShapeFrameNode_8hpp" name="ShapeFrameNode.hpp" local="yes" imported="no">dart/gui/osg/ShapeFrameNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>wasActive</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a3556b9a259d7fbad5ac33e15ddbaef71</anchor>
      <arglist>(MouseButtonEvent event)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>assignEventToButtons</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a586d152f84b6682d19c0a33a99e2ed13</anchor>
      <arglist>(MouseButtonEvent(&amp;mLastButtonEvent)[NUM_MOUSE_BUTTONS], const ::osgGA::GUIEventAdapter &amp;ea)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultEventHandler.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d8/db1/DefaultEventHandler_8hpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d6/dd2/Observer_8hpp" name="Observer.hpp" local="yes" imported="no">dart/common/Observer.hpp</includes>
    <class kind="struct">dart::gui::osg::PickInfo</class>
    <class kind="class">dart::gui::osg::DefaultEventHandler</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MouseButton</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LEFT_MOUSE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1af88151c768cce5e2ffa541e4b1b86616</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RIGHT_MOUSE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1a4508d633ce42ad6118fb7679bae25789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MIDDLE_MOUSE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1a0f39746d3bea59e11b837ed6a6519084</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NUM_MOUSE_BUTTONS</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1a4c1a9f6cb2d7b7f6935026e3f440eabc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MouseButtonEvent</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_PUSH</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6acd9003cb66f1b671c8af7db399ad9634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_DRAG</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6a3abec4b6e6e2b4f2d0f4d0b44962f37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_RELEASE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6a5797265226f59048f46b8f0fa6e6486c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_NOTHING</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6afcabcdedb4f93e49840afab37e63566e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConstraintType</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNCONSTRAINED</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17a8a11232bac51e07d22936d3af03516a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LINE_CONSTRAINT</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17aab1d8a24cec7f4772ca7d6d068c00f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PLANE_CONSTRAINT</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17a11e4616fb92b01558aa2d544b4e9b4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CUSTOM_CONSTRAINT</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17a3d85d0730e442c3d97e91ea824709475</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NUM_CONSTRAINT_TYPES</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17adcaf62cbecb880e7d7edc76f3f66a194</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DragAndDrop.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d7/d4c/DragAndDrop_8cpp</filename>
    <includes id="d4/d5e/DragAndDrop_8hpp" name="DragAndDrop.hpp" local="yes" imported="no">dart/gui/osg/DragAndDrop.hpp</includes>
    <includes id="d8/db1/DefaultEventHandler_8hpp" name="DefaultEventHandler.hpp" local="yes" imported="no">dart/gui/osg/DefaultEventHandler.hpp</includes>
    <includes id="d3/db5/Viewer_8hpp" name="Viewer.hpp" local="yes" imported="no">dart/gui/osg/Viewer.hpp</includes>
    <includes id="de/d83/InteractiveFrame_8hpp" name="InteractiveFrame.hpp" local="yes" imported="no">dart/gui/osg/InteractiveFrame.hpp</includes>
    <includes id="d2/d28/MouseEventHandler_8hpp" name="MouseEventHandler.hpp" local="yes" imported="no">dart/gui/osg/MouseEventHandler.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <class kind="class">dart::gui::osg::InteractiveFrameMouseEvent</class>
    <class kind="class">dart::gui::osg::InteractiveToolDnD</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>DragAndDrop.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d4/d5e/DragAndDrop_8hpp</filename>
    <includes id="d3/dba/sub__ptr_8hpp" name="sub_ptr.hpp" local="yes" imported="no">dart/common/sub_ptr.hpp</includes>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d8/db1/DefaultEventHandler_8hpp" name="DefaultEventHandler.hpp" local="yes" imported="no">DefaultEventHandler.hpp</includes>
    <class kind="class">dart::gui::osg::DragAndDrop</class>
    <class kind="class">dart::gui::osg::SimpleFrameDnD</class>
    <class kind="class">dart::gui::osg::SimpleFrameShapeDnD</class>
    <class kind="class">dart::gui::osg::InteractiveFrameDnD</class>
    <class kind="class">dart::gui::osg::BodyNodeDnD</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>ImGuiHandler.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d7/d96/ImGuiHandler_8cpp</filename>
    <includes id="df/d13/ImGuiHandler_8hpp" name="ImGuiHandler.hpp" local="yes" imported="no">dart/gui/osg/ImGuiHandler.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/d12/ImGuiWidget_8hpp" name="ImGuiWidget.hpp" local="yes" imported="no">dart/gui/osg/ImGuiWidget.hpp</includes>
    <class kind="struct">dart::gui::osg::ImGuiNewFrameCallback</class>
    <class kind="struct">dart::gui::osg::ImGuiDrawCallback</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <member kind="define">
      <type>#define</type>
      <name>OFFSETOF</name>
      <anchorfile>d7/d96/ImGuiHandler_8cpp.html</anchorfile>
      <anchor>aaa4726ae33d556805a771475548e5671</anchor>
      <arglist>(TYPE, ELEMENT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ImGui_RenderDrawLists</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a030e354dcfccb6382e9653d68fc70575</anchor>
      <arglist>(ImDrawData *draw_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImGuiHandler.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>df/d13/ImGuiHandler_8hpp</filename>
    <class kind="class">dart::gui::osg::ImGuiHandler</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>ImGuiViewer.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>df/d9d/ImGuiViewer_8cpp</filename>
    <includes id="d9/de8/ImGuiViewer_8hpp" name="ImGuiViewer.hpp" local="yes" imported="no">dart/gui/osg/ImGuiViewer.hpp</includes>
    <includes id="d7/d12/ImGuiWidget_8hpp" name="ImGuiWidget.hpp" local="yes" imported="no">dart/gui/osg/ImGuiWidget.hpp</includes>
    <includes id="df/d13/ImGuiHandler_8hpp" name="ImGuiHandler.hpp" local="yes" imported="no">dart/gui/osg/ImGuiHandler.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>ImGuiViewer.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d9/de8/ImGuiViewer_8hpp</filename>
    <includes id="d3/db5/Viewer_8hpp" name="Viewer.hpp" local="yes" imported="no">dart/gui/osg/Viewer.hpp</includes>
    <class kind="class">dart::gui::osg::ImGuiViewer</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>ImGuiWidget.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d1/d8f/ImGuiWidget_8cpp</filename>
    <includes id="d7/d12/ImGuiWidget_8hpp" name="ImGuiWidget.hpp" local="yes" imported="no">dart/gui/osg/ImGuiWidget.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>ImGuiWidget.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d7/d12/ImGuiWidget_8hpp</filename>
    <includes id="d9/de8/ImGuiViewer_8hpp" name="ImGuiViewer.hpp" local="yes" imported="no">dart/gui/osg/ImGuiViewer.hpp</includes>
    <class kind="class">dart::gui::osg::ImGuiWidget</class>
    <class kind="class">dart::gui::osg::AboutWidget</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>InteractiveFrame.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d4/d50/InteractiveFrame_8cpp</filename>
    <includes id="de/d83/InteractiveFrame_8hpp" name="InteractiveFrame.hpp" local="yes" imported="no">dart/gui/osg/InteractiveFrame.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="d2/de6/ArrowShape_8hpp" name="ArrowShape.hpp" local="yes" imported="no">dart/dynamics/ArrowShape.hpp</includes>
    <includes id="d4/d17/LineSegmentShape_8hpp" name="LineSegmentShape.hpp" local="yes" imported="no">dart/dynamics/LineSegmentShape.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>InteractiveFrame.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>de/d83/InteractiveFrame_8hpp</filename>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::InteractiveTool</class>
    <class kind="class">dart::gui::osg::InteractiveFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; InteractiveFrame &gt;</type>
      <name>InteractiveFramePtr</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a0e2e2dfb72517d1a3aa51e2f7d4a4b5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseEventHandler.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d2/d28/MouseEventHandler_8hpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d6/dd2/Observer_8hpp" name="Observer.hpp" local="yes" imported="no">dart/common/Observer.hpp</includes>
    <includes id="d8/db1/DefaultEventHandler_8hpp" name="DefaultEventHandler.hpp" local="yes" imported="no">dart/gui/osg/DefaultEventHandler.hpp</includes>
    <class kind="class">dart::gui::osg::MouseEventHandler</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>BoxShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d1/d40/BoxShapeNode_8cpp</filename>
    <includes id="df/d91/BoxShapeNode_8hpp" name="BoxShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/BoxShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::BoxShapeGeode</class>
    <class kind="class">dart::gui::osg::render::BoxShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>BoxShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>df/d91/BoxShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::BoxShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>CapsuleShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d5/d6c/CapsuleShapeNode_8cpp</filename>
    <includes id="df/d3e/CapsuleShapeNode_8hpp" name="CapsuleShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/CapsuleShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::CapsuleShapeGeode</class>
    <class kind="class">dart::gui::osg::render::CapsuleShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>CapsuleShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>df/d3e/CapsuleShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::CapsuleShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>ConeShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>df/d24/ConeShapeNode_8cpp</filename>
    <includes id="d6/d9a/ConeShapeNode_8hpp" name="ConeShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ConeShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::ConeShapeGeode</class>
    <class kind="class">dart::gui::osg::render::ConeShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>ConeShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d6/d9a/ConeShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::ConeShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>CylinderShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d7/d15/CylinderShapeNode_8cpp</filename>
    <includes id="d3/ddd/CylinderShapeNode_8hpp" name="CylinderShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/CylinderShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::CylinderShapeGeode</class>
    <class kind="class">dart::gui::osg::render::CylinderShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>CylinderShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d3/ddd/CylinderShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::CylinderShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>EllipsoidShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d3/de1/EllipsoidShapeNode_8cpp</filename>
    <includes id="d8/dc7/EllipsoidShapeNode_8hpp" name="EllipsoidShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/EllipsoidShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::EllipsoidShapeGeode</class>
    <class kind="class">dart::gui::osg::render::EllipsoidShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
    <member kind="function">
      <type>double</type>
      <name>smallestComponent</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>a7922fd9dd179cc78e77e8e626205aeea</anchor>
      <arglist>(const Eigen::Vector3d &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EllipsoidShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d8/dc7/EllipsoidShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::EllipsoidShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>LineSegmentShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d3/dc8/LineSegmentShapeNode_8cpp</filename>
    <includes id="d9/da0/LineSegmentShapeNode_8hpp" name="LineSegmentShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/LineSegmentShapeNode.hpp</includes>
    <includes id="dc/d9b/ShapeFrameNode_8hpp" name="ShapeFrameNode.hpp" local="yes" imported="no">dart/gui/osg/ShapeFrameNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d4/d17/LineSegmentShape_8hpp" name="LineSegmentShape.hpp" local="yes" imported="no">dart/dynamics/LineSegmentShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::LineSegmentShapeGeode</class>
    <class kind="class">dart::gui::osg::render::LineSegmentShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>LineSegmentShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d9/da0/LineSegmentShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::LineSegmentShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>MeshShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d9/d27/MeshShapeNode_8cpp</filename>
    <includes id="d1/d5e/MeshShapeNode_8hpp" name="MeshShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/MeshShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <class kind="class">dart::gui::osg::render::osgAiNode</class>
    <class kind="class">dart::gui::osg::render::MeshShapeGeode</class>
    <class kind="class">dart::gui::osg::render::MeshShapeGeometry</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
    <member kind="define">
      <type>#define</type>
      <name>GET_TEXTURE_TYPE_AND_COUNT</name>
      <anchorfile>d9/d27/MeshShapeNode_8cpp.html</anchorfile>
      <anchor>a246c9d92daec7cbe75bfa9f213ce978e</anchor>
      <arglist>(MATERIAL, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>a14021ccf40cdcdcb610fe76a6d0942fd</anchor>
      <arglist>(std::ostream &amp;str, const aiColor4D &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSpecularSanity</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>aad3bfc925154d7978d5a74b3b5114137</anchor>
      <arglist>(const aiColor4D &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d1/d5e/MeshShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::MeshShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>MultiSphereShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>df/d1b/MultiSphereShapeNode_8cpp</filename>
    <includes id="d4/db6/MultiSphereShapeNode_8hpp" name="MultiSphereShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/MultiSphereShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::MultiSphereShapeGeode</class>
    <class kind="class">dart::gui::osg::render::MultiSphereShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>MultiSphereShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d4/db6/MultiSphereShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::MultiSphereShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>PlaneShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>dc/d1d/PlaneShapeNode_8cpp</filename>
    <includes id="d6/dff/PlaneShapeNode_8hpp" name="PlaneShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/PlaneShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::PlaneShapeGeode</class>
    <class kind="class">dart::gui::osg::render::PlaneShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>PlaneShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>d6/dff/PlaneShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::PlaneShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>SoftMeshShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>de/d68/SoftMeshShapeNode_8cpp</filename>
    <includes id="da/da0/SoftMeshShapeNode_8hpp" name="SoftMeshShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/SoftMeshShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="d4/dd0/PointMass_8hpp" name="PointMass.hpp" local="yes" imported="no">dart/dynamics/PointMass.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::SoftMeshShapeGeode</class>
    <class kind="class">dart::gui::osg::render::SoftMeshShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>normalFromVertex</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>a916393944fb4380018dfc0fa956eb320</anchor>
      <arglist>(const dart::dynamics::SoftBodyNode *bn, const Eigen::Vector3i &amp;face, std::size_t v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNormals</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>abca60ce1b7d29bd3975af4be2ed606b9</anchor>
      <arglist>(std::vector&lt; Eigen::Vector3d &gt; &amp;normals, const dart::dynamics::SoftBodyNode *bn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftMeshShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>da/da0/SoftMeshShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::SoftMeshShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>SphereShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>dc/d0c/SphereShapeNode_8cpp</filename>
    <includes id="de/d8f/SphereShapeNode_8hpp" name="SphereShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/SphereShapeNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <class kind="class">dart::gui::osg::render::SphereShapeGeode</class>
    <class kind="class">dart::gui::osg::render::SphereShapeDrawable</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>SphereShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>de/d8f/SphereShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::SphereShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>WarningShapeNode.cpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>df/da4/WarningShapeNode_8cpp</filename>
    <includes id="dc/d33/WarningShapeNode_8hpp" name="WarningShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/WarningShapeNode.hpp</includes>
    <includes id="dc/d9b/ShapeFrameNode_8hpp" name="ShapeFrameNode.hpp" local="yes" imported="no">dart/gui/osg/ShapeFrameNode.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>WarningShapeNode.hpp</name>
    <path>/dart/gui/osg/render/</path>
    <filename>dc/d33/WarningShapeNode_8hpp</filename>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <class kind="class">dart::gui::osg::render::WarningShapeNode</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>ShapeFrameNode.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d9/db9/ShapeFrameNode_8cpp</filename>
    <includes id="dc/d9b/ShapeFrameNode_8hpp" name="ShapeFrameNode.hpp" local="yes" imported="no">dart/gui/osg/ShapeFrameNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d5/d44/gui_2osg_2render_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ShapeNode.hpp</includes>
    <includes id="de/d8f/SphereShapeNode_8hpp" name="SphereShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/SphereShapeNode.hpp</includes>
    <includes id="df/d91/BoxShapeNode_8hpp" name="BoxShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/BoxShapeNode.hpp</includes>
    <includes id="d8/dc7/EllipsoidShapeNode_8hpp" name="EllipsoidShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/EllipsoidShapeNode.hpp</includes>
    <includes id="d3/ddd/CylinderShapeNode_8hpp" name="CylinderShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/CylinderShapeNode.hpp</includes>
    <includes id="df/d3e/CapsuleShapeNode_8hpp" name="CapsuleShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/CapsuleShapeNode.hpp</includes>
    <includes id="d6/d9a/ConeShapeNode_8hpp" name="ConeShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/ConeShapeNode.hpp</includes>
    <includes id="d6/dff/PlaneShapeNode_8hpp" name="PlaneShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/PlaneShapeNode.hpp</includes>
    <includes id="d4/db6/MultiSphereShapeNode_8hpp" name="MultiSphereShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/MultiSphereShapeNode.hpp</includes>
    <includes id="d1/d5e/MeshShapeNode_8hpp" name="MeshShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/MeshShapeNode.hpp</includes>
    <includes id="da/da0/SoftMeshShapeNode_8hpp" name="SoftMeshShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/SoftMeshShapeNode.hpp</includes>
    <includes id="d9/da0/LineSegmentShapeNode_8hpp" name="LineSegmentShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/LineSegmentShapeNode.hpp</includes>
    <includes id="dc/d33/WarningShapeNode_8hpp" name="WarningShapeNode.hpp" local="yes" imported="no">dart/gui/osg/render/WarningShapeNode.hpp</includes>
    <includes id="d3/dae/Frame_8hpp" name="Frame.hpp" local="yes" imported="no">dart/dynamics/Frame.hpp</includes>
    <includes id="db/dd7/ShapeFrame_8hpp" name="ShapeFrame.hpp" local="yes" imported="no">dart/dynamics/ShapeFrame.hpp</includes>
    <includes id="de/da6/Entity_8hpp" name="Entity.hpp" local="yes" imported="no">dart/dynamics/Entity.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="d4/d17/LineSegmentShape_8hpp" name="LineSegmentShape.hpp" local="yes" imported="no">dart/dynamics/LineSegmentShape.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>warnAboutUnsuccessfulCast</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a35ebeaf15370386db122fe395203f181</anchor>
      <arglist>(const std::string &amp;shapeType, const std::string &amp;entityName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShapeFrameNode.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>dc/d9b/ShapeFrameNode_8hpp</filename>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <class kind="class">dart::gui::osg::ShapeFrameNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::render</namespace>
  </compound>
  <compound kind="file">
    <name>SupportPolygonVisual.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>df/d89/SupportPolygonVisual_8cpp</filename>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="df/d79/SupportPolygonVisual_8hpp" name="SupportPolygonVisual.hpp" local="yes" imported="no">dart/gui/osg/SupportPolygonVisual.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>SupportPolygonVisual.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>df/d79/SupportPolygonVisual_8hpp</filename>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d3/db5/Viewer_8hpp" name="Viewer.hpp" local="yes" imported="no">dart/gui/osg/Viewer.hpp</includes>
    <includes id="dc/d9b/ShapeFrameNode_8hpp" name="ShapeFrameNode.hpp" local="yes" imported="no">dart/gui/osg/ShapeFrameNode.hpp</includes>
    <class kind="class">dart::gui::osg::SupportPolygonVisual</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>TrackballManipulator.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>de/d6e/TrackballManipulator_8cpp</filename>
    <includes id="d1/d98/TrackballManipulator_8hpp" name="TrackballManipulator.hpp" local="yes" imported="no">dart/gui/osg/TrackballManipulator.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>TrackballManipulator.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d1/d98/TrackballManipulator_8hpp</filename>
    <class kind="class">dart::gui::osg::TrackballManipulator</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_META_Object</name>
      <anchorfile>d1/d98/TrackballManipulator_8hpp.html</anchorfile>
      <anchor>af4b5195d34833aed7949e10072938fde</anchor>
      <arglist>(library, name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Utils.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d7/d09/Utils_8hpp</filename>
    <member kind="function">
      <type>::osg::Matrix</type>
      <name>eigToOsgMatrix</name>
      <anchorfile>d7/d09/Utils_8hpp.html</anchorfile>
      <anchor>ae2f3fcb20e0ba49c547a1a23ba41b8bf</anchor>
      <arglist>(const Eigen::Transform&lt; Scalar, 3, Eigen::Isometry &gt; &amp;tf)</arglist>
    </member>
    <member kind="function">
      <type>::osg::Matrix</type>
      <name>eigToOsgMatrix</name>
      <anchorfile>d7/d09/Utils_8hpp.html</anchorfile>
      <anchor>a21d2efa3b79955b2a03bd07f077af3c4</anchor>
      <arglist>(const Eigen::DenseBase&lt; Derived &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>::osg::Vec3d</type>
      <name>eigToOsgVec3</name>
      <anchorfile>d7/d09/Utils_8hpp.html</anchorfile>
      <anchor>ad35745dbe3239314cccb34ab0758c5a9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Derived &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>osgToEigVec3</name>
      <anchorfile>d7/d09/Utils_8hpp.html</anchorfile>
      <anchor>a1126d85cfbf372914c9642881f84a276</anchor>
      <arglist>(const ::osg::Vec3d &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>::osg::Vec4d</type>
      <name>eigToOsgVec4</name>
      <anchorfile>d7/d09/Utils_8hpp.html</anchorfile>
      <anchor>a8b8aa0cd22f15ee5121874e75cd80636</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Derived &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>osgToEigVec4</name>
      <anchorfile>d7/d09/Utils_8hpp.html</anchorfile>
      <anchor>a2bfe2e59c42c8f47d28e9379b743cca3</anchor>
      <arglist>(const ::osg::Vec4d &amp;vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Viewer.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d0/d5b/Viewer_8cpp</filename>
    <includes id="d3/db5/Viewer_8hpp" name="Viewer.hpp" local="yes" imported="no">dart/gui/osg/Viewer.hpp</includes>
    <includes id="d1/d98/TrackballManipulator_8hpp" name="TrackballManipulator.hpp" local="yes" imported="no">dart/gui/osg/TrackballManipulator.hpp</includes>
    <includes id="d8/db1/DefaultEventHandler_8hpp" name="DefaultEventHandler.hpp" local="yes" imported="no">dart/gui/osg/DefaultEventHandler.hpp</includes>
    <includes id="d4/d5e/DragAndDrop_8hpp" name="DragAndDrop.hpp" local="yes" imported="no">dart/gui/osg/DragAndDrop.hpp</includes>
    <includes id="d2/d1e/WorldNode_8hpp" name="WorldNode.hpp" local="yes" imported="no">dart/gui/osg/WorldNode.hpp</includes>
    <includes id="d7/d09/Utils_8hpp" name="Utils.hpp" local="yes" imported="no">dart/gui/osg/Utils.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <class kind="class">dart::gui::osg::SaveScreen</class>
    <class kind="class">dart::gui::osg::ViewerAttachmentCallback</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
    <namespace>dart::gui::osg::sfs_dnd</namespace>
    <member kind="typedef">
      <type>std::multimap&lt; dart::dynamics::Shape *, SimpleFrameShapeDnD * &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>d2/d41/namespacedart_1_1gui_1_1osg_1_1sfs__dnd.html</anchorfile>
      <anchor>a0b17718bdefa36a430f29160bad4a921</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static sfs_dnd::iterator</type>
      <name>getSimpleFrameShapeDnDFromMultimap</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5e83444b359d663f58e874fb5043ccf4</anchor>
      <arglist>(dart::dynamics::SimpleFrame *_frame, dart::dynamics::Shape *_shape, std::multimap&lt; dart::dynamics::Shape *, SimpleFrameShapeDnD * &gt; &amp;map)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Viewer.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d3/db5/Viewer_8hpp</filename>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <class kind="class">dart::gui::osg::ViewerAttachment</class>
    <class kind="class">dart::gui::osg::Viewer</class>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>WorldNode.cpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d2/d9f/WorldNode_8cpp</filename>
    <includes id="d2/d1e/WorldNode_8hpp" name="WorldNode.hpp" local="yes" imported="no">dart/gui/osg/WorldNode.hpp</includes>
    <includes id="dc/d9b/ShapeFrameNode_8hpp" name="ShapeFrameNode.hpp" local="yes" imported="no">dart/gui/osg/ShapeFrameNode.hpp</includes>
    <includes id="d9/de8/ImGuiViewer_8hpp" name="ImGuiViewer.hpp" local="yes" imported="no">dart/gui/osg/ImGuiViewer.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <class kind="class">dart::gui::osg::WorldNodeCallback</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>WorldNode.hpp</name>
    <path>/dart/gui/osg/</path>
    <filename>d2/d1e/WorldNode_8hpp</filename>
    <includes id="d3/db5/Viewer_8hpp" name="Viewer.hpp" local="yes" imported="no">dart/gui/osg/Viewer.hpp</includes>
    <class kind="class">dart::gui::osg::WorldNode</class>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::gui::osg</namespace>
  </compound>
  <compound kind="file">
    <name>RenderInterface.cpp</name>
    <path>/dart/gui/</path>
    <filename>d9/d2d/RenderInterface_8cpp</filename>
    <includes id="d0/dc8/RenderInterface_8hpp" name="RenderInterface.hpp" local="yes" imported="no">dart/gui/RenderInterface.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>RenderInterface.hpp</name>
    <path>/dart/gui/</path>
    <filename>d0/dc8/RenderInterface_8hpp</filename>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <class kind="class">dart::gui::RenderInterface</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <member kind="enumeration">
      <type></type>
      <name>DecoBufferType</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aaca7f10005100bc785533604dfb92f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Front</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aaca7f10005100bc785533604dfb92f94abac97679497a26e922c638dfc0bee86a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Back</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aaca7f10005100bc785533604dfb92f94ac5867ed1776b6aaa8a214faade7ee8e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoColorChannel</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_R</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a17b38b02dde4480232c823671c396311</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_G</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a73def8e8a11bc617efc735fccca88812</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_B</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a094774926a30e17215e50cf5c970444e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_A</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a3cf2bd455fdafbe9ffade2365e5add3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGB</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9aee20d2e084d90d389ced0e45ac8b1f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGBA</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a3b21deeaeee8633f9466242c06e8ebb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoDrawType</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_WireFrame</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684abfa790e50f15804a359c4bc157105d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_SolidPolygon</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684a5b3e01ab42241a0b9d4ffeef3ec21031</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_FrontPolygon</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684a72f83dc5b58233b658f89347404b20e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_BackPolygon</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684aa39a26f682602f0ed8dc26c3914618ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_Max</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684ac506dd2baa30b88396c90b985e561d1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimWindow.cpp</name>
    <path>/dart/gui/</path>
    <filename>d2/dc5/SimWindow_8cpp</filename>
    <includes id="de/d15/SimWindow_8hpp" name="SimWindow.hpp" local="yes" imported="no">dart/gui/SimWindow.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="d4/d17/LineSegmentShape_8hpp" name="LineSegmentShape.hpp" local="yes" imported="no">dart/dynamics/LineSegmentShape.hpp</includes>
    <includes id="d8/d1a/Marker_8hpp" name="Marker.hpp" local="yes" imported="no">dart/dynamics/Marker.hpp</includes>
    <includes id="d0/ddb/ConstraintSolver_8hpp" name="ConstraintSolver.hpp" local="yes" imported="no">dart/constraint/ConstraintSolver.hpp</includes>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <includes id="d7/d36/GLFuncs_8hpp" name="GLFuncs.hpp" local="yes" imported="no">dart/gui/GLFuncs.hpp</includes>
    <includes id="d0/d45/GraphWindow_8hpp" name="GraphWindow.hpp" local="yes" imported="no">dart/gui/GraphWindow.hpp</includes>
    <includes id="d4/d5e/FileInfoWorld_8hpp" name="FileInfoWorld.hpp" local="yes" imported="no">dart/utils/FileInfoWorld.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>SimWindow.hpp</name>
    <path>/dart/gui/</path>
    <filename>de/d15/SimWindow_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="dc/de0/Win3D_8hpp" name="Win3D.hpp" local="yes" imported="no">dart/gui/Win3D.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <class kind="class">dart::gui::SimWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>SoftSimWindow.cpp</name>
    <path>/dart/gui/</path>
    <filename>d1/d9b/SoftSimWindow_8cpp</filename>
    <includes id="dd/dd8/SoftSimWindow_8hpp" name="SoftSimWindow.hpp" local="yes" imported="no">dart/gui/SoftSimWindow.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>SoftSimWindow.hpp</name>
    <path>/dart/gui/</path>
    <filename>dd/dd8/SoftSimWindow_8hpp</filename>
    <includes id="de/d15/SimWindow_8hpp" name="SimWindow.hpp" local="yes" imported="no">dart/gui/SimWindow.hpp</includes>
    <class kind="class">dart::gui::SoftSimWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Trackball.cpp</name>
    <path>/dart/gui/</path>
    <filename>dd/d7f/Trackball_8cpp</filename>
    <includes id="d8/d92/Trackball_8hpp" name="Trackball.hpp" local="yes" imported="no">dart/gui/Trackball.hpp</includes>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <includes id="dc/da2/LoadOpengl_8hpp" name="LoadOpengl.hpp" local="yes" imported="no">dart/gui/LoadOpengl.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Trackball.hpp</name>
    <path>/dart/gui/</path>
    <filename>d8/d92/Trackball_8hpp</filename>
    <class kind="class">dart::gui::Trackball</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win2D.cpp</name>
    <path>/dart/gui/</path>
    <filename>d4/d12/Win2D_8cpp</filename>
    <includes id="de/ddb/Win2D_8hpp" name="Win2D.hpp" local="yes" imported="no">dart/gui/Win2D.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win2D.hpp</name>
    <path>/dart/gui/</path>
    <filename>de/ddb/Win2D_8hpp</filename>
    <includes id="d3/d4b/GlutWindow_8hpp" name="GlutWindow.hpp" local="yes" imported="no">dart/gui/GlutWindow.hpp</includes>
    <class kind="class">dart::gui::Win2D</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win3D.cpp</name>
    <path>/dart/gui/</path>
    <filename>d0/d46/Win3D_8cpp</filename>
    <includes id="dc/de0/Win3D_8hpp" name="Win3D.hpp" local="yes" imported="no">dart/gui/Win3D.hpp</includes>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <includes id="d5/d0f/LoadGlut_8hpp" name="LoadGlut.hpp" local="yes" imported="no">dart/gui/LoadGlut.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <member kind="function">
      <type>void</type>
      <name>accFrustum</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a078416ecc6eaca1ef95264f1b20ddb19</anchor>
      <arglist>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accPerspective</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2c941c1d02febca8d5f9828e0eb7887d</anchor>
      <arglist>(GLdouble fovy, GLdouble aspect, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Win3D.hpp</name>
    <path>/dart/gui/</path>
    <filename>dc/de0/Win3D_8hpp</filename>
    <includes id="d3/d4b/GlutWindow_8hpp" name="GlutWindow.hpp" local="yes" imported="no">dart/gui/GlutWindow.hpp</includes>
    <includes id="d8/d92/Trackball_8hpp" name="Trackball.hpp" local="yes" imported="no">dart/gui/Trackball.hpp</includes>
    <class kind="class">dart::gui::Win3D</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>EulerIntegrator.cpp</name>
    <path>/dart/integration/</path>
    <filename>d3/dc3/EulerIntegrator_8cpp</filename>
    <includes id="db/d08/EulerIntegrator_8hpp" name="EulerIntegrator.hpp" local="yes" imported="no">dart/integration/EulerIntegrator.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>EulerIntegrator.hpp</name>
    <path>/dart/integration/</path>
    <filename>db/d08/EulerIntegrator_8hpp</filename>
    <includes id="df/dac/Integrator_8hpp" name="Integrator.hpp" local="yes" imported="no">dart/integration/Integrator.hpp</includes>
    <class kind="class">dart::integration::EulerIntegrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>Integrator.cpp</name>
    <path>/dart/integration/</path>
    <filename>d6/d08/Integrator_8cpp</filename>
    <includes id="df/dac/Integrator_8hpp" name="Integrator.hpp" local="yes" imported="no">dart/integration/Integrator.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>Integrator.hpp</name>
    <path>/dart/integration/</path>
    <filename>df/dac/Integrator_8hpp</filename>
    <class kind="class">dart::integration::IntegrableSystem</class>
    <class kind="class">dart::integration::Integrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>RK4Integrator.cpp</name>
    <path>/dart/integration/</path>
    <filename>dd/d3a/RK4Integrator_8cpp</filename>
    <includes id="d4/d9d/RK4Integrator_8hpp" name="RK4Integrator.hpp" local="yes" imported="no">dart/integration/RK4Integrator.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>RK4Integrator.hpp</name>
    <path>/dart/integration/</path>
    <filename>d4/d9d/RK4Integrator_8hpp</filename>
    <includes id="df/dac/Integrator_8hpp" name="Integrator.hpp" local="yes" imported="no">dart/integration/Integrator.hpp</includes>
    <class kind="class">dart::integration::RK4Integrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>SemiImplicitEulerIntegrator.cpp</name>
    <path>/dart/integration/</path>
    <filename>d5/dd8/SemiImplicitEulerIntegrator_8cpp</filename>
    <includes id="db/d93/SemiImplicitEulerIntegrator_8hpp" name="SemiImplicitEulerIntegrator.hpp" local="yes" imported="no">dart/integration/SemiImplicitEulerIntegrator.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>SemiImplicitEulerIntegrator.hpp</name>
    <path>/dart/integration/</path>
    <filename>db/d93/SemiImplicitEulerIntegrator_8hpp</filename>
    <includes id="df/dac/Integrator_8hpp" name="Integrator.hpp" local="yes" imported="no">dart/integration/Integrator.hpp</includes>
    <class kind="class">dart::integration::SemiImplicitEulerIntegrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>Lemke.cpp</name>
    <path>/dart/lcpsolver/</path>
    <filename>da/d13/Lemke_8cpp</filename>
    <includes id="d1/d53/Lemke_8hpp" name="Lemke.hpp" local="yes" imported="no">dart/lcpsolver/Lemke.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
    <member kind="function">
      <type>int</type>
      <name>Lemke</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>ab1b433bd881c42c773799c25053272bd</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_q, Eigen::VectorXd *_z)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>a9762b4ca0686aa114c73d7e8f951e6e1</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_z, const Eigen::VectorXd &amp;_q)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Lemke.hpp</name>
    <path>/dart/lcpsolver/</path>
    <filename>d1/d53/Lemke_8hpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
  </compound>
  <compound kind="file">
    <name>ODELCPSolver.cpp</name>
    <path>/dart/lcpsolver/</path>
    <filename>da/d53/ODELCPSolver_8cpp</filename>
    <includes id="d3/d7c/ODELCPSolver_8hpp" name="ODELCPSolver.hpp" local="yes" imported="no">dart/lcpsolver/ODELCPSolver.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <includes id="d1/d53/Lemke_8hpp" name="Lemke.hpp" local="yes" imported="no">dart/lcpsolver/Lemke.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
  </compound>
  <compound kind="file">
    <name>ODELCPSolver.hpp</name>
    <path>/dart/lcpsolver/</path>
    <filename>d3/d7c/ODELCPSolver_8hpp</filename>
    <class kind="class">dart::lcpsolver::ODELCPSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
  </compound>
  <compound kind="file">
    <name>ConfigurationSpace.cpp</name>
    <path>/dart/math/</path>
    <filename>d7/d25/ConfigurationSpace_8cpp</filename>
    <includes id="d9/d3d/ConfigurationSpace_8hpp" name="ConfigurationSpace.hpp" local="yes" imported="no">dart/math/ConfigurationSpace.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
  </compound>
  <compound kind="file">
    <name>ConfigurationSpace.hpp</name>
    <path>/dart/math/</path>
    <filename>d9/d3d/ConfigurationSpace_8hpp</filename>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="db/db2/detail_2ConfigurationSpace_8hpp" name="ConfigurationSpace.hpp" local="yes" imported="no">dart/math/detail/ConfigurationSpace.hpp</includes>
    <class kind="struct">dart::math::RealVectorSpace</class>
    <class kind="struct">dart::math::SO3Space</class>
    <class kind="struct">dart::math::SE3Space</class>
    <class kind="struct">dart::math::MapsToManifoldPoint</class>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 0u &gt;</type>
      <name>NullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2e6eb0a4590dec732af1b119739d5189</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 1u &gt;</type>
      <name>R1Space</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a98800600df3afbffb81dc27146c76acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 2u &gt;</type>
      <name>R2Space</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3ffd01ccc936845571cb1c61bb20c67e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 3u &gt;</type>
      <name>R3Space</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8e29b2372aaaa279ee9041a06354ce57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Matrix</type>
      <name>inverse</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a02f7adb2b0f73f673f9aed01c1b92479</anchor>
      <arglist>(const typename SpaceT::Matrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::EuclideanPoint</type>
      <name>toEuclideanPoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a23db23495ff34a91d90a13cbe148292e</anchor>
      <arglist>(const typename SpaceT::Point &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Point</type>
      <name>toManifoldPoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a558674cbdad333f45b95d75988c0b906</anchor>
      <arglist>(const typename SpaceT::EuclideanPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Point</type>
      <name>integratePosition</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adf6a062113a89fd5a22feee0423d74a6</anchor>
      <arglist>(const typename SpaceT::Point &amp;pos, const typename SpaceT::Vector &amp;vel, double dt)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Vector</type>
      <name>integrateVelocity</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8394dd01bb256146e982a3094bd4ab6d</anchor>
      <arglist>(const typename SpaceT::Vector &amp;vel, const typename SpaceT::Vector &amp;acc, double dt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConfigurationSpace.hpp</name>
    <path>/dart/math/detail/</path>
    <filename>db/db2/detail_2ConfigurationSpace_8hpp</filename>
    <includes id="d9/d3d/ConfigurationSpace_8hpp" name="ConfigurationSpace.hpp" local="yes" imported="no">dart/math/ConfigurationSpace.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <class kind="struct">dart::math::detail::Range</class>
    <class kind="struct">dart::math::detail::inverseImpl</class>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <namespace>dart::math::detail</namespace>
  </compound>
  <compound kind="file">
    <name>Constants.hpp</name>
    <path>/dart/math/</path>
    <filename>d6/de9/Constants_8hpp</filename>
    <class kind="struct">dart::math::constants</class>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="typedef">
      <type>constants&lt; float &gt;</type>
      <name>constantsf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1027d05442d4a125f9433130258395a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constants&lt; double &gt;</type>
      <name>constantsd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af7b4c9122f7a9882c85d4613109633dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Geometry.cpp</name>
    <path>/dart/math/</path>
    <filename>d7/def/Geometry_8cpp</filename>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <class kind="struct">dart::math::HullAngle</class>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_EPSILON</name>
      <anchorfile>d7/def/Geometry_8cpp.html</anchorfile>
      <anchor>a965dd71b99bacf40a89e0acf48b2e6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSILON_EXPMAP_THETA</name>
      <anchorfile>d7/def/Geometry_8cpp.html</anchorfile>
      <anchor>a7d9d043fb287129f0d6c5087b93a3228</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Eigen::Quaterniond</type>
      <name>expToQuat</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af7d1a1edd8644935ddf7d40e7c39139a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>quatToExp</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a141d99b2112e9037173869b04db2f2f1</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2cc210efedf46185991c7d7a48041302</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a53e69e887f81c59d26779a25fbe6ea7d</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad2b40ea6672026a84497098ac5cb1397</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXZY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aba375c47a8f4c23887c774f919414394</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYZX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac6b7603b1f1331d7325d4f839d5b9f94</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZXY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a300bb57a417ec13fea861862d5fc515c</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYXZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ab1e6567ea0da8425074d0aeaf33eccf4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abb994d2ee6ea73bb6cbe905cd1315b84</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, int _el)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatSecondDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a84d204205a4aab3f25b2d6eec85c43d7</anchor>
      <arglist>(const Eigen::Quaterniond &amp;, int _el1, int _el2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7ea25a547fac6b565c3648d4ff166015</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, const Eigen::Vector3d &amp;_pt)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abe4adfd592c2583df0a781858b2fb95e</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, double _x, double _y, double _z)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapRot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af297b066593714b7d7006d531c2328ac</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a412fc66129eb82f75db6583bdf92bee0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a522cc1f979c523b9cc941314ef12617a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, const Eigen::Vector3d &amp;_qdot)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a34115fbab9140a00f3b487988af277a2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, int _qi)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a91021e58843804e7ca334848ff9f0323</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ace4da4be316f9118106f4aacfe8f64f9</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae84a491564ace03bafae3c722aa34625</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix6d</type>
      <name>getAdTMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a19a4d72416c58021ea930b2abfd43bd8</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a94ee36ccaecf43cd56f76436a162c739</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad93b6aeae970e23802f8414fd9e6a04a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_w)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a74e4177978a837724e6e7a0cb245dbf2</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9101a1475e595473ff3f10a4327c8298</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvRLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7e6d60f0c41f72b7882c0d5284dad923</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>ad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adff5879e39b18ee5960c5a08d5df2e4d</anchor>
      <arglist>(const Eigen::Vector6d &amp;_X, const Eigen::Vector6d &amp;_Y)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adeb4234a66c0ed1421dcd29f93019ec6</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9854a5049755e2a650b3991b6d3f5e7a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af711369d6350070cfa4c77755a2ab7cd</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a20617208f9bbe866879599ec6dd9f786</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b38698e6201d7b0e4aaf2e6b911ca11</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a802f1b38213ae193e12a240bc62a9185</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a96f028b28d5e6a7b8cc5655b68a06742</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a39ba5e09917d711d74c2f8d0ec0479a7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acef3b0a3efc7e66ec7d15ca3bdd32fb2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa10f381ffdb7c81e65a9b774a745718e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae44c2d83cb238e105321c14fc7055ecf</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3449f3b223c59177be45caff72055d9e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7666b356f04c3c164d5163941c9163d3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a264c003134882cd1dfbd24b555e73ee3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a33ad7519de3e0ea3ff49070cb670a191</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a941645eb9bd1432d03c8c1c895f61f22</anchor>
      <arglist>(const Eigen::Vector6d &amp;_S)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81ae793a0afa85624599fdde127531f2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_s)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a04344c560b26fbaa456dbb0ed4a09c21</anchor>
      <arglist>(const Eigen::Vector6d &amp;_s, const Eigen::Vector6d &amp;_t)</arglist>
    </member>
    <member kind="function">
      <type>Inertia</type>
      <name>transformInertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a729c89efdeb2557f1106bf89275e5b2a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Inertia &amp;_I)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>parallelAxisTheorem</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81735893e4f6d1cf950a0aa181db367e</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_original, const Eigen::Vector3d &amp;_comShift, double _mass)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyRotation</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a251a976dbb610f07df4ef5b3efba4f00</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyTransform</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a87b8aed61a081a0130e6e24759af13e4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>fromSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a60ed1d87345d9718ff7f9a6cb337eac4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>makeSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc4b6c2f5202c6ee0d82ff84812dae6b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeRotation</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a41a8812fdab8b93d6f56ed9aa71f232a</anchor>
      <arglist>(const Eigen::Vector3d &amp;axis, AxisType axisType=AxisType::AXIS_X)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>computeTransform</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a807b856a5b9a535010ab036c90803aa2</anchor>
      <arglist>(const Eigen::Vector3d &amp;axis, const Eigen::Vector3d &amp;translation, AxisType axisType=AxisType::AXIS_X)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getFrameOriginAxisZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f897dd4d484e992da657fcbabb0f919</anchor>
      <arglist>(const Eigen::Vector3d &amp;_origin, const Eigen::Vector3d &amp;_axisZ)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a29ae6cceff278dcf8050c1d898d74ce6</anchor>
      <arglist>(const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a088fa4b195a93e9590f778ddbff43799</anchor>
      <arglist>(std::vector&lt; std::size_t &gt; &amp;_originalIndices, const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>HullAngleComparison</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae49e071956594129e38963ee5658b352</anchor>
      <arglist>(const HullAngle &amp;a, const HullAngle &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa51acb5d0b72768b14d41d537f7491ce</anchor>
      <arglist>(const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeCentroidOfHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7428be3f6b672574f5d88ab0b151679e</anchor>
      <arglist>(const SupportPolygon &amp;_convexHull)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLeftTurn</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aedf772d885972a89cdfb838ba4ed7d30</anchor>
      <arglist>(const Eigen::Vector2d &amp;p1, const Eigen::Vector2d &amp;p2, const Eigen::Vector2d &amp;p3)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa2833b1c9065038e031d234d7cd5ecfc</anchor>
      <arglist>(std::vector&lt; std::size_t &gt; &amp;_originalIndices, const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>IntersectionResult</type>
      <name>computeIntersection</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a077c96b2a7fd326681e31d5d947d4108</anchor>
      <arglist>(Eigen::Vector2d &amp;_intersectionPoint, const Eigen::Vector2d &amp;a1, const Eigen::Vector2d &amp;a2, const Eigen::Vector2d &amp;b1, const Eigen::Vector2d &amp;b2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cross</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a95a0f98be589c708f9506e634eb5df77</anchor>
      <arglist>(const Eigen::Vector2d &amp;_v1, const Eigen::Vector2d &amp;_v2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInsideSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a797012fe8e744db0d506962babc459e9</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support, bool _includeEdge=true)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnLineSegment</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a691f20bdcabbd8698298956308e2d161</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const Eigen::Vector2d &amp;_s1, const Eigen::Vector2d &amp;_s2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae496bd6bc2539f04e3d896beea4ca076</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4a2a8bb71cecea244a69dc3f823bdf79</anchor>
      <arglist>(std::size_t &amp;_index1, std::size_t &amp;_index2, const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Geometry.hpp</name>
    <path>/dart/math/</path>
    <filename>de/d49/Geometry_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <class kind="class">dart::math::BoundingBox</class>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>SupportGeometry</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae600b44172da50dfaf79a6bb02493e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::aligned_vector&lt; Eigen::Vector2d &gt;</type>
      <name>SupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>afe00691d18a940ea75ac1d1693b57ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisType</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_X</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204a6a2125f0004a8b2dcbb449c9640762de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Y</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204a593bd8d4d09fb8d2d46d30c3a93ef32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Z</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204ae68d9690f23ba6033eaa9225b15e909c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IntersectionResult</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INTERSECTING</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927a092c53833ef135d6d824e61467ac63cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PARALLEL</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927ae0bd9f4a8d9f0863eafccd58ed9dd75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BEYOND_ENDPOINTS</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927ad29cba0b7fcfeffda98892d6ac27fa83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adcd54cb5639a2593346270b2c53db123</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabbaeab2e1963d804100e12d8074c721</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b9e504bac01072086e0c5b193977471</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRInvJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8f0824887c01f56cb9fcaa1c378c6e97</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>adJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad451eb0dab3653087e5c4a2796142fcd</anchor>
      <arglist>(const Eigen::Vector6d &amp;_V, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0a8894d3fc25851007d2e017e72bbbb7</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a131e114a83953cf9d09ef1f2023b3a72</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wrapToPi</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4e75a92567b885d3c77c8f80643a880a</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabe11a905af9d37de0be1d8ef240e5f9</anchor>
      <arglist>(const Eigen::JacobiSVD&lt; MatrixType &gt; &amp;_SVD, ReturnType &amp;_NS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abdcb569c37a9d5877249411ec09b8975</anchor>
      <arglist>(const MatrixType &amp;_M, ReturnType &amp;_NS)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Helpers.hpp</name>
    <path>/dart/math/</path>
    <filename>d7/dd7/Helpers_8hpp</filename>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <namespace>dart::math::suffixes</namespace>
    <namespace>dart::Color</namespace>
    <member kind="function">
      <type>constexpr T</type>
      <name>toRadian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa23cf0ab5553dad2fc716d82382b13e3</anchor>
      <arglist>(const T &amp;degree)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>toDegree</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2d8342225136c6cc6ab19eed0210ffd3</anchor>
      <arglist>(const T &amp;radian)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix2d</type>
      <name>CR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a016887264359b2adec638f50b2f521d9</anchor>
      <arglist>((Eigen::Matrix2d()&lt;&lt; 0.0,-1.0, 1.0, 0.0).finished())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delta</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae6aede87f5eb5a1e43f0c8421dc237fa</anchor>
      <arglist>(int _i, int _j)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9eef8bbcf51caedb89883c2379e3f1bd</anchor>
      <arglist>(T x, std::false_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac8163ea1c30b0bea0518b73f3a64bad1</anchor>
      <arglist>(T x, std::true_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc6974b0afdc5c38c0d708ac527a9e94</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sqr</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaf35aa090d0b6f33e81c40697334df61</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tsinc</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9f15082c7168daabbfddd223e1fe0158</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0ad9bb6d4eb0eeaa2f5d8181da7a0fb3</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asinh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adbdd4d2bd45b418902a972396060ab83</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5c44bf9370aa09e62340dd61475c11be</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>atanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a607feabb775dd93e2b935cb0fef3f712</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad24a2a30d51d65525d2214ef57cb01e7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4d0c4511a8ead15fb3b6ddc00b474b80</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acotanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad7e59127fc4e27b67a6851eb785591c7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa69de55cf8cae77bea99419a278bf436</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round2</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a897a62e960b3fe0f95a529fe911eff7d</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a245be608b49628752ed042179cd818fc</anchor>
      <arglist>(const T &amp;val, const T &amp;lower, const T &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>DerivedA::PlainObject</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac03ac59520bf6338921471e34af439bb</anchor>
      <arglist>(const Eigen::MatrixBase&lt; DerivedA &gt; &amp;val, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;lower, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3660a2b791e39ec186f8632c94ba0dbb</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInt</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aecdb589c0ea301a4d55e79780479b0b3</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af5b30515f57b6a7eea27ace602bb346b</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a17ab5a7cba3e8f0f27e6b5f300c290ed</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac722257c75263b69e7997d672ffe0126</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af1b073e98b687a9aa406af54ad68d3d2</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aca0a14a88fdfa483185ffa5fe66feeba</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m, double _tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>seedRand</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f60c93c6ccddec2989611956bce69bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaebe9dfa697cd24a66650059b1bc743a</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5133c95e7c1213b2af0de0696047c5f3</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adfee9c8e11ec79925fefa99e527dd781</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9ef2cf4752be899a945fe26a9ee36626</anchor>
      <arglist>(std::size_t size, double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae6937beb7b25f2898f06d1aaf7745460</anchor>
      <arglist>(std::size_t size, double limit)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_pi</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>ac81d5a7db4dd34422738774904d73209</anchor>
      <arglist>(long double x)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_pi</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>a17cb157a2daa50a594a210b7a490dd4e</anchor>
      <arglist>(unsigned long long int x)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>a402c072f064c67b29a08f034abf756fb</anchor>
      <arglist>(long double angle)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>a8063db69077d5c2d33d56420a5dc1d3a</anchor>
      <arglist>(unsigned long long int angle)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>ab49e0609341b831df966b5bb2b587cbe</anchor>
      <arglist>(long double angle)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>aa34ad219e393212f643d3f6a08084cf1</anchor>
      <arglist>(unsigned long long int angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a4d3ab5b883e6b4acf99db77b646d5da0</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a40c325dd75125cb0ba7277a867483803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Fuchsia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a6110ace8b9305b869cd30d2e94d0ef45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Fuchsia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>aff08c6a283ed181df78175b6e6d5ef39</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>aa1817741b56722a3f2a8eb77280bd01f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ac7590f97cfe8ec52c79464f8ee6dea90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a1902c703d717eebe4d4f6a16d01cdeee</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad96afa4f4d8ec8978b290fd523808370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a506bd8873182731f88cb7e1c7821b79b</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a57f3def52e94e339f925a8e201ff19aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a95baa2baa822a5e60a40f0fdc71755f4</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a605d2515b7418b0dc9f35692848b7205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afdebec5b20247f3710cdaf5b0a6ba557</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad94ba7c65abc6fd92af64a0db7df6f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a04e0e028617699c7bef41185553f647f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a739634da0225a64ff91934c5c6dfc61b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>abf40261d480d1df44618b7c87b02a4dc</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afaca5d4bbd8610cdd766bfa9a922134a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MathTypes.hpp</name>
    <path>/dart/math/</path>
    <filename>d7/d37/MathTypes_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="d4/d18/Memory_8hpp" name="Memory.hpp" local="yes" imported="no">dart/common/Memory.hpp</includes>
    <namespace>Eigen</namespace>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 1 &gt;</type>
      <name>Vector6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a256bc41e53605f5abb08663701978077</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 6 &gt;</type>
      <name>Matrix6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac472a7c3ac8e9babc4efd3f3286e4b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>EIGEN_V_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a6e551a25f1ce7ec40859614c2640649b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; Eigen::Vector3d &gt;&gt;</type>
      <name>EIGEN_VV_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>af55914dc073a93e64d1d4ec875c4e178</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; _Tp, Eigen::aligned_allocator&lt; _Tp &gt;&gt;</type>
      <name>aligned_vector</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a8dfe4f733de0543cf4067932f2ce7efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; _Key, _Tp, _Compare, Eigen::aligned_allocator&lt; std::pair&lt; const _Key, _Tp &gt;&gt;&gt;</type>
      <name>aligned_map</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac7d9b3d70dd2fee4a4e69d3328060c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix6d</type>
      <name>Inertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>afbfbeee4dd315cd92be8d0008b32e06d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>LinearJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aae98472b61ec9cd58aa0575cc5fce4e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>AngularJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8431d241e83ad9cd44d2404eeefc44c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, Eigen::Dynamic &gt;</type>
      <name>Jacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a286372dc0bcfc154fc772b53f23534e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector6d</type>
      <name>compose</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a5ddf9ce6ff40e8e0a562b80953064149</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angular, const Eigen::Vector3d &amp;_linear)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; _Tp &gt;</type>
      <name>make_aligned_shared</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ab5662ca881d3d41dc8716964a2a9f5ac</anchor>
      <arglist>(_Args &amp;&amp;...__args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Function.cpp</name>
    <path>/dart/optimizer/</path>
    <filename>dc/dd4/Function_8cpp</filename>
    <includes id="d4/d59/Function_8hpp" name="Function.hpp" local="yes" imported="no">dart/optimizer/Function.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Function.hpp</name>
    <path>/dart/optimizer/</path>
    <filename>d4/d59/Function_8hpp</filename>
    <class kind="class">dart::optimizer::Function</class>
    <class kind="class">dart::optimizer::ModularFunction</class>
    <class kind="class">dart::optimizer::NullFunction</class>
    <class kind="class">dart::optimizer::MultiFunction</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Function &gt;</type>
      <name>FunctionPtr</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a091d108c3f5c8ca77baeae7abe86c31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; double(const Eigen::VectorXd &amp;)&gt;</type>
      <name>CostFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af80afcab7fabba4d4448dda1c1dc67a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd &gt;)&gt;</type>
      <name>GradientFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a0b89e9da6eecfd2bddffa178f9c2e9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt;)&gt;</type>
      <name>HessianFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a5655d552729d314fa9ed6e1674c0b10e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GradientDescentSolver.cpp</name>
    <path>/dart/optimizer/</path>
    <filename>d5/da5/GradientDescentSolver_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d0/d30/GradientDescentSolver_8hpp" name="GradientDescentSolver.hpp" local="yes" imported="no">dart/optimizer/GradientDescentSolver.hpp</includes>
    <includes id="d8/da6/Problem_8hpp" name="Problem.hpp" local="yes" imported="no">dart/optimizer/Problem.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>GradientDescentSolver.hpp</name>
    <path>/dart/optimizer/</path>
    <filename>d0/d30/GradientDescentSolver_8hpp</filename>
    <includes id="d1/d19/Solver_8hpp" name="Solver.hpp" local="yes" imported="no">dart/optimizer/Solver.hpp</includes>
    <class kind="class">dart::optimizer::GradientDescentSolver</class>
    <class kind="struct">dart::optimizer::GradientDescentSolver::UniqueProperties</class>
    <class kind="struct">dart::optimizer::GradientDescentSolver::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>IpoptSolver.cpp</name>
    <path>/dart/optimizer/ipopt/</path>
    <filename>d7/d7b/IpoptSolver_8cpp</filename>
    <includes id="d4/dc7/IpoptSolver_8hpp" name="IpoptSolver.hpp" local="yes" imported="no">dart/optimizer/ipopt/IpoptSolver.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d4/d59/Function_8hpp" name="Function.hpp" local="yes" imported="no">dart/optimizer/Function.hpp</includes>
    <includes id="d8/da6/Problem_8hpp" name="Problem.hpp" local="yes" imported="no">dart/optimizer/Problem.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>IpoptSolver.hpp</name>
    <path>/dart/optimizer/ipopt/</path>
    <filename>d4/dc7/IpoptSolver_8hpp</filename>
    <includes id="d1/d19/Solver_8hpp" name="Solver.hpp" local="yes" imported="no">dart/optimizer/Solver.hpp</includes>
    <class kind="class">dart::optimizer::IpoptSolver</class>
    <class kind="class">dart::optimizer::DartTNLP</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_CSTDDEF</name>
      <anchorfile>d4/dc7/IpoptSolver_8hpp.html</anchorfile>
      <anchor>af858cc42aa54f0d70f119d478538357a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NloptSolver.cpp</name>
    <path>/dart/optimizer/nlopt/</path>
    <filename>de/d13/NloptSolver_8cpp</filename>
    <includes id="dd/dbd/NloptSolver_8hpp" name="NloptSolver.hpp" local="yes" imported="no">dart/optimizer/nlopt/NloptSolver.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d2e/StlHelpers_8hpp" name="StlHelpers.hpp" local="yes" imported="no">dart/common/StlHelpers.hpp</includes>
    <includes id="d8/da6/Problem_8hpp" name="Problem.hpp" local="yes" imported="no">dart/optimizer/Problem.hpp</includes>
    <includes id="d4/d59/Function_8hpp" name="Function.hpp" local="yes" imported="no">dart/optimizer/Function.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>convertToStd</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a36ec915bdf1142fda333b8f9097897fb</anchor>
      <arglist>(const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>convertToEigen</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af02d36b8a16c293b1f7f3d8e3cff14e3</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;_v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NloptSolver.hpp</name>
    <path>/dart/optimizer/nlopt/</path>
    <filename>dd/dbd/NloptSolver_8hpp</filename>
    <includes id="d1/d19/Solver_8hpp" name="Solver.hpp" local="yes" imported="no">dart/optimizer/Solver.hpp</includes>
    <class kind="class">dart::optimizer::NloptSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Problem.cpp</name>
    <path>/dart/optimizer/</path>
    <filename>d9/dfd/Problem_8cpp</filename>
    <includes id="d8/da6/Problem_8hpp" name="Problem.hpp" local="yes" imported="no">dart/optimizer/Problem.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d7/dd7/Helpers_8hpp" name="Helpers.hpp" local="yes" imported="no">dart/math/Helpers.hpp</includes>
    <includes id="d4/d59/Function_8hpp" name="Function.hpp" local="yes" imported="no">dart/optimizer/Function.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a92585cfcd9282db4f1f543a7cccebcf7</anchor>
      <arglist>(std::size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Problem.hpp</name>
    <path>/dart/optimizer/</path>
    <filename>d8/da6/Problem_8hpp</filename>
    <includes id="d4/d59/Function_8hpp" name="Function.hpp" local="yes" imported="no">dart/optimizer/Function.hpp</includes>
    <class kind="class">dart::optimizer::Problem</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>SnoptInterface.cpp</name>
    <path>/dart/optimizer/snopt/</path>
    <filename>db/d66/SnoptInterface_8cpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SNINIT</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>ace499e9d5ccf3b8a02700efa7a948a93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNOPT</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>ad2aabc8dadd750c21ca26279c90a769f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNSPEC</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>a42cfe33b64ecd00f3c6667618562e94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S1USER</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>a5c68d30c35116f078e569160c24882c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sninit_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>ac4d80d6aa69bceefb825308489173acf</anchor>
      <arglist>(int *iprint, int *isum, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snopt_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a28ab814ab3f9117ebadc4ed597891a8f</anchor>
      <arglist>(char *start, int *m, int *n, int *ne, int *nName, int *nnCon, int *nnObj, int *nnJac, int *iObj, double *ObjAdd, char *Prob, void(*funCon)(int *mode, int *nnCon, int *nnJac, int *neJac, double *x, double *fCon, double *gCon, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), void(*funObj)(int *mode, int *nnObj, double *x, double *fObj, double *gObj, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), double *a, int *ha, int *ka, double *bl, double *bu, char *Names, int *hs, double *xs, double *pi, double *rc, int *inform, int *mincw, int *miniw, int *minrw, int *nS, int *nInf, double *sInf, double *Obj, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw, int start_len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snspec_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a8ced2e4dc5d7956273deb318e6887922</anchor>
      <arglist>(int *ispecs, int *inform, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>s1user_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a67d30ce1d6f2d858adec1ee6cfe7da9b</anchor>
      <arglist>(int *iAbort, char *MjrMsg, int *KTcond, int *m, int *n, int *nb, int *nR, int *nS, int *nMajor, int *nMinor, int *nSwap, double *condHz, double *duInf, double *emaxS, double *fObj, double *fMrt, double gMrt, double *PenNrm, double *prInf, double *step, double *vimax, double *dxnrm, double *dxrel, int *ne, int *nka, double *a, int *ha, int *ka, int *hs, double *bl, double *bu, double *pi, double *rc, double *xs, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SnoptInterface.hpp</name>
    <path>/dart/optimizer/snopt/</path>
    <filename>db/d9d/SnoptInterface_8hpp</filename>
    <class kind="class">dart::optimizer::snopt::SnoptInterface</class>
    <class kind="struct">dart::optimizer::snopt::SnoptInterface::Slack</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ZERO</name>
      <anchorfile>db/d9d/SnoptInterface_8hpp.html</anchorfile>
      <anchor>ac328e551bde3d39b6d7b8cc9e048d941</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SnoptSolver.cpp</name>
    <path>/dart/optimizer/snopt/</path>
    <filename>de/d84/SnoptSolver_8cpp</filename>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
  </compound>
  <compound kind="file">
    <name>SnoptSolver.hpp</name>
    <path>/dart/optimizer/snopt/</path>
    <filename>d2/d98/SnoptSolver_8hpp</filename>
    <class kind="class">dart::optimizer::snopt::SnoptSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
  </compound>
  <compound kind="file">
    <name>Solver.cpp</name>
    <path>/dart/optimizer/</path>
    <filename>d4/d01/Solver_8cpp</filename>
    <includes id="d1/d19/Solver_8hpp" name="Solver.hpp" local="yes" imported="no">dart/optimizer/Solver.hpp</includes>
    <includes id="d8/da6/Problem_8hpp" name="Problem.hpp" local="yes" imported="no">dart/optimizer/Problem.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Solver.hpp</name>
    <path>/dart/optimizer/</path>
    <filename>d1/d19/Solver_8hpp</filename>
    <class kind="class">dart::optimizer::Solver</class>
    <class kind="struct">dart::optimizer::Solver::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Path.cpp</name>
    <path>/dart/planning/</path>
    <filename>d5/dbb/Path_8cpp</filename>
    <includes id="dd/da8/Path_8hpp" name="Path.hpp" local="yes" imported="no">dart/planning/Path.hpp</includes>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <class kind="class">dart::planning::LinearPathSegment</class>
    <class kind="class">dart::planning::CircularPathSegment</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>Path.hpp</name>
    <path>/dart/planning/</path>
    <filename>dd/da8/Path_8hpp</filename>
    <class kind="class">dart::planning::PathSegment</class>
    <class kind="class">dart::planning::Path</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathFollowingTrajectory.cpp</name>
    <path>/dart/planning/</path>
    <filename>de/d40/PathFollowingTrajectory_8cpp</filename>
    <includes id="dc/de2/PathFollowingTrajectory_8hpp" name="PathFollowingTrajectory.hpp" local="yes" imported="no">dart/planning/PathFollowingTrajectory.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathFollowingTrajectory.hpp</name>
    <path>/dart/planning/</path>
    <filename>dc/de2/PathFollowingTrajectory_8hpp</filename>
    <includes id="dd/da8/Path_8hpp" name="Path.hpp" local="yes" imported="no">dart/planning/Path.hpp</includes>
    <includes id="d2/de2/Trajectory_8hpp" name="Trajectory.hpp" local="yes" imported="no">dart/planning/Trajectory.hpp</includes>
    <class kind="class">dart::planning::PathFollowingTrajectory</class>
    <class kind="struct">dart::planning::PathFollowingTrajectory::TrajectoryStep</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathPlanner.hpp</name>
    <path>/dart/planning/</path>
    <filename>d6/d0b/PathPlanner_8hpp</filename>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d6/df7/RRT_8hpp" name="RRT.hpp" local="yes" imported="no">dart/planning/RRT.hpp</includes>
    <class kind="class">dart::planning::PathPlanner</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathShortener.cpp</name>
    <path>/dart/planning/</path>
    <filename>d9/db9/PathShortener_8cpp</filename>
    <includes id="d7/d80/PathShortener_8hpp" name="PathShortener.hpp" local="yes" imported="no">dart/planning/PathShortener.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d6/df7/RRT_8hpp" name="RRT.hpp" local="yes" imported="no">dart/planning/RRT.hpp</includes>
    <includes id="d1/d6e/CollisionDetector_8hpp" name="CollisionDetector.hpp" local="yes" imported="no">dart/collision/CollisionDetector.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAND12</name>
      <anchorfile>d9/db9/PathShortener_8cpp.html</anchorfile>
      <anchor>ab38e69aa0434552e8205bd1796061a03</anchor>
      <arglist>(N1, N2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PathShortener.hpp</name>
    <path>/dart/planning/</path>
    <filename>d7/d80/PathShortener_8hpp</filename>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <class kind="class">dart::planning::PathShortener</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>RRT.cpp</name>
    <path>/dart/planning/</path>
    <filename>de/d46/RRT_8cpp</filename>
    <includes id="d6/df7/RRT_8hpp" name="RRT.hpp" local="yes" imported="no">dart/planning/RRT.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>RRT.hpp</name>
    <path>/dart/planning/</path>
    <filename>d6/df7/RRT_8hpp</filename>
    <includes id="d2/d9c/dynamics_2SmartPointer_8hpp" name="SmartPointer.hpp" local="yes" imported="no">dart/dynamics/SmartPointer.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <class kind="class">flann::L2</class>
    <class kind="class">flann::Index</class>
    <class kind="class">dart::planning::RRT</class>
    <namespace>flann</namespace>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>Trajectory.hpp</name>
    <path>/dart/planning/</path>
    <filename>d2/de2/Trajectory_8hpp</filename>
    <class kind="class">dart::planning::Trajectory</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>Recording.cpp</name>
    <path>/dart/simulation/</path>
    <filename>d5/de0/Recording_8cpp</filename>
    <includes id="d7/dec/Recording_8hpp" name="Recording.hpp" local="yes" imported="no">dart/simulation/Recording.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
  </compound>
  <compound kind="file">
    <name>Recording.hpp</name>
    <path>/dart/simulation/</path>
    <filename>d7/dec/Recording_8hpp</filename>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <class kind="class">dart::simulation::Recording</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::simulation</namespace>
  </compound>
  <compound kind="file">
    <name>World.cpp</name>
    <path>/dart/simulation/</path>
    <filename>d7/dfe/World_8cpp</filename>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="db/d93/SemiImplicitEulerIntegrator_8hpp" name="SemiImplicitEulerIntegrator.hpp" local="yes" imported="no">dart/integration/SemiImplicitEulerIntegrator.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d0/ddb/ConstraintSolver_8hpp" name="ConstraintSolver.hpp" local="yes" imported="no">dart/constraint/ConstraintSolver.hpp</includes>
    <includes id="db/d05/CollisionGroup_8hpp" name="CollisionGroup.hpp" local="yes" imported="no">dart/collision/CollisionGroup.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
  </compound>
  <compound kind="file">
    <name>World.hpp</name>
    <path>/dart/simulation/</path>
    <filename>d0/dbb/World_8hpp</filename>
    <includes id="d8/dbf/Timer_8hpp" name="Timer.hpp" local="yes" imported="no">dart/common/Timer.hpp</includes>
    <includes id="d8/de1/NameManager_8hpp" name="NameManager.hpp" local="yes" imported="no">dart/common/NameManager.hpp</includes>
    <includes id="d7/d5f/Subject_8hpp" name="Subject.hpp" local="yes" imported="no">dart/common/Subject.hpp</includes>
    <includes id="d6/dd8/SimpleFrame_8hpp" name="SimpleFrame.hpp" local="yes" imported="no">dart/dynamics/SimpleFrame.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="de/df0/CollisionOption_8hpp" name="CollisionOption.hpp" local="yes" imported="no">dart/collision/CollisionOption.hpp</includes>
    <includes id="d7/dec/Recording_8hpp" name="Recording.hpp" local="yes" imported="no">dart/simulation/Recording.hpp</includes>
    <class kind="class">dart::simulation::World</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::simulation</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>WorldPtr</name>
      <anchorfile>d4/d0b/namespacedart_1_1simulation.html</anchorfile>
      <anchor>a1db1abe159f77736177ead5172d44206</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>C3D.cpp</name>
    <path>/dart/utils/</path>
    <filename>d3/d01/C3D_8cpp</filename>
    <includes id="d3/d02/C3D_8hpp" name="C3D.hpp" local="yes" imported="no">dart/utils/C3D.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="function">
      <type>float</type>
      <name>convertDecToFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aee22589a8d85518529348c2db8f2763e</anchor>
      <arglist>(char _bytes[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatToDec</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1cb5c82f6b3724ff3b2023dc5d9d9f29</anchor>
      <arglist>(float _f, char *_bytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a2e66c9922323d9ddb8b819fe16d77c21</anchor>
      <arglist>(const char *_fileName, std::vector&lt; std::vector&lt; Eigen::Vector3d &gt;&gt; &amp;_pointData, int *_nFrame, int *_nMarker, double *_freq)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8e50426153dbd954f42b7d773b905096</anchor>
      <arglist>(const char *_fileName, std::vector&lt; std::vector&lt; Eigen::Vector3d &gt;&gt; &amp;_pointData, int _nFrame, int _nMarker, double _freq)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>C3D.hpp</name>
    <path>/dart/utils/</path>
    <filename>d3/d02/C3D_8hpp</filename>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <class kind="struct">dart::utils::c3d_head_t</class>
    <class kind="struct">dart::utils::c3d_param_t</class>
    <class kind="struct">dart::utils::c3d_frameSI_t</class>
    <class kind="struct">dart::utils::c3d_frame_t</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="define">
      <type>#define</type>
      <name>C3D_REC_SIZE</name>
      <anchorfile>d3/d02/C3D_8hpp.html</anchorfile>
      <anchor>aece2b00ed4219fdc32901411f506138d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_head_t</type>
      <name>c3d_head</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3def68c5794a81e2309c716b523c6fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_param_t</type>
      <name>c3d_param</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad95ee720fe5a2e7f47f18ad92593990c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frameSI_t</type>
      <name>c3d_frameSI</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d23a7d5dab1c15d3db9070bc56da5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frame_t</type>
      <name>c3d_frame</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a79fae4bb8e83049b9ba12b3c4be507bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompositeResourceRetriever.cpp</name>
    <path>/dart/utils/</path>
    <filename>d6/df4/CompositeResourceRetriever_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="d4/d98/CompositeResourceRetriever_8hpp" name="CompositeResourceRetriever.hpp" local="yes" imported="no">dart/utils/CompositeResourceRetriever.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>CompositeResourceRetriever.hpp</name>
    <path>/dart/utils/</path>
    <filename>d4/d98/CompositeResourceRetriever_8hpp</filename>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <class kind="class">dart::utils::CompositeResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CompositeResourceRetriever &gt;</type>
      <name>CompositeResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a02b215ff0eb5b6981a9effd2e3b121b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DartResourceRetriever.cpp</name>
    <path>/dart/utils/</path>
    <filename>db/d0f/DartResourceRetriever_8cpp</filename>
    <includes id="d4/d56/DartResourceRetriever_8hpp" name="DartResourceRetriever.hpp" local="yes" imported="no">dart/utils/DartResourceRetriever.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>DartResourceRetriever.hpp</name>
    <path>/dart/utils/</path>
    <filename>d4/d56/DartResourceRetriever_8hpp</filename>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <class kind="class">dart::utils::DartResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; DartResourceRetriever &gt;</type>
      <name>DartResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad285b6a796a9b4ad7f23540aaf74c3a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileInfoC3D.cpp</name>
    <path>/dart/utils/</path>
    <filename>d8/d90/FileInfoC3D_8cpp</filename>
    <includes id="d1/d83/FileInfoC3D_8hpp" name="FileInfoC3D.hpp" local="yes" imported="no">dart/utils/FileInfoC3D.hpp</includes>
    <includes id="d3/d02/C3D_8hpp" name="C3D.hpp" local="yes" imported="no">dart/utils/C3D.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoC3D.hpp</name>
    <path>/dart/utils/</path>
    <filename>d1/d83/FileInfoC3D_8hpp</filename>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <class kind="class">dart::utils::FileInfoC3D</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoDof.cpp</name>
    <path>/dart/utils/</path>
    <filename>db/dab/FileInfoDof_8cpp</filename>
    <includes id="d3/d6a/FileInfoDof_8hpp" name="FileInfoDof.hpp" local="yes" imported="no">dart/utils/FileInfoDof.hpp</includes>
    <includes id="da/d28/DegreeOfFreedom_8hpp" name="DegreeOfFreedom.hpp" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d7/dec/Recording_8hpp" name="Recording.hpp" local="yes" imported="no">dart/simulation/Recording.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoDof.hpp</name>
    <path>/dart/utils/</path>
    <filename>d3/d6a/FileInfoDof_8hpp</filename>
    <class kind="class">dart::utils::FileInfoDof</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoWorld.cpp</name>
    <path>/dart/utils/</path>
    <filename>d7/d88/FileInfoWorld_8cpp</filename>
    <includes id="d4/d5e/FileInfoWorld_8hpp" name="FileInfoWorld.hpp" local="yes" imported="no">dart/utils/FileInfoWorld.hpp</includes>
    <includes id="d7/dec/Recording_8hpp" name="Recording.hpp" local="yes" imported="no">dart/simulation/Recording.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoWorld.hpp</name>
    <path>/dart/utils/</path>
    <filename>d4/d5e/FileInfoWorld_8hpp</filename>
    <class kind="class">dart::utils::FileInfoWorld</class>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>PackageResourceRetriever.cpp</name>
    <path>/dart/utils/</path>
    <filename>de/dff/PackageResourceRetriever_8cpp</filename>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="de/db4/PackageResourceRetriever_8hpp" name="PackageResourceRetriever.hpp" local="yes" imported="no">dart/utils/PackageResourceRetriever.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>PackageResourceRetriever.hpp</name>
    <path>/dart/utils/</path>
    <filename>de/db4/PackageResourceRetriever_8hpp</filename>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <class kind="class">dart::utils::PackageResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PackageResourceRetriever &gt;</type>
      <name>PackageResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8192795044e4474bdecb0daf5c3a3b71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SdfParser.cpp</name>
    <path>/dart/utils/sdf/</path>
    <filename>d6/d24/SdfParser_8cpp</filename>
    <includes id="da/df7/SdfParser_8hpp" name="SdfParser.hpp" local="yes" imported="no">dart/utils/sdf/SdfParser.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="dc/de8/WeldJoint_8hpp" name="WeldJoint.hpp" local="yes" imported="no">dart/dynamics/WeldJoint.hpp</includes>
    <includes id="de/d07/PrismaticJoint_8hpp" name="PrismaticJoint.hpp" local="yes" imported="no">dart/dynamics/PrismaticJoint.hpp</includes>
    <includes id="d0/ded/RevoluteJoint_8hpp" name="RevoluteJoint.hpp" local="yes" imported="no">dart/dynamics/RevoluteJoint.hpp</includes>
    <includes id="d1/dca/ScrewJoint_8hpp" name="ScrewJoint.hpp" local="yes" imported="no">dart/dynamics/ScrewJoint.hpp</includes>
    <includes id="d7/d41/BallJoint_8hpp" name="BallJoint.hpp" local="yes" imported="no">dart/dynamics/BallJoint.hpp</includes>
    <includes id="d1/d8d/FreeJoint_8hpp" name="FreeJoint.hpp" local="yes" imported="no">dart/dynamics/FreeJoint.hpp</includes>
    <includes id="dc/d57/UniversalJoint_8hpp" name="UniversalJoint.hpp" local="yes" imported="no">dart/dynamics/UniversalJoint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d5/d93/SkelParser_8hpp" name="SkelParser.hpp" local="yes" imported="no">dart/utils/SkelParser.hpp</includes>
    <includes id="db/d95/XmlHelpers_8hpp" name="XmlHelpers.hpp" local="yes" imported="no">dart/utils/XmlHelpers.hpp</includes>
    <includes id="d4/d98/CompositeResourceRetriever_8hpp" name="CompositeResourceRetriever.hpp" local="yes" imported="no">dart/utils/CompositeResourceRetriever.hpp</includes>
    <includes id="d4/d56/DartResourceRetriever_8hpp" name="DartResourceRetriever.hpp" local="yes" imported="no">dart/utils/DartResourceRetriever.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::SdfParser</namespace>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readSdfFile</name>
      <anchorfile>d5/d5c/namespacedart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a8236ff4ce0486373c4992f480178f4e0</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;nullOrRetriever)</arglist>
    </member>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>d5/d5c/namespacedart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a30be058062f1453fdd05bf0049ca38bf</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;nullOrRetriever)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d5/d5c/namespacedart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a9881d806fcbc00870bdd21c151793341</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;nullOrRetriever)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SdfParser.hpp</name>
    <path>/dart/utils/sdf/</path>
    <filename>da/df7/SdfParser_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::SdfParser</namespace>
  </compound>
  <compound kind="file">
    <name>SkelParser.cpp</name>
    <path>/dart/utils/</path>
    <filename>d8/d35/SkelParser_8cpp</filename>
    <includes id="d5/d93/SkelParser_8hpp" name="SkelParser.hpp" local="yes" imported="no">dart/utils/SkelParser.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="dc/d78/CollisionObject_8hpp" name="CollisionObject.hpp" local="yes" imported="no">dart/collision/CollisionObject.hpp</includes>
    <includes id="dc/dc2/DARTCollisionDetector_8hpp" name="DARTCollisionDetector.hpp" local="yes" imported="no">dart/collision/dart/DARTCollisionDetector.hpp</includes>
    <includes id="d4/d9d/FCLCollisionDetector_8hpp" name="FCLCollisionDetector.hpp" local="yes" imported="no">dart/collision/fcl/FCLCollisionDetector.hpp</includes>
    <includes id="d0/ddb/ConstraintSolver_8hpp" name="ConstraintSolver.hpp" local="yes" imported="no">dart/constraint/ConstraintSolver.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="d3/d5b/SoftBodyNode_8hpp" name="SoftBodyNode.hpp" local="yes" imported="no">dart/dynamics/SoftBodyNode.hpp</includes>
    <includes id="db/de3/dynamics_2ShapeNode_8hpp" name="ShapeNode.hpp" local="yes" imported="no">dart/dynamics/ShapeNode.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="d9/db5/CapsuleShape_8hpp" name="CapsuleShape.hpp" local="yes" imported="no">dart/dynamics/CapsuleShape.hpp</includes>
    <includes id="d6/d62/ConeShape_8hpp" name="ConeShape.hpp" local="yes" imported="no">dart/dynamics/ConeShape.hpp</includes>
    <includes id="dd/d4f/EllipsoidShape_8hpp" name="EllipsoidShape.hpp" local="yes" imported="no">dart/dynamics/EllipsoidShape.hpp</includes>
    <includes id="d0/de1/PlaneShape_8hpp" name="PlaneShape.hpp" local="yes" imported="no">dart/dynamics/PlaneShape.hpp</includes>
    <includes id="d2/d41/MultiSphereConvexHullShape_8hpp" name="MultiSphereConvexHullShape.hpp" local="yes" imported="no">dart/dynamics/MultiSphereConvexHullShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="de/d8d/SoftMeshShape_8hpp" name="SoftMeshShape.hpp" local="yes" imported="no">dart/dynamics/SoftMeshShape.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="dc/de8/WeldJoint_8hpp" name="WeldJoint.hpp" local="yes" imported="no">dart/dynamics/WeldJoint.hpp</includes>
    <includes id="de/d07/PrismaticJoint_8hpp" name="PrismaticJoint.hpp" local="yes" imported="no">dart/dynamics/PrismaticJoint.hpp</includes>
    <includes id="d0/ded/RevoluteJoint_8hpp" name="RevoluteJoint.hpp" local="yes" imported="no">dart/dynamics/RevoluteJoint.hpp</includes>
    <includes id="d1/dca/ScrewJoint_8hpp" name="ScrewJoint.hpp" local="yes" imported="no">dart/dynamics/ScrewJoint.hpp</includes>
    <includes id="d9/d26/TranslationalJoint_8hpp" name="TranslationalJoint.hpp" local="yes" imported="no">dart/dynamics/TranslationalJoint.hpp</includes>
    <includes id="d6/d57/TranslationalJoint2D_8hpp" name="TranslationalJoint2D.hpp" local="yes" imported="no">dart/dynamics/TranslationalJoint2D.hpp</includes>
    <includes id="d7/d41/BallJoint_8hpp" name="BallJoint.hpp" local="yes" imported="no">dart/dynamics/BallJoint.hpp</includes>
    <includes id="d1/d8d/FreeJoint_8hpp" name="FreeJoint.hpp" local="yes" imported="no">dart/dynamics/FreeJoint.hpp</includes>
    <includes id="d5/d0a/EulerJoint_8hpp" name="EulerJoint.hpp" local="yes" imported="no">dart/dynamics/EulerJoint.hpp</includes>
    <includes id="dc/d57/UniversalJoint_8hpp" name="UniversalJoint.hpp" local="yes" imported="no">dart/dynamics/UniversalJoint.hpp</includes>
    <includes id="df/ded/PlanarJoint_8hpp" name="PlanarJoint.hpp" local="yes" imported="no">dart/dynamics/PlanarJoint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d8/d1a/Marker_8hpp" name="Marker.hpp" local="yes" imported="no">dart/dynamics/Marker.hpp</includes>
    <includes id="db/d95/XmlHelpers_8hpp" name="XmlHelpers.hpp" local="yes" imported="no">dart/utils/XmlHelpers.hpp</includes>
    <includes id="d4/d98/CompositeResourceRetriever_8hpp" name="CompositeResourceRetriever.hpp" local="yes" imported="no">dart/utils/CompositeResourceRetriever.hpp</includes>
    <includes id="d4/d56/DartResourceRetriever_8hpp" name="DartResourceRetriever.hpp" local="yes" imported="no">dart/utils/DartResourceRetriever.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>SkelParser.hpp</name>
    <path>/dart/utils/</path>
    <filename>d5/d93/SkelParser_8hpp</filename>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::SkelParser</namespace>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>d3/dcc/namespacedart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>ad4da1c4d7febd41fb3004a3bbad3bd70</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;retriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readWorldXML</name>
      <anchorfile>d3/dcc/namespacedart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a64d84997a11629dc9499aa0ac7d99f96</anchor>
      <arglist>(const std::string &amp;xmlString, const common::Uri &amp;baseUri=&quot;&quot;, const common::ResourceRetrieverPtr &amp;retriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d3/dcc/namespacedart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a22917f8275a73d84543e89eff6c09eb0</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;retriever=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DartLoader.cpp</name>
    <path>/dart/utils/urdf/</path>
    <filename>dd/d4c/DartLoader_8cpp</filename>
    <includes id="dd/d70/DartLoader_8hpp" name="DartLoader.hpp" local="yes" imported="no">dart/utils/urdf/DartLoader.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d0/ded/RevoluteJoint_8hpp" name="RevoluteJoint.hpp" local="yes" imported="no">dart/dynamics/RevoluteJoint.hpp</includes>
    <includes id="de/d07/PrismaticJoint_8hpp" name="PrismaticJoint.hpp" local="yes" imported="no">dart/dynamics/PrismaticJoint.hpp</includes>
    <includes id="dc/de8/WeldJoint_8hpp" name="WeldJoint.hpp" local="yes" imported="no">dart/dynamics/WeldJoint.hpp</includes>
    <includes id="d1/d8d/FreeJoint_8hpp" name="FreeJoint.hpp" local="yes" imported="no">dart/dynamics/FreeJoint.hpp</includes>
    <includes id="df/ded/PlanarJoint_8hpp" name="PlanarJoint.hpp" local="yes" imported="no">dart/dynamics/PlanarJoint.hpp</includes>
    <includes id="d2/df8/Shape_8hpp" name="Shape.hpp" local="yes" imported="no">dart/dynamics/Shape.hpp</includes>
    <includes id="d1/dc2/SphereShape_8hpp" name="SphereShape.hpp" local="yes" imported="no">dart/dynamics/SphereShape.hpp</includes>
    <includes id="df/d22/BoxShape_8hpp" name="BoxShape.hpp" local="yes" imported="no">dart/dynamics/BoxShape.hpp</includes>
    <includes id="d0/d3e/CylinderShape_8hpp" name="CylinderShape.hpp" local="yes" imported="no">dart/dynamics/CylinderShape.hpp</includes>
    <includes id="dc/d74/MeshShape_8hpp" name="MeshShape.hpp" local="yes" imported="no">dart/dynamics/MeshShape.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d4/d56/DartResourceRetriever_8hpp" name="DartResourceRetriever.hpp" local="yes" imported="no">dart/utils/DartResourceRetriever.hpp</includes>
    <includes id="db/d41/urdf__world__parser_8hpp" name="urdf_world_parser.hpp" local="yes" imported="no">dart/utils/urdf/urdf_world_parser.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>urdf_shared_ptr&lt; urdf::ModelInterface &gt;</type>
      <name>ModelInterfacePtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a07b8511877e0c1607dc16415de735bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterial</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7c62debee37d3459f9191ddb4b6af5c7</anchor>
      <arglist>(const urdf::ModelInterface *model, dynamics::VisualAspect *visualAspect, const urdf::Visual *viz)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Visual &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac48712a52ea3a23fd68dc73a0539f23f</anchor>
      <arglist>(const urdf::Visual *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Collision &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae0dccbcd41c0661ed42f77f0835ab004</anchor>
      <arglist>(const urdf::Collision *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DartLoader.hpp</name>
    <path>/dart/utils/urdf/</path>
    <filename>dd/d70/DartLoader_8hpp</filename>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="d7/dc6/BodyNode_8hpp" name="BodyNode.hpp" local="yes" imported="no">dart/dynamics/BodyNode.hpp</includes>
    <includes id="db/d4a/Joint_8hpp" name="Joint.hpp" local="yes" imported="no">dart/dynamics/Joint.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <includes id="d0/dbb/World_8hpp" name="World.hpp" local="yes" imported="no">dart/simulation/World.hpp</includes>
    <includes id="d4/d98/CompositeResourceRetriever_8hpp" name="CompositeResourceRetriever.hpp" local="yes" imported="no">dart/utils/CompositeResourceRetriever.hpp</includes>
    <includes id="de/db4/PackageResourceRetriever_8hpp" name="PackageResourceRetriever.hpp" local="yes" imported="no">dart/utils/PackageResourceRetriever.hpp</includes>
    <class kind="class">dart::utils::DartLoader</class>
    <namespace>urdf</namespace>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>urdf_world_parser.cpp</name>
    <path>/dart/utils/urdf/</path>
    <filename>d5/d7c/urdf__world__parser_8cpp</filename>
    <includes id="db/d41/urdf__world__parser_8hpp" name="urdf_world_parser.hpp" local="yes" imported="no">dart/utils/urdf/urdf_world_parser.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::urdf_parsing</namespace>
    <member kind="function">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>parseWorldURDF</name>
      <anchorfile>d0/d4c/namespacedart_1_1utils_1_1urdf__parsing.html</anchorfile>
      <anchor>a7eb3d95cafc38f932832d0b9ba141c6e</anchor>
      <arglist>(const std::string &amp;_xml_string, const dart::common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;retriever)</arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>debug</name>
      <anchorfile>d5/d7c/urdf__world__parser_8cpp.html</anchorfile>
      <anchor>a6295d47efda04de55c38cb8ea1cdb807</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>urdf_world_parser.hpp</name>
    <path>/dart/utils/urdf/</path>
    <filename>db/d41/urdf__world__parser_8hpp</filename>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <class kind="class">dart::utils::urdf_parsing::Entity</class>
    <class kind="class">dart::utils::urdf_parsing::World</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::urdf_parsing</namespace>
  </compound>
  <compound kind="file">
    <name>URDFTypes.hpp</name>
    <path>/dart/utils/urdf/</path>
    <filename>d1/d60/URDFTypes_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>VskParser.cpp</name>
    <path>/dart/utils/</path>
    <filename>de/dcc/VskParser_8cpp</filename>
    <includes id="db/d01/VskParser_8hpp" name="VskParser.hpp" local="yes" imported="no">dart/utils/VskParser.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="d4/d98/CompositeResourceRetriever_8hpp" name="CompositeResourceRetriever.hpp" local="yes" imported="no">dart/utils/CompositeResourceRetriever.hpp</includes>
    <includes id="d4/d56/DartResourceRetriever_8hpp" name="DartResourceRetriever.hpp" local="yes" imported="no">dart/utils/DartResourceRetriever.hpp</includes>
    <includes id="db/d95/XmlHelpers_8hpp" name="XmlHelpers.hpp" local="yes" imported="no">dart/utils/XmlHelpers.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SCALE_VSK</name>
      <anchorfile>de/dcc/VskParser_8cpp.html</anchorfile>
      <anchor>a8c387ff021b4def90832d6b2adf2201c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VskParser.hpp</name>
    <path>/dart/utils/</path>
    <filename>db/d01/VskParser_8hpp</filename>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <includes id="dd/d85/Uri_8hpp" name="Uri.hpp" local="yes" imported="no">dart/common/Uri.hpp</includes>
    <includes id="d6/de9/Constants_8hpp" name="Constants.hpp" local="yes" imported="no">dart/math/Constants.hpp</includes>
    <includes id="d4/d58/Skeleton_8hpp" name="Skeleton.hpp" local="yes" imported="no">dart/dynamics/Skeleton.hpp</includes>
    <class kind="struct">dart::utils::VskParser::Options</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::VskParser</namespace>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d3/d0e/namespacedart_1_1utils_1_1VskParser.html</anchorfile>
      <anchor>ae7db5995328e71746c12785494eb5ae6</anchor>
      <arglist>(const common::Uri &amp;fileUri, Options options=Options())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XmlHelpers.cpp</name>
    <path>/dart/utils/</path>
    <filename>d7/d24/XmlHelpers_8cpp</filename>
    <includes id="db/d95/XmlHelpers_8hpp" name="XmlHelpers.hpp" local="yes" imported="no">dart/utils/XmlHelpers.hpp</includes>
    <includes id="d2/d4f/Console_8hpp" name="Console.hpp" local="yes" imported="no">dart/common/Console.hpp</includes>
    <includes id="de/d49/Geometry_8hpp" name="Geometry.hpp" local="yes" imported="no">dart/math/Geometry.hpp</includes>
    <includes id="d8/dfb/LocalResourceRetriever_8hpp" name="LocalResourceRetriever.hpp" local="yes" imported="no">dart/common/LocalResourceRetriever.hpp</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaf0991ca23da84cda8333b698bfc6f12</anchor>
      <arglist>(bool v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1650e56a57b5017472f94725d9322bad</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abab96c43d769f15500a3b702e27f4666</anchor>
      <arglist>(unsigned int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a940dc66fba1f0ee5fc99f320fb85eda2</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a71fe7f1536b4651e57e56d83113bb39f</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a6300c4d6d990d3c1cae8b8d08b6659d2</anchor>
      <arglist>(char v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac7334737de601e396c253e4c4401d0f3</anchor>
      <arglist>(const Eigen::Vector2d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa874d45abcc70bb929fc4e6bc181cfc7</anchor>
      <arglist>(const Eigen::Vector3d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ade97b2796a68870258e06e5315d0be4a</anchor>
      <arglist>(const Eigen::Vector3i &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7537e627c6a90286e25482b12bc73eac</anchor>
      <arglist>(const Eigen::Vector6d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>af2b223e8a456b9258af73536f831aaf6</anchor>
      <arglist>(const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae36194488ef10299d87b5e6306ed99a2</anchor>
      <arglist>(const Eigen::Isometry3d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad0f47286d2826039414ba6155dfd278c</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a72f6f200690eb7c4cd58f95eb8720932</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>toUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0a5ed0581b4baeb125c120adfe990704</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>toFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa362549a1a1256f1dcb42716a30d7d98</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3eaa83373efcf7c9e1fc1f5fad404185</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>toChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaa1281a93cf8e2f8d5bc6af0a33ad0c0</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>toVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7a857a5a2f5d07ffa24827d9db7e609d</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>toVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d26bcb948ce1dad6ebc03b0132873dd</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>toVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8ff1b108a74593f1c21e680667c7d017</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>toVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae386eb2654833eeedbe5ef63fa285fc8</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>toVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9908fa2e4c843612d86db4f9130d5746</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a307050199c4344c73ce74b882c26c9e7</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa23bc793bee3c16f618529ed4b2e6899</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getValueString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abfe8c33e28bc1ca68724ba090522669e</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getValueBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a065213a59f051f979997553c5138cf8c</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValueInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa521647c04f8868a90138721bfca7723</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getValueUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a2b402c075831463ed21ddea14cfba443</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8a7f116a66ef33b51d9a60577b9332db</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValueDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad8c57dfa56669120dc0a2a60688a4cd5</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getValueChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab7ce28e8229f577f05d3c78f9fd3fb74</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getValueVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aabaccb50bae3ed6dcd6d6fbe7495f523</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a772def0e95fcf2c7c44247373a437dc3</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>getValueVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaafb7e135132c814897fc7634a0736c8</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getValueVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0c95918ca7516424e23b3166a5c38bca</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getValueVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a394490b0cf4dce2320f706c7f572e661</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVec3</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9046e89fc5b72db912003178feebfc8e</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a59baa147c86d2f99cbb7cc2b1f6fd427</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1e95b5a95a76cdae7bee98a98ede0ac4</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a00d145efe9e4a5abf5521e6960bc849c</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const tinyxml2::XMLElement *</type>
      <name>getElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d265def48b699cecc9b07c66ad8a8b8</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>tinyxml2::XMLElement *</type>
      <name>getElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa7cac679e0978d89779f9cc15b9502a1</anchor>
      <arglist>(tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openXMLFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aed983198d7b707ff3c59d66e1b651b31</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc, const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;retrieverOrNullPtr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aecf1b5722b24698776999f5e839ff8c1</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a58942c589535c4d34afdc5458dbb105b</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>acc1b51980d8ca734760d0e92cb419cc6</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name, double *d)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAttributeString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa8ed0f68cccb781b5ec07c9919613a69</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAttributeBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad6f9630ec7e0208d87db09e7a11687fb</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAttributeInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae7407196237e7493accf9b5b6e364b10</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getAttributeUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>af5087ea7c898f84a4ef3fb96a52d9a23</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getAttributeFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4519a719e9d6742be68448e5238536c5</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAttributeDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a03b346cde0dd7cc1d875330b1cb1cb4c</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getAttributeChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a384a5531b7b7502111306c4878ff7c2e</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getAttributeVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac458418a8a53b99b85bb2456b75a1957</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAttributeVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a339caae505e6c4465ae6c18cf60a76c8</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getAttributeVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4796ef15ee434643c06a95137133a569</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAttributeVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a799ecd67b92a6f1688f1e67d6b24a560</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XmlHelpers.hpp</name>
    <path>/dart/utils/</path>
    <filename>db/d95/XmlHelpers_8hpp</filename>
    <includes id="d8/dbb/Deprecated_8hpp" name="Deprecated.hpp" local="yes" imported="no">dart/common/Deprecated.hpp</includes>
    <includes id="da/d83/ResourceRetriever_8hpp" name="ResourceRetriever.hpp" local="yes" imported="no">dart/common/ResourceRetriever.hpp</includes>
    <includes id="d7/d37/MathTypes_8hpp" name="MathTypes.hpp" local="yes" imported="no">dart/math/MathTypes.hpp</includes>
    <class kind="class">dart::utils::TemplatedElementEnumerator</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>TemplatedElementEnumerator&lt; tinyxml2::XMLElement &gt;</type>
      <name>ElementEnumerator</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aca9b6628dbe888926901fa25ac1379c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplatedElementEnumerator&lt; const tinyxml2::XMLElement &gt;</type>
      <name>ConstElementEnumerator</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab10c84093cc5dcbba72069f85ce02172</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mainpage.dox</name>
    <path>/doxygen/</path>
    <filename>d5/d4d/mainpage_8dox</filename>
  </compound>
  <compound kind="namespace">
    <name>Assimp</name>
    <filename>d3/da2/namespaceAssimp.html</filename>
  </compound>
  <compound kind="namespace">
    <name>dart</name>
    <filename>d1/d83/namespacedart.html</filename>
    <namespace>dart::collision</namespace>
    <namespace>dart::Color</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::constraint</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::integration</namespace>
    <namespace>dart::lcpsolver</namespace>
    <namespace>dart::math</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::planning</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>common::sub_ptr&lt; T &gt;</type>
      <name>sub_ptr</name>
      <anchorfile>d1/d83/namespacedart.html</anchorfile>
      <anchor>aaf0980612cd4d36f879823eb69711522</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::collision</name>
    <filename>da/dcd/namespacedart_1_1collision.html</filename>
    <namespace>dart::collision::detail</namespace>
    <namespace>dart::collision::fcl</namespace>
    <class kind="class">dart::collision::BulletCollisionDetector</class>
    <class kind="class">dart::collision::BulletCollisionGroup</class>
    <class kind="class">dart::collision::BulletCollisionObject</class>
    <class kind="struct">dart::collision::BulletCollisionShape</class>
    <class kind="class">dart::collision::CollisionDetector</class>
    <class kind="class">dart::collision::CollisionFilter</class>
    <class kind="class">dart::collision::CompositeCollisionFilter</class>
    <class kind="class">dart::collision::BodyNodeCollisionFilter</class>
    <class kind="class">dart::collision::CollisionGroup</class>
    <class kind="class">dart::collision::CollisionObject</class>
    <class kind="struct">dart::collision::CollisionOption</class>
    <class kind="class">dart::collision::CollisionResult</class>
    <class kind="struct">dart::collision::Contact</class>
    <class kind="struct">dart::collision::dContactGeom</class>
    <class kind="class">dart::collision::DARTCollisionDetector</class>
    <class kind="class">dart::collision::DARTCollisionGroup</class>
    <class kind="class">dart::collision::DARTCollisionObject</class>
    <class kind="struct">dart::collision::DistanceFilter</class>
    <class kind="struct">dart::collision::BodyNodeDistanceFilter</class>
    <class kind="struct">dart::collision::DistanceOption</class>
    <class kind="struct">dart::collision::DistanceResult</class>
    <class kind="class">dart::collision::FCLCollisionDetector</class>
    <class kind="class">dart::collision::FCLCollisionGroup</class>
    <class kind="class">dart::collision::FCLCollisionObject</class>
    <class kind="class">dart::collision::FCLTypes</class>
    <class kind="class">dart::collision::OdeCollisionDetector</class>
    <class kind="class">dart::collision::OdeCollisionGroup</class>
    <class kind="class">dart::collision::OdeCollisionObject</class>
    <class kind="class">dart::collision::OdeTypes</class>
    <member kind="typedef">
      <type>double</type>
      <name>dVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a06cbc8d8bf1b517485a30f5fb5f59c7e</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dVector4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a31d67aec6c73cf30b210e20f78cae13d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a41017ac8839d38f79668c697222cddbb</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a615dc3d4662e37b804eecac1b3a6c1ac</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix6</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a91e09b519847bdf69dcf0ca7e307195e</anchor>
      <arglist>[48]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dQuaternion</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac42a4d9a17315ebd549ede1a4651511b</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CollisionDetector &gt;</type>
      <name>CollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a60235dadb9725d7b0a8478778a91f56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CollisionDetector &gt;</type>
      <name>ConstCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4967af4a5980fcbac544c4519a1393ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CollisionDetector &gt;</type>
      <name>WeakCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a718f43438129cea01a736d083c96df24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CollisionDetector &gt;</type>
      <name>WeakConstCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae647289fb5cbc03dd578cad1bcdcfbea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; FCLCollisionDetector &gt;</type>
      <name>FCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a60a6efdfe5b171c688f73af2c80ef374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const FCLCollisionDetector &gt;</type>
      <name>ConstFCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5999bf821b54466b65c2a3531686199c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; FCLCollisionDetector &gt;</type>
      <name>WeakFCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae2cf5979a04e90082b670eee06acef2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const FCLCollisionDetector &gt;</type>
      <name>WeakConstFCLCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>adea85c6523da01c84d80f15954b2d03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; DARTCollisionDetector &gt;</type>
      <name>DARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aeae4a50fd9551bf8cac3211e2bad3ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const DARTCollisionDetector &gt;</type>
      <name>ConstDARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2420d60ebe3b5c524f01697c25f57b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; DARTCollisionDetector &gt;</type>
      <name>WeakDARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a731d09757a7575fe47b770b3f05bb650</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const DARTCollisionDetector &gt;</type>
      <name>WeakConstDARTCollisionDetectorPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6a2b8bebc557aa346e56dd276d63a150</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CollisionObject &gt;</type>
      <name>CollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a7d0bb99e3e9f7e0ddab35eddb0704ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CollisionObject &gt;</type>
      <name>ConstCollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4208796df09bb53943f44c9411de0e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CollisionObject &gt;</type>
      <name>WeakCollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9902101c21fae61f818285c1597f2d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CollisionObject &gt;</type>
      <name>WeakConstCollisionObjectPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a966c82275ca8cea5f120fc150297921e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CollisionGroup &gt;</type>
      <name>CollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aeab70bdc8cdf02ba1537651124e0c64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CollisionGroup &gt;</type>
      <name>ConstCollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>acf2273026eaef143314a77d7de43dc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CollisionGroup &gt;</type>
      <name>WeakCollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ab70519b4fab66dd261c4e58b1dde9169</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CollisionGroup &gt;</type>
      <name>WeakConstCollisionGroupPtr</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a37834b14d4c668a3ae91385186a7d650</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkGroupValidity</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a182ab6f87ec676fa33c9ded227e47d73</anchor>
      <arglist>(BulletCollisionDetector *cd, CollisionGroup *group)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isCollision</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac1bfaaced4362d8990a1c5fc7bf23aea</anchor>
      <arglist>(btCollisionWorld *world)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filterOutCollisions</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a55c49df9631d223285fc8011c9c7b07e</anchor>
      <arglist>(btCollisionWorld *world)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af48f34ae3d323de6bee3c08842ed7a41</anchor>
      <arglist>(const btVector3 &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btVector3</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2f06b4ac7aeef37633e3b3420ab5973c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btMatrix3x3</type>
      <name>convertMatrix3x3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a483f89f8346675830080e7699933100f</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>btTransform</type>
      <name>convertTransform</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac24cea5ee84f5eb396ac2c302296e14</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convVector</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2ba103455befd217da9a68983578bd34</anchor>
      <arglist>(const Eigen::Vector3d &amp;p0, dVector3 &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convMatrix</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae5963bdaf13514a32a6a6ca2927e7fa4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T0, dMatrix3 &amp;R0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a582e2b248c47e0301f4f53bc9fbc9fd5</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner14</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ade2fe0e9de532caa8d4b317f59cb6cce</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner41</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5930bfa267cb2944c3f9b3e3dbd9b314</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner44</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9468049d0828ec2acded2d76495dc68a</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY0_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6c1b007d5021df4e7c86a53b2983e7f2</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY1_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae6653a9f95446d3454b7ffed271c7bc7</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cullPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae70b4278338a6fa4c3412e30d58b9c18</anchor>
      <arglist>(int n, double p[], int m, int i0, int iret[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dLineClosestApproach</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac47b960e83b7d7722dc787cc8d7efd2</anchor>
      <arglist>(const dVector3 pa, const dVector3 ua, const dVector3 pb, const dVector3 ub, double *alpha, double *beta)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>intersectRectQuad</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a3a0ff848fc18f09ae206645081fcab0e</anchor>
      <arglist>(double h[2], double p[8], double ret[16])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dClosestLineBoxPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a8bbea9f76289149a458a4b776ff71e97</anchor>
      <arglist>(const dVector3 p1, const dVector3 p2, const dVector3 c, const dMatrix3 R, const dVector3 side, dVector3 lret, dVector3 bret)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a7409462147751a0632c98ea71b3fc564</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const dVector3 p1, const dMatrix3 R1, const dVector3 side1, const dVector3 p2, const dMatrix3 R2, const dVector3 side2, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6a499c2347bdc35fbe5ff0489644bc98</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a48703ab40948227ad20b3469a15c24b2</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const double &amp;r1, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a688aee8a11cd6c22f133ede3bc6ce6a8</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;r0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4453cc30dabf1e28b86d1ff0e1bfe302</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;_r0, const Eigen::Isometry3d &amp;c0, const double &amp;_r1, const Eigen::Isometry3d &amp;c1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9a39956d9986c714d982e6661bd3558f</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const double &amp;sphere_rad, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderPlane</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac644b76c4859b4252238750710da3413</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;plane_normal, const Eigen::Isometry3d &amp;T1, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collide</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6edd9ffac5cdd22908b5fc9d5d49c5fc</anchor>
      <arglist>(CollisionObject *o1, CollisionObject *o2, CollisionResult &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkGroupValidity</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a33f770a0a4b825f5dd930d4437648721</anchor>
      <arglist>(DARTCollisionDetector *cd, CollisionGroup *group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warnUnsupportedShapeType</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a520e56bcf5668d2de3a482a12cf447e3</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6f8ea4e6deb9c89d59e4049fa4113b0f</anchor>
      <arglist>(float _scaleX, float _scaleY, float _scaleZ, const aiScene *_mesh, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createEllipsoid</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aef85de675695006f198ed465eec12f8a</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCube</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9c4a1f300451a39d8ce05910e3aaf0bf</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>::fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCylinder</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a81629a83f81c50ad4318050a655ff217</anchor>
      <arglist>(double _baseRadius, double _topRadius, double _height, int _slices, int _stacks, const dart::collision::fcl::Transform3 &amp;_transform)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkGroupValidity</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4b0e21997b89b43620b925d9ff1a1517</anchor>
      <arglist>(FCLCollisionDetector *cd, CollisionGroup *group)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static detail::OdeGeom *</type>
      <name>createOdeGeom</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a39d43959bb3bd71fd9a31ce6dd16bad2</anchor>
      <arglist>(OdeCollisionObject *collObj, const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>MAX_CYLBOX_CLIP_POINTS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a80ba017c7bf196a9663e0a9d3cd8578b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_AXIS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4146747250f23fa87196b56d54138c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_SEGMENT</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae7562cb943cd38b057831387484bea04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::BulletCollisionDetector</name>
    <filename>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <member kind="typedef">
      <type>common::Factory&lt; std::string, CollisionDetector, std::shared_ptr&lt; CollisionDetector &gt;&gt;</type>
      <name>Factory</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a433125bc4ab02bec0aa4d7b8b31bf2e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Singleton&lt; Factory &gt;</type>
      <name>SingletonFactory</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a093393b11b5fd56666e672718bd29907</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::FactoryRegistrar&lt; std::string, CollisionDetector, Derived, std::shared_ptr&lt; CollisionDetector &gt;&gt;</type>
      <name>Registrar</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a53052167ec62f34e8b415a67860d88aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BulletCollisionDetector</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a2125853237e218996f4048f31c223c23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionDetector &gt;</type>
      <name>cloneWithoutCollisionObjects</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>aaed7d4490d95e873dad3e8f8c1c790e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a31b7d488aac616e5d1615fea84159df8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroup</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>aee01e84b4ba4ee2102587f5e19af7429</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a18ae0bde0395b4882c2a57a24ff65366</anchor>
      <arglist>(CollisionGroup *group, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a08f4669401dc1baed81a114dc3e836d4</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>acc4d9af2172f2b72b73f9e47d002fa57</anchor>
      <arglist>(CollisionGroup *group, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>aba6de4f1347790f5e603796431bef513</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroup</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ada00af3bcb7e6a277a6395757fdccb78</anchor>
      <arglist>(const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroupAsSharedPtr</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a94e45c3c9acb18730448617fbe65f4d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroupAsSharedPtr</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>adb7f36b2dd0ed0d5f050397bdcd1f0c6</anchor>
      <arglist>(const Args &amp;...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; BulletCollisionDetector &gt;</type>
      <name>create</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a4862a9b14b6213ee24680a92926a38bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>ad42dea0272242915216a00de818de0f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Factory *</type>
      <name>getFactory</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ab8c46859c261e32f5018fd2f2aebc0cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BulletCollisionDetector</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a1ac57754114a7b0c0e398eaa4e04d2e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::unique_ptr&lt; CollisionObject &gt;</type>
      <name>createCollisionObject</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>ad8fac5915c710239f37be6e2c49a8543</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notifyCollisionObjectDestroying</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a0656a9cf3dec6b556da231b28b175c3e</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; CollisionObject &gt;</type>
      <name>claimCollisionObject</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a5668d53928f87dcc1db946a0523345c8</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; CollisionObjectManager &gt;</type>
      <name>mCollisionObjectManager</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>aea23b0673ba25331926ad18ed4b27efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>BulletCollisionShape *</type>
      <name>claimBulletCollisionShape</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>acb76d2210e17be53d47df362cb0267f0</anchor>
      <arglist>(const dynamics::ConstShapePtr &amp;shape)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>reclaimBulletCollisionShape</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a81a5e9310cc90b49c08ddbf47340e8da</anchor>
      <arglist>(const dynamics::ConstShapePtr &amp;shape)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::unique_ptr&lt; BulletCollisionShape &gt;</type>
      <name>createBulletCollisionShape</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a1982cba1b22fca203d07aaba1cd73691</anchor>
      <arglist>(const dynamics::ConstShapePtr &amp;shape)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; dynamics::ConstShapePtr, std::pair&lt; std::unique_ptr&lt; BulletCollisionShape &gt;, std::size_t &gt; &gt;</type>
      <name>mShapeMap</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>ae7079bc2497bc5314ade48990a029e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; BulletCollisionGroup &gt;</type>
      <name>mGroupForFiltering</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>ae2ec6adf106483220c19df76a570699a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Registrar&lt; BulletCollisionDetector &gt;</type>
      <name>mRegistrar</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a64d2be84a5dfc46af94251c3f5a8a07f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>CollisionDetector</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a39ee53f0014c1ca96d6b097beff055bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::BulletCollisionGroup</name>
    <filename>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</filename>
    <base>dart::collision::CollisionGroup</base>
    <member kind="function">
      <type></type>
      <name>BulletCollisionGroup</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>aaeeb895c029fc8d78c3c1dc6eaca0b7b</anchor>
      <arglist>(const CollisionDetectorPtr &amp;collisionDetector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BulletCollisionGroup</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a0925207ed740b2d8dae86209412d6e99</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>CollisionDetectorPtr</type>
      <name>getCollisionDetector</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>adb67e9d3084aea95fb9cbf7f6d827ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstCollisionDetectorPtr</type>
      <name>getCollisionDetector</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a0b530f8f55095c0d6b8ed55f66209ade</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFrame</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>aa73455cbd0340457e51b46b506d6f1af</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFrames</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a5fef614f94ac12b6962a104ff48137f6</anchor>
      <arglist>(const std::vector&lt; const dynamics::ShapeFrame * &gt; &amp;shapeFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a458d977a40fa359d2abbeb219dc79363</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>af972f0aabbb37c24ea7f0f45de8e0281</anchor>
      <arglist>(const std::vector&lt; const dynamics::ShapeFrame * &gt; &amp;shapeFrames, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a9efdd6fba33ddbcd2919d9b7e66fd845</anchor>
      <arglist>(const CollisionGroup *otherGroup, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a4ea0684335d78c5d1d199c0249cfb40b</anchor>
      <arglist>(const dynamics::BodyNode *bodyNode, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a96193b562839968a27fa5bc8960b0d3d</anchor>
      <arglist>(const dynamics::MetaSkeleton *skeleton, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a2b107b09c69b4d89cd786b0d1ccae39b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFrame</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>aabc89c1251628bd98c6ba8e80da2fa7e</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFrames</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a50a3150f9bf0512fae96012b79297e63</anchor>
      <arglist>(const std::vector&lt; const dynamics::ShapeFrame * &gt; &amp;shapeFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>ae785a5970125c9cf400e7589696a4d83</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a89c6aa758a16444093386701fba4ea59</anchor>
      <arglist>(const std::vector&lt; const dynamics::ShapeFrame * &gt; &amp;shapeFrames, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a7f8ba35f0965f54ad7ef8073c4c40173</anchor>
      <arglist>(const CollisionGroup *otherGroup, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a8e6f0621d8016c25a8be259364d749d5</anchor>
      <arglist>(const dynamics::BodyNode *bodyNode, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>ad9067ddd2d65d38abbba4d72581f0ea8</anchor>
      <arglist>(const dynamics::MetaSkeleton *skeleton, const Others *...others)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeShapeFramesOf</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>acd3ead8aa8c2edc4446d86dfadf65589</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllShapeFrames</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a92a86febdd53d8e8d4e8c5eaef2d66a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasShapeFrame</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>ae14d9563f25419a8b0f05820336be02b</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumShapeFrames</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>ad7056dbcd6b70b6d2014e0cdc5d2d344</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dynamics::ShapeFrame *</type>
      <name>getShapeFrame</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a8a441c0c4d75886ed092d5a739e87daa</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a2c3a74b5ce81d105c63cb637446fd888</anchor>
      <arglist>(const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a2a7094cd072c09f7bc322515f24833af</anchor>
      <arglist>(CollisionGroup *otherGroup, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a632910a4e7fceb9021fe840109b1a0e7</anchor>
      <arglist>(const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a7fdc96d4ed487119db03c2528148dc17</anchor>
      <arglist>(CollisionGroup *otherGroup, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeEngineData</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a3713b48e7df8eb083f07fe875ce5b51e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectToEngine</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>ac24389d81878700e5879df67af2e4064</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectsToEngine</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a632833bf0b7970e0166b1e2777272fd3</anchor>
      <arglist>(const std::vector&lt; CollisionObject * &gt; &amp;collObjects) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeCollisionObjectFromEngine</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a1c1eb6ae50d1a218e0e21e4b51ddb2e7</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeAllCollisionObjectsFromEngine</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>ae7c713546e9561c1747497aa5e8c855e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCollisionGroupEngineData</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>aa6da483d7b0fed3d76af7fe5f39daf66</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>btCollisionWorld *</type>
      <name>getBulletCollisionWorld</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a2e192e7b4dbd97225f2a3f38e6bebd42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const btCollisionWorld *</type>
      <name>getBulletCollisionWorld</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a69f6a6368314d8d49ca723c0fdc5ae5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateEngineData</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>ab4065ccd595d4400c5f6a2696bd80c61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; btBroadphaseInterface &gt;</type>
      <name>mBulletProadphaseAlg</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a9ea0079f1a027c8b48fa54948ecac89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; btCollisionConfiguration &gt;</type>
      <name>mBulletCollisionConfiguration</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>a7d6f0078b37c29bffd1915484a0a95f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; btDispatcher &gt;</type>
      <name>mBulletDispatcher</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>ac12ece425fb49c050bd4e7397ad09258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; btCollisionWorld &gt;</type>
      <name>mBulletCollisionWorld</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>afe1b93f4d56fb7b59e34a091acd953b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CollisionDetectorPtr</type>
      <name>mCollisionDetector</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a4f086d63ab9d8b0ef94962957d01f0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::pair&lt; const dynamics::ShapeFrame *, CollisionObjectPtr &gt; &gt;</type>
      <name>mShapeFrameMap</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a12cb0d1e80133a839cf653b7de6d0b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BulletCollisionDetector</name>
      <anchorfile>d0/dbd/classdart_1_1collision_1_1BulletCollisionGroup.html</anchorfile>
      <anchor>ae6d322912797c94a5c90d4078ed596a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::BulletCollisionObject</name>
    <filename>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</filename>
    <base>dart::collision::CollisionObject</base>
    <member kind="function">
      <type>btCollisionObject *</type>
      <name>getBulletCollisionObject</name>
      <anchorfile>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</anchorfile>
      <anchor>acbb3c461afd0432b4e1c27909de4d607</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const btCollisionObject *</type>
      <name>getBulletCollisionObject</name>
      <anchorfile>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</anchorfile>
      <anchor>a7fa3a90a4927ac19b14ba2affd6416e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionDetector *</type>
      <name>getCollisionDetector</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a2d1426b0bd9f88a955e49a23453eea2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CollisionDetector *</type>
      <name>getCollisionDetector</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>ab3c1d1913cec9adf38160fefcdc6d8cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dynamics::ShapeFrame *</type>
      <name>getShapeFrame</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a94cab945570a61d7929706f72680f8b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::ConstShapePtr</type>
      <name>getShape</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a007ba753276175faee08b0d5bdb5f542</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getTransform</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a5646e152a9f3ea335007282829986b80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BulletCollisionObject</name>
      <anchorfile>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</anchorfile>
      <anchor>a9b4f923d2672bdef82c929e358cd25b3</anchor>
      <arglist>(CollisionDetector *collisionDetector, const dynamics::ShapeFrame *shapeFrame, BulletCollisionShape *bulletCollisionShape)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateEngineData</name>
      <anchorfile>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</anchorfile>
      <anchor>a5a0c34a9f249696addeb3ff5c3592e19</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; btCollisionObject &gt;</type>
      <name>mBulletCollisionObject</name>
      <anchorfile>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</anchorfile>
      <anchor>a4276d79b73c4c32d9b910ade9343036f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BulletCollisionShape *</type>
      <name>mBulletCollisionShape</name>
      <anchorfile>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</anchorfile>
      <anchor>a768b3a0867b00976ba4b382c59b52c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CollisionDetector *</type>
      <name>mCollisionDetector</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a22e2dd200a4f5a5d5512dd86ad932fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dynamics::ShapeFrame *</type>
      <name>mShapeFrame</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>ac5830ede0b486ba2829e2e33e02e581c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BulletCollisionDetector</name>
      <anchorfile>d9/ddc/classdart_1_1collision_1_1BulletCollisionObject.html</anchorfile>
      <anchor>ae6d322912797c94a5c90d4078ed596a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::BulletCollisionShape</name>
    <filename>d7/d7e/structdart_1_1collision_1_1BulletCollisionShape.html</filename>
    <member kind="function">
      <type></type>
      <name>BulletCollisionShape</name>
      <anchorfile>d7/d7e/structdart_1_1collision_1_1BulletCollisionShape.html</anchorfile>
      <anchor>a9f4f9540549ab458bd595cdfab8939d9</anchor>
      <arglist>(std::unique_ptr&lt; btCollisionShape &gt; collisionShape, const btTransform &amp;relativeTransform)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BulletCollisionShape</name>
      <anchorfile>d7/d7e/structdart_1_1collision_1_1BulletCollisionShape.html</anchorfile>
      <anchor>a685e7b9354a3e657d1e168630177d408</anchor>
      <arglist>(std::unique_ptr&lt; btCollisionShape &gt; collShape)</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; btCollisionShape &gt;</type>
      <name>mCollisionShape</name>
      <anchorfile>d7/d7e/structdart_1_1collision_1_1BulletCollisionShape.html</anchorfile>
      <anchor>a5ecda8bd7886c39abd21088d9233c854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; btTransform &gt;</type>
      <name>mRelativeTransform</name>
      <anchorfile>d7/d7e/structdart_1_1collision_1_1BulletCollisionShape.html</anchorfile>
      <anchor>a9e0d9789332e40e889b8beac3e201b50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionDetector</name>
    <filename>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</filename>
    <class kind="class">dart::collision::CollisionDetector::CollisionObjectManager</class>
    <class kind="class">dart::collision::CollisionDetector::ManagerForSharableCollisionObjects</class>
    <class kind="class">dart::collision::CollisionDetector::ManagerForUnsharableCollisionObjects</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CollisionDetector</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ac892d69aaf2efb5781166d07053e388e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; CollisionDetector &gt;</type>
      <name>cloneWithoutCollisionObjects</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ab891509008a46ac377564c1e62331e7d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>aa34db48bb1bfcb0b70aee30125c6c308</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroup</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>aed2371fb701fa8cf9505869a43527cfd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>collide</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a6301ecaf53b3c24d6ad9cb1bee8bd11a</anchor>
      <arglist>(CollisionGroup *group, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>collide</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ae826bf9e8793b92d525f5aced5c515fb</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>distance</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a2e0cee9355917c689161136ef934c1fa</anchor>
      <arglist>(CollisionGroup *group, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>distance</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>af57bcaf995393c4c21354c944177c2a0</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CollisionDetector</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a445c2edcd3f63fcb0ac9e175f2101540</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::unique_ptr&lt; CollisionObject &gt;</type>
      <name>createCollisionObject</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a65bc96505f5ca57896d22b85b17ae49b</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyCollisionObjectDestroying</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a62ebd2dbbf06c23919879040e42400bb</anchor>
      <arglist>(CollisionObject *object)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>CollisionObject</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a9fac80507ff379cee7d4e1f254400b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>CollisionGroup</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a09c740ec2c89b140a583c5bdb32d6421</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionDetector::CollisionObjectManager</name>
    <filename>d1/d32/classdart_1_1collision_1_1CollisionDetector_1_1CollisionObjectManager.html</filename>
    <member kind="function">
      <type></type>
      <name>CollisionObjectManager</name>
      <anchorfile>d1/d32/classdart_1_1collision_1_1CollisionDetector_1_1CollisionObjectManager.html</anchorfile>
      <anchor>a433fda0906e04307e6dc6cbb4542680b</anchor>
      <arglist>(CollisionDetector *cd)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; CollisionObject &gt;</type>
      <name>claimCollisionObject</name>
      <anchorfile>d1/d32/classdart_1_1collision_1_1CollisionDetector_1_1CollisionObjectManager.html</anchorfile>
      <anchor>a418f69b529072f2a6c9cc9ec608340a7</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)=0</arglist>
    </member>
    <member kind="function">
      <type>CollisionDetector *</type>
      <name>getCollisionDetector</name>
      <anchorfile>d1/d32/classdart_1_1collision_1_1CollisionDetector_1_1CollisionObjectManager.html</anchorfile>
      <anchor>a8848aacdded8a2c2cd152a01a2573f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CollisionDetector *</type>
      <name>mCollisionDetector</name>
      <anchorfile>d1/d32/classdart_1_1collision_1_1CollisionDetector_1_1CollisionObjectManager.html</anchorfile>
      <anchor>abfb37529a5966a279d08a11bc133553d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionDetector::ManagerForSharableCollisionObjects</name>
    <filename>d7/dde/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects.html</filename>
    <base>dart::collision::CollisionDetector::CollisionObjectManager</base>
    <class kind="struct">dart::collision::CollisionDetector::ManagerForSharableCollisionObjects::CollisionObjectDeleter</class>
    <member kind="function">
      <type></type>
      <name>ManagerForSharableCollisionObjects</name>
      <anchorfile>d7/dde/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects.html</anchorfile>
      <anchor>a9484e2b63db3e63e688a1df5fe2470f8</anchor>
      <arglist>(CollisionDetector *cd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerForSharableCollisionObjects</name>
      <anchorfile>d7/dde/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects.html</anchorfile>
      <anchor>ac48e4206c22cbaa424cd11b20cec4fc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionObject &gt;</type>
      <name>claimCollisionObject</name>
      <anchorfile>d7/dde/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects.html</anchorfile>
      <anchor>a9807dd2c6a6791aeb0460bd07856771a</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; const dynamics::ShapeFrame *, std::weak_ptr&lt; CollisionObject &gt;&gt;</type>
      <name>CollisionObjectMap</name>
      <anchorfile>d7/dde/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects.html</anchorfile>
      <anchor>aa37580e0eaa709c2704f96f05b26a55d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const CollisionObjectDeleter</type>
      <name>mCollisionObjectDeleter</name>
      <anchorfile>d7/dde/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects.html</anchorfile>
      <anchor>af50df9b2a5ebfd9e11365337a9ef9dd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CollisionObjectMap</type>
      <name>mCollisionObjectMap</name>
      <anchorfile>d7/dde/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects.html</anchorfile>
      <anchor>a0048e768ea7eaacbcf711a148f587161</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::CollisionDetector::ManagerForSharableCollisionObjects::CollisionObjectDeleter</name>
    <filename>de/d5e/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects_1_1CollisionObjectDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>CollisionObjectDeleter</name>
      <anchorfile>de/d5e/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects_1_1CollisionObjectDeleter.html</anchorfile>
      <anchor>add0aa5f4f784f152d38803825efbb33a</anchor>
      <arglist>(ManagerForSharableCollisionObjects *mgr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>de/d5e/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects_1_1CollisionObjectDeleter.html</anchorfile>
      <anchor>ae4f565c8070ba53a8da743450aa4c28a</anchor>
      <arglist>(CollisionObject *object) const </arglist>
    </member>
    <member kind="variable">
      <type>ManagerForSharableCollisionObjects *</type>
      <name>mCollisionObjectManager</name>
      <anchorfile>de/d5e/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForSharableCollisionObjects_1_1CollisionObjectDeleter.html</anchorfile>
      <anchor>a7184f4b97de7cb7bbf408e1282a29ece</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionDetector::ManagerForUnsharableCollisionObjects</name>
    <filename>d1/d88/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects.html</filename>
    <base>dart::collision::CollisionDetector::CollisionObjectManager</base>
    <class kind="struct">dart::collision::CollisionDetector::ManagerForUnsharableCollisionObjects::CollisionObjectDeleter</class>
    <member kind="function">
      <type></type>
      <name>ManagerForUnsharableCollisionObjects</name>
      <anchorfile>d1/d88/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects.html</anchorfile>
      <anchor>a5835c16344ff815308abd68d5282e2f2</anchor>
      <arglist>(CollisionDetector *cd)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionObject &gt;</type>
      <name>claimCollisionObject</name>
      <anchorfile>d1/d88/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects.html</anchorfile>
      <anchor>a79bd0cc56bf6742a215308c108079fd3</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const CollisionObjectDeleter</type>
      <name>mCollisionObjectDeleter</name>
      <anchorfile>d1/d88/classdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects.html</anchorfile>
      <anchor>adb8dd1c89e6f1ffc463a25b7f61a0efc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::CollisionDetector::ManagerForUnsharableCollisionObjects::CollisionObjectDeleter</name>
    <filename>d0/dd8/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects_1_1CollisionObjectDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>CollisionObjectDeleter</name>
      <anchorfile>d0/dd8/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects_1_1CollisionObjectDeleter.html</anchorfile>
      <anchor>a6b74b33a5f4dc13e996b755ee96abaaf</anchor>
      <arglist>(ManagerForUnsharableCollisionObjects *mgr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>d0/dd8/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects_1_1CollisionObjectDeleter.html</anchorfile>
      <anchor>ada72c5581206469671dde8301b99c987</anchor>
      <arglist>(CollisionObject *object) const </arglist>
    </member>
    <member kind="variable">
      <type>ManagerForUnsharableCollisionObjects *</type>
      <name>mCollisionObjectManager</name>
      <anchorfile>d0/dd8/structdart_1_1collision_1_1CollisionDetector_1_1ManagerForUnsharableCollisionObjects_1_1CollisionObjectDeleter.html</anchorfile>
      <anchor>a716672564e4917cab5412305ab46c3c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionFilter</name>
    <filename>d3/d4d/classdart_1_1collision_1_1CollisionFilter.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>needCollision</name>
      <anchorfile>d3/d4d/classdart_1_1collision_1_1CollisionFilter.html</anchorfile>
      <anchor>a9f9005b347723c811366bb2694f1c491</anchor>
      <arglist>(const CollisionObject *object1, const CollisionObject *object2) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ignoresCollision</name>
      <anchorfile>d3/d4d/classdart_1_1collision_1_1CollisionFilter.html</anchorfile>
      <anchor>aed35b19d0ea23469a6da38beab90366d</anchor>
      <arglist>(const CollisionObject *object1, const CollisionObject *object2) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CompositeCollisionFilter</name>
    <filename>de/d82/classdart_1_1collision_1_1CompositeCollisionFilter.html</filename>
    <base>dart::collision::CollisionFilter</base>
    <member kind="function">
      <type>void</type>
      <name>addCollisionFilter</name>
      <anchorfile>de/d82/classdart_1_1collision_1_1CompositeCollisionFilter.html</anchorfile>
      <anchor>a3187d8f07a5b3d5dfea71edb7a9558e5</anchor>
      <arglist>(const CollisionFilter *filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollisionFilter</name>
      <anchorfile>de/d82/classdart_1_1collision_1_1CompositeCollisionFilter.html</anchorfile>
      <anchor>acb87781dd4787a541cdbe8c196e07787</anchor>
      <arglist>(const CollisionFilter *filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllCollisionFilters</name>
      <anchorfile>de/d82/classdart_1_1collision_1_1CompositeCollisionFilter.html</anchorfile>
      <anchor>ac6f05a970019fd3a485b201c7b61fad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignoresCollision</name>
      <anchorfile>de/d82/classdart_1_1collision_1_1CompositeCollisionFilter.html</anchorfile>
      <anchor>aa2b55e11a3ff95363eb61580d6dda3d4</anchor>
      <arglist>(const CollisionObject *object1, const CollisionObject *object2) const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; const CollisionFilter * &gt;</type>
      <name>mFilters</name>
      <anchorfile>de/d82/classdart_1_1collision_1_1CompositeCollisionFilter.html</anchorfile>
      <anchor>ad13a183a6dfc5e63c2779b11f6492580</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::BodyNodeCollisionFilter</name>
    <filename>d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html</filename>
    <base>dart::collision::CollisionFilter</base>
    <member kind="function">
      <type>void</type>
      <name>addBodyNodePairToBlackList</name>
      <anchorfile>d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html</anchorfile>
      <anchor>a3c2356646f799e3d5996c30cab876849</anchor>
      <arglist>(const dynamics::BodyNode *bodyNode1, const dynamics::BodyNode *bodyNode2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeBodyNodePairFromBlackList</name>
      <anchorfile>d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html</anchorfile>
      <anchor>aaecdcfa01bfa8ec5d27a4467a47f08f0</anchor>
      <arglist>(const dynamics::BodyNode *bodyNode1, const dynamics::BodyNode *bodyNode2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllBodyNodePairsFromBlackList</name>
      <anchorfile>d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html</anchorfile>
      <anchor>a8ca000630a772c271e49f12c16d2e40d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignoresCollision</name>
      <anchorfile>d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html</anchorfile>
      <anchor>a5a3d1d8d3e63bdf0f3fcbec5e9920099</anchor>
      <arglist>(const CollisionObject *object1, const CollisionObject *object2) const override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>areAdjacentBodies</name>
      <anchorfile>d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html</anchorfile>
      <anchor>a56c74c302930dd0fbb346e168ec29a31</anchor>
      <arglist>(const dynamics::BodyNode *bodyNode1, const dynamics::BodyNode *bodyNode2) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>detail::UnorderedPairs&lt; dynamics::BodyNode &gt;</type>
      <name>mBodyNodeBlackList</name>
      <anchorfile>d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html</anchorfile>
      <anchor>a95c65203c4727215e4cb5b4cf8b15d5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionGroup</name>
    <filename>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>CollisionGroup</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>acc35e33ad4d356e9793eb55b161ad7c1</anchor>
      <arglist>(const CollisionDetectorPtr &amp;collisionDetector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CollisionGroup</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>abdea6b223ebf62204a195a2d6d3845ab</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>initializeEngineData</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a5f2dbf50f19bc618bd13266cb575bca5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addCollisionObjectToEngine</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a0a5e597fd45b3db3b28ee77fdc9801eb</anchor>
      <arglist>(CollisionObject *object)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addCollisionObjectsToEngine</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>aae197572378f34e8fb864f859cdc001c</anchor>
      <arglist>(const std::vector&lt; CollisionObject * &gt; &amp;collObjects)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>removeCollisionObjectFromEngine</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>ab796120322b3efb3367e636c4c1172db</anchor>
      <arglist>(CollisionObject *object)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>removeAllCollisionObjectsFromEngine</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>a83b1c5a337ae825d3e09be053d32ffce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateCollisionGroupEngineData</name>
      <anchorfile>d2/d7a/classdart_1_1collision_1_1CollisionGroup.html</anchorfile>
      <anchor>aa82751d25e931cadfd7dd55d3579bcf5</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionObject</name>
    <filename>dd/d11/classdart_1_1collision_1_1CollisionObject.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CollisionObject</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a7af568c951e33917b9ab86a181eff0c7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CollisionObject</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a52f1d935890f905686d6961bab5a3ef5</anchor>
      <arglist>(CollisionDetector *collisionDetector, const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateEngineData</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>ae15664a1c51973bd63c37e901e3ac340</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>CollisionGroup</name>
      <anchorfile>dd/d11/classdart_1_1collision_1_1CollisionObject.html</anchorfile>
      <anchor>a09c740ec2c89b140a583c5bdb32d6421</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::CollisionOption</name>
    <filename>d4/d5b/structdart_1_1collision_1_1CollisionOption.html</filename>
    <member kind="function">
      <type></type>
      <name>CollisionOption</name>
      <anchorfile>d4/d5b/structdart_1_1collision_1_1CollisionOption.html</anchorfile>
      <anchor>a9ad983e8bfbdfaa9c2d73dc5614891b8</anchor>
      <arglist>(bool enableContact=true, std::size_t maxNumContacts=1000u, const std::shared_ptr&lt; CollisionFilter &gt; &amp;collisionFilter=nullptr)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableContact</name>
      <anchorfile>d4/d5b/structdart_1_1collision_1_1CollisionOption.html</anchorfile>
      <anchor>a16038af8da9ab781fd5281bc419eb0f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>maxNumContacts</name>
      <anchorfile>d4/d5b/structdart_1_1collision_1_1CollisionOption.html</anchorfile>
      <anchor>a449bebd4f4bc7039167f86fba627a69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CollisionFilter &gt;</type>
      <name>collisionFilter</name>
      <anchorfile>d4/d5b/structdart_1_1collision_1_1CollisionOption.html</anchorfile>
      <anchor>a01d6425f781c72dc0da44de272b2ce34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionResult</name>
    <filename>d8/d41/classdart_1_1collision_1_1CollisionResult.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addContact</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>aa3975f881bf77c52c946c552d8dd1ede</anchor>
      <arglist>(const Contact &amp;contact)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumContacts</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a9e72e2e487a60a494757d047c35a5ecb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Contact &amp;</type>
      <name>getContact</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>aaa0835d321cdc553cfc34f1d3caa31a5</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Contact &amp;</type>
      <name>getContact</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a09347cb9d00f6ec8b89cb5ef29ab7e5c</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Contact &gt; &amp;</type>
      <name>getContacts</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a83ea0682ba2c88aed2fe6f9d572337bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_set&lt; const dynamics::BodyNode * &gt; &amp;</type>
      <name>getCollidingBodyNodes</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>aafdaf0fa5a1e54a58fcdebfa1c89f2d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_set&lt; const dynamics::ShapeFrame * &gt; &amp;</type>
      <name>getCollidingShapeFrames</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a1cc4c3b3b1282577d60f6dcbff90c335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inCollision</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>aa15be38a9adeeca711ee69d104be28ef</anchor>
      <arglist>(const dynamics::BodyNode *bn) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inCollision</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a62289a75ecdd576a5265a1b4b3bafbd6</anchor>
      <arglist>(const dynamics::ShapeFrame *frame) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollision</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a8df6ff1c2a2ace1bcb9bf149a4341c7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a587c6e24468b7479dd0ae639cd64f43c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a4296de6e9016664ad2ae29e0e87e46d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addObject</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a40b448027368265cdefca300405b2e14</anchor>
      <arglist>(CollisionObject *object)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Contact &gt;</type>
      <name>mContacts</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>aa4d02422a9a1d92866742a6ad2f24ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; const dynamics::BodyNode * &gt;</type>
      <name>mCollidingBodyNodes</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>ac5197b205a205b9b2c38eb58e4366a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; const dynamics::ShapeFrame * &gt;</type>
      <name>mCollidingShapeFrames</name>
      <anchorfile>d8/d41/classdart_1_1collision_1_1CollisionResult.html</anchorfile>
      <anchor>a432614f5e24b88f0a90822926471bd3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::Contact</name>
    <filename>db/d36/structdart_1_1collision_1_1Contact.html</filename>
    <member kind="function">
      <type></type>
      <name>Contact</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>ace21feadd23eb1f3457f967e3d94cda3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>getNormalEpsilon</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>ad4f3000dab4b8c2c2693b653140e894a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>getNormalEpsilonSquared</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>aeedb9affe36c6d38bba9170df1de3391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isZeroNormal</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>ac971972e07ad8a079a8d74722af11135</anchor>
      <arglist>(const Eigen::Vector3d &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNonZeroNormal</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>aa99d5bc348bb7102e8fe1662bd2bc77c</anchor>
      <arglist>(const Eigen::Vector3d &amp;normal)</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>point</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a864b94e00e5f0d1fdf9fd6b14fd3931d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>normal</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a98fa09fd5905b8da9560a646ff5f7691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>force</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a341f95060d133bc8032270027f40c31b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CollisionObject *</type>
      <name>collisionObject1</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a27bd8227f0ff21b2a6d2949eb2bed7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CollisionObject *</type>
      <name>collisionObject2</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>ada9ecb486bdeb21c1fb2cb0c1c2a372b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>penetrationDepth</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a38f05bdd7d0f9a45f6b701cc09d98546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>triID1</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a698f5fc055669801222cea8a89b37bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>triID2</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a626e1c07725072a5f62aa59705450420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>userData</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a3b8594baba7d58648554edf424de68b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::dContactGeom</name>
    <filename>d9/dea/structdart_1_1collision_1_1dContactGeom.html</filename>
    <member kind="variable">
      <type>dVector3</type>
      <name>pos</name>
      <anchorfile>d9/dea/structdart_1_1collision_1_1dContactGeom.html</anchorfile>
      <anchor>a14c9536ba5f67da9fa8e83c87c981c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>depth</name>
      <anchorfile>d9/dea/structdart_1_1collision_1_1dContactGeom.html</anchorfile>
      <anchor>a347c892ff69b225e76ca4a7295254606</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::DARTCollisionDetector</name>
    <filename>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionDetector &gt;</type>
      <name>cloneWithoutCollisionObjects</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a4f5a7ad64ace91aa12e4d825b8e2cf40</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>af243963a0e34e06f5158f3e0f21910ee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroup</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a51ad6ec7e5126139149175491174e371</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a9bf9de2b0af75e211244f2358d2a5347</anchor>
      <arglist>(CollisionGroup *group, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>ae9edda02468f08a26796af4fd9c81350</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a8bf65565a2a7c56899f11df51e16db6d</anchor>
      <arglist>(CollisionGroup *group, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>ae93543bed9be3b15a8c2798efc1474c4</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; DARTCollisionDetector &gt;</type>
      <name>create</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a182820b25e8ef7f479f57810509c449b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>aa0e3d907ba11f3609757884b6a31ca13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DARTCollisionDetector</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>acd1bb511b14a5d1fb1a127ee3e253d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::unique_ptr&lt; CollisionObject &gt;</type>
      <name>createCollisionObject</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a8e5b7cffdf3e40aa5655ae5123926acb</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame) override</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Registrar&lt; DARTCollisionDetector &gt;</type>
      <name>mRegistrar</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a2aa817bdb066efdc7e8285131cfc1013</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::DARTCollisionGroup</name>
    <filename>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</filename>
    <base>dart::collision::CollisionGroup</base>
    <member kind="function">
      <type></type>
      <name>DARTCollisionGroup</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>ad6a8cc172f6bff1ca6f26312bf649a49</anchor>
      <arglist>(const CollisionDetectorPtr &amp;collisionDetector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DARTCollisionGroup</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>af9e30a1c6683891279178777d1248caf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeEngineData</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>ac121e182e2fd1c55fd64095d9caf874e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectToEngine</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>a2a85c8521b2bad404ba0c0a7889ad560</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectsToEngine</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>a131f0a59e68a5b87ed06c8309bce74dc</anchor>
      <arglist>(const std::vector&lt; CollisionObject * &gt; &amp;collObjects) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeCollisionObjectFromEngine</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>ac0080b3711ba4513a06a096c604c15af</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeAllCollisionObjectsFromEngine</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>a662fff8f0fc87b8d1e1c74efc6bfa9fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCollisionGroupEngineData</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>a1e5f08f383e0ee08a538e3eb2a33b7aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; CollisionObject * &gt;</type>
      <name>mCollisionObjects</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>a68d8414f2c1d34f3286755c3f6960549</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>DARTCollisionDetector</name>
      <anchorfile>dd/ddb/classdart_1_1collision_1_1DARTCollisionGroup.html</anchorfile>
      <anchor>a248f4afe6fd15edcad831272e588a87c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::DARTCollisionObject</name>
    <filename>d4/db7/classdart_1_1collision_1_1DARTCollisionObject.html</filename>
    <base>dart::collision::CollisionObject</base>
    <member kind="function" protection="protected">
      <type></type>
      <name>DARTCollisionObject</name>
      <anchorfile>d4/db7/classdart_1_1collision_1_1DARTCollisionObject.html</anchorfile>
      <anchor>ae9c0c104c74404cdd1320391cdf583a4</anchor>
      <arglist>(CollisionDetector *collisionDetector, const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateEngineData</name>
      <anchorfile>d4/db7/classdart_1_1collision_1_1DARTCollisionObject.html</anchorfile>
      <anchor>a33b9f8c743da8a5a8ff2ffc8135bea22</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>DARTCollisionDetector</name>
      <anchorfile>d4/db7/classdart_1_1collision_1_1DARTCollisionObject.html</anchorfile>
      <anchor>a248f4afe6fd15edcad831272e588a87c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::DistanceFilter</name>
    <filename>d2/d0a/structdart_1_1collision_1_1DistanceFilter.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>needDistance</name>
      <anchorfile>d2/d0a/structdart_1_1collision_1_1DistanceFilter.html</anchorfile>
      <anchor>ab20db762884d43f61dc505360b0d4ee0</anchor>
      <arglist>(const CollisionObject *object1, const CollisionObject *object2) const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::BodyNodeDistanceFilter</name>
    <filename>d6/da7/structdart_1_1collision_1_1BodyNodeDistanceFilter.html</filename>
    <base>dart::collision::DistanceFilter</base>
    <member kind="function">
      <type>bool</type>
      <name>needDistance</name>
      <anchorfile>d6/da7/structdart_1_1collision_1_1BodyNodeDistanceFilter.html</anchorfile>
      <anchor>a4fa1283d82f2ad3c16fd14353c6515da</anchor>
      <arglist>(const CollisionObject *object1, const CollisionObject *object2) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAdjacentBodies</name>
      <anchorfile>d6/da7/structdart_1_1collision_1_1BodyNodeDistanceFilter.html</anchorfile>
      <anchor>a4a13996654d6f774671d161854c5baab</anchor>
      <arglist>(const dynamics::BodyNode *bodyNode1, const dynamics::BodyNode *bodyNode2) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::DistanceOption</name>
    <filename>da/d12/structdart_1_1collision_1_1DistanceOption.html</filename>
    <member kind="function">
      <type></type>
      <name>DistanceOption</name>
      <anchorfile>da/d12/structdart_1_1collision_1_1DistanceOption.html</anchorfile>
      <anchor>a26d6f43741d36ccf8f252cb80300e46a</anchor>
      <arglist>(bool enableNearestPoints=false, double distanceLowerBound=0.0, const std::shared_ptr&lt; DistanceFilter &gt; &amp;distanceFilter=nullptr)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableNearestPoints</name>
      <anchorfile>da/d12/structdart_1_1collision_1_1DistanceOption.html</anchorfile>
      <anchor>adc8989e4bf87b463bc7ef8f427dc85ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>distanceLowerBound</name>
      <anchorfile>da/d12/structdart_1_1collision_1_1DistanceOption.html</anchorfile>
      <anchor>aec2498952fdceaa6c9ab361fa40197ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; DistanceFilter &gt;</type>
      <name>distanceFilter</name>
      <anchorfile>da/d12/structdart_1_1collision_1_1DistanceOption.html</anchorfile>
      <anchor>a657dd2c965c7fa57f6d26caefd908e03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::DistanceResult</name>
    <filename>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</filename>
    <member kind="function">
      <type></type>
      <name>DistanceResult</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>ad74461ed081b8aee5508ca4c24a91c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>ae714545c5edbdfb9ea9c3222375c0bbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>found</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>ab18ace19006c09caf9c883ab4a9122fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMinDistanceClamped</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>accc392e62c3b9a0a339119d4ead99deb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minDistance</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>a29429fb1ef9dd00810b8a57e37422270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>unclampedMinDistance</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>a097d441d2e647c5ecad38febb278da72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const dynamics::ShapeFrame *</type>
      <name>shapeFrame1</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>affef61217040ec673f6b0bddcf25e516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const dynamics::ShapeFrame *</type>
      <name>shapeFrame2</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>ab16f5028588d0a839189caaaa09283df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>nearestPoint1</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>ae99248ed4ab8142ee457ead5965931ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>nearestPoint2</name>
      <anchorfile>d0/d4e/structdart_1_1collision_1_1DistanceResult.html</anchorfile>
      <anchor>a72141cd76642f37fb85c838cdd74f97d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLCollisionDetector</name>
    <filename>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <class kind="class">dart::collision::FCLCollisionDetector::FCLCollisionGeometryDeleter</class>
    <member kind="enumeration">
      <type></type>
      <name>PrimitiveShape</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aa4f84f2ddb992de4c2c75824317a2feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PRIMITIVE</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aa4f84f2ddb992de4c2c75824317a2feba713b6c124735c60ea12c059d7b94846f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MESH</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aa4f84f2ddb992de4c2c75824317a2febac6e52b380ac2900185d0ed15a1fbfc15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContactPointComputationMethod</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aad0250fc8ec23e3748fce8ae636ecc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FCL</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aad0250fc8ec23e3748fce8ae636ecc62aab09b75d1e79a121b9629b03030bbe6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DART</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aad0250fc8ec23e3748fce8ae636ecc62ac24618884af764ca6b74ed387d8ea832</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCLCollisionDetector</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a6bc2fe2ddc2bda62839847bdb7267fd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionDetector &gt;</type>
      <name>cloneWithoutCollisionObjects</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a754645bd570aaf76c98f7f746c2ba172</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a0e1c5d8e0eaf4f3661bc9556ab70874d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroup</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>ac396f443b89c583b32b7b53ea520314a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aa43cb2f36a415c752bb47a1f35a6b8b8</anchor>
      <arglist>(CollisionGroup *group, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a9aed57abb6a522eb9bd4fd039358993d</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>ac22d51e32b0fee102ca16634f84c2f90</anchor>
      <arglist>(CollisionGroup *group, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>af83fcfdac6806348f67e31802983fc38</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrimitiveShapeType</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a5bef46a440a42a8586f18703e1107e3f</anchor>
      <arglist>(PrimitiveShape type)</arglist>
    </member>
    <member kind="function">
      <type>PrimitiveShape</type>
      <name>getPrimitiveShapeType</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aa572f99603ba4a1d53fc3cc64a321db5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContactPointComputationMethod</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a289ed0134398749a5f2bfbd0f3ee4824</anchor>
      <arglist>(ContactPointComputationMethod method)</arglist>
    </member>
    <member kind="function">
      <type>ContactPointComputationMethod</type>
      <name>getContactPointComputationMethod</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aca1a3be71515b1478408dcc0573f57b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; FCLCollisionDetector &gt;</type>
      <name>create</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a9549aede63c5ccdde735dd662fe1b668</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a7cdb927a45535fc03d6b2daf8b1ad696</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FCLCollisionDetector</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a21016049c1f32c5683da660ef35a40cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::unique_ptr&lt; CollisionObject &gt;</type>
      <name>createCollisionObject</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a8c8fb9d5e735c85597bafa13bcabee3a</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fcl_shared_ptr&lt; dart::collision::fcl::CollisionGeometry &gt;</type>
      <name>claimFCLCollisionGeometry</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>af75f20131feffc4f0e6835c00ddbc8c1</anchor>
      <arglist>(const dynamics::ConstShapePtr &amp;shape)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PrimitiveShape</type>
      <name>mPrimitiveShapeType</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aad409fd66bd5c0da2dcb2be6845fac96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ContactPointComputationMethod</type>
      <name>mContactPointComputationMethod</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a10c35d7321a463ccdde749c189bb16e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; dynamics::ConstShapePtr, fcl_weak_ptr&lt; dart::collision::fcl::CollisionGeometry &gt;&gt;</type>
      <name>ShapeMap</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a531fc43bf0cf498b200dd31834df38c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>fcl_shared_ptr&lt; dart::collision::fcl::CollisionGeometry &gt;</type>
      <name>createFCLCollisionGeometry</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a91b0af649da544474b14e14679fc4826</anchor>
      <arglist>(const dynamics::ConstShapePtr &amp;shape, FCLCollisionDetector::PrimitiveShape type, const FCLCollisionGeometryDeleter &amp;deleter)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ShapeMap</type>
      <name>mShapeMap</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a44f8465420951485aed3853735482185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Registrar&lt; FCLCollisionDetector &gt;</type>
      <name>mRegistrar</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>ac38e7326b577148ddc499200185b9937</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLCollisionDetector::FCLCollisionGeometryDeleter</name>
    <filename>d2/dee/classdart_1_1collision_1_1FCLCollisionDetector_1_1FCLCollisionGeometryDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>FCLCollisionGeometryDeleter</name>
      <anchorfile>d2/dee/classdart_1_1collision_1_1FCLCollisionDetector_1_1FCLCollisionGeometryDeleter.html</anchorfile>
      <anchor>a22d58e98c38a45b4c33a778614da3eed</anchor>
      <arglist>(FCLCollisionDetector *cd, const dynamics::ConstShapePtr &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>d2/dee/classdart_1_1collision_1_1FCLCollisionDetector_1_1FCLCollisionGeometryDeleter.html</anchorfile>
      <anchor>a673edff2c5e8af98e3dab49a93a11e36</anchor>
      <arglist>(dart::collision::fcl::CollisionGeometry *geom) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FCLCollisionDetector *</type>
      <name>mFCLCollisionDetector</name>
      <anchorfile>d2/dee/classdart_1_1collision_1_1FCLCollisionDetector_1_1FCLCollisionGeometryDeleter.html</anchorfile>
      <anchor>a95757b200833ad938262c6e14d8a6224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::ConstShapePtr</type>
      <name>mShape</name>
      <anchorfile>d2/dee/classdart_1_1collision_1_1FCLCollisionDetector_1_1FCLCollisionGeometryDeleter.html</anchorfile>
      <anchor>a7629e686f6bdb6df4417dab4d4049271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLCollisionGroup</name>
    <filename>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</filename>
    <base>dart::collision::CollisionGroup</base>
    <member kind="typedef">
      <type>dart::collision::fcl::DynamicAABBTreeCollisionManager</type>
      <name>FCLCollisionManager</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>acfcb4752aa45335888edaafd6f3c9c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FCLCollisionGroup</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>aef07c3930b5c8c27ebc2fc901063c6ae</anchor>
      <arglist>(const CollisionDetectorPtr &amp;collisionDetector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCLCollisionGroup</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>a641499e70a64fa24464814733fa7f984</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeEngineData</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>a2ff153e0f24340a2233ece4e13bd62c7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectToEngine</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>a064c782e5f3a7d79ae151d323decfd9f</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectsToEngine</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>a4bba910d44cebb627f8cc9fbe402e93c</anchor>
      <arglist>(const std::vector&lt; CollisionObject * &gt; &amp;collObjects) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeCollisionObjectFromEngine</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>ad936021fb05ffb0e660f9b5a389fb163</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeAllCollisionObjectsFromEngine</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>a050bde20a691d1b909fa7c1fddb09441</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCollisionGroupEngineData</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>ad640393cfed97759b91b75139f720696</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FCLCollisionManager *</type>
      <name>getFCLCollisionManager</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>abeaf2272f7e95aad0bc0c4cddf957ca9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const FCLCollisionManager *</type>
      <name>getFCLCollisionManager</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>aa8edef1d29a23ba758850f839e6c9663</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; FCLCollisionManager &gt;</type>
      <name>mBroadPhaseAlg</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>a923489d8f59250af85b9615654a58e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>FCLCollisionDetector</name>
      <anchorfile>dd/d99/classdart_1_1collision_1_1FCLCollisionGroup.html</anchorfile>
      <anchor>a9fb3e9b39d83abe1484ed8271cc1366a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLCollisionObject</name>
    <filename>d8/d9f/classdart_1_1collision_1_1FCLCollisionObject.html</filename>
    <base>dart::collision::CollisionObject</base>
    <member kind="function">
      <type>dart::collision::fcl::CollisionObject *</type>
      <name>getFCLCollisionObject</name>
      <anchorfile>d8/d9f/classdart_1_1collision_1_1FCLCollisionObject.html</anchorfile>
      <anchor>a19748af8737b8ef8a2c9a631b3248e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dart::collision::fcl::CollisionObject *</type>
      <name>getFCLCollisionObject</name>
      <anchorfile>d8/d9f/classdart_1_1collision_1_1FCLCollisionObject.html</anchorfile>
      <anchor>a6397a7f7beaa42862402f12c5a75f216</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FCLCollisionObject</name>
      <anchorfile>d8/d9f/classdart_1_1collision_1_1FCLCollisionObject.html</anchorfile>
      <anchor>a8546279e308577b6f48505e13c898768</anchor>
      <arglist>(CollisionDetector *collisionDetector, const dynamics::ShapeFrame *shapeFrame, const fcl_shared_ptr&lt; dart::collision::fcl::CollisionGeometry &gt; &amp;fclCollGeom)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateEngineData</name>
      <anchorfile>d8/d9f/classdart_1_1collision_1_1FCLCollisionObject.html</anchorfile>
      <anchor>a0a3ed56c425032aba22130f94077f82e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; dart::collision::fcl::CollisionObject &gt;</type>
      <name>mFCLCollisionObject</name>
      <anchorfile>d8/d9f/classdart_1_1collision_1_1FCLCollisionObject.html</anchorfile>
      <anchor>aa0b05524252deea5f36377e9909967aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>FCLCollisionDetector</name>
      <anchorfile>d8/d9f/classdart_1_1collision_1_1FCLCollisionObject.html</anchorfile>
      <anchor>a9fb3e9b39d83abe1484ed8271cc1366a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLTypes</name>
    <filename>db/df9/classdart_1_1collision_1_1FCLTypes.html</filename>
    <member kind="function" static="yes">
      <type>static dart::collision::fcl::Vector3</type>
      <name>convertVector3</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>a86845fcc666fa6d7dc2aae8beabed9bf</anchor>
      <arglist>(const Eigen::Vector3d &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>convertVector3</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>aa2d0cba378f6b2a03c1325f8fff31b0d</anchor>
      <arglist>(const dart::collision::fcl::Vector3 &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dart::collision::fcl::Matrix3</type>
      <name>convertMatrix3x3</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>af31dd8296c0e80b19c4b2057b7b89301</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dart::collision::fcl::Transform3</type>
      <name>convertTransform</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>a2ac2af042b72de590cb59f3348536617</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::OdeCollisionDetector</name>
    <filename>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeCollisionDetector</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a1bc3946686045a8c065d9beaa4829705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CollisionDetector &gt;</type>
      <name>cloneWithoutCollisionObjects</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a58d8a189d5b2d28d101074990b417988</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a1f9b465515a3527b1b59742c0c7feff4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; CollisionGroup &gt;</type>
      <name>createCollisionGroup</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>aa6b1e0797f288f724b311e9b5b08a024</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a9fb58fa018a35b1cb793609596617d4d</anchor>
      <arglist>(CollisionGroup *group, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collide</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>ad396a4af275ff87f2b0aa80e92768ba1</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const CollisionOption &amp;option=CollisionOption(false, 1u, nullptr), CollisionResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>ae153942ef9a8bc2a16b7d74c247838f9</anchor>
      <arglist>(CollisionGroup *group, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a64634b39eec48522273a015b07ecffde</anchor>
      <arglist>(CollisionGroup *group1, CollisionGroup *group2, const DistanceOption &amp;option=DistanceOption(false, 0.0, nullptr), DistanceResult *result=nullptr) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; OdeCollisionDetector &gt;</type>
      <name>create</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a9ca474c9447c677615c3d2724392c6db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a15efc6d25e530e329dbe9a31e962cc2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>OdeCollisionDetector</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>ae56ba25fc3133e69ceefcc3ff8185f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::unique_ptr&lt; CollisionObject &gt;</type>
      <name>createCollisionObject</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a1418830f3c70b1cb0c677a7622efd0e2</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dWorldID</type>
      <name>getOdeWorldId</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a3e51dc33c0414e08dcb385e0e0d4521a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dWorldID</type>
      <name>mWorldId</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a40b001360122d6a93f16c46d99b907b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>dGeomID</type>
      <name>createOdeCollisionGeometry</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>ab67985e6d99fc7995982e7038fb6379f</anchor>
      <arglist>(const dynamics::ConstShapePtr &amp;shape)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dContactGeom</type>
      <name>contactCollisions</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a7245bf1156b4e6d818ab221632a6fdb3</anchor>
      <arglist>[250]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Registrar&lt; OdeCollisionDetector &gt;</type>
      <name>mRegistrar</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a069b7eb1d8554b047662a93f098f83b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>OdeCollisionObject</name>
      <anchorfile>de/db9/classdart_1_1collision_1_1OdeCollisionDetector.html</anchorfile>
      <anchor>a5a8b8f0d1bad45d8b01caafc9ca96a3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::OdeCollisionGroup</name>
    <filename>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</filename>
    <base>dart::collision::CollisionGroup</base>
    <member kind="function">
      <type></type>
      <name>OdeCollisionGroup</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>a88068489487a31c06461c33845e21dc9</anchor>
      <arglist>(const CollisionDetectorPtr &amp;collisionDetector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeCollisionGroup</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>ae1a4452896b69486a286f47b0c909710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeEngineData</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>a52db062ee3892b381f7441089397258f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectToEngine</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>adee982f2a71aff9036e07a18f181f0eb</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCollisionObjectsToEngine</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>afc17913a66394eaf6e3b7fa3e29b13cc</anchor>
      <arglist>(const std::vector&lt; CollisionObject * &gt; &amp;collObjects) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeCollisionObjectFromEngine</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>aabd74fb4911eb66386c1b44434a2c6b1</anchor>
      <arglist>(CollisionObject *object) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeAllCollisionObjectsFromEngine</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>ade72ea2639762d5efd9ebad0cd086a6b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCollisionGroupEngineData</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>a413807740f3a33b62644e24417dcbbb0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dSpaceID</type>
      <name>getOdeSpaceId</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>ac6c75c248d5f804121933f3999d23188</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dSpaceID</type>
      <name>mSpaceId</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>a6a974c3d30af54e8cab37b65e83959b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>OdeCollisionDetector</name>
      <anchorfile>de/d90/classdart_1_1collision_1_1OdeCollisionGroup.html</anchorfile>
      <anchor>a229e3d5a0dd70d57dc287907ef306f37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::OdeCollisionObject</name>
    <filename>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</filename>
    <base>dart::collision::CollisionObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeCollisionObject</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>ade9b8b0b94b44f2d9b7be84f946a4092</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>OdeCollisionObject</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>a7dde117d58c636578d67449158d6fb94</anchor>
      <arglist>(OdeCollisionDetector *collisionDetector, const dynamics::ShapeFrame *shapeFrame)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateEngineData</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>a066a9aedc7f6602622ab9fa46c10335e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dBodyID</type>
      <name>getOdeBodyId</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>ac6831aedcf21179b8808ae7e54049cc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dGeomID</type>
      <name>getOdeGeomId</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>ab58d68e257f5d4380823fb4e1c3bc70a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; detail::OdeGeom &gt;</type>
      <name>mOdeGeom</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>a1f1f38895d464579ed605d938a9e2419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dBodyID</type>
      <name>mBodyId</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>a75eb6abb4aec9b9277c8e89cb5abece3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>OdeCollisionDetector</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>a229e3d5a0dd70d57dc287907ef306f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>OdeCollisionGroup</name>
      <anchorfile>d4/da5/classdart_1_1collision_1_1OdeCollisionObject.html</anchorfile>
      <anchor>a84a9c259b821e12dcd28a126802db2ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::OdeTypes</name>
    <filename>d9/dc8/classdart_1_1collision_1_1OdeTypes.html</filename>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>convertVector3</name>
      <anchorfile>d9/dc8/classdart_1_1collision_1_1OdeTypes.html</anchorfile>
      <anchor>aa08e7c24ac412e48177c2e8e9dcce2fb</anchor>
      <arglist>(const dVector3 &amp;vec)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::collision::detail</name>
    <filename>df/d5b/namespacedart_1_1collision_1_1detail.html</filename>
    <class kind="class">dart::collision::detail::BulletCollisionDispatcher</class>
    <class kind="struct">dart::collision::detail::BulletOverlapFilterCallback</class>
    <class kind="class">dart::collision::detail::UnorderedPairs</class>
    <class kind="class">dart::collision::detail::OdeBox</class>
    <class kind="class">dart::collision::detail::OdeCapsule</class>
    <class kind="class">dart::collision::detail::OdeCylinder</class>
    <class kind="class">dart::collision::detail::OdeGeom</class>
    <class kind="class">dart::collision::detail::OdeHeightmap</class>
    <class kind="class">dart::collision::detail::OdeMesh</class>
    <class kind="class">dart::collision::detail::OdePlane</class>
    <class kind="class">dart::collision::detail::OdeSphere</class>
    <member kind="typedef">
      <type>OdeHeightmap&lt; float &gt;</type>
      <name>OdeHeightmapf</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>ac3a8d12bdca17410fec7d245ad135ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OdeHeightmap&lt; double &gt;</type>
      <name>OdeHeightmapd</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>a594fc234e04ce655e5199d0e783d3fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOdeHeightfieldDetails</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>a7ca90766bca331fafdd9eb50fe04b983</anchor>
      <arglist>(const dHeightfieldDataID odeHeightfieldId, const S *heights, const std::size_t &amp;width, const std::size_t &amp;height, const Eigen::Vector3d &amp;scale, typename std::enable_if&lt; std::is_same&lt; float, S &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOdeHeightfieldDetails</name>
      <anchorfile>df/d5b/namespacedart_1_1collision_1_1detail.html</anchorfile>
      <anchor>a974c044508931d62167a94dc2eb3d77c</anchor>
      <arglist>(const dHeightfieldDataID odeHeightfieldId, const S *heights, const std::size_t &amp;width, const std::size_t &amp;height, const Eigen::Vector3d &amp;scale, typename std::enable_if&lt; std::is_same&lt; double, S &gt;::value &gt;::type *=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::BulletCollisionDispatcher</name>
    <filename>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>BulletCollisionDispatcher</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>a624ec5fed6ebe1eca56b5691eec81362</anchor>
      <arglist>(btCollisionConfiguration *config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDone</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>afd890dc555992fb8d635c7d834981598</anchor>
      <arglist>(bool done)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDone</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>a394575eea550ec6df6d6f1bdfff7e97c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilter</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>a6bb9eece9f81d83eb081031000982d7d</anchor>
      <arglist>(const std::shared_ptr&lt; CollisionFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>getFilter</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>aa388fae9611240fc01b20268cd5aacb8</anchor>
      <arglist>() const -&gt; std::shared_ptr&lt; CollisionFilter &gt;</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsCollision</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>ac77b3469f3bce965a08f273055417e48</anchor>
      <arglist>(const btCollisionObject *body0, const btCollisionObject *body1) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mDone</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>aea6ee7f91b11b3ec59fd298b902249d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; CollisionFilter &gt;</type>
      <name>mFilter</name>
      <anchorfile>d8/d3d/classdart_1_1collision_1_1detail_1_1BulletCollisionDispatcher.html</anchorfile>
      <anchor>ac6ee0aeaa26da849f9fc6418375bee6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::detail::BulletOverlapFilterCallback</name>
    <filename>de/db3/structdart_1_1collision_1_1detail_1_1BulletOverlapFilterCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>BulletOverlapFilterCallback</name>
      <anchorfile>de/db3/structdart_1_1collision_1_1detail_1_1BulletOverlapFilterCallback.html</anchorfile>
      <anchor>a14162bb127761202bfe0c51135b29f99</anchor>
      <arglist>(const std::shared_ptr&lt; CollisionFilter &gt; &amp;filter=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needBroadphaseCollision</name>
      <anchorfile>de/db3/structdart_1_1collision_1_1detail_1_1BulletOverlapFilterCallback.html</anchorfile>
      <anchor>a6f1ff2c9341a5aa628d0d31a8d4e2370</anchor>
      <arglist>(btBroadphaseProxy *proxy0, btBroadphaseProxy *proxy1) const override</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>foundCollision</name>
      <anchorfile>de/db3/structdart_1_1collision_1_1detail_1_1BulletOverlapFilterCallback.html</anchorfile>
      <anchor>acd94ac7fd6c317e3e8e392d82e930b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>done</name>
      <anchorfile>de/db3/structdart_1_1collision_1_1detail_1_1BulletOverlapFilterCallback.html</anchorfile>
      <anchor>a4d8783b38608a247d79d3a24f8a61d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CollisionFilter &gt;</type>
      <name>filter</name>
      <anchorfile>de/db3/structdart_1_1collision_1_1detail_1_1BulletOverlapFilterCallback.html</anchorfile>
      <anchor>a78526a837e0eb6ee784dc7651e48e6fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::UnorderedPairs</name>
    <filename>d1/dd4/classdart_1_1collision_1_1detail_1_1UnorderedPairs.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>void</type>
      <name>addPair</name>
      <anchorfile>d1/dd4/classdart_1_1collision_1_1detail_1_1UnorderedPairs.html</anchorfile>
      <anchor>a7d9ff6326420639266d12eb1698ea0e1</anchor>
      <arglist>(const T *left, const T *right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePair</name>
      <anchorfile>d1/dd4/classdart_1_1collision_1_1detail_1_1UnorderedPairs.html</anchorfile>
      <anchor>a39a57fbc099a5b75c5a450fa3f4d73ec</anchor>
      <arglist>(const T *left, const T *right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllPairs</name>
      <anchorfile>d1/dd4/classdart_1_1collision_1_1detail_1_1UnorderedPairs.html</anchorfile>
      <anchor>a225b80da07ae8a974fd1aed51bc4f3a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>d1/dd4/classdart_1_1collision_1_1detail_1_1UnorderedPairs.html</anchorfile>
      <anchor>aca01aafc2130398107759744b8ac0da3</anchor>
      <arglist>(const T *left, const T *right) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; const T *, std::unordered_set&lt; const T * &gt; &gt;</type>
      <name>mList</name>
      <anchorfile>d1/dd4/classdart_1_1collision_1_1detail_1_1UnorderedPairs.html</anchorfile>
      <anchor>a27e12c431d0ed8c84f591daf62615c89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdeBox</name>
    <filename>de/dc7/classdart_1_1collision_1_1detail_1_1OdeBox.html</filename>
    <base>dart::collision::detail::OdeGeom</base>
    <member kind="function">
      <type></type>
      <name>OdeBox</name>
      <anchorfile>de/dc7/classdart_1_1collision_1_1detail_1_1OdeBox.html</anchorfile>
      <anchor>a70025665908c9318646d867bb4d137a4</anchor>
      <arglist>(const OdeCollisionObject *parent, const Eigen::Vector3d &amp;size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeBox</name>
      <anchorfile>de/dc7/classdart_1_1collision_1_1detail_1_1OdeBox.html</anchorfile>
      <anchor>a1b64ea16ad8d67048a2b8f494e3025d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const OdeCollisionObject *</type>
      <name>getParentCollisionObject</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>a744891ca6c3bbf529fc850a3a160a4cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateEngineData</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>a49dc1fda0f181793cd5d12dec380ee44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dGeomID</type>
      <name>getOdeGeomId</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>adb5381f3eec0360d9849cc4b7d21ee10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPlaceable</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>a3bf6af372bd3b5fe62245d9bcb130ef9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const OdeCollisionObject *</type>
      <name>mParentCollisionObject</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>a643a1acc479c1ce3f8cdec3ebb7d65d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dGeomID</type>
      <name>mGeomId</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>ab25ff29a743b307b591a102d3d4043e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdeCapsule</name>
    <filename>d7/de4/classdart_1_1collision_1_1detail_1_1OdeCapsule.html</filename>
    <base>dart::collision::detail::OdeGeom</base>
    <member kind="function">
      <type></type>
      <name>OdeCapsule</name>
      <anchorfile>d7/de4/classdart_1_1collision_1_1detail_1_1OdeCapsule.html</anchorfile>
      <anchor>afe04c0dea4ee96ccd85478f19934af3e</anchor>
      <arglist>(const OdeCollisionObject *parent, double radius, double height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeCapsule</name>
      <anchorfile>d7/de4/classdart_1_1collision_1_1detail_1_1OdeCapsule.html</anchorfile>
      <anchor>a9281867b2c1adeefcdaf88047b70ee4e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdeCylinder</name>
    <filename>d1/d22/classdart_1_1collision_1_1detail_1_1OdeCylinder.html</filename>
    <base>dart::collision::detail::OdeGeom</base>
    <member kind="function">
      <type></type>
      <name>OdeCylinder</name>
      <anchorfile>d1/d22/classdart_1_1collision_1_1detail_1_1OdeCylinder.html</anchorfile>
      <anchor>ae66b2cb583322cc75955ed19c9fa3030</anchor>
      <arglist>(const OdeCollisionObject *parent, double radius, double height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeCylinder</name>
      <anchorfile>d1/d22/classdart_1_1collision_1_1detail_1_1OdeCylinder.html</anchorfile>
      <anchor>ac1d52194315750c00739cbc34f387700</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdeGeom</name>
    <filename>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</filename>
    <member kind="function">
      <type></type>
      <name>OdeGeom</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>aad4db3a7374e576e12a54232a6461531</anchor>
      <arglist>(const OdeCollisionObject *collObj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeGeom</name>
      <anchorfile>df/d73/classdart_1_1collision_1_1detail_1_1OdeGeom.html</anchorfile>
      <anchor>a0db761a79284c6f5fc1d9eb970819018</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdeHeightmap</name>
    <filename>d4/d56/classdart_1_1collision_1_1detail_1_1OdeHeightmap.html</filename>
    <templarg></templarg>
    <base>dart::collision::detail::OdeGeom</base>
    <member kind="function">
      <type></type>
      <name>OdeHeightmap</name>
      <anchorfile>d4/d56/classdart_1_1collision_1_1detail_1_1OdeHeightmap.html</anchorfile>
      <anchor>a89aabaafb5d0765f5a61b3a8ebc3d750</anchor>
      <arglist>(const OdeCollisionObject *parent, const dynamics::HeightmapShape&lt; S &gt; *hs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OdeHeightmap</name>
      <anchorfile>d4/d56/classdart_1_1collision_1_1detail_1_1OdeHeightmap.html</anchorfile>
      <anchor>aa6fb450b50117141df278a3d19191554</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dHeightfieldDataID</type>
      <name>mOdeHeightfieldId</name>
      <anchorfile>d4/d56/classdart_1_1collision_1_1detail_1_1OdeHeightmap.html</anchorfile>
      <anchor>ad3f47a6520b6b4997356c3c2577a5184</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdeMesh</name>
    <filename>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</filename>
    <base>dart::collision::detail::OdeGeom</base>
    <member kind="function">
      <type></type>
      <name>OdeMesh</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>a56d3fef38291260d2a86ba323db7a631</anchor>
      <arglist>(const OdeCollisionObject *parent, const aiScene *scene, const Eigen::Vector3d &amp;scale=Eigen::Vector3d::Ones())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeMesh</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>a25587fd44711d46ffd03800a2eef175f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateEngineData</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>a523d6a7d9f4cc5a5f62d37521b9b7ffd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>fillArrays</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>aaf3af0d4575dcbe293fb81042c703df8</anchor>
      <arglist>(const aiScene *scene, const Eigen::Vector3d &amp;scale=Eigen::Vector3d::Ones())</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>mVertices</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>a62595da2bd7e10f1d959dadf028aba75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>mNormals</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>a38ca8492ba6d73b260334c5e41b1b244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>mIndices</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>a5c902c4654a232f1ec3dfad03ef8496c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dTriMeshDataID</type>
      <name>mOdeTriMeshDataId</name>
      <anchorfile>d7/dc7/classdart_1_1collision_1_1detail_1_1OdeMesh.html</anchorfile>
      <anchor>a249bc0061a98b4a6c082907d7aba6acf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdePlane</name>
    <filename>d4/d2f/classdart_1_1collision_1_1detail_1_1OdePlane.html</filename>
    <base>dart::collision::detail::OdeGeom</base>
    <member kind="function">
      <type></type>
      <name>OdePlane</name>
      <anchorfile>d4/d2f/classdart_1_1collision_1_1detail_1_1OdePlane.html</anchorfile>
      <anchor>aaf42b55006c9ca915cb7c06776eddaed</anchor>
      <arglist>(const OdeCollisionObject *parent, const Eigen::Vector3d &amp;normal, double offset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdePlane</name>
      <anchorfile>d4/d2f/classdart_1_1collision_1_1detail_1_1OdePlane.html</anchorfile>
      <anchor>a44f938d4e0f2246f1c3b30651e3d8207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateEngineData</name>
      <anchorfile>d4/d2f/classdart_1_1collision_1_1detail_1_1OdePlane.html</anchorfile>
      <anchor>ad7c7694be8762f1ac7f6808f9e2d4e07</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaceable</name>
      <anchorfile>d4/d2f/classdart_1_1collision_1_1detail_1_1OdePlane.html</anchorfile>
      <anchor>ab01f2fdd6f1d09e9e19b597723d4fad9</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::detail::OdeSphere</name>
    <filename>d6/d7a/classdart_1_1collision_1_1detail_1_1OdeSphere.html</filename>
    <base>dart::collision::detail::OdeGeom</base>
    <member kind="function">
      <type></type>
      <name>OdeSphere</name>
      <anchorfile>d6/d7a/classdart_1_1collision_1_1detail_1_1OdeSphere.html</anchorfile>
      <anchor>a3e82a31933e51a5b5a337f165f73f988</anchor>
      <arglist>(const OdeCollisionObject *parent, double radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OdeSphere</name>
      <anchorfile>d6/d7a/classdart_1_1collision_1_1detail_1_1OdeSphere.html</anchorfile>
      <anchor>a01be972553271837b3e2aa32aec2c8c6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::collision::fcl</name>
    <filename>dc/df9/namespacedart_1_1collision_1_1fcl.html</filename>
    <member kind="typedef">
      <type>::fcl::Vec3f</type>
      <name>Vector3</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a96f4ac9c1b4b6f6d7931ddf495424618</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Matrix3f</type>
      <name>Matrix3</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ab8e71fdd2fbd858079bac04f0fcb267f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Transform3f</type>
      <name>Transform3</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>aa4c0a9939fa73b3ac8ab4a5f4695f5dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Box</type>
      <name>Box</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ae0206cae9d16a672147e2c25ac9e7c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Cylinder</type>
      <name>Cylinder</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a9f36eed4f687d02f443700b0dea638c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Halfspace</type>
      <name>Halfspace</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a8f5f31361f9a57d1812650aa716568d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Sphere</type>
      <name>Sphere</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a1201f599fb543c2c3879cde624aa02ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionObject</type>
      <name>CollisionObject</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a0a019f924a9e97a217ac76e11f05fccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionGeometry</type>
      <name>CollisionGeometry</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a05ac3708e93121547a6f84eaa933d262</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::DynamicAABBTreeCollisionManager</type>
      <name>DynamicAABBTreeCollisionManager</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a965a1ef907332c83ab6bb99859708cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::OBBRSS</type>
      <name>OBBRSS</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a6947311197bbe3938a83e14f5afe2be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionRequest</type>
      <name>CollisionRequest</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>aaf4c8c8e6ac3ef70d809e9ccc7f6262c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::CollisionResult</type>
      <name>CollisionResult</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a80f9eff1dc089bd849edbdc8902c4fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::DistanceRequest</type>
      <name>DistanceRequest</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>aff276f0bf6f82166cfcf0191ce8cf0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::DistanceResult</type>
      <name>DistanceResult</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ab6e1b664bdb7026c8de2bd894d266390</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::fcl::Contact</type>
      <name>Contact</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>af4f7b98de497f3e04d9a581598fe4af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>length</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a486fdd4db83a0dc8eaebfa06575f14d4</anchor>
      <arglist>(const dart::collision::fcl::Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>length2</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a5263b0f58a2dc8bea8974f1f186f28ad</anchor>
      <arglist>(const dart::collision::fcl::Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>dart::collision::fcl::Vector3</type>
      <name>getTranslation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ad4dc2b212d5cea3447f79646467438c7</anchor>
      <arglist>(const dart::collision::fcl::Transform3 &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranslation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a098d3ad5425ad0917552e6856e688d20</anchor>
      <arglist>(dart::collision::fcl::Transform3 &amp;T, const dart::collision::fcl::Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>dart::collision::fcl::Matrix3</type>
      <name>getRotation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>ad78d195fadad96f4952a4f8265976d04</anchor>
      <arglist>(const dart::collision::fcl::Transform3 &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotation</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a6aabf622da025a1ff6900cd2b435d268</anchor>
      <arglist>(dart::collision::fcl::Transform3 &amp;T, const dart::collision::fcl::Matrix3 &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEulerZYX</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a24b2cba41f1dda722b03a939288f3770</anchor>
      <arglist>(dart::collision::fcl::Matrix3 &amp;rot, double eulerX, double eulerY, double eulerZ)</arglist>
    </member>
    <member kind="function">
      <type>dart::collision::fcl::Vector3</type>
      <name>transform</name>
      <anchorfile>dc/df9/namespacedart_1_1collision_1_1fcl.html</anchorfile>
      <anchor>a9c8a8a78b267e61ccb660fc5bcc86c94</anchor>
      <arglist>(const dart::collision::fcl::Transform3 &amp;t, const dart::collision::fcl::Vector3 &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::Color</name>
    <filename>db/dbc/namespacedart_1_1Color.html</filename>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a4d3ab5b883e6b4acf99db77b646d5da0</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a40c325dd75125cb0ba7277a867483803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Fuchsia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a6110ace8b9305b869cd30d2e94d0ef45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Fuchsia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>aff08c6a283ed181df78175b6e6d5ef39</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>aa1817741b56722a3f2a8eb77280bd01f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ac7590f97cfe8ec52c79464f8ee6dea90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a1902c703d717eebe4d4f6a16d01cdeee</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad96afa4f4d8ec8978b290fd523808370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a506bd8873182731f88cb7e1c7821b79b</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a57f3def52e94e339f925a8e201ff19aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a95baa2baa822a5e60a40f0fdc71755f4</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a605d2515b7418b0dc9f35692848b7205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afdebec5b20247f3710cdaf5b0a6ba557</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad94ba7c65abc6fd92af64a0db7df6f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a04e0e028617699c7bef41185553f647f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a739634da0225a64ff91934c5c6dfc61b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>abf40261d480d1df44618b7c87b02a4dc</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afaca5d4bbd8610cdd766bfa9a922134a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::common</name>
    <filename>dd/d6b/namespacedart_1_1common.html</filename>
    <namespace>dart::common::detail</namespace>
    <namespace>dart::common::signal</namespace>
    <class kind="class">dart::common::Aspect</class>
    <class kind="class">dart::common::CompositeTrackingAspect</class>
    <class kind="class">dart::common::AspectWithStateAndVersionedProperties</class>
    <class kind="class">dart::common::Cloneable</class>
    <class kind="class">dart::common::MakeCloneable</class>
    <class kind="class">dart::common::ProxyCloneable</class>
    <class kind="class">dart::common::CloneableMap</class>
    <class kind="class">dart::common::CloneableVector</class>
    <class kind="class">dart::common::Composite</class>
    <class kind="class">dart::common::CompositeJoiner</class>
    <class kind="class">dart::common::CompositeJoiner&lt; Base1 &gt;</class>
    <class kind="class">dart::common::CompositeJoiner&lt; Base1, Base2 &gt;</class>
    <class kind="class">dart::common::CompositeJoiner&lt; Base1, Base2, OtherBases...&gt;</class>
    <class kind="class">dart::common::EmbeddedStateAspect</class>
    <class kind="class">dart::common::EmbedState</class>
    <class kind="class">dart::common::EmbedStateOnTopOf</class>
    <class kind="class">dart::common::EmbeddedPropertiesAspect</class>
    <class kind="class">dart::common::EmbedProperties</class>
    <class kind="class">dart::common::EmbedPropertiesOnTopOf</class>
    <class kind="class">dart::common::EmbeddedStateAndPropertiesAspect</class>
    <class kind="class">dart::common::EmbedStateAndProperties</class>
    <class kind="class">dart::common::EmbedStateAndPropertiesOnTopOf</class>
    <class kind="struct">dart::common::Empty</class>
    <class kind="class">dart::common::Factory</class>
    <class kind="class">dart::common::FactoryRegistrar</class>
    <class kind="class">dart::common::LocalResource</class>
    <class kind="class">dart::common::LocalResourceRetriever</class>
    <class kind="class">dart::common::LockableReference</class>
    <class kind="class">dart::common::SingleLockableReference</class>
    <class kind="class">dart::common::MultiLockableReference</class>
    <class kind="class">dart::common::NameManager</class>
    <class kind="class">dart::common::Observer</class>
    <class kind="class">dart::common::ProxyStateAndPropertiesAspect</class>
    <class kind="class">dart::common::RequiresAspect</class>
    <class kind="class">dart::common::RequiresAspect&lt; ReqAspect &gt;</class>
    <class kind="class">dart::common::RequiresAspect&lt; ReqAspect1, OtherReqAspects...&gt;</class>
    <class kind="class">dart::common::Resource</class>
    <class kind="class">dart::common::ResourceRetriever</class>
    <class kind="class">dart::common::SharedLibrary</class>
    <class kind="class">dart::common::Connection</class>
    <class kind="class">dart::common::ScopedConnection</class>
    <class kind="class">dart::common::Signal</class>
    <class kind="class">dart::common::Signal&lt; _Res(_ArgTypes...), Combiner &gt;</class>
    <class kind="class">dart::common::Signal&lt; void(_ArgTypes...)&gt;</class>
    <class kind="class">dart::common::SlotRegister</class>
    <class kind="class">dart::common::Singleton</class>
    <class kind="class">dart::common::SpecializedForAspect</class>
    <class kind="class">dart::common::SpecializedForAspect&lt; SpecAspect &gt;</class>
    <class kind="class">dart::common::SpecializedForAspect&lt; SpecAspect1, OtherSpecAspects...&gt;</class>
    <class kind="class">dart::common::sub_ptr</class>
    <class kind="class">dart::common::Subject</class>
    <class kind="class">dart::common::Timer</class>
    <class kind="class">dart::common::UriComponent</class>
    <class kind="struct">dart::common::Uri</class>
    <class kind="class">dart::common::VersionCounter</class>
    <class kind="class">dart::common::Virtual</class>
    <member kind="typedef">
      <type>detail::AspectWithState&lt; CompositeTrackingAspect&lt; CompositeT &gt;, DerivedT, StateDataT, CompositeT, updateState &gt;</type>
      <name>AspectWithState</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>af70d2d565a1b60c7c28a9a5e66f1f55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::AspectWithVersionedProperties&lt; CompositeTrackingAspect&lt; CompositeT &gt;, DerivedT, PropertiesDataT, CompositeT, updateProperties &gt;</type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a9d41a28250160c17bbe5beb31574aec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LocalResourceRetriever &gt;</type>
      <name>LocalResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a7e980fe2587497d7848324ae6a805c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; _Tp, Eigen::aligned_allocator&lt; _Tp &gt;&gt;</type>
      <name>aligned_vector</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>aecb9811e400bd1c505f0aa1950bbc589</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; _Key, _Tp, _Compare, Eigen::aligned_allocator&lt; std::pair&lt; const _Key, _Tp &gt;&gt;&gt;</type>
      <name>aligned_map</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a4fc79cf745df255937c48682a55a1862</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::ProxyStateAspect&lt; common::CompositeTrackingAspect&lt; CompositeT &gt;, CompositeT, StateT &gt;</type>
      <name>ProxyStateAspect</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a52908372446d45b1fd44556197a83796</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::ProxyPropertiesAspect&lt; common::CompositeTrackingAspect&lt; CompositeT &gt;, CompositeT, PropertiesT &gt;</type>
      <name>ProxyPropertiesAspect</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a70630056cf85b3dc619da0be67c45669</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Resource &gt;</type>
      <name>ResourcePtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a17b6f1fe8c719e1059adc09c4f43df67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ResourceRetriever &gt;</type>
      <name>ResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a79a12a817633757c8465245b78d91bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NoArgTag</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a50bf4d472a6d45531614669484f3db28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NoArg</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a50bf4d472a6d45531614669484f3db28a62dc35536406a079c5cf8a102c529534</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extractDataFromObjectTypeMap</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a449bddb1b71c18772e571de37d50e01b</anchor>
      <arglist>(DataMap &amp;dataMap, const ObjectMap &amp;objectMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setObjectsFromDataTypeMap</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afa850a6e5ba6a843959f22f656a9d31e</anchor>
      <arglist>(ObjectMap &amp;objectMap, const DataMap &amp;dataMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createAspects</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a5ee3f6c02abacb6b0d814e9db309de50</anchor>
      <arglist>(T *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createAspects</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>aa1d5ed052c8a49e8e8ac173dff1a46b4</anchor>
      <arglist>(T *comp)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorMsg</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>af7e228b6914a47b7f42e43d0ed615e7b</anchor>
      <arglist>(const std::string &amp;_msg, int _color)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorErr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afe69bb6c9e434a7421aee6dbeaa7c195</anchor>
      <arglist>(const std::string &amp;_msg, const std::string &amp;_file, unsigned int _line, int _color)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; _Tp &gt;</type>
      <name>make_aligned_shared</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a6aeb41adeea1ddb77d3f436d1fac232c</anchor>
      <arglist>(_Args &amp;&amp;...__args)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; T &gt;</type>
      <name>make_unique</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afef23b0eaca1dd9f4bdb74e62917a7ab</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a7c4351ff43c76315b2549773a6fa57bc</anchor>
      <arglist>(std::size_t index, const std::vector&lt; T &gt; &amp;vec)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>AspectWithStateAndVersionedProperties</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a4151dcb847dcc5e51fe9bd7d4cdeb8e2</anchor>
      <arglist>)(DerivedT *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Aspect</name>
    <filename>da/da6/classdart_1_1common_1_1Aspect.html</filename>
    <class kind="class">dart::common::Aspect::Properties</class>
    <class kind="class">dart::common::Aspect::State</class>
    <member kind="typedef">
      <type>MakeCloneable&lt; State, Mixin &gt;</type>
      <name>MakeState</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>aa3969ed77fdfacf60c2f121dede92869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MakeCloneable&lt; Properties, Mixin &gt;</type>
      <name>MakeProperties</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>acae8a0c9409acc0066cf0c7000d80b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Aspect</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>ab4164941ad6d4c29827417e9ae14e1db</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>a04951a8708393344d8b7abfb5784e5f2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAspectState</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>a8d271216dd9c2181ab0e3859ef0619af</anchor>
      <arglist>(const State &amp;otherState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const State *</type>
      <name>getAspectState</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>aed33dd30b542af50a82d61d86bc7ddb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>a213461d9fcf091acedf965bebf8f3f6c</anchor>
      <arglist>(const Properties &amp;someProperties)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>a5e9232b08551135fda9c17828a4d8b5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setComposite</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>ac311cfffd7174f5a2b5c312e82889ec7</anchor>
      <arglist>(Composite *newComposite)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>loseComposite</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>ad9a4530031fe01cb993f3a4bab0e65bb</anchor>
      <arglist>(Composite *oldComposite)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Composite</name>
      <anchorfile>da/da6/classdart_1_1common_1_1Aspect.html</anchorfile>
      <anchor>ace19a20e83d0e04d1929284108a7582d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Aspect::Properties</name>
    <filename>d4/d13/classdart_1_1common_1_1Aspect_1_1Properties.html</filename>
    <base>Cloneable&lt; Properties &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; Properties &gt;</type>
      <name>clone</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>a151f5be7d78dba63a94b5283a598c72e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>adbc0ceff4a08534d309e07366bfebf11</anchor>
      <arglist>(const Properties &amp;anotherCloneable)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Aspect::State</name>
    <filename>d9/de4/classdart_1_1common_1_1Aspect_1_1State.html</filename>
    <base>Cloneable&lt; State &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; State &gt;</type>
      <name>clone</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>a151f5be7d78dba63a94b5283a598c72e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>adbc0ceff4a08534d309e07366bfebf11</anchor>
      <arglist>(const State &amp;anotherCloneable)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::CompositeTrackingAspect</name>
    <filename>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</filename>
    <templarg>CompositeType</templarg>
    <base>dart::common::Aspect</base>
    <member kind="function">
      <type></type>
      <name>CompositeTrackingAspect</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a24f55b6e6b3ac8487b35235b7db78722</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompositeType *</type>
      <name>getComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a8d23c724a04bcf52890139eec075bb81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CompositeType *</type>
      <name>getComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a80d24ecb6907ae2146bc7e7397162293</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a58196acb89cf6de196dea00abbcc3c86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a62541fdeb5f327d0bc3f13f01bdf57fe</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>ae5bc8862e8987c29a971a6095cd5f6c5</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CompositeType *</type>
      <name>mComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a91a4fca62fe6a2ecef8ed1744f116281</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::AspectWithStateAndVersionedProperties</name>
    <filename>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</filename>
    <templarg>DerivedT</templarg>
    <templarg>StateDataT</templarg>
    <templarg>PropertiesDataT</templarg>
    <templarg>CompositeT</templarg>
    <templarg>updateState</templarg>
    <templarg>updateProperties</templarg>
    <base>AspectWithVersionedProperties&lt; AspectWithState&lt; DerivedT, StateDataT, CompositeT, updateState &gt;, DerivedT, PropertiesDataT, CompositeT, updateProperties &gt;</base>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a9ad62f8e51f51b6209762ad466e64b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StateDataT</type>
      <name>StateData</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a1b79a2e430ae5fa3c651cc0ab91b0d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertiesDataT</type>
      <name>PropertiesData</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>add485a69c05080b8be81d50fa60a7faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeT</type>
      <name>CompositeType</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>af4447005623dc12b5981a81c50d98c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Aspect::MakeState&lt; StateData &gt;</type>
      <name>State</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>ab352e81c20e72e27becd6b735856e637</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Aspect::MakeProperties&lt; PropertiesData &gt;</type>
      <name>Properties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a1664501785584f81e032dab7d5c9e4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithState&lt; Derived, StateData, CompositeType, updateState &gt;</type>
      <name>AspectStateImpl</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a74fc62eb84a474e043e40726a24145e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::AspectWithVersionedProperties&lt; AspectStateImpl, Derived, PropertiesData, CompositeType, updateProperties &gt;</type>
      <name>AspectPropertiesImpl</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>ad79156ff0c52843530da60a13982f37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithStateAndVersionedProperties&lt; DerivedT, StateDataT, PropertiesDataT, CompositeT, updateState, updateProperties &gt;</type>
      <name>AspectImpl</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a7c0e52d2527f3500e06c33f632d93bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithState&lt; DerivedT, StateDataT, CompositeT, updateState &gt;</type>
      <name>Base</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>ae9e7b9279d48e7a359b4eae5e683fa6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithVersionedProperties&lt; Base, Derived, PropertiesData, CompositeT, updateProperties &gt;</type>
      <name>AspectImplementation</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a594d0df157edcab5a947a41979817709</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithStateAndVersionedProperties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>aa0a042ab60b0886dced1e7e1e457bac7</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithStateAndVersionedProperties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a2531ebef60b8682370aab06c6f54e202</anchor>
      <arglist>(const AspectWithStateAndVersionedProperties &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithStateAndVersionedProperties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a14847b706425f828f960389d185d28fd</anchor>
      <arglist>(const StateData &amp;state=StateData(), const PropertiesData &amp;properties=PropertiesData())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithStateAndVersionedProperties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>ade89712a2d88440fb82f3ddf2665d609</anchor>
      <arglist>(const PropertiesData &amp;properties, const StateData &amp;state=StateData())</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a2f6ded1adf7bf94b5ea2219b35a1e79f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a2937acb0a9b1635e86ea09c67e13cb47</anchor>
      <arglist>(const Aspect::Properties &amp;someProperties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a807ae137ea64aa4c73c57f87a3d7b9a8</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>acbf5ef8933f8335ab5aa9c60da06a9b9</anchor>
      <arglist>(const PropertiesData &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a1c05004b6a950a6d658a31b81b978b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>incrementVersion</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a11b1ab21ed0067629afb973c72998107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPropertiesUpdate</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a0d756177774029eaebe7b09609701f2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPropertiesUpdated</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a050393391376ff42024d0dbb931d4c13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a94a86e27fdb8691d31412bd77d969d97</anchor>
      <arglist>(const Aspect::State &amp;otherState) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a1d84287e22c65ada3857c5125c375142</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>aaf4114caf39a4b22ff780fcded7aaf7b</anchor>
      <arglist>(const StateData &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>getState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a19de096c02e4acbfcc8799a3dd51cc3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>UpdateState</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a9ad4a903337d3e9fa1114d2014f45cb1</anchor>
      <arglist>)(Derived *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>UpdateProperties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>aab43623e995881078646866cb014eb0f</anchor>
      <arglist>)(Derived *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a7fde45d2751984165544c3dc8454f86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>mState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a96646506e02438db8dd93e671f0ae1b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Cloneable</name>
    <filename>d4/d0a/classdart_1_1common_1_1Cloneable.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Cloneable</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>a2416b7bb5e53c7c90818a1b58733e835</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Cloneable</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>ab109a0ae5a51290424efb11ddd098b98</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Cloneable</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>aa08aa19281e4f3dbe5e934543e244734</anchor>
      <arglist>(const Cloneable &amp;doNotCopy)=delete</arglist>
    </member>
    <member kind="function">
      <type>Cloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>a9b9c223e50380982d43a76b9452e9ccf</anchor>
      <arglist>(const Cloneable &amp;doNotCopy)=delete</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; T &gt;</type>
      <name>clone</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>a151f5be7d78dba63a94b5283a598c72e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>d4/d0a/classdart_1_1common_1_1Cloneable.html</anchorfile>
      <anchor>adbc0ceff4a08534d309e07366bfebf11</anchor>
      <arglist>(const T &amp;anotherCloneable)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::MakeCloneable</name>
    <filename>d7/da1/classdart_1_1common_1_1MakeCloneable.html</filename>
    <templarg>Base</templarg>
    <templarg>Mixin</templarg>
    <member kind="typedef">
      <type>Mixin</type>
      <name>Data</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a13e2c3edb1a9bc783afd06178c8c292f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeCloneable</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a43d14bb2466f4438ef3213ba06f66660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeCloneable</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a08e5b08069b3d2621647ee4438bb63de</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeCloneable</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a4eefd9cadcddf364ce1096b5df0360e0</anchor>
      <arglist>(const Mixin &amp;mixin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeCloneable</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a0f199800a6787c9287da715f06a9d1a4</anchor>
      <arglist>(Mixin &amp;&amp;mixin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeCloneable</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>ab4ac99a8ddaf5917fea45dd8cde00bb1</anchor>
      <arglist>(const MakeCloneable&lt; Base, Mixin &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeCloneable</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a0a811ab9b30fe5137f712a565c049aa7</anchor>
      <arglist>(MakeCloneable&lt; Base, Mixin &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>MakeCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>af957ecb768c390dd2b6c3ddc47ab9882</anchor>
      <arglist>(const Mixin &amp;mixin)</arglist>
    </member>
    <member kind="function">
      <type>MakeCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a9465f413444c0958aae6e4077c740194</anchor>
      <arglist>(Mixin &amp;&amp;mixin)</arglist>
    </member>
    <member kind="function">
      <type>MakeCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>af95ae2ed8e92612ad534cf1e2edbcbf0</anchor>
      <arglist>(const MakeCloneable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>MakeCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a6712503d817319346eb1ff534e60c23e</anchor>
      <arglist>(MakeCloneable &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Base &gt;</type>
      <name>clone</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>acac590f3b4805ac7a1b0bd27258fd05f</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a9f34675eff863e46be10dd70346180f5</anchor>
      <arglist>(const Base &amp;other) overridefinal</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EIGEN_MAKE_ALIGNED_OPERATOR_NEW std::shared_ptr&lt; MakeCloneable &gt;</type>
      <name>createShared</name>
      <anchorfile>d7/da1/classdart_1_1common_1_1MakeCloneable.html</anchorfile>
      <anchor>a32ce632ed7a3791717c4c385f9e0d3a6</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::ProxyCloneable</name>
    <filename>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>setData</templarg>
    <templarg>getData</templarg>
    <member kind="typedef">
      <type>DataT</type>
      <name>Data</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a6fca0a19ad1b02a65b0051dd0f555838</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OwnerT</type>
      <name>Owner</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a13762038cb67bdb569dfc7b6a254993e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyCloneable</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a1493f4e3bc9df42046d14c6bfa3a71f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyCloneable</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a9cad37bb58860d02b05e43ce4508f100</anchor>
      <arglist>(OwnerT *owner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyCloneable</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a8621f4d19778682d26ced62e7ffb83b0</anchor>
      <arglist>(OwnerT *owner, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyCloneable</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a72d4a0208ad35b4ccd80bb387ce56510</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyCloneable</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>ae9fe8b569a2b1891bdb0b0a9ce847a88</anchor>
      <arglist>(const ProxyCloneable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyCloneable</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>aa1c202fbeae4c990f3f55a64b12540b3</anchor>
      <arglist>(ProxyCloneable &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ProxyCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>abb7f33bcd759d4956db89d585dbc8d85</anchor>
      <arglist>(const Data &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ProxyCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>ab365f4d1e466b8f97e50f9cfef1d2ff8</anchor>
      <arglist>(Data &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ProxyCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>af9c334058c076a18b9528da1c263895f</anchor>
      <arglist>(const ProxyCloneable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ProxyCloneable &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>ae04b99275253cba7d058cc5281b37b15</anchor>
      <arglist>(ProxyCloneable &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a88c800206dcdddc98b2d4c9c8967c576</anchor>
      <arglist>(const Data &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>ac20dd2be1e0edd37cd211613266b7b4d</anchor>
      <arglist>(Data &amp;&amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a6381bea9c9a2402712e45d6ef6ffe3ce</anchor>
      <arglist>(const ProxyCloneable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>acbdc2694b2d9040e84414a7f2b4d26c3</anchor>
      <arglist>(ProxyCloneable &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Data</type>
      <name>get</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a75a33b3bae73734b3fe47db0f29a9bcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OwnerT *</type>
      <name>getOwner</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a5f5b0c801dfa67ba3e83233fcb4b5022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const OwnerT *</type>
      <name>getOwner</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a0b02720b06a354c11694e0aa7fb67602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Base &gt;</type>
      <name>clone</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a9ba033c27dd61efcaa20c2fc3250fae9</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>ac42b2c94d5a9b3d325997bc60cb9cbf1</anchor>
      <arglist>(const Base &amp;other) overridefinal</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OwnerT *</type>
      <name>mOwner</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>aed134d7956d331fc25e27d6170205a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Data &gt;</type>
      <name>mData</name>
      <anchorfile>d1/dd5/classdart_1_1common_1_1ProxyCloneable.html</anchorfile>
      <anchor>a7b47514cd84d507933c1c93769d21ce7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::CloneableMap</name>
    <filename>dd/db5/classdart_1_1common_1_1CloneableMap.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>CloneableMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a51bcb5761b3c6c22e8199adbaa3cab0e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneableMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>ac73408e751f6209a3672acbaf1adc80d</anchor>
      <arglist>(const CloneableMap &amp;otherStates)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneableMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a59705adf9529e937976523a997bfcf8b</anchor>
      <arglist>(CloneableMap &amp;&amp;otherStates)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneableMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a42484785c47690a47d757eeec39d6dd6</anchor>
      <arglist>(const MapType &amp;otherMap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneableMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>aceec08de7874f83eb67564db89a5a584</anchor>
      <arglist>(MapType &amp;&amp;otherMap)</arglist>
    </member>
    <member kind="function">
      <type>CloneableMap &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>af4134405d57ded8c5496aac90bcc6d16</anchor>
      <arglist>(const CloneableMap &amp;otherStates)</arglist>
    </member>
    <member kind="function">
      <type>CloneableMap &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>abbb16bb59d92c598e20d42425035a28b</anchor>
      <arglist>(CloneableMap &amp;&amp;otherStates)</arglist>
    </member>
    <member kind="function">
      <type>CloneableMap &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a129c87a6d78430b9403339daa10c1074</anchor>
      <arglist>(const MapType &amp;otherMap)</arglist>
    </member>
    <member kind="function">
      <type>CloneableMap &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a784bd1b02d71db3ee808b074aa951170</anchor>
      <arglist>(MapType &amp;&amp;otherMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>aab0543901654d8adbffbb02521a62d0e</anchor>
      <arglist>(const CloneableMap &amp;otherMap, bool merge=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a0a9002a243c53bdfed2ef60cbf3239ad</anchor>
      <arglist>(const MapType &amp;otherMap, bool merge=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a93aeaee2e9516b8a6c5cf18a2b26a719</anchor>
      <arglist>(const CloneableMap &amp;otherMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>ac62a3bd4535dccbbfc9a12f47ad61284</anchor>
      <arglist>(const MapType &amp;otherMap)</arglist>
    </member>
    <member kind="function">
      <type>MapType &amp;</type>
      <name>getMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>aa98a6277bd6f993a2b5201f2f1ba8f63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const MapType &amp;</type>
      <name>getMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>ad3795cf41b869ee080d5b32e22a708e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MapType</type>
      <name>mMap</name>
      <anchorfile>dd/db5/classdart_1_1common_1_1CloneableMap.html</anchorfile>
      <anchor>a0b32eae6988dcc912741424361b45e2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::CloneableVector</name>
    <filename>df/d0f/classdart_1_1common_1_1CloneableVector.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>CloneableVector</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>ab339fb60a6cb2779e2bd52435bb36935</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneableVector</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>a8fc05296a62fde0e9329882a75bc701c</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;regularVector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneableVector</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>a754592f88b8a111faba52f67946b8893</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;&amp;regularVector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneableVector</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>ad7254c7d2597f71f43e28d51644b25a3</anchor>
      <arglist>(const CloneableVector &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>CloneableVector &amp;</type>
      <name>operator=</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>a25fcf3e27c17753e260a3d7260de4fe0</anchor>
      <arglist>(const CloneableVector &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; CloneableVector&lt; T &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>aecb497fe4a2f9011f0d7901e19567bf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>a318a1df62b6188099ac60eaf26ada97d</anchor>
      <arglist>(const CloneableVector&lt; T &gt; &amp;anotherVector)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt; &amp;</type>
      <name>getVector</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>a6ea16c995d82f3bb8926f667207b1912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; T &gt; &amp;</type>
      <name>getVector</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>a3161292cbef34555cbf75330068d1602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; T &gt;</type>
      <name>mVector</name>
      <anchorfile>df/d0f/classdart_1_1common_1_1CloneableVector.html</anchorfile>
      <anchor>a6addc2a219d1f048b959e2b9c16e656a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Composite</name>
    <filename>d1/d90/classdart_1_1common_1_1Composite.html</filename>
    <member kind="typedef">
      <type>detail::CompositeState</type>
      <name>State</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a843446b714bac6265ee04265edad0682</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::CompositeProperties</type>
      <name>Properties</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>aab357df00be0b5b9261204966c07583e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; Aspect &gt; &gt;</type>
      <name>AspectMap</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>abb4eed9d5ba7a2f3610cf61902277a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_set&lt; std::type_index &gt;</type>
      <name>RequiredAspectSet</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a01d796eb30ff90517d110417f9bc033c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::MakeCompositeState&lt; Aspects...&gt;</type>
      <name>MakeState</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>ad2eb27ec68fb9f8f40d68ce47b00233f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::MakeCompositeProperties&lt; Aspects...&gt;</type>
      <name>MakeProperties</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>ae44cace295c694f8867986c7eb810c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Composite</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>af3f96adb4476f5608e03ee37396d0418</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composite</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>aa6de9ad38e646579956232bc53ebd36a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composite</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>ad3257c8b9564489fe0508fe80f420d5e</anchor>
      <arglist>(const Composite &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Composite</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a98864d3b7c2eff50e01ad24fd869088c</anchor>
      <arglist>(Composite &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Composite &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a698fbdbab6f3fddf3976a54e0c4c86fd</anchor>
      <arglist>(const Composite &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Composite &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a9d1eb3e032a6435e6bcc467a292e679f</anchor>
      <arglist>(Composite &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a01846f260359a35052f9448702241aa0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a6783113678205acb8d7cc162af4d0fe5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>get</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>acd8489fc9241b6c4f0360be73a45d872</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>af9d34b323b1222d63ec7561916a5abc7</anchor>
      <arglist>(const T *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a2c405004407e9772c55ca75e3a62840d</anchor>
      <arglist>(std::unique_ptr&lt; T &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>createAspect</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a1bc9f563a8243f03f42a6a4c583999a3</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAspect</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a505b8d946919cefa5c6e6b84c2d02548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; T &gt;</type>
      <name>releaseAspect</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>ab10f8b3387e914f1c4db20be56b0ebff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requiresAspect</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a70855dfcd9b7ced70dd6891919609277</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompositeState</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>adea15fa2aef072c395607c66fc3ee247</anchor>
      <arglist>(const State &amp;newStates)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>getCompositeState</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>af73878cb18399549c15f91d409d51122</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyCompositeStateTo</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>aa5c62e7524cebcb26d59bedc2f6bcf44</anchor>
      <arglist>(State &amp;outgoingStates) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompositeProperties</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>abb472e2ecd45bee23972a926547a1b87</anchor>
      <arglist>(const Properties &amp;newProperties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getCompositeProperties</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>ade6ef8f15c5072ad711f0d92f80d3ebe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyCompositePropertiesTo</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a614636f1c226ea30903627c4293dc26e</anchor>
      <arglist>(Properties &amp;outgoingProperties) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>duplicateAspects</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a1ea015f5856919a3c673fecd9a3ca0c6</anchor>
      <arglist>(const Composite *fromComposite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matchAspects</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>af7c5096003ae0f98a98e68f6d26a5b0b</anchor>
      <arglist>(const Composite *otherComposite)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>isSpecializedFor</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a3119cb799ca443c36675291df46acf01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addToComposite</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a8214ed61d1e335edb158e4c0a15f4c36</anchor>
      <arglist>(Aspect *aspect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeFromComposite</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a9839eacb4bc06a39ad52cd9e3a9f4e15</anchor>
      <arglist>(Aspect *aspect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_set</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a56fd2507b85bfc0ffd335269ba7db013</anchor>
      <arglist>(std::type_index type_idx, const Aspect *aspect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_set</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a2a0ce98a817b3fa6198b62816e26b556</anchor>
      <arglist>(std::type_index type_idx, std::unique_ptr&lt; Aspect &gt; aspect)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AspectMap</type>
      <name>mAspectMap</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>af0bb85f86c5b142757d7698af9679fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RequiredAspectSet</type>
      <name>mRequiredAspects</name>
      <anchorfile>d1/d90/classdart_1_1common_1_1Composite.html</anchorfile>
      <anchor>a021c0b5dde91c56a77d19f5f664c3e60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::CompositeJoiner</name>
    <filename>db/d5d/classdart_1_1common_1_1CompositeJoiner.html</filename>
    <templarg>OtherBases</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositeJoiner</name>
      <anchorfile>db/d5d/classdart_1_1common_1_1CompositeJoiner.html</anchorfile>
      <anchor>a2625749716d77980fea7d8759f95ab9e</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::CompositeJoiner&lt; Base1 &gt;</name>
    <filename>d0/dc0/classdart_1_1common_1_1CompositeJoiner_3_01Base1_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositeJoiner</name>
      <anchorfile>d0/dc0/classdart_1_1common_1_1CompositeJoiner_3_01Base1_01_4.html</anchorfile>
      <anchor>ae36aadc9123feab748dedf3fec1ea71d</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::CompositeJoiner&lt; Base1, Base2 &gt;</name>
    <filename>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>CompositeJoiner</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a4dd7a618d14889153d8ff24ea430b9d9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositeJoiner</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a98500df3b962677ea073935cda0870b6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeJoiner</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a911a992d030982256f587fc1b64339b1</anchor>
      <arglist>(Base1Arg &amp;&amp;arg1, Base2Args &amp;&amp;...args2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeJoiner</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a4c1ffd195fbbb477afb5c16d6f76b2e0</anchor>
      <arglist>(Base1Arg &amp;&amp;arg1, NoArgTag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeJoiner</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>ac332dfd7dd22696c7004d0083fd18708</anchor>
      <arglist>(NoArgTag, Base2Args &amp;&amp;...args2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a9f32875469a2b6f2ff14ae369a42dff0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a454a9372d99e609bc19907ca42d3ddb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>get</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>ac455f4a7c266b15acca55942afcb1e8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a46fefd5c280d11733dd72cfec0e0ef25</anchor>
      <arglist>(const T *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a54f36918a70a7ac08e7107f1bd52fd9c</anchor>
      <arglist>(std::unique_ptr&lt; T &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>createAspect</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a717e2d98e25ec38fc7c9c30056c13ac2</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAspect</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>ac2e050ffb368186d5065f912ab2645ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; T &gt;</type>
      <name>releaseAspect</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a850d44b0717c01461cc23c6f793f3b98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>isSpecializedFor</name>
      <anchorfile>d2/d7d/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a5b509e4331fd244c108ae3306be253d6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::CompositeJoiner&lt; Base1, Base2, OtherBases...&gt;</name>
    <filename>dc/d8e/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>OtherBases</templarg>
    <base>CompositeJoiner&lt; Base1, CompositeJoiner&lt; Base2, OtherBases...&gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>CompositeJoiner</name>
      <anchorfile>dc/d8e/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</anchorfile>
      <anchor>a82def7e078741078fc11163c93c57db3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeJoiner</name>
      <anchorfile>dc/d8e/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</anchorfile>
      <anchor>a2cc63961c57ea4686bdc4603c03ce95b</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositeJoiner</name>
      <anchorfile>dc/d8e/classdart_1_1common_1_1CompositeJoiner_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</anchorfile>
      <anchor>a9143b1c56255e4a18fe5bb9e7168d03d</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbeddedStateAspect</name>
    <filename>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EmbeddedStateAspect&lt; CompositeTrackingAspect&lt; CompositeT &gt;, EmbeddedStateAspect&lt; CompositeT, StateDataT &gt;, StateDataT &gt;</base>
    <member kind="typedef">
      <type>CompositeTrackingAspect&lt; CompositeT &gt;</type>
      <name>Base</name>
      <anchorfile>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a7c13465849cb0fad9e4d898029063937</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EmbeddedStateAspect&lt; CompositeT, StateDataT &gt;</type>
      <name>Derived</name>
      <anchorfile>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a010bb9c37ea5f0a1fe5176d4d848a601</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EmbeddedStateAspect&lt; Base, Derived, StateDataT &gt;</type>
      <name>Impl</name>
      <anchorfile>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a6e76a25e3b4b8560666b68bb4b858538</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::State</type>
      <name>State</name>
      <anchorfile>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a87dd9ac66041daa1a4dbf8fa1a0f14a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::StateData</type>
      <name>StateData</name>
      <anchorfile>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ade3fdee7138f0d0b15ed8d5c4a37530c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DelegateTag</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a8a81861228f4a2c0535f89fe13fa3ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a9790d66218706b628a42ae14b0eb08d8</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbeddedStateAspect</name>
      <anchorfile>d0/d2e/classdart_1_1common_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>aa8a5e8d86ce1390af80fd8b1260e1ed7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>afa5361eae07ce937c2c02f97eed9edab</anchor>
      <arglist>(const Aspect::State &amp;state) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a47aa721cfb882bc7f41869962b3e33e9</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ac5d009f039a27799fd05bf4f1490c1e7</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>getState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>abaefedea723d10eb070db3ffb9d045a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a6b479ddded7c9423932030dedd7e9b9d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>CompositeT *</type>
      <name>getComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a8d23c724a04bcf52890139eec075bb81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CompositeT *</type>
      <name>getComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a80d24ecb6907ae2146bc7e7397162293</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a58196acb89cf6de196dea00abbcc3c86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>SetEmbeddedState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a7bb0a3593a0572541ad0a444c90b2e9e</anchor>
      <arglist>)(Derived *, const State &amp;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const State &amp;(*</type>
      <name>GetEmbeddedState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a26125d6e4ff6c14bee4a3382aba51176</anchor>
      <arglist>)(const Derived *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ae3c2500814c0927557c65d779794c186</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a481b7e22e63d11788712bf0a06f81e9f</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; State &gt;</type>
      <name>mTemporaryState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>aff62f694821d796a9b38ed94b16f9306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CompositeT *</type>
      <name>mComposite</name>
      <anchorfile>dc/d65/classdart_1_1common_1_1CompositeTrackingAspect.html</anchorfile>
      <anchor>a91a4fca62fe6a2ecef8ed1744f116281</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbedState</name>
    <filename>d1/db2/classdart_1_1common_1_1EmbedState.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">RequiresAspect&lt; common::EmbeddedStateAspect&lt; DerivedT, StateDataT &gt; &gt;</base>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>a09b75f4a2e5beb6d860a6f3d04fea803</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbeddedStateAspect&lt; Derived, StateDataT &gt;</type>
      <name>Aspect</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>aa8272cc1ebae71b1d975d2e8069f2e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::State</type>
      <name>AspectState</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>ab94e0772ca92c3205acd144ad708f3ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::StateData</type>
      <name>AspectStateData</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>a0b8efbaea338875c3ef2962d9e8bff73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::RequiresAspect&lt; Aspect &gt;</type>
      <name>Base</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>af1becd72f5a87ca1267ce55cc0514932</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbedState</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>a5116906d241212261a5b178f4004e156</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbedState</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>a78369ea3fb406a6d300315f2666e84ab</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const AspectState &amp;</type>
      <name>getAspectState</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>ae376b8513a3a1bc93c08b57f2880d9ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AspectState</type>
      <name>mAspectState</name>
      <anchorfile>d1/db2/classdart_1_1common_1_1EmbedState.html</anchorfile>
      <anchor>a151d6c4b8d5c134d9f1858b51a87cba9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbedStateOnTopOf</name>
    <filename>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>BaseComposites</templarg>
    <base>CompositeJoiner&lt; EmbedState&lt; DerivedT, StateDataT &gt;, BaseComposites...&gt;</base>
    <member kind="typedef">
      <type>EmbedState&lt; DerivedT, StateDataT &gt;</type>
      <name>Impl</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>af85e1a6f34bf02a1e2f134d98b5e692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Derived</type>
      <name>Derived</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>af7d0c5143cf22d64f3192fae8644b72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectStateData</type>
      <name>AspectStateData</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>ad4c29e6ea17741f71ba19d767277f3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectState</type>
      <name>AspectState</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>af4f062e5cdd9f081116fe0f83a3cab16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Aspect</type>
      <name>Aspect</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>a1108925cb552b19da63b1f109078fb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeJoiner&lt; Impl, BaseComposites...&gt;</type>
      <name>Base</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>a63dde6ec3c877d4d561a1d3d9411c147</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbedStateOnTopOf</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>a7daca36c8ead677aac73222fba26cc7d</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbedStateOnTopOf</name>
      <anchorfile>d2/db6/classdart_1_1common_1_1EmbedStateOnTopOf.html</anchorfile>
      <anchor>ad7146860a01b779ff496cb4e88ce8a21</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbeddedPropertiesAspect</name>
    <filename>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EmbeddedPropertiesAspect&lt; CompositeTrackingAspect&lt; CompositeT &gt;, EmbeddedPropertiesAspect&lt; CompositeT, PropertiesDataT &gt;, PropertiesDataT &gt;</base>
    <member kind="typedef">
      <type>CompositeTrackingAspect&lt; CompositeT &gt;</type>
      <name>Base</name>
      <anchorfile>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a7344c5e3d67861c339538f0b9e25ec16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EmbeddedPropertiesAspect&lt; CompositeT, PropertiesDataT &gt;</type>
      <name>Derived</name>
      <anchorfile>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a6d22eed7b63a4e8194fedce4049fa28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EmbeddedPropertiesAspect&lt; Base, Derived, PropertiesDataT &gt;</type>
      <name>Impl</name>
      <anchorfile>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>ad4979efe5cf9891cc7ece1d660dc20ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Properties</type>
      <name>Properties</name>
      <anchorfile>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa601ffacc14a27c49090a1093743fc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::PropertiesData</type>
      <name>PropertiesData</name>
      <anchorfile>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>ade6b2049583e1509f35cf45b5fab360d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>af6aa871d23dd3dd8dac600e88c2e0176</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbeddedPropertiesAspect</name>
      <anchorfile>dc/df3/classdart_1_1common_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa5114c4b4d4b20501d7ba20c1bd7e5bd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa3db46801516b9c681d3349fc1afe1e4</anchor>
      <arglist>(const Aspect::Properties &amp;properties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>acb1c2c36d0cd716f7854d299eecad3aa</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a24bd97422ac48cc04d8cbcecbc23488f</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa74435cab8991746b6924c0efd572e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a7ba21e964692af29e5a45a5447868715</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>SetEmbeddedProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a68ff47733db7577d6b08d96fc986cfd1</anchor>
      <arglist>)(Derived *, const Properties &amp;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const Properties &amp;(*</type>
      <name>GetEmbeddedProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a256f36d402b89d8d229674b70933fb24</anchor>
      <arglist>)(const Derived *)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>DelegateTag</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa82743a15d0aa231696524b697b4b62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a551d0635c8ca05fb3986f31fca48b07d</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>af051db90078cf3fdf8f8035783fd9806</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Properties &gt;</type>
      <name>mTemporaryProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a433e1f90fcb1aa44e6cc784c4d7e1671</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbedProperties</name>
    <filename>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</filename>
    <templarg>DerivedT</templarg>
    <templarg>PropertiesDataT</templarg>
    <base virtualness="virtual">RequiresAspect&lt; common::EmbeddedPropertiesAspect&lt; DerivedT, PropertiesDataT &gt; &gt;</base>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a97ea5474e8a99d03350e48a531c87ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbeddedPropertiesAspect&lt; Derived, PropertiesDataT &gt;</type>
      <name>Aspect</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>acd58d0c7b37e0750b83ddac696629f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::Properties</type>
      <name>AspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a9fe1dd1e36565464bf9cd87e8380b96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::PropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a667fc3b7d3c507750e75c1be918acb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::RequiresAspect&lt; Aspect &gt;</type>
      <name>Base</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a45ffcfe97460f6c10a880eb05d4acfc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbedProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a1b9fd75d73ab763a5d82bd25be089cfa</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbedProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>ad7bc4ad454c0f65d4dbc3c991db00a03</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const AspectProperties &amp;</type>
      <name>getAspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>abefb3bea09385788bf00867bd47a68ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AspectProperties</type>
      <name>mAspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a07c72a6b991a9fde7662062f75371b6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbedPropertiesOnTopOf</name>
    <filename>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</filename>
    <templarg>DerivedT</templarg>
    <templarg>PropertiesDataT</templarg>
    <templarg>CompositeBases</templarg>
    <base>CompositeJoiner&lt; EmbedProperties&lt; DerivedT, PropertiesDataT &gt;, CompositeBases...&gt;</base>
    <member kind="typedef">
      <type>EmbedProperties&lt; DerivedT, PropertiesDataT &gt;</type>
      <name>Impl</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a11332640ee8bf15a4d85852ee5073d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Derived</type>
      <name>Derived</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a1e7c44cb7dfd94ea61cadb38ff619116</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectPropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a2c5e9d784c674edc0763646d88870ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>addc9941aced02c95143557599e8bccf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Aspect</type>
      <name>Aspect</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a7a09a3abbcd10a188a9dafff5a420cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeJoiner&lt; Impl, CompositeBases...&gt;</type>
      <name>Base</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>ad9af78a0e035eb90052912c29cf2895c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbedPropertiesOnTopOf</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>aca83aa7c07ea98bc5bf6b110fa11c9ba</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbedPropertiesOnTopOf</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a9f4787c497762d53dc9fe23a47f1d8e2</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbeddedStateAndPropertiesAspect</name>
    <filename>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>EmbeddedPropertiesAspect&lt; detail::EmbeddedStateAspect&lt; CompositeTrackingAspect&lt; CompositeT &gt;, EmbeddedStateAndPropertiesAspect&lt; CompositeT, StateDataT, PropertiesDataT &gt;, StateDataT &gt;, EmbeddedStateAndPropertiesAspect&lt; CompositeT, StateDataT, PropertiesDataT &gt;, PropertiesDataT &gt;</base>
    <member kind="typedef">
      <type>EmbeddedStateAndPropertiesAspect&lt; CompositeT, StateDataT, PropertiesDataT &gt;</type>
      <name>Derived</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>aaddd02872284a572d13e14b656e9d0c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EmbeddedStateAspect&lt; CompositeTrackingAspect&lt; CompositeT &gt;, Derived, StateDataT &gt;</type>
      <name>AspectStateImpl</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a94d397baddc329f977fde7911a265755</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EmbeddedPropertiesAspect&lt; AspectStateImpl, Derived, PropertiesDataT &gt;</type>
      <name>AspectPropertiesImpl</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a22d34b9e7615e57e229d44c381854edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Derived</type>
      <name>AspectImpl</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>ae1e1c90bd7a4081229007040216370c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename AspectStateImpl::State</type>
      <name>State</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a640d8bdcaa676137747b3c834f8f68de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename AspectStateImpl::StateData</type>
      <name>StateData</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a383e7230b795315bd3b77246cbba2a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename AspectPropertiesImpl::Properties</type>
      <name>Properties</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>ab8c41ba8c1959c3af906331998abe032</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename AspectPropertiesImpl::PropertiesData</type>
      <name>PropertiesData</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a9e86f0788ffffaddb6547f1eb1da6b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeT</type>
      <name>CompositeType</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a86e8149cd4b45f781356a1f52d3f7c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EmbeddedStateAspect&lt; CompositeTrackingAspect&lt; CompositeT &gt;, EmbeddedStateAndPropertiesAspect&lt; CompositeT, StateDataT, PropertiesDataT &gt;, StateDataT &gt;</type>
      <name>Base</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a7b01a23a01e44492a521c032033b810c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAndPropertiesAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>ad5e921fec0b97f780ce5f63127a5a173</anchor>
      <arglist>(const EmbeddedStateAndPropertiesAspect &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbeddedStateAndPropertiesAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a5b416f5895195a09b77ae62a918909b2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAndPropertiesAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a40f39ad3ffcb9c8baf544e140879f77e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAndPropertiesAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a41e9d0cb4998c6afa488d0c7b253dc12</anchor>
      <arglist>(const StateData &amp;state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAndPropertiesAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>aef3c352481a3c050c190e5439fc13050</anchor>
      <arglist>(const PropertiesData &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAndPropertiesAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a7baed1dfd10b9ad7b9244be507141613</anchor>
      <arglist>(const StateData &amp;state, const PropertiesData &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAndPropertiesAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a6cf8222dba354d10c17fd45912d9b537</anchor>
      <arglist>(const PropertiesData &amp;properties, const StateData &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d3/de9/classdart_1_1common_1_1EmbeddedStateAndPropertiesAspect.html</anchorfile>
      <anchor>a6f0513d74a58c5a6fc2c803a98452dd7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa3db46801516b9c681d3349fc1afe1e4</anchor>
      <arglist>(const Aspect::Properties &amp;properties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>acb1c2c36d0cd716f7854d299eecad3aa</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a24bd97422ac48cc04d8cbcecbc23488f</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa74435cab8991746b6924c0efd572e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>afa5361eae07ce937c2c02f97eed9edab</anchor>
      <arglist>(const Aspect::State &amp;state) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a47aa721cfb882bc7f41869962b3e33e9</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ac5d009f039a27799fd05bf4f1490c1e7</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>getState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>abaefedea723d10eb070db3ffb9d045a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>SetEmbeddedProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a68ff47733db7577d6b08d96fc986cfd1</anchor>
      <arglist>)(Derived *, const Properties &amp;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const Properties &amp;(*</type>
      <name>GetEmbeddedProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a256f36d402b89d8d229674b70933fb24</anchor>
      <arglist>)(const Derived *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>SetEmbeddedState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a7bb0a3593a0572541ad0a444c90b2e9e</anchor>
      <arglist>)(Derived *, const State &amp;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const State &amp;(*</type>
      <name>GetEmbeddedState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a26125d6e4ff6c14bee4a3382aba51176</anchor>
      <arglist>)(const Derived *)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>DelegateTag</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa82743a15d0aa231696524b697b4b62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a551d0635c8ca05fb3986f31fca48b07d</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>af051db90078cf3fdf8f8035783fd9806</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Properties &gt;</type>
      <name>mTemporaryProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a433e1f90fcb1aa44e6cc784c4d7e1671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; State &gt;</type>
      <name>mTemporaryState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>aff62f694821d796a9b38ed94b16f9306</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbedStateAndProperties</name>
    <filename>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">RequiresAspect&lt; common::EmbeddedStateAndPropertiesAspect&lt; DerivedT, StateDataT, PropertiesDataT &gt; &gt;</base>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>a539538beb609af370e095d37b506732a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbeddedStateAndPropertiesAspect&lt; DerivedT, StateDataT, PropertiesDataT &gt;</type>
      <name>Aspect</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>a626dca017eb1b15e23dbf4db92dec38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::State</type>
      <name>AspectState</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>addfc09cb47fa6ee187049da5fb170fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::StateData</type>
      <name>AspectStateData</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>ac5c3bbd139b79a04540bc86ff34bb517</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::Properties</type>
      <name>AspectProperties</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>a380d4497709ebb713ed1d7fa04250ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::PropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>afd992e4ff9109aa3c5fd95db88ee26fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::RequiresAspect&lt; Aspect &gt;</type>
      <name>Base</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>aa49ac716242892c4048b36586e83e735</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbedStateAndProperties</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>a021f498b6f6d2ee53bffe9e8d11072a6</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbedStateAndProperties</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>a45f1d0d2adc46a8619c8f9554e6da3f0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const AspectState &amp;</type>
      <name>getAspectState</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>abdfcd1330f1d5609d92094c3bd8050b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const AspectProperties &amp;</type>
      <name>getAspectProperties</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>a45c31d64e980ebb21ec53c398bd0ae01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AspectState</type>
      <name>mAspectState</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>a405ce6bb8f6fb68672230932ac980c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AspectProperties</type>
      <name>mAspectProperties</name>
      <anchorfile>da/d3f/classdart_1_1common_1_1EmbedStateAndProperties.html</anchorfile>
      <anchor>adc32d6d51e7c90c6e54aa2bd737f62d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::EmbedStateAndPropertiesOnTopOf</name>
    <filename>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>CompositeBases</templarg>
    <base>CompositeJoiner&lt; EmbedStateAndProperties&lt; DerivedT, StateDataT, PropertiesDataT &gt;, CompositeBases...&gt;</base>
    <member kind="typedef">
      <type>EmbedStateAndProperties&lt; DerivedT, StateDataT, PropertiesDataT &gt;</type>
      <name>Impl</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>aea33dcced2d344092574deb6aa84782f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Derived</type>
      <name>Derived</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>a2713c49ecc7539a889544c91f1c56672</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectStateData</type>
      <name>AspectStateData</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>aa5f7608053743f1642caa24599a627c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectState</type>
      <name>AspectState</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>a063e4ea1a01e576564a325ac7ba6ea9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectPropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>aed0debe178ca978e90b5c039e4edf74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>af20c2c0f8ddd417717904a8a49871123</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Aspect</type>
      <name>Aspect</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>a844993fd4688b42447438b7e7dbc9f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeJoiner&lt; Impl, CompositeBases...&gt;</type>
      <name>Base</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>a938202965f278bce5202ab3c1714d479</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbedStateAndPropertiesOnTopOf</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>abf9c8f3193a34cf7be9595cac3c08675</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbedStateAndPropertiesOnTopOf</name>
      <anchorfile>d8/de9/classdart_1_1common_1_1EmbedStateAndPropertiesOnTopOf.html</anchorfile>
      <anchor>a0e0d191de36aace6de38657b5b071999</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::Empty</name>
    <filename>d9/dc4/structdart_1_1common_1_1Empty.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::common::Factory</name>
    <filename>d9/d84/classdart_1_1common_1_1Factory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <class kind="struct">dart::common::Factory::EnumClassHash</class>
    <member kind="typedef">
      <type>Factory&lt; KeyT, BaseT, HeldT &gt;</type>
      <name>This</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a5ee737d56bd72af3c1bd1fad8d118617</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; HeldT(Args...)&gt;</type>
      <name>Creator</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a38dcb592d85551272186ff8ef41ae1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_enum&lt; Key &gt;::value, EnumClassHash, std::hash&lt; Key &gt;&gt;::type</type>
      <name>HashType</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a79780a28720f4b432b1c70914889d8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; KeyT, Creator, HashType&lt; KeyT &gt;&gt;</type>
      <name>CreatorMap</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a32339116122c8818bed49cb6d37a5225</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a4cedb6fcff9b7f9d552abc743098ba1f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>acc5ecae297cc28bf8477c7fe5d62027a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCreator</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a58ac38a6e84a827a76a2e131c5a604f1</anchor>
      <arglist>(const KeyT &amp;key, Creator creator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCreator</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a22fabadebeab49801cd0140211033192</anchor>
      <arglist>(const KeyT &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterCreator</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a6cfe9f8eeac2daacd9d6c0840a9e9bea</anchor>
      <arglist>(const KeyT &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterAllCreators</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>af174ac4c58d87d9f5fd0e466976ff61e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canCreate</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a23301ce52e40a4906443a36879319f42</anchor>
      <arglist>(const KeyT &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>HeldT</type>
      <name>create</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>a42a07ea07818685bb1c9799b8e865209</anchor>
      <arglist>(const KeyT &amp;key, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static HeldT</type>
      <name>defaultCreator</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>af337f81120c63384ba04753984a2282b</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CreatorMap</type>
      <name>mCreatorMap</name>
      <anchorfile>d9/d84/classdart_1_1common_1_1Factory.html</anchorfile>
      <anchor>affab25c26a3c839fabacec2f9ed68eaf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::Factory::EnumClassHash</name>
    <filename>dd/dec/structdart_1_1common_1_1Factory_1_1EnumClassHash.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>dd/dec/structdart_1_1common_1_1Factory_1_1EnumClassHash.html</anchorfile>
      <anchor>a663f96f7768cc3256f08fd73c4c7332b</anchor>
      <arglist>(T t) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::FactoryRegistrar</name>
    <filename>d9/da2/classdart_1_1common_1_1FactoryRegistrar.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="typedef">
      <type>FactoryRegistrar&lt; KeyT, BaseT, DerivedT, HeldT &gt;</type>
      <name>This</name>
      <anchorfile>d9/da2/classdart_1_1common_1_1FactoryRegistrar.html</anchorfile>
      <anchor>a36b8baaffb2fa9b98a54cc754271718d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Factory&lt; KeyT, BaseT, HeldT, Args...&gt;</type>
      <name>FactoryType</name>
      <anchorfile>d9/da2/classdart_1_1common_1_1FactoryRegistrar.html</anchorfile>
      <anchor>a0dc89ff72e53bc407815d319cfe067fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Singleton&lt; FactoryType &gt;</type>
      <name>SingletonFactory</name>
      <anchorfile>d9/da2/classdart_1_1common_1_1FactoryRegistrar.html</anchorfile>
      <anchor>ab33b8f0a460c026bcbb7e2bbb50b9142</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename FactoryType::Creator</type>
      <name>Creator</name>
      <anchorfile>d9/da2/classdart_1_1common_1_1FactoryRegistrar.html</anchorfile>
      <anchor>aefa02ba566db70bec8d2f32103fb3d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FactoryRegistrar</name>
      <anchorfile>d9/da2/classdart_1_1common_1_1FactoryRegistrar.html</anchorfile>
      <anchor>a0ab692ae8b5a1b972faad4ce1c7be8c5</anchor>
      <arglist>(const KeyT &amp;key, Creator creator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FactoryRegistrar</name>
      <anchorfile>d9/da2/classdart_1_1common_1_1FactoryRegistrar.html</anchorfile>
      <anchor>a794589f327898135bcb23d77e2f11b0b</anchor>
      <arglist>(const KeyT &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::LocalResource</name>
    <filename>d5/db8/classdart_1_1common_1_1LocalResource.html</filename>
    <base virtualness="virtual">dart::common::Resource</base>
    <member kind="enumeration">
      <type></type>
      <name>SeekType</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEEKTYPE_CUR</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bdab3af11a29fed3dbb8cb95706b46f83ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEEKTYPE_END</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bda57fac14752ca53837eb184c043371b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEEKTYPE_SET</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bda8575b4852cbde04e343dd18868f98647</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalResource</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a743ca6a52936eedce2dcdba497fec4d0</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocalResource</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>aad3364813d04a2e8c987e632d353ad08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalResource</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a25d0102f970c0ba4e8cac6069cee2542</anchor>
      <arglist>(const LocalResource &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type>LocalResource &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>ae6ae936d041ae7d891b5e8df8393c177</anchor>
      <arglist>(const LocalResource &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGood</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a76a2e296580c9f84ae702148343c720c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getSize</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>ab97bf65ea67e182762ef86f5113f13f9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>tell</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a695f8e08ecfe50a66aa8cfe7dc5b12a8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>seek</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>abaf34482d1bf87437580582c41286e15</anchor>
      <arglist>(ptrdiff_t _origin, SeekType _mode) override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>ac6b784c60fd108f027382cd8459132f2</anchor>
      <arglist>(void *_buffer, std::size_t _size, std::size_t _count) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>readAll</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>a7ebeaf00964c40baba8e2b6d0942f8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::FILE *</type>
      <name>mFile</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a0a89d11eed924d930fe0d5fd53dc5e28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::LocalResourceRetriever</name>
    <filename>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</filename>
    <base virtualness="virtual">dart::common::ResourceRetriever</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocalResourceRetriever</name>
      <anchorfile>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</anchorfile>
      <anchor>aea9abd8ecceab183a664d896cf31297b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</anchorfile>
      <anchor>ad49c22a18ad1b5e8bcbf43e17754288d</anchor>
      <arglist>(const Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</anchorfile>
      <anchor>abe963f60287c0272de05902736f8b856</anchor>
      <arglist>(const Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilePath</name>
      <anchorfile>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</anchorfile>
      <anchor>abf93eba577a821d625a93b4444690e8f</anchor>
      <arglist>(const Uri &amp;uri) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>readAll</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>ace60ea370de249586b6146b44eebd0a9</anchor>
      <arglist>(const Uri &amp;uri)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::LockableReference</name>
    <filename>db/dde/classdart_1_1common_1_1LockableReference.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>LockableReference</name>
      <anchorfile>db/dde/classdart_1_1common_1_1LockableReference.html</anchorfile>
      <anchor>a7cb114d569f5ac6d97f638e11253ef16</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LockableReference</name>
      <anchorfile>db/dde/classdart_1_1common_1_1LockableReference.html</anchorfile>
      <anchor>ac77c012ca0b43c9dd7e2dbb49ddf63d2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>lock</name>
      <anchorfile>db/dde/classdart_1_1common_1_1LockableReference.html</anchorfile>
      <anchor>a1d7f7245c350e87736c09ed6334c1762</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>try_lock</name>
      <anchorfile>db/dde/classdart_1_1common_1_1LockableReference.html</anchorfile>
      <anchor>af34b5f4426767a801604fd46daac0b87</anchor>
      <arglist>() noexcept=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unlock</name>
      <anchorfile>db/dde/classdart_1_1common_1_1LockableReference.html</anchorfile>
      <anchor>aa20dec0f5e50ee655a8827d4a22217e2</anchor>
      <arglist>() noexcept=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LockableReference</name>
      <anchorfile>db/dde/classdart_1_1common_1_1LockableReference.html</anchorfile>
      <anchor>abc3345086f2077f296db3ab224a68dc2</anchor>
      <arglist>(const LockableReference &amp;)=delete</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::SingleLockableReference</name>
    <filename>df/daa/classdart_1_1common_1_1SingleLockableReference.html</filename>
    <templarg></templarg>
    <base>dart::common::LockableReference</base>
    <member kind="typedef">
      <type>LockableT</type>
      <name>Lockable</name>
      <anchorfile>df/daa/classdart_1_1common_1_1SingleLockableReference.html</anchorfile>
      <anchor>a7c8cd8a43d14c4ae834ee9443303b5e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SingleLockableReference</name>
      <anchorfile>df/daa/classdart_1_1common_1_1SingleLockableReference.html</anchorfile>
      <anchor>af161d05c38371eb8504ffe76765d2b06</anchor>
      <arglist>(std::weak_ptr&lt; const void &gt; lockableHolder, Lockable &amp;lockable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>df/daa/classdart_1_1common_1_1SingleLockableReference.html</anchorfile>
      <anchor>ace2128557280c74c41bf1ed609c2a27f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>df/daa/classdart_1_1common_1_1SingleLockableReference.html</anchorfile>
      <anchor>af34969721571a1dd56407eae0fe92ddd</anchor>
      <arglist>() noexceptoverride</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>df/daa/classdart_1_1common_1_1SingleLockableReference.html</anchorfile>
      <anchor>a2c6455b8a35f221919842df1609c80a1</anchor>
      <arglist>() noexceptoverride</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; const void &gt;</type>
      <name>mLockableHolder</name>
      <anchorfile>df/daa/classdart_1_1common_1_1SingleLockableReference.html</anchorfile>
      <anchor>afcce2cded3df0e7856eb15e219caaa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Lockable &amp;</type>
      <name>mLockable</name>
      <anchorfile>df/daa/classdart_1_1common_1_1SingleLockableReference.html</anchorfile>
      <anchor>a9a5278724bc38a17bed4108b2bffd910</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::MultiLockableReference</name>
    <filename>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</filename>
    <templarg></templarg>
    <base>dart::common::LockableReference</base>
    <member kind="typedef">
      <type>LockableT</type>
      <name>Lockable</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>a22f7886978cd272ac63249ace2f64f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiLockableReference</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>a3bd07e07c45f212e24342773ef2d91bd</anchor>
      <arglist>(std::weak_ptr&lt; const void &gt; lockableHolder, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>afd0ce7d4560ddaa7396398b75c98f7c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>a33f38f8fd9547589e09427940dad078f</anchor>
      <arglist>() noexceptoverride</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>aaae80c2554b5c27b12139bae1f376b81</anchor>
      <arglist>() noexceptoverride</arglist>
    </member>
    <member kind="function" protection="private">
      <type>T *</type>
      <name>ptr</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>afdf79dff10ca324af41cceab35d1bc12</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>T *</type>
      <name>ptr</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>a09c5c505690828f7055491d7b37d0ee7</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; const void &gt;</type>
      <name>mLockableHolder</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>ae0db0a0f48d06a8c771d6cdb2b72fb8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Lockable * &gt;</type>
      <name>mLockables</name>
      <anchorfile>d0/d20/classdart_1_1common_1_1MultiLockableReference.html</anchorfile>
      <anchor>ab1eddd076c9767735348cafe7a9f8b26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::NameManager</name>
    <filename>d9/dc9/classdart_1_1common_1_1NameManager.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>NameManager</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a2e7bd233950b82eb1a5b3bfd556787fb</anchor>
      <arglist>(const std::string &amp;_managerName=&quot;default&quot;, const std::string &amp;_defaultName=&quot;default&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NameManager</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a160e5ec93df6b51bae740b4952e26c77</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPattern</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a5151f874d38f1b5618458418dddad6b5</anchor>
      <arglist>(const std::string &amp;_newPattern)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>issueNewName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a71eb62f834ebea8ab1b0db0604f12a71</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>issueNewNameAndAdd</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ac3e61f1e2daa6fc76d81260dc371cf15</anchor>
      <arglist>(const std::string &amp;_name, const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a8868a11da41608e76b87ddb41e760b92</anchor>
      <arglist>(const std::string &amp;_name, const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a4d72558bcf35f9e9e9b5d1d939fc969e</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeObject</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a34fe185d22b2be18d915298e5f1ab245</anchor>
      <arglist>(const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEntries</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a620599b98c21c9c3d6520f6eeffe0269</anchor>
      <arglist>(const std::string &amp;_name, const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a29e5d196cbad9ce2dc72e0463f0521a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>aac95457ad6af8aa2af0a37a7f00a03cd</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasObject</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a9edb87a6c9ecbb5559168a65cb6ecb5f</anchor>
      <arglist>(const T &amp;_obj) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getCount</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ab131be1b6b03a8d1bce6082f495dd766</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getObject</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a49695528319e74db8aa66f52559245cb</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>afc70fd20cf56b550aa66e2434f2d4332</anchor>
      <arglist>(const T &amp;_obj) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>changeObjectName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a81b1bd14c914c5e211ad53db5ada59e5</anchor>
      <arglist>(const T &amp;_obj, const std::string &amp;_newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ae99148158f11e103f539fed69a36683c</anchor>
      <arglist>(const std::string &amp;_defaultName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDefaultName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a21d1177beb6af61d9e5a763d469d3f83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setManagerName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a3ddff96460734e9e8fc984e2d2a47ac2</anchor>
      <arglist>(const std::string &amp;_managerName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getManagerName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ae49b3c6102a3f27304dac5184508c207</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mManagerName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a5df13ee6dafd5a13ae2c48cebfa84d0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, T &gt;</type>
      <name>mMap</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>af840e795dc1d36c5386decdbea793261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; T, std::string &gt;</type>
      <name>mReverseMap</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a9e63bd6819326677b4bcc4267cb4333d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mDefaultName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a8c87a6a21414cd184b3aa96b3edf28fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNameBeforeNumber</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ad644b4ba99f0c1ccc0eb6a4e8bda26ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mPrefix</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>afa731ace7fe9759d6456bbb9977a7d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mInfix</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a10644fa0dd7f919300bac025a5c3a3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mAffix</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a8ed2f3966d9d48ba1f37ba251da99e6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Observer</name>
    <filename>d8/dc0/classdart_1_1common_1_1Observer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Observer</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>ad258ec5ad54c980958865d76ec140e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveDestructionNotification</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a854d2f1461cdbad2dfe2e1dad09e9a9e</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a13cc73e8285f40a9f1cbfcaee5ebd80f</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSubject</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a246d9cdfb47106512c08c49bc88affec</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeSubject</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>ac5cfccb6194f0da4c2f77d402abf86bb</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeAllSubjects</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a84ae8e5ed7da1e29ba49dd6e67e98750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; const Subject * &gt;</type>
      <name>mSubjects</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a00eeaad4d745383b55d0eb46b231715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Subject</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a5daa6be80b3fbc385ac0a0d93ad161d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::ProxyStateAndPropertiesAspect</name>
    <filename>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ProxyPropertiesAspect&lt; ProxyStateAspect&lt; CompositeT, StateT &gt;, CompositeT, PropertiesT &gt;</base>
    <member kind="typedef">
      <type>StateT</type>
      <name>State</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>ad5c5098db24fb82db2ddce658bb64957</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertiesT</type>
      <name>Properties</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>a419f06f0f6b8fe40c0493b96404519af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeT</type>
      <name>CompositeType</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>aaf179174a6c8053c4b983676a9ace265</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProxyStateAspect&lt; CompositeType, State &gt;</type>
      <name>AspectStateImpl</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>a841749182b6ff96a796af3337296d1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::ProxyPropertiesAspect&lt; AspectStateImpl, CompositeType, Properties &gt;</type>
      <name>AspectPropertiesImpl</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>a4649b9bf81f0969b719061034a6068f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectPropertiesImpl</type>
      <name>Base</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>a6c9e3158b9250495176618c27da9d937</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProxyStateAndPropertiesAspect</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>a0e3ec094f74d64812ce010e0e988f46a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyStateAndPropertiesAspect</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>adfa9314c3ae62193b04bcc79944a6a6b</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d3/da9/classdart_1_1common_1_1ProxyStateAndPropertiesAspect.html</anchorfile>
      <anchor>a6398992b10a82098f014488379a57462</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a59a858cf9955e7f7ab2bba025136ea92</anchor>
      <arglist>(const Aspect::Properties &amp;properties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a250b981988f3f8c64861e72b98d58f20</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a47fbc88e267594f933370e06a5ab8f00</anchor>
      <arglist>(const Aspect::State &amp;state) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a8819efe73bcf6ba6227344c0a25fb504</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>ae894ece6a78ec4e3ea31cf4e3a45146f</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a95d03e6096ee963a046760819983b2ba</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProxyProperties</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a86969526d6d22cc72d2e2e6ae270d176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>mProxyState</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>acf6978930ba0adca501085b9e413cfa0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::RequiresAspect</name>
    <filename>d4/dc5/classdart_1_1common_1_1RequiresAspect.html</filename>
    <templarg>OtherRequiredAspects</templarg>
  </compound>
  <compound kind="class">
    <name>dart::common::RequiresAspect&lt; ReqAspect &gt;</name>
    <filename>d5/da7/classdart_1_1common_1_1RequiresAspect_3_01ReqAspect_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">SpecializedForAspect&lt; ReqAspect &gt;</base>
    <member kind="function">
      <type></type>
      <name>RequiresAspect</name>
      <anchorfile>d5/da7/classdart_1_1common_1_1RequiresAspect_3_01ReqAspect_01_4.html</anchorfile>
      <anchor>a1600b310be0155a438bac12128e3f8d5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::RequiresAspect&lt; ReqAspect1, OtherReqAspects...&gt;</name>
    <filename>db/d67/classdart_1_1common_1_1RequiresAspect_3_01ReqAspect1_00_01OtherReqAspects_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg>OtherReqAspects</templarg>
    <base>CompositeJoiner&lt; Virtual&lt; RequiresAspect&lt; ReqAspect1 &gt; &gt;, Virtual&lt; RequiresAspect&lt; OtherReqAspects...&gt; &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>dart::common::Resource</name>
    <filename>d6/d63/classdart_1_1common_1_1Resource.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Resource</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>afc35a4d9647b1b03f35b395a14bb3acd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getSize</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>af64099bf4574c8fc66cce5af424e774a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>tell</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>a4095b004f79d6519e472e5f6b6e8c0d2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>seek</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>afb0be90881f133011b5045c12e1d199f</anchor>
      <arglist>(ptrdiff_t _offset, SeekType _origin)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>read</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>a89f0a5cccf9c35b70474afe0a78aabe3</anchor>
      <arglist>(void *_buffer, std::size_t _size, std::size_t _count)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::ResourceRetriever</name>
    <filename>de/df1/classdart_1_1common_1_1ResourceRetriever.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResourceRetriever</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>abd71abb80ea581495e01e54f503691ba</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>exists</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>aba8d9d23400799638428c5af39a34fe8</anchor>
      <arglist>(const Uri &amp;_uri)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>a89dbd78f6b7503e7b32daf301d3a7239</anchor>
      <arglist>(const Uri &amp;_uri)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getFilePath</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>a00dcc728c67f0ccb9e32ce45a8a27a1c</anchor>
      <arglist>(const Uri &amp;uri)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::SharedLibrary</name>
    <filename>d3/da6/classdart_1_1common_1_1SharedLibrary.html</filename>
    <member kind="function">
      <type></type>
      <name>SharedLibrary</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>a5658281abbcd28ecf3a1c9691dc5b01e</anchor>
      <arglist>(ProtectedConstructionTag, const boost::filesystem::path &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SharedLibrary</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>af1517b26c2d13b0e424f7f5ee921ded2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const boost::filesystem::path &amp;</type>
      <name>getCanonicalPath</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>aea8315ce55e89c318fec11df2dba80c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>a6689c926913f93c101a7591f04114672</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getSymbol</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>a1fff813f0c0e072de6332d3559eacd63</anchor>
      <arglist>(const std::string &amp;symbolName) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; SharedLibrary &gt;</type>
      <name>create</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>a79b616608b7915a50ddcb62beadedfea</anchor>
      <arglist>(const boost::filesystem::path &amp;path)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ProtectedConstructionTag</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>a04d5943d50d4ccb975f340257393aebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ProtectedConstruction</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>a04d5943d50d4ccb975f340257393aebea2ce30e33ce24aa9abec651f06e629639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::filesystem::path</type>
      <name>mCanonicalPath</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>a006b4256660f9ee57ba77a6aff04ec4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DYNLIB_HANDLE</type>
      <name>mInstance</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>af7e6e2f7d5418346e9310df01acc5e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>ab8561b2d668522741614c8ab72eb8679</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>detail::SharedLibraryManager</name>
      <anchorfile>d3/da6/classdart_1_1common_1_1SharedLibrary.html</anchorfile>
      <anchor>ac297606397943da83f3dcfde386bd57d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Connection</name>
    <filename>d1/d23/classdart_1_1common_1_1Connection.html</filename>
    <member kind="function">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>aeb3ebc91e201a946b8957d5c5882eff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>abca81c90a0221a2de3f18378bae1920a</anchor>
      <arglist>(const Connection &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>ade48b82aef7c70cc295c55cc660a825b</anchor>
      <arglist>(Connection &amp;&amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>Connection &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>abf7b9638bd1457c491fdf2e0f6ac171f</anchor>
      <arglist>(const Connection &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>Connection &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a5d41d80ec2b4e642bd4a53f4e379ece9</anchor>
      <arglist>(Connection &amp;&amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>aa1e1ce6d30b2c0f21696de5fdbfaba4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a9d0894eb09523e8c7d04b1be3f13b6b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a9ce866dc4fb63d159f7ef85c840d0c86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a698d9b80065f15f296a063363289abd4</anchor>
      <arglist>(const std::weak_ptr&lt; signal::detail::ConnectionBodyBase &gt; &amp;_connectionBody)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a0c619b0eb2b35a0669ee36209767e0d1</anchor>
      <arglist>(std::weak_ptr&lt; signal::detail::ConnectionBodyBase &gt; &amp;&amp;_connectionBody)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; signal::detail::ConnectionBodyBase &gt;</type>
      <name>mWeakConnectionBody</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>acf32fe88c8710a2950b0370f9fb53544</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Signal</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a7cea54a98a220ab4ff4f533b911a3e5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::ScopedConnection</name>
    <filename>de/d43/classdart_1_1common_1_1ScopedConnection.html</filename>
    <base>dart::common::Connection</base>
    <member kind="function">
      <type></type>
      <name>ScopedConnection</name>
      <anchorfile>de/d43/classdart_1_1common_1_1ScopedConnection.html</anchorfile>
      <anchor>a77a1acd90028535a22ce906c3b2e8cca</anchor>
      <arglist>(const Connection &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopedConnection</name>
      <anchorfile>de/d43/classdart_1_1common_1_1ScopedConnection.html</anchorfile>
      <anchor>ab82e9fcf01ae8eea24464c0e95e3d630</anchor>
      <arglist>(Connection &amp;&amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ScopedConnection</name>
      <anchorfile>de/d43/classdart_1_1common_1_1ScopedConnection.html</anchorfile>
      <anchor>a703445c31fd0e8d30d2b43fd65ff4e47</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Signal</name>
    <filename>d9/d0f/classdart_1_1common_1_1Signal.html</filename>
    <templarg></templarg>
    <templarg>Combiner</templarg>
  </compound>
  <compound kind="class">
    <name>dart::common::Signal&lt; _Res(_ArgTypes...), Combiner &gt;</name>
    <filename>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</filename>
    <templarg></templarg>
    <templarg>_ArgTypes</templarg>
    <templarg>Combiner</templarg>
    <member kind="typedef">
      <type>_Res</type>
      <name>ResultType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>aadf10c88e81592d22f3f343a1e9e48bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; ResultType(_ArgTypes...)&gt;</type>
      <name>SlotType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>af2f848b762a4d9319c8f71d15445b764</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Signal&lt; _Res(_ArgTypes...), Combiner &gt;</type>
      <name>SignalType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>ab0b1f6deedf07272f6a6aed6dc9981ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signal::detail::ConnectionBody&lt; SlotType &gt;</type>
      <name>ConnectionBodyType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>abbbf8ff15ab7e06a942bbd1f61905b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; std::shared_ptr&lt; ConnectionBodyType &gt;, std::owner_less&lt; std::shared_ptr&lt; ConnectionBodyType &gt;&gt;&gt;</type>
      <name>ConnectionSetType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a76c40c9d492344291bc4db699b0bbffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a8f32ad9712d25b359052c36d3482f0ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Signal</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a6276c3a1969438d0dcfa899eb105e18e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a480c282356e874f84c13935ed6a4f281</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>aaee8821c21fdfb77f10ee57f61ba481c</anchor>
      <arglist>(SlotType &amp;&amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a51253bb5015cf6bdd53fc5eb12bae89f</anchor>
      <arglist>(const Connection &amp;_connection) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectAll</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a7811e18786015df235408b24d0390fbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanupConnections</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a20db2ad66e912b02da1cbc014fd2934e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumConnections</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a064eaaad4d0cb9bfda506468b8889d05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResultType</type>
      <name>raise</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>aaa9660a75c3405d9c33381c24b7c52ef</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>ResultType</type>
      <name>operator()</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a602830e45ec283e49489f08e84b08a58</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>_Res</type>
      <name>raise</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a32b5b9d5bbdbb7b645427a10fc6aeda6</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>_Res</type>
      <name>operator()</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a0fe5eed0aa6cebb196fd4409aece3ab4</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConnectionSetType</type>
      <name>mConnectionBodies</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>ac850fe9abd59a411b170cb5d3b759d6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Signal&lt; void(_ArgTypes...)&gt;</name>
    <filename>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</filename>
    <templarg>_ArgTypes</templarg>
    <member kind="typedef">
      <type>std::function&lt; void(_ArgTypes...)&gt;</type>
      <name>SlotType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a2b0bbae085868ab6106a5849e70baf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Signal&lt; void(_ArgTypes...)&gt;</type>
      <name>SignalType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>ada2601912a97717cb8363ce036405c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signal::detail::ConnectionBody&lt; SlotType &gt;</type>
      <name>ConnectionBodyType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a4fabd4687fc4f7d557cdac625e8b57fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; std::shared_ptr&lt; ConnectionBodyType &gt;, std::owner_less&lt; std::shared_ptr&lt; ConnectionBodyType &gt;&gt;&gt;</type>
      <name>ConnectionSetType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a890b9ab55008018536f208ad5c1ac736</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>af7a9721925420ea03dc0c2e2162ca3c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Signal</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a2073bd427e7211861720ce5e5ea25b36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a77ba7cfbfa103e68e1b292fbbc7c01a7</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>aa8d2389c12c8a3a7d922915e696b8920</anchor>
      <arglist>(SlotType &amp;&amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>acb3849287d69c4dbf362ee9e501f87b0</anchor>
      <arglist>(const Connection &amp;_connection) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectAll</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>adbb8e7e64e6a21e5f617746ce7b90712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanupConnections</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>ac9729ea39bcbd89ca35f107ade5e96aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumConnections</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>ae9927cea4647de12f1abef41490999f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>raise</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a4471f4769af251fcbf7a3f1f3fc11365</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>afa6e0a761fbad3f52c668a0567bc6a94</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConnectionSetType</type>
      <name>mConnectionBodies</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a7a630d307cf0092677bac8a9dbeb0093</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::SlotRegister</name>
    <filename>d4/ded/classdart_1_1common_1_1SlotRegister.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>typename T::SlotType</type>
      <name>SlotType</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>aab301b7419788d1747e8b26d25ab545a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename T::SignalType</type>
      <name>SignalType</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>a18dcbb46663013aef8c6cdfc92ef5bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SlotRegister</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>a1b32abc4f70e5649fd52cc7d3c01ced1</anchor>
      <arglist>(typename T::SignalType &amp;_signal)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>afb43dbef73d37010942bf9954bc9be17</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T::SignalType &amp;</type>
      <name>mSignal</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>ab6e145517a39cb7675e0ed4c719d00c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Singleton</name>
    <filename>d4/d72/classdart_1_1common_1_1Singleton.html</filename>
    <templarg>T</templarg>
    <member kind="function" static="yes">
      <type>static T &amp;</type>
      <name>getSingleton</name>
      <anchorfile>d4/d72/classdart_1_1common_1_1Singleton.html</anchorfile>
      <anchor>ab47cf7c8a7465b4b0e04bc4c82f00541</anchor>
      <arglist>(Args..._args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>getSingletonPtr</name>
      <anchorfile>d4/d72/classdart_1_1common_1_1Singleton.html</anchorfile>
      <anchor>a2363131061a36a3913e9a0d41e02d08c</anchor>
      <arglist>(Args..._args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Singleton</name>
      <anchorfile>d4/d72/classdart_1_1common_1_1Singleton.html</anchorfile>
      <anchor>a8ac8667d1e17606e69ed377136f3e085</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~Singleton</name>
      <anchorfile>d4/d72/classdart_1_1common_1_1Singleton.html</anchorfile>
      <anchor>ab3d5901988721efe84cb602ab863018c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Singleton</name>
      <anchorfile>d4/d72/classdart_1_1common_1_1Singleton.html</anchorfile>
      <anchor>a00f601e032ab7f792a413a119dcbcbe5</anchor>
      <arglist>(const T &amp;)=delete</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const T &amp;</type>
      <name>operator=</name>
      <anchorfile>d4/d72/classdart_1_1common_1_1Singleton.html</anchorfile>
      <anchor>a54eb5d0cd6351715b965c0222d7928fd</anchor>
      <arglist>(const T &amp;)=delete</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static T *</type>
      <name>mInstance</name>
      <anchorfile>d4/d72/classdart_1_1common_1_1Singleton.html</anchorfile>
      <anchor>a135317da285b6e4935977a3ff0b4a45f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::SpecializedForAspect</name>
    <filename>dc/d64/classdart_1_1common_1_1SpecializedForAspect.html</filename>
    <templarg>OtherSpecAspects</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SpecializedForAspect</name>
      <anchorfile>dc/d64/classdart_1_1common_1_1SpecializedForAspect.html</anchorfile>
      <anchor>ac59693ee4dbc54c92b51486d1bb0f448</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::SpecializedForAspect&lt; SpecAspect &gt;</name>
    <filename>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">dart::common::Composite</base>
    <class kind="struct">dart::common::SpecializedForAspect&lt; SpecAspect &gt;::type</class>
    <member kind="function">
      <type></type>
      <name>SpecializedForAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>acbb12f1de786db6a41daaa1a9ec029d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SpecializedForAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a5315969732d6d4f3400af0815e6354fe</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a17d04a81876244d54fb68bc9b07bfb47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>ae4f1765bcc02804cb5ecc5693435aa9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>get</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a1b782e62d0c93affab825a7e514324ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a21581ac86acf266dbf2eec9e21278f71</anchor>
      <arglist>(const T *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>ac0811dc4f6600fef94f2f302053ed2bc</anchor>
      <arglist>(std::unique_ptr&lt; T &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>createAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a6104e071fc994fff29312e7e103e3169</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a947d15b5b5f9e868192b48cf94d6ba2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; T &gt;</type>
      <name>releaseAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a59ee8b1dc0f0477405a5a9324ce52154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>isSpecializedFor</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a2aad613d06f40c713f9ff84cd31fd4ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>_has</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a4c2b0d658c2fed94b67caf013f8d07ba</anchor>
      <arglist>(type&lt; T &gt;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>_has</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a6998506609a732260a1438cf82384b59</anchor>
      <arglist>(type&lt; SpecAspect &gt;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T *</type>
      <name>_get</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>afeea27f7e82c82183c348848d3b3f6a9</anchor>
      <arglist>(type&lt; T &gt;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SpecAspect *</type>
      <name>_get</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a38438de229dcd64f3c441ca3408386ef</anchor>
      <arglist>(type&lt; SpecAspect &gt;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const T *</type>
      <name>_get</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>adcd7b948561cd8044c3d70db676724ba</anchor>
      <arglist>(type&lt; T &gt;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const SpecAspect *</type>
      <name>_get</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a90a842a00e2ee637d39a69225afb0b71</anchor>
      <arglist>(type&lt; SpecAspect &gt;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_set</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a2a364af1ac09fadcd7dcd26521508194</anchor>
      <arglist>(type&lt; T &gt;, const T *aspect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_set</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a510d38f22407dabc0b04281e005a3605</anchor>
      <arglist>(type&lt; SpecAspect &gt;, const SpecAspect *aspect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_set</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>ac21da5adbeffe1407534e4f2a829b5dd</anchor>
      <arglist>(type&lt; T &gt;, std::unique_ptr&lt; T &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_set</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>ae68b7af8538839df50c598b4ece91814</anchor>
      <arglist>(type&lt; SpecAspect &gt;, std::unique_ptr&lt; SpecAspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T *</type>
      <name>_createAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>af2878565f3e243a9d829c1191a8a6a66</anchor>
      <arglist>(type&lt; T &gt;, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SpecAspect *</type>
      <name>_createAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>adba84921a2e705ddf0f9e7f2a00f84e4</anchor>
      <arglist>(type&lt; SpecAspect &gt;, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_removeAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a899825a82bd39984aa1ab1c7820acd32</anchor>
      <arglist>(type&lt; T &gt;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_removeAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a6055e04714a9f7af244449ba942b2e68</anchor>
      <arglist>(type&lt; SpecAspect &gt;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::unique_ptr&lt; T &gt;</type>
      <name>_releaseAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a577187bd728cef0b15c98b3f1f15f242</anchor>
      <arglist>(type&lt; T &gt;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::unique_ptr&lt; SpecAspect &gt;</type>
      <name>_releaseAspect</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>ab722a41ff1eb3b89045b5aecec1e464f</anchor>
      <arglist>(type&lt; SpecAspect &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static constexpr bool</type>
      <name>_isSpecializedFor</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>aa53f75b5c8f5e2c2d15c7e4899dff10b</anchor>
      <arglist>(type&lt; T &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static constexpr bool</type>
      <name>_isSpecializedFor</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>a0764129f2fe5047208488622039dbcdb</anchor>
      <arglist>(type&lt; SpecAspect &gt;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Composite::AspectMap::iterator</type>
      <name>mSpecAspectIterator</name>
      <anchorfile>db/dba/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4.html</anchorfile>
      <anchor>afb19783f8ea2e222bba6476915630d3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::SpecializedForAspect&lt; SpecAspect &gt;::type</name>
    <filename>d5/d70/structdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect_01_4_1_1type.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>dart::common::SpecializedForAspect&lt; SpecAspect1, OtherSpecAspects...&gt;</name>
    <filename>d4/d0b/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect1_00_01OtherSpecAspects_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg>OtherSpecAspects</templarg>
    <base>CompositeJoiner&lt; Virtual&lt; SpecializedForAspect&lt; SpecAspect1 &gt; &gt;, Virtual&lt; SpecializedForAspect&lt; OtherSpecAspects...&gt; &gt; &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SpecializedForAspect</name>
      <anchorfile>d4/d0b/classdart_1_1common_1_1SpecializedForAspect_3_01SpecAspect1_00_01OtherSpecAspects_8_8_8_4.html</anchorfile>
      <anchor>abde52011819c2ce76609207ca89b5eb9</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::sub_ptr</name>
    <filename>d5/dfd/classdart_1_1common_1_1sub__ptr.html</filename>
    <templarg>T</templarg>
    <base>dart::common::Observer</base>
    <member kind="function">
      <type></type>
      <name>sub_ptr</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>aa7b6b410b16c1c07be759e3dbae74663</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sub_ptr</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>af815b376ad7cff135087c8d0a0825b62</anchor>
      <arglist>(T *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>sub_ptr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a4904d74cd4a0587eb9f6fb163a5a78a9</anchor>
      <arglist>(const sub_ptr &amp;_sp)</arglist>
    </member>
    <member kind="function">
      <type>sub_ptr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>ac1ce50a1e92e060a17f8ee415a72b621</anchor>
      <arglist>(T *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T *</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>afbb5f7baebedb41363b97c9d75a014d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a6a5523ed0b1916da9aa7e7084754e0b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a250e0d705eec611b47c9512b52461919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a2c8f3525483603e17e7d0fa246f7b727</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a571c872de0a1fcd4fe2b2a061aecbf2a</anchor>
      <arglist>(T *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>ac92616491ffc406cccecbe05f12291e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>aadb15c42c8d7cfb0ea675e9cff48c475</anchor>
      <arglist>(const Subject *_subject) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T *</type>
      <name>mT</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a8999046cefa55f6ce7b998f9bea289a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Subject *</type>
      <name>mSubjectBase</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a4d8c962f6b177d7d3e0c7c9ea4af8731</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Subject</name>
    <filename>d3/d73/classdart_1_1common_1_1Subject.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Subject</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a20261c0b76e064db6b310e98059f2dc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendDestructionNotification</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a137b5f1e7fb760e29084a42dabec1eb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addObserver</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a51b5edd025b0663e92c388facda5284f</anchor>
      <arglist>(Observer *_observer) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeObserver</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>aa512812311ecdbed1dcebf6561020170</anchor>
      <arglist>(Observer *_observer) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Observer * &gt;</type>
      <name>mObservers</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>acb21558de80efdc434cd64c90a205ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Observer</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a1bc1613ca5d6d0e8b2fbce5ef15dd38f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Timer</name>
    <filename>d9/d32/classdart_1_1common_1_1Timer.html</filename>
    <member kind="function">
      <type></type>
      <name>Timer</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a0d0fdf79f3c0be3a07a773e53fca63a8</anchor>
      <arglist>(const std::string &amp;_name=&quot;Noname Timer&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Timer</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a2cd471486bcb4dab4478bb699cfa1c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a56df39c7d3e235e9145a7a7e33badc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStarted</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a13e84258b46a6796f0e32783793f4f5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a6d51eb06eb5dc55fc1e5f1a625459f4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>ad51c53568b450568990193eadf2151c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLastElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>aad41f3ba4699cc9babce0a15c9de9b76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>acc2bf3a9370c615506f29cdf62cf1bf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a719beeb0bdf1026cf197d02db0587a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getWallTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>ada1a9050398c0fc9490fa530365c8469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mCount</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a129fac4d5b2e4cc2a027103c2a1965d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>timeval</type>
      <name>mTimeVal</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a0ae3bedc2fa78e38501c8894760ccf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mStartedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a27926913b3d40269772a1d6c8265df3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mStoppedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>ad3a54ac30208094ee5088235701f2f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mLastElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>afdb607fa4a490f951258a4a7d13a3cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTotalElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a57352088131b42bc8b37cb555ab8212b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>aca1f40962a3653aaf13b01fd36f793ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsStarted</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>aaffedcc5566ec26694b6d3f210f0abf8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::UriComponent</name>
    <filename>d6/d65/classdart_1_1common_1_1UriComponent.html</filename>
    <member kind="typedef">
      <type>std::string</type>
      <name>value_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af3a88d53c3ad655dd07847f96722e2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type &amp;</type>
      <name>reference_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a3dd5d94fe369d8c3014c8d112a77ae26</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const value_type &amp;</type>
      <name>reference_const_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a54ce949d1db15f804610c2bd391d0a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type *</type>
      <name>pointer_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a773e6091eff17029e86ad0f69edfa0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const value_type *</type>
      <name>pointer_const_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af31d3c6be4f8b0a3abfb21737d0e862e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UriComponent</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a97ed53a105d0d2a9bb2b160b73a97d94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UriComponent</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a3ca0acaa72e7636b366ec3d923a5f2e9</anchor>
      <arglist>(reference_const_type _value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a134837d45a752c86ae574a2fa28100d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>ac098c52123acefec8c80b6ca801d7fca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UriComponent &amp;</type>
      <name>operator=</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af42559ba4b207a93212f73771240042f</anchor>
      <arglist>(reference_const_type _value)</arglist>
    </member>
    <member kind="function">
      <type>reference_type</type>
      <name>operator*</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>aca1ba3f0d5d471a795ace01002aac71b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reference_const_type</type>
      <name>operator*</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a7ef062e34fbfcb10bda9251e5713744c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer_type</type>
      <name>operator-&gt;</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a7a16a27d43ec87dd14ddd046e5618e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>pointer_const_type</type>
      <name>operator-&gt;</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a0e38f86ccb565e26e2818d7cb5fd2699</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af45d7670beade8db47ea6ae5d7249065</anchor>
      <arglist>(reference_const_type _value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a1eaa3b75063ead9990fa1d1565efd611</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reference_type</type>
      <name>get</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a13c6071cfc1a7a0fa4dd598c1fc1a8b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reference_const_type</type>
      <name>get</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>ad93fa65958a05e0e22195c2276d0fc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference_type</type>
      <name>get_value_or</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a62996d1f949dccb50a340e300c032bda</anchor>
      <arglist>(reference_type _default)</arglist>
    </member>
    <member kind="function">
      <type>reference_const_type</type>
      <name>get_value_or</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>adaa0bd646f9bd9d5d1cf3702a1b3e511</anchor>
      <arglist>(reference_const_type _default) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mExists</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a89e11b1fe335d37237ed814cb189499a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mValue</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a44c0edfc29d704fa7bb5e4a6a2e25c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::Uri</name>
    <filename>d8/d07/structdart_1_1common_1_1Uri.html</filename>
    <member kind="function">
      <type></type>
      <name>Uri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>adfaaa4e1c4d1ee09dc258d8c6062a8af</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Uri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a60851ebbac36c0d0e21e263b5f3373df</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Uri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a458b7d711b9049541fb2c3d0a525dd69</anchor>
      <arglist>(const char *_input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a6db041e6f765ba916649bcaafd9daa5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromString</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a7eec3aec348bc4ea2ff062a0de36d9d1</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a98eaf010652be02a55fa29beeed80993</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromStringOrPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a481ff61f8722846fc57fe0630a247858</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a749bb81f3b0d2aff4f15f45fa76720e9</anchor>
      <arglist>(const std::string &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a93394c44cfcb267a2ed51dbbbc58e387</anchor>
      <arglist>(const char *_base, const char *_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ab442ef781a82b33a44e064d4a9710293</anchor>
      <arglist>(const Uri &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a2c1578cc8d4b245d2eda7e60a4bee091</anchor>
      <arglist>(const Uri &amp;_base, const char *_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a812ff55782f43de2cda6cf86a97eb8dc</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a3d7f9323dc90ba932bdf7419c979b953</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>aacc11bb1e7ea76b9e74bfcaba114445b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilesystemPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a2d00a6358a6f6511508b064812d29971</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromString</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a0ceb748da85764a536d725a0ad16f14a</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>af9d74f74d5ee964b21a6e276cbdedbdf</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromStringOrPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a851f0fb2a3fad3ed6db4924a093ff242</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a017d99715f3f83480db8e3315e9fa3d5</anchor>
      <arglist>(const std::string &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a5468307776ce3f78f1a5ad4a51795e83</anchor>
      <arglist>(const Uri &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a6a6752590714579a0afa822795f90501</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a71b4ccb3d8cf74c08002c284f567855e</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ad2056cc69f6f4318994c78dd6c142cb5</anchor>
      <arglist>(const std::string &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>af57be7a9c3213cef764bbfeaf552d1e0</anchor>
      <arglist>(const Uri &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a8c842c2211dbb9a42c4e3e77aec24ea6</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mScheme</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>af510dfe18f40d1608edca9fd85ad1c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mAuthority</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a5d2bd0df93b44c4f7c96c10a83099d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>acb82f913192ac07f68b890c8e48056d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mQuery</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ae14c79b2263d01a26de4fbd9c4f1c7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mFragment</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a06c7b7cd31576e897e978ff14efb2fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>mergePaths</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ae89120df22c7d6c5e0032e877f558b5d</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>removeDotSegments</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ac29b32302b46905905dab22e0801ca45</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::VersionCounter</name>
    <filename>d5/d01/classdart_1_1common_1_1VersionCounter.html</filename>
    <member kind="function">
      <type></type>
      <name>VersionCounter</name>
      <anchorfile>d5/d01/classdart_1_1common_1_1VersionCounter.html</anchorfile>
      <anchor>a1e5388691032e96468ba76eef3dbe8af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::size_t</type>
      <name>incrementVersion</name>
      <anchorfile>d5/d01/classdart_1_1common_1_1VersionCounter.html</anchorfile>
      <anchor>a92688a77a7d2f72fd7cb4c57b68f376a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::size_t</type>
      <name>getVersion</name>
      <anchorfile>d5/d01/classdart_1_1common_1_1VersionCounter.html</anchorfile>
      <anchor>a965a79476d55c45142391a8431ba2649</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VersionCounter</name>
      <anchorfile>d5/d01/classdart_1_1common_1_1VersionCounter.html</anchorfile>
      <anchor>a6f08fbb791da4f3afcae8169fe4fa97c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setVersionDependentObject</name>
      <anchorfile>d5/d01/classdart_1_1common_1_1VersionCounter.html</anchorfile>
      <anchor>a736c0179a85437e8a77966c9d5470024</anchor>
      <arglist>(VersionCounter *dependent)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mVersion</name>
      <anchorfile>d5/d01/classdart_1_1common_1_1VersionCounter.html</anchorfile>
      <anchor>a4321e571165126347ea3fa68279dae1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VersionCounter *</type>
      <name>mDependent</name>
      <anchorfile>d5/d01/classdart_1_1common_1_1VersionCounter.html</anchorfile>
      <anchor>a1f3c82c02ec494656d533a73e638576b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Virtual</name>
    <filename>d8/dd7/classdart_1_1common_1_1Virtual.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Virtual</name>
      <anchorfile>d8/dd7/classdart_1_1common_1_1Virtual.html</anchorfile>
      <anchor>abea7fb5cefc513acdc3fd9bda7d640b8</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::common::detail</name>
    <filename>d3/dd0/namespacedart_1_1common_1_1detail.html</filename>
    <class kind="class">dart::common::detail::AspectWithState</class>
    <class kind="class">dart::common::detail::AspectWithVersionedProperties</class>
    <class kind="struct">dart::common::detail::GetAspectImpl</class>
    <class kind="struct">dart::common::detail::GetAspectImpl&lt; AspectOrComposite, false &gt;</class>
    <class kind="struct">dart::common::detail::GetAspect</class>
    <class kind="struct">dart::common::detail::GetState</class>
    <class kind="struct">dart::common::detail::GetProperties</class>
    <class kind="class">dart::common::detail::CompositeData</class>
    <class kind="class">dart::common::detail::ComposeData</class>
    <class kind="struct">dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;</class>
    <class kind="class">dart::common::detail::EmbeddedStateAspect</class>
    <class kind="class">dart::common::detail::EmbeddedPropertiesAspect</class>
    <class kind="struct">dart::common::detail::DefaultCreator</class>
    <class kind="struct">dart::common::detail::DefaultCreator&lt; T, std::unique_ptr&lt; T &gt;, Args...&gt;</class>
    <class kind="struct">dart::common::detail::DefaultCreator&lt; T, std::shared_ptr&lt; T &gt;, Args...&gt;</class>
    <class kind="class">dart::common::detail::ProxyStateAspect</class>
    <class kind="class">dart::common::detail::ProxyPropertiesAspect</class>
    <class kind="class">dart::common::detail::SharedLibraryManager</class>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; Aspect::State &gt; &gt;</type>
      <name>CompositeStateMap</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>aed6306dde5f3f35fe2a036787487aaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; Aspect::Properties &gt; &gt;</type>
      <name>CompositePropertiesMap</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>ac5efe7f02bffc5d580b2cb6a9a8e0ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeData&lt; CompositeStateMap, GetState &gt;</type>
      <name>CompositeState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a07001b9f5b0ab09a89a32c45c8b316b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeData&lt; CompositePropertiesMap, GetProperties &gt;</type>
      <name>CompositeProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>afb29e9d6d02100b54c50bc344b6e7fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ComposeData&lt; CompositeState, GetState, Aspects...&gt;</type>
      <name>MakeCompositeState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a855093375949addf79563aff8f23551e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ComposeData&lt; CompositeProperties, GetProperties, Data...&gt;</type>
      <name>MakeCompositeProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>affa22f1cf1a3e6f6e23572f6217a8483</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefaultSetEmbeddedState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a14834fc099d26feab94e204afc944f10</anchor>
      <arglist>(AspectT *aspect, const StateT &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const StateT &amp;</type>
      <name>DefaultGetEmbeddedState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a2a2f8ce04195f9a3371d593f6cfdb7f5</anchor>
      <arglist>(const AspectT *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefaultSetEmbeddedProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a06e67830e86a4da0d2c2540883519d09</anchor>
      <arglist>(AspectT *aspect, const PropertiesT &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const PropertiesT &amp;</type>
      <name>DefaultGetEmbeddedProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a4597045ad808e556c1eda3fa525d0660</anchor>
      <arglist>(const AspectT *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoOp</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a276818d8b4f9fe0a7fa23f009176e1d8</anchor>
      <arglist>(Args...)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>AspectWithState</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a17361dd86ca4d8be3dcbb8c88f12924f</anchor>
      <arglist>)(DerivedT *)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a9242e5beed6356bf086376e8d0e766a7</anchor>
      <arglist>)(DerivedT *)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>af0240976a16c38b1dc483532858b3012</anchor>
      <arglist>)(DerivedT *, const StateT &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr void(*</type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>d3/dd0/namespacedart_1_1common_1_1detail.html</anchorfile>
      <anchor>a970f990cb694ef206b320e8127131500</anchor>
      <arglist>)(DerivedT *, const PropertiesT &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::AspectWithState</name>
    <filename>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</filename>
    <templarg>BaseT</templarg>
    <templarg>DerivedT</templarg>
    <templarg>StateDataT</templarg>
    <templarg>CompositeT</templarg>
    <templarg>updateState</templarg>
    <member kind="typedef">
      <type>BaseT</type>
      <name>Base</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>abe0746586e268a540167c38c119d7e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>aac31ad55fc7a34490c291a5819f6c7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StateDataT</type>
      <name>StateData</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>ae4415d98b0fcc82f0c61998960e9fe71</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeT</type>
      <name>CompositeType</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a503e8c7ed37b6efcda8814c7edcc1822</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Aspect::MakeState&lt; StateData &gt;</type>
      <name>State</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>af4b482a1b0eaf655bec3b89c3a4cdc38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithState&lt; Base, Derived, StateData, CompositeT, updateState &gt;</type>
      <name>AspectImplementation</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>aeaff8c40dd03c2551120eb713e4a34a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a9361a188a36cf3b84e802a16f3276d2b</anchor>
      <arglist>(const AspectWithState &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>aef91b042bfd175c734a751c1f9b7fba4</anchor>
      <arglist>(const StateData &amp;state=StateData())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a02127aabd5bd604b11a514739fae64ad</anchor>
      <arglist>(const StateData &amp;state, BaseArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a94a86e27fdb8691d31412bd77d969d97</anchor>
      <arglist>(const Aspect::State &amp;otherState) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a1d84287e22c65ada3857c5125c375142</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>aaf4114caf39a4b22ff780fcded7aaf7b</anchor>
      <arglist>(const StateData &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>getState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a19de096c02e4acbfcc8799a3dd51cc3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a75763b57605fb45547ad1a9356238641</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>UpdateState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>ac1999315e31de024a248b50fb7d2c13c</anchor>
      <arglist>)(Derived *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>mState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a96646506e02438db8dd93e671f0ae1b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::AspectWithVersionedProperties</name>
    <filename>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</filename>
    <templarg>BaseT</templarg>
    <templarg>DerivedT</templarg>
    <templarg>PropertiesDataT</templarg>
    <templarg>CompositeT</templarg>
    <templarg>updateProperties</templarg>
    <member kind="typedef">
      <type>BaseT</type>
      <name>Base</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>ae9e7b9279d48e7a359b4eae5e683fa6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>ab1051e16bc5e9f0c35d17207de55a225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertiesDataT</type>
      <name>PropertiesData</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a36e8ebc70083372fb721f03ea1ee75dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeT</type>
      <name>CompositeType</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a682be15baab3ae6b8dbcdd888b467379</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Aspect::MakeProperties&lt; PropertiesData &gt;</type>
      <name>Properties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a528633e861283ac7bb41706d88a62916</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithVersionedProperties&lt; Base, Derived, PropertiesData, CompositeT, updateProperties &gt;</type>
      <name>AspectImplementation</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a594d0df157edcab5a947a41979817709</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a98918a7d8da2de044fb6d553f0634fb1</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a90d8fa7bd17df18444c42f6991542ebb</anchor>
      <arglist>(const AspectWithVersionedProperties &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a9be5353add6751a34a4a1a3d2b1df307</anchor>
      <arglist>(const PropertiesData &amp;properties=PropertiesData())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectWithVersionedProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a0e7b04e01efc9dbe6b899efda79058e0</anchor>
      <arglist>(const PropertiesData &amp;properties, BaseArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a2937acb0a9b1635e86ea09c67e13cb47</anchor>
      <arglist>(const Aspect::Properties &amp;someProperties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a807ae137ea64aa4c73c57f87a3d7b9a8</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>acbf5ef8933f8335ab5aa9c60da06a9b9</anchor>
      <arglist>(const PropertiesData &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a1c05004b6a950a6d658a31b81b978b50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>acbfe6897f0f283198f4b656892415b8e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>incrementVersion</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a11b1ab21ed0067629afb973c72998107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPropertiesUpdate</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a0d756177774029eaebe7b09609701f2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPropertiesUpdated</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a050393391376ff42024d0dbb931d4c13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>UpdateProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a9b045f40c99803ca1f97ee2f0521900e</anchor>
      <arglist>)(Derived *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a7fde45d2751984165544c3dc8454f86b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::GetAspectImpl</name>
    <filename>d2/d1c/structdart_1_1common_1_1detail_1_1GetAspectImpl.html</filename>
    <templarg></templarg>
    <templarg>isAspect</templarg>
    <member kind="typedef">
      <type>AspectOrComposite</type>
      <name>Type</name>
      <anchorfile>d2/d1c/structdart_1_1common_1_1detail_1_1GetAspectImpl.html</anchorfile>
      <anchor>aec56b349b85c2a7067ff297920a5a5b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::GetAspectImpl&lt; AspectOrComposite, false &gt;</name>
    <filename>dd/dd3/structdart_1_1common_1_1detail_1_1GetAspectImpl_3_01AspectOrComposite_00_01false_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename AspectOrComposite::Aspect</type>
      <name>Type</name>
      <anchorfile>dd/dd3/structdart_1_1common_1_1detail_1_1GetAspectImpl_3_01AspectOrComposite_00_01false_01_4.html</anchorfile>
      <anchor>a56c5fc5b625f786f88eaed9a49ba2f9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::GetAspect</name>
    <filename>d3/dfa/structdart_1_1common_1_1detail_1_1GetAspect.html</filename>
    <templarg>AspectT</templarg>
    <member kind="typedef">
      <type>typename GetAspectImpl&lt; AspectT, std::is_base_of&lt; Aspect, AspectT &gt;::value &gt;::Type</type>
      <name>Type</name>
      <anchorfile>d3/dfa/structdart_1_1common_1_1detail_1_1GetAspect.html</anchorfile>
      <anchor>adc432e847957ed971194008bb1792dd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::GetState</name>
    <filename>d9/d40/structdart_1_1common_1_1detail_1_1GetState.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename GetAspect&lt; AspectT &gt;::Type::State</type>
      <name>Type</name>
      <anchorfile>d9/d40/structdart_1_1common_1_1detail_1_1GetState.html</anchorfile>
      <anchor>a5a935be8401320cd8e3e2affc100eef0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::GetProperties</name>
    <filename>d3/d09/structdart_1_1common_1_1detail_1_1GetProperties.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename GetAspect&lt; AspectT &gt;::Type::Properties</type>
      <name>Type</name>
      <anchorfile>d3/d09/structdart_1_1common_1_1detail_1_1GetProperties.html</anchorfile>
      <anchor>a1fd3531bbc7706ea20185c3cd9f5f214</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::CompositeData</name>
    <filename>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</filename>
    <templarg></templarg>
    <templarg>GetData</templarg>
    <base>dart::common::CloneableMap</base>
    <member kind="function">
      <type></type>
      <name>CompositeData</name>
      <anchorfile>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</anchorfile>
      <anchor>ace0095834e4a587474eb8f2d54e5f7a0</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositeData</name>
      <anchorfile>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</anchorfile>
      <anchor>a5178d6bd58f8272f2c53993b8a89d25f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>GetData&lt; AspectT &gt;::Type &amp;</type>
      <name>create</name>
      <anchorfile>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</anchorfile>
      <anchor>a03029d3b3d217a525a486d5771635f1d</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>GetData&lt; AspectT &gt;::Type *</type>
      <name>get</name>
      <anchorfile>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</anchorfile>
      <anchor>a94668cea5f7031f900c9b2d83a385c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GetData&lt; AspectT &gt;::Type *</type>
      <name>get</name>
      <anchorfile>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</anchorfile>
      <anchor>a94853c0e9b1d63ab5ff7a3db6536e8ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GetData&lt; AspectT &gt;::Type &amp;</type>
      <name>getOrCreate</name>
      <anchorfile>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</anchorfile>
      <anchor>afbfa389e7f2280650b42644135460d8a</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has</name>
      <anchorfile>d7/dbe/classdart_1_1common_1_1detail_1_1CompositeData.html</anchorfile>
      <anchor>a9a6771eb477fa64c1bfb42e445a0a4d7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::ComposeData</name>
    <filename>d3/d11/classdart_1_1common_1_1detail_1_1ComposeData.html</filename>
    <templarg>CompositeType</templarg>
    <templarg>GetData</templarg>
    <templarg>Aspects</templarg>
    <member kind="function">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>d3/d11/classdart_1_1common_1_1detail_1_1ComposeData.html</anchorfile>
      <anchor>ae263981b2859bd896fd9921d883811ab</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>d3/d11/classdart_1_1common_1_1detail_1_1ComposeData.html</anchorfile>
      <anchor>a48eaaf8abdb143a9f8a6b3f24667afd0</anchor>
      <arglist>(const CompositeType &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ComposeData</name>
      <anchorfile>d3/d11/classdart_1_1common_1_1detail_1_1ComposeData.html</anchorfile>
      <anchor>ab7c7dbedbc1cec1118f7df102e5c0ea8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrom</name>
      <anchorfile>d3/d11/classdart_1_1common_1_1detail_1_1ComposeData.html</anchorfile>
      <anchor>aef14936d6aae1a20d58dacdbe7faa313</anchor>
      <arglist>(const CompositeType &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_addData</name>
      <anchorfile>d3/d11/classdart_1_1common_1_1detail_1_1ComposeData.html</anchorfile>
      <anchor>aa75b0c467c8ff3b1fc04cdf8d08449b9</anchor>
      <arglist>(CompositeType &amp;) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;</name>
    <filename>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg>GetData</templarg>
    <templarg></templarg>
    <templarg>Remainder</templarg>
    <base>ComposeData&lt; CompositeType, GetData, Remainder...&gt;</base>
    <class kind="struct">dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;::ConvertIfComposite</class>
    <class kind="struct">dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;::ConvertIfData</class>
    <member kind="enumeration">
      <type></type>
      <name>DelegateTag</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a3e2798869b36274a9fc0df78937d9964</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Delegate</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a3e2798869b36274a9fc0df78937d9964a5db0a383173db18c9490aa44dbacad85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;</type>
      <name>ThisClass</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>adb60022965ce9178528e4f4177634d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename GetData&lt; AspectT &gt;::Type</type>
      <name>Base</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a5a0a0a75b0fe660edbb3a42ccd490d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::Data</type>
      <name>Data</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a8fab877b28ae2d678e87ec241ff508fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename GetAspect&lt; AspectT &gt;::Type</type>
      <name>AspectType</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>aa1b841eac9f326d11d209fd6f7b9379f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a2fa18350d93a6d8e9689175a7fdcd2c5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a16bfcd4b678cfc76fe84e72c68b302a4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a848aab6c3a44ce85d37c59cae2b65b07</anchor>
      <arglist>(const Arg1 &amp;arg1, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>aa316b18a5aa672bbf3a2f7e0e20ac7f8</anchor>
      <arglist>(const CompositeType &amp;composite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a6602fc7c1dee3de62b575daa789fe871</anchor>
      <arglist>(const ComposeData&lt; CompositeType, GetData, Aspects...&gt; &amp;composite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a5e8a51ce343b1e4ec265f34eef92da1a</anchor>
      <arglist>(CompositeType &amp;&amp;composite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator CompositeType</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a0bdf3014dcfff66ba0dd9842b9209921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrom</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a92a9f6a68b2ccc1f70f2e431c5130f71</anchor>
      <arglist>(const CompositeType &amp;composite)</arglist>
    </member>
    <member kind="function">
      <type>ComposeData &amp;</type>
      <name>operator=</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a127d3ac091fcd9eb07b66b6f258373af</anchor>
      <arglist>(const CompositeType &amp;composite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a9c5d1f92f8641acda64d9a505d05d819</anchor>
      <arglist>(const Args &amp;...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EIGEN_MAKE_ALIGNED_OPERATOR_NEW std::shared_ptr&lt; ThisClass &gt;</type>
      <name>createShared</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a23c74f3ad9396179eceff54aa3b63529</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a157714cbf5d0a492720369c7b729fa37</anchor>
      <arglist>(DelegateTag, const Args &amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ComposeData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a4e0ee81517deb719db82a59f8508f96e</anchor>
      <arglist>(DelegateTag, const Data &amp;arg1, const Args &amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_setBaseFrom</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>ae7450765d36507e81ef64dd88df4086a</anchor>
      <arglist>(const CompositeType &amp;composite)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_addData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a53773b6f63a5c02ca4a68f1ddd9f4655</anchor>
      <arglist>(CompositeType &amp;composite) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_findData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>afeb88856ebbd0c9b882710540a5eb173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_findData</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>ac45bfb575e0c662feac9ca1c7ae50752</anchor>
      <arglist>(const Arg1 &amp;arg1, const Args &amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_attemptToUse</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>a600a3e4f1cab5597c6a2c6c31fab613c</anchor>
      <arglist>(const Arg &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_attemptToUse</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>aa578ce39c35bdde0d0ce2435aa2f4eaf</anchor>
      <arglist>(const typename Base::Data &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_attemptToUse</name>
      <anchorfile>db/d4a/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Remainder_8_8_8_4.html</anchorfile>
      <anchor>ad7555afc610fc756934cd8513428a820</anchor>
      <arglist>(const CompositeType &amp;composite)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;::ConvertIfComposite</name>
    <filename>dd/d99/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Rab3a03bbe6d914f51767cbdeb8707c75.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_base_of&lt; CompositeType, Arg &gt;::value, CompositeType, Arg &gt;::type</type>
      <name>Type</name>
      <anchorfile>dd/d99/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Rab3a03bbe6d914f51767cbdeb8707c75.html</anchorfile>
      <anchor>a2a55a45ee213b063083806be847e99a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::ComposeData&lt; CompositeType, GetData, AspectT, Remainder...&gt;::ConvertIfData</name>
    <filename>de/d5e/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Rd83649b40b8e89251e4051275de3666f.html</filename>
    <templarg>Arg</templarg>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_base_of&lt; typename Base::Data, Arg &gt;::value, typename Base::Data, Arg &gt;::type</type>
      <name>Type</name>
      <anchorfile>de/d5e/structdart_1_1common_1_1detail_1_1ComposeData_3_01CompositeType_00_01GetData_00_01AspectT_00_01Rd83649b40b8e89251e4051275de3666f.html</anchorfile>
      <anchor>af742da3e63caa74bbbe9a0163d811f07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::EmbeddedStateAspect</name>
    <filename>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</filename>
    <templarg>BaseT</templarg>
    <templarg>DerivedT</templarg>
    <templarg>StateDataT</templarg>
    <templarg>StateT</templarg>
    <templarg>setEmbeddedState</templarg>
    <templarg>getEmbeddedState</templarg>
    <class kind="struct">dart::common::detail::EmbeddedStateAspect::ConvertIfState</class>
    <member kind="enumeration">
      <type></type>
      <name>DelegateTag</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a8a81861228f4a2c0535f89fe13fa3ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Delegate</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a8a81861228f4a2c0535f89fe13fa3adaa556046f4b963dd8e2e6f240c3b590f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseT</type>
      <name>Base</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ad03183d7efdd129d0ebcbdf2c25c5fbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a9ad9d88b60bd17d4faf7b128bdb29f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StateT</type>
      <name>State</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>aa79b83ce1550877c89b050826c903042</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StateDataT</type>
      <name>StateData</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>aa6219dc118f6201c395c777a4d77a075</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>aeb718c53a411e3fbd7ceeb05c73081ab</anchor>
      <arglist>(const EmbeddedStateAspect &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbeddedStateAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>adb71dbca31acb7c35d39f4d01b24621f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>afcbf5b016315c500be32a707cd3484ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a04177f04a4fc3e5d2e619268e59cbb4e</anchor>
      <arglist>(const T &amp;arg1, RemainingArgs &amp;&amp;...remainingArgs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>afa5361eae07ce937c2c02f97eed9edab</anchor>
      <arglist>(const Aspect::State &amp;state) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a47aa721cfb882bc7f41869962b3e33e9</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ac5d009f039a27799fd05bf4f1490c1e7</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>getState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>abaefedea723d10eb070db3ffb9d045a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a6b479ddded7c9423932030dedd7e9b9d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>SetEmbeddedState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a7bb0a3593a0572541ad0a444c90b2e9e</anchor>
      <arglist>)(Derived *, const State &amp;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const State &amp;(*</type>
      <name>GetEmbeddedState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a26125d6e4ff6c14bee4a3382aba51176</anchor>
      <arglist>)(const Derived *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a353911cc3c50943912959411a91d4446</anchor>
      <arglist>(DelegateTag, const StateData &amp;state, RemainingArgs &amp;&amp;...remainingArgs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EmbeddedStateAspect</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ac61e3789fc37efe565940fb715512e4a</anchor>
      <arglist>(DelegateTag, BaseArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>ae3c2500814c0927557c65d779794c186</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>a481b7e22e63d11788712bf0a06f81e9f</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; State &gt;</type>
      <name>mTemporaryState</name>
      <anchorfile>d5/da0/classdart_1_1common_1_1detail_1_1EmbeddedStateAspect.html</anchorfile>
      <anchor>aff62f694821d796a9b38ed94b16f9306</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::EmbeddedStateAspect::ConvertIfState</name>
    <filename>d8/d6a/structdart_1_1common_1_1detail_1_1EmbeddedStateAspect_1_1ConvertIfState.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_base_of&lt; StateData, T &gt;::value, StateData, T &gt;::type</type>
      <name>type</name>
      <anchorfile>d8/d6a/structdart_1_1common_1_1detail_1_1EmbeddedStateAspect_1_1ConvertIfState.html</anchorfile>
      <anchor>a6af7aebf995ffc1eeba3d1082c210b51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::EmbeddedPropertiesAspect</name>
    <filename>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</filename>
    <templarg>BaseT</templarg>
    <templarg>DerivedT</templarg>
    <templarg>PropertiesDataT</templarg>
    <templarg>PropertiesT</templarg>
    <templarg>setEmbeddedProperties</templarg>
    <templarg>getEmbeddedProperties</templarg>
    <class kind="struct">dart::common::detail::EmbeddedPropertiesAspect::ConvertIfProperties</class>
    <member kind="typedef">
      <type>BaseT</type>
      <name>Base</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a7b01a23a01e44492a521c032033b810c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DerivedT</type>
      <name>Derived</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>ab656e3fef04eb5e8f1ead9d525d2cb36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertiesT</type>
      <name>Properties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a8996e59e409f63224a3243b208f49f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertiesDataT</type>
      <name>PropertiesData</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a2354cc3f991dff6d47717ef28b528973</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a2dd13e9456ae3aef97f25695ac8708a1</anchor>
      <arglist>(const EmbeddedPropertiesAspect &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmbeddedPropertiesAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a6b3ce4a3b0526547f063f8b2e06f2e13</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>af3fc6d87a25a2236de787a8c367e9d44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>ad9c3e03d1e8e6d5c6c69354fa91f6c74</anchor>
      <arglist>(const T &amp;arg1, RemainingArgs &amp;&amp;...remainingArgs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa3db46801516b9c681d3349fc1afe1e4</anchor>
      <arglist>(const Aspect::Properties &amp;properties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>acb1c2c36d0cd716f7854d299eecad3aa</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a24bd97422ac48cc04d8cbcecbc23488f</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa74435cab8991746b6924c0efd572e0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a7ba21e964692af29e5a45a5447868715</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>SetEmbeddedProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a68ff47733db7577d6b08d96fc986cfd1</anchor>
      <arglist>)(Derived *, const Properties &amp;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const Properties &amp;(*</type>
      <name>GetEmbeddedProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a256f36d402b89d8d229674b70933fb24</anchor>
      <arglist>)(const Derived *)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>DelegateTag</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa82743a15d0aa231696524b697b4b62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>Delegate</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>aa82743a15d0aa231696524b697b4b62ea31ccecc9434579ec628e945b6c267ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>ac88242b36cbb584853edf5ac749d0e43</anchor>
      <arglist>(DelegateTag, const PropertiesData &amp;properties, RemainingArgs &amp;&amp;...remainingArgs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EmbeddedPropertiesAspect</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a31eb13391ecfd1e78021280ef7f1af86</anchor>
      <arglist>(DelegateTag, BaseArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a551d0635c8ca05fb3986f31fca48b07d</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>af051db90078cf3fdf8f8035783fd9806</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Properties &gt;</type>
      <name>mTemporaryProperties</name>
      <anchorfile>d7/d0e/classdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect.html</anchorfile>
      <anchor>a433e1f90fcb1aa44e6cc784c4d7e1671</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::EmbeddedPropertiesAspect::ConvertIfProperties</name>
    <filename>d5/d40/structdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect_1_1ConvertIfProperties.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_base_of&lt; PropertiesData, T &gt;::value, PropertiesData, T &gt;::type</type>
      <name>type</name>
      <anchorfile>d5/d40/structdart_1_1common_1_1detail_1_1EmbeddedPropertiesAspect_1_1ConvertIfProperties.html</anchorfile>
      <anchor>a3b69d360166e595ae1be6275d57dca79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::DefaultCreator</name>
    <filename>da/d83/structdart_1_1common_1_1detail_1_1DefaultCreator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function" static="yes">
      <type>static HeldT</type>
      <name>run</name>
      <anchorfile>da/d83/structdart_1_1common_1_1detail_1_1DefaultCreator.html</anchorfile>
      <anchor>a1cec660f0c7f32f2e98237394b1c3fe1</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::DefaultCreator&lt; T, std::unique_ptr&lt; T &gt;, Args...&gt;</name>
    <filename>d3/d52/structdart_1_1common_1_1detail_1_1DefaultCreator_3_01T_00_01std_1_1unique__ptr_3_01T_01_4_00_01Args_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; T &gt;</type>
      <name>run</name>
      <anchorfile>d3/d52/structdart_1_1common_1_1detail_1_1DefaultCreator_3_01T_00_01std_1_1unique__ptr_3_01T_01_4_00_01Args_8_8_8_4.html</anchorfile>
      <anchor>a3b159be98d07d9a81d3c761dd998a4fc</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::detail::DefaultCreator&lt; T, std::shared_ptr&lt; T &gt;, Args...&gt;</name>
    <filename>d5/ddb/structdart_1_1common_1_1detail_1_1DefaultCreator_3_01T_00_01std_1_1shared__ptr_3_01T_01_4_00_01Args_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; T &gt;</type>
      <name>run</name>
      <anchorfile>d5/ddb/structdart_1_1common_1_1detail_1_1DefaultCreator_3_01T_00_01std_1_1shared__ptr_3_01T_01_4_00_01Args_8_8_8_4.html</anchorfile>
      <anchor>a56be5c0a51f5e04c292500e52829252c</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::ProxyStateAspect</name>
    <filename>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</filename>
    <templarg>BaseT</templarg>
    <templarg>CompositeT</templarg>
    <templarg>StateT</templarg>
    <member kind="typedef">
      <type>BaseT</type>
      <name>Base</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a5a18f5b8f5da3f63d0936182e10d1753</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeT</type>
      <name>CompositeType</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a6eb468c765c7214db0875da2f0aeead1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StateT</type>
      <name>State</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>ab01e8d0d436ba28ab1afe34fd89e9d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProxyStateAspect</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a641f88cf01288aa0228535e39b6c5a57</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyStateAspect</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a89a5b2e2e41182210ae5c04e4021dfef</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a47fbc88e267594f933370e06a5ab8f00</anchor>
      <arglist>(const Aspect::State &amp;state) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a8819efe73bcf6ba6227344c0a25fb504</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>abc97f8f363e4e3eefe7d6b2fefc16543</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a4d38335523ea8146d4953d48c261f3b8</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>a55460be85ef23064e1e718d631149dae</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>mProxyState</name>
      <anchorfile>d9/d18/classdart_1_1common_1_1detail_1_1ProxyStateAspect.html</anchorfile>
      <anchor>acf6978930ba0adca501085b9e413cfa0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::ProxyPropertiesAspect</name>
    <filename>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</filename>
    <templarg>BaseT</templarg>
    <templarg>CompositeT</templarg>
    <templarg>PropertiesT</templarg>
    <member kind="typedef">
      <type>BaseT</type>
      <name>Base</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>ac658b2c6c6280f851dd6105d875008a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeT</type>
      <name>CompositeType</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a32e4aa15192e29bbdf80777d3758f000</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertiesT</type>
      <name>Properties</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a38f527abcd101b3b5254a1b1b05275cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProxyPropertiesAspect</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a46ed2d70d75c861a53319271951d6e62</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProxyPropertiesAspect</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>abb35d59311862af0f2148335057de301</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a59a858cf9955e7f7ab2bba025136ea92</anchor>
      <arglist>(const Aspect::Properties &amp;properties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a250b981988f3f8c64861e72b98d58f20</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a3628277c680a0eab6374df2f42e43080</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setComposite</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>ae894ece6a78ec4e3ea31cf4e3a45146f</anchor>
      <arglist>(Composite *newComposite) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loseComposite</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a95d03e6096ee963a046760819983b2ba</anchor>
      <arglist>(Composite *oldComposite) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProxyProperties</name>
      <anchorfile>da/dcb/classdart_1_1common_1_1detail_1_1ProxyPropertiesAspect.html</anchorfile>
      <anchor>a86969526d6d22cc72d2e2e6ae270d176</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::detail::SharedLibraryManager</name>
    <filename>d0/d5b/classdart_1_1common_1_1detail_1_1SharedLibraryManager.html</filename>
    <base>dart::common::Singleton</base>
    <member kind="function">
      <type>std::shared_ptr&lt; SharedLibrary &gt;</type>
      <name>load</name>
      <anchorfile>d0/d5b/classdart_1_1common_1_1detail_1_1SharedLibraryManager.html</anchorfile>
      <anchor>a04187611b7eff5459fb1f04c6dd75991</anchor>
      <arglist>(const boost::filesystem::path &amp;path)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; boost::filesystem::path, std::weak_ptr&lt; SharedLibrary &gt; &gt;</type>
      <name>mLibraries</name>
      <anchorfile>d0/d5b/classdart_1_1common_1_1detail_1_1SharedLibraryManager.html</anchorfile>
      <anchor>a2903c8a255dc1496c7dba7a0b514c606</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Singleton&lt; SharedLibraryManager &gt;</name>
      <anchorfile>d0/d5b/classdart_1_1common_1_1detail_1_1SharedLibraryManager.html</anchorfile>
      <anchor>ab462850ddfa89a74562f67cb8493bc34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::common::signal</name>
    <filename>d3/d64/namespacedart_1_1common_1_1signal.html</filename>
    <namespace>dart::common::signal::detail</namespace>
  </compound>
  <compound kind="namespace">
    <name>dart::common::signal::detail</name>
    <filename>d5/de8/namespacedart_1_1common_1_1signal_1_1detail.html</filename>
    <class kind="class">dart::common::signal::detail::ConnectionBodyBase</class>
    <class kind="class">dart::common::signal::detail::ConnectionBody</class>
    <class kind="struct">dart::common::signal::detail::DefaultCombiner</class>
  </compound>
  <compound kind="class">
    <name>dart::common::signal::detail::ConnectionBodyBase</name>
    <filename>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</filename>
    <member kind="function">
      <type></type>
      <name>ConnectionBodyBase</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>aa2ffe9c0501a6fb5197004310845970c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionBodyBase</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>a032d2e18132803bc0acae4b0b84c5cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>aa84b32668251b9cd6fbe9317f475c77f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>a6a8e4758e4db29fd85b7ef337455a930</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsConnected</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>ae31e961dd6b6502d42be2713a4940850</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::signal::detail::ConnectionBody</name>
    <filename>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</filename>
    <templarg></templarg>
    <base>dart::common::signal::detail::ConnectionBodyBase</base>
    <member kind="function">
      <type></type>
      <name>ConnectionBody</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>ab3d6d1bf786f327563984205f7d9f906</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionBody</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a099814dc8b95f2eef2ddc2b994518166</anchor>
      <arglist>(SlotType &amp;&amp;_slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionBody</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a7d66d02ba82bb1c051a4e8465fdf6dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SlotType &amp;</type>
      <name>getSlot</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a57d7da0fc083e707162bbdf951d885cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SlotType</type>
      <name>mSlot</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a13b1877ff93d61160e790d8eedf71c89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::signal::detail::DefaultCombiner</name>
    <filename>df/d24/structdart_1_1common_1_1signal_1_1detail_1_1DefaultCombiner.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>result_type</name>
      <anchorfile>df/d24/structdart_1_1common_1_1signal_1_1detail_1_1DefaultCombiner.html</anchorfile>
      <anchor>abe4ada2b70d309070a4e8bf5739f15ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>process</name>
      <anchorfile>df/d24/structdart_1_1common_1_1signal_1_1detail_1_1DefaultCombiner.html</anchorfile>
      <anchor>a3acf6f2a5bb8f172c8cb8f73316dc141</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::constraint</name>
    <filename>dd/d6c/namespacedart_1_1constraint.html</filename>
    <class kind="class">dart::constraint::BalanceConstraint</class>
    <class kind="class">dart::constraint::BallJointConstraint</class>
    <class kind="class">dart::constraint::ConstrainedGroup</class>
    <class kind="struct">dart::constraint::ConstraintInfo</class>
    <class kind="class">dart::constraint::ConstraintBase</class>
    <class kind="class">dart::constraint::ConstraintSolver</class>
    <class kind="class">dart::constraint::ContactConstraint</class>
    <class kind="class">dart::constraint::DantzigLCPSolver</class>
    <class kind="class">dart::constraint::JointConstraint</class>
    <class kind="class">dart::constraint::JointCoulombFrictionConstraint</class>
    <class kind="class">dart::constraint::JointLimitConstraint</class>
    <class kind="class">dart::constraint::LCPSolver</class>
    <class kind="class">dart::constraint::PGSLCPSolver</class>
    <class kind="struct">dart::constraint::PGSOption</class>
    <class kind="class">dart::constraint::ServoMotorConstraint</class>
    <class kind="class">dart::constraint::SoftContactConstraint</class>
    <class kind="class">dart::constraint::WeldJointConstraint</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ConstrainedGroup &gt;</type>
      <name>ConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>afc4782be19429311ad4563a94358cf16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ConstrainedGroup &gt;</type>
      <name>ConstConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a527abbf9cf43ffe2319eb4f2d742e9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ConstrainedGroup &gt;</type>
      <name>WeakConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>add803338118c60f060c728071243a201</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ConstrainedGroup &gt;</type>
      <name>WeakConstConstrainedGroupPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a6b189cda86a601ae5a4d02db720a97d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ConstraintBase &gt;</type>
      <name>ConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>adb8950a182abb73848fc8458b483fb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ConstraintBase &gt;</type>
      <name>ConstConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a3ae5d631b2d6c8987428247b2cea65fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ConstraintBase &gt;</type>
      <name>WeakConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a480dac993825ff2b18dbb3ac77f0e158</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ConstraintBase &gt;</type>
      <name>WeakConstConstraintBasePtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a7af37508138f2fe8d6bc61bbc45064ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ClosedLoopConstraint &gt;</type>
      <name>ClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a8b894f5e25e6331f5945cf26e6e39d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ClosedLoopConstraint &gt;</type>
      <name>ConstClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aab1860afa6bb3339722ee1ceece6a74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ClosedLoopConstraint &gt;</type>
      <name>WeakClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2b065dcf29054b77f80e441b921eaeea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ClosedLoopConstraint &gt;</type>
      <name>WeakConstClosedLoopConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a6756354b842dd65293812bdca65cbcef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ContactConstraint &gt;</type>
      <name>ContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5be6b5c1132cc919959550b5ef668fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ContactConstraint &gt;</type>
      <name>ConstContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a05f745ccf54b76f23a2442f5bb98f6a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ContactConstraint &gt;</type>
      <name>WeakContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a9c600b04ddf304336c92e6f752deb7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ContactConstraint &gt;</type>
      <name>WeakConstContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ad538e9dfe143c54c0d7dcc0486c3bbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; SoftContactConstraint &gt;</type>
      <name>SoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>adb9403286439e588f177c91f6cc1b44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const SoftContactConstraint &gt;</type>
      <name>ConstSoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ae51cf4ebf0637e2cef700c7cc4f06105</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; SoftContactConstraint &gt;</type>
      <name>WeakSoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a42a7ea1cbcbe8a75fd4b20e44991f511</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const SoftContactConstraint &gt;</type>
      <name>WeakConstSoftContactConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a545e8c2573833e88c4e1aeee7020d047</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; JointLimitConstraint &gt;</type>
      <name>JointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aa2d68b5dedda5176b708d0eefe921eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const JointLimitConstraint &gt;</type>
      <name>ConstJointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2a1b0dc555feec38478656899ca8805e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; JointLimitConstraint &gt;</type>
      <name>WeakJointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ad4c528b59999959e2ed4576121184921</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const JointLimitConstraint &gt;</type>
      <name>WeakConstJointLimitConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a9141ca3b0c4a3469ebc5149b3402b85c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ServoMotorConstraint &gt;</type>
      <name>ServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a80965400303e48cdd03407f1c25519e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ServoMotorConstraint &gt;</type>
      <name>ConstServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>adccb2d718a0d7d12b8973a38a5ce75b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ServoMotorConstraint &gt;</type>
      <name>WeakServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a36f116da30971fb5bc2862f0b50e7342</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ServoMotorConstraint &gt;</type>
      <name>WeakConstServoMotorConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a63996316be6a2b599a1fb0ac9fe0d67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; JointCoulombFrictionConstraint &gt;</type>
      <name>JointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a1df8988e39bb299e1446a79e1c60a788</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const JointCoulombFrictionConstraint &gt;</type>
      <name>ConstJointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a6cd9908ffdec14bb26e0b9c1896a1f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; JointCoulombFrictionConstraint &gt;</type>
      <name>WeakJointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a0b566227d1ca07451bc7634cc5785a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const JointCoulombFrictionConstraint &gt;</type>
      <name>WeakConstJointCoulombFrictionConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a4f84438ee4a414c3aabd9064eb9aecad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; JointConstraint &gt;</type>
      <name>JointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aef3776502a9f2b724daa95545db1d4f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const JointConstraint &gt;</type>
      <name>ConstJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a879fd5fc2d155df55ac2d8a94ea7df03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; JointConstraint &gt;</type>
      <name>WeakJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aa1825041750218f8528c738fbebd5a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const JointConstraint &gt;</type>
      <name>WeakConstJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a7aba86c0ecb5497a2883b1f1645b7c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LCPSolver &gt;</type>
      <name>LCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a8d3115d0d90a9fd9f0d9db05d66f8c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const LCPSolver &gt;</type>
      <name>ConstLCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5f8f005d85b25b54b1e1c0ffed388b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; LCPSolver &gt;</type>
      <name>WeakLCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aa8cbf4fe9c4a273c435afe320aeef91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const LCPSolver &gt;</type>
      <name>WeakConstLCPSolverPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>af628b2b6ce3e2c0bb4b69bb103233691</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; BallJointConstraint &gt;</type>
      <name>BallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>aac05e86e72a7c69327e28a7b762f1d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const BallJointConstraint &gt;</type>
      <name>ConstBallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ad5bbeae5e9a1b8aa6e4c83777c91034d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; BallJointConstraint &gt;</type>
      <name>WeakBallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>af15dc1ac7a4d69bd567fc9d50ad80c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const BallJointConstraint &gt;</type>
      <name>WeakConstBallJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a788277f7f83802060b080a90c4f7bd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; WeldJointConstraint &gt;</type>
      <name>WeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2bfad1e6ef096f7b783fe259641ef943</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const WeldJointConstraint &gt;</type>
      <name>ConstWeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a3080ffe2f847dd7c5a3deb5b556f6c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; WeldJointConstraint &gt;</type>
      <name>WeakWeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a82725809ad906f618f407823fa7ba898</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const WeldJointConstraint &gt;</type>
      <name>WeakConstWeldJointConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5b730042ba60cb007528627826e6ca27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; BalanceConstraint &gt;</type>
      <name>BalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a766adb46770b93d88f3f44e7804a4453</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const BalanceConstraint &gt;</type>
      <name>ConstBalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a5ce6b1a17dad94db6748feee719156d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; BalanceConstraint &gt;</type>
      <name>WeakBalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>acc4d02a0bbd62f6cdb0a51550c451e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const BalanceConstraint &gt;</type>
      <name>WeakConstBalanceConstraintPtr</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ac4051f812f9352581afd76295deafd62</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDampedPseudoInverseToGradient</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ab1ca16fdd4b156f83993421c1f0c11df</anchor>
      <arglist>(Eigen::Map&lt; Eigen::VectorXd &gt; &amp;grad, const JacType &amp;J, const Eigen::MatrixXd &amp;nullspace, const Eigen::Vector3d &amp;error, double damping)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solvePGS</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2488681e6db07eb614b77f7715eac2c1</anchor>
      <arglist>(int n, int nskip, int, double *A, double *x, double *b, double *lo, double *hi, int *findex, PGSOption *option)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PointMassT</type>
      <name>selectCollidingPointMassT</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a638541c0a4b2f8e00d73f873393ffa5f</anchor>
      <arglist>(SoftBodyNodeT _softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::BalanceConstraint</name>
    <filename>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</filename>
    <base>dart::optimizer::Function</base>
    <base>dart::dynamics::HierarchicalIK::Function</base>
    <member kind="enumeration">
      <type></type>
      <name>ErrorMethod_t</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FROM_CENTROID</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1abf0aba992afd84fb93c7185046f0b953</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FROM_EDGE</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1a67055212813417109d29c49668e2f994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>OPTIMIZE_BALANCE</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1a43b3cfe37e7b8c19b0b80b0b63a7bec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BalanceMethod_t</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a57ee8de172dfbdca4d50518afe9eabfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SHIFT_SUPPORT</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a57ee8de172dfbdca4d50518afe9eabfca22ae73e9977a6489f90f09669f2d24f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SHIFT_COM</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a57ee8de172dfbdca4d50518afe9eabfca0dde3b4d64fa9f96d0a3c3f5a71e79b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BalanceConstraint</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a3a4055dcf10b8a3867f2013f556852f4</anchor>
      <arglist>(const std::shared_ptr&lt; dynamics::HierarchicalIK &gt; &amp;_ik, BalanceMethod_t _balanceMethod=SHIFT_SUPPORT, ErrorMethod_t _errorMethod=FROM_CENTROID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BalanceConstraint</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a2801a3ef031c1a6de612a0e96dc605e2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a840cc9e2fd15fd31112c0e409ebc96be</anchor>
      <arglist>(const std::shared_ptr&lt; dynamics::HierarchicalIK &gt; &amp;_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a8bbd30bda55aec5e11a9a04bf6fba66e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a33e3b69359c73c5980d07b17a00dbbc3</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ae07fa5b5958b09735c81bd3a7bdfa8fd</anchor>
      <arglist>(ErrorMethod_t _method)</arglist>
    </member>
    <member kind="function">
      <type>ErrorMethod_t</type>
      <name>getErrorMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>aac7b2ae72e698c28ff33429e2ea0e163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBalanceMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ab7c8aad0d08acfd421295a5acb5b087c</anchor>
      <arglist>(BalanceMethod_t _method)</arglist>
    </member>
    <member kind="function">
      <type>BalanceMethod_t</type>
      <name>getBalanceMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a3f5254cc472d49fc4c881725a9e3b520</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptimizationTolerance</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a27970eb997546688bb945386d15711db</anchor>
      <arglist>(double _tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOptimizationTolerance</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a45fd1c22e4d11c235bb5f4df4d0d186c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPseudoInverseDamping</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a72282a5bf1d18108ecff2af125cb6e14</anchor>
      <arglist>(double _damping)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPseudoInverseDamping</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ae5d47e2b00960c4ffdde5bdf30793709</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLastError</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a778ca94dc73acf01564571563f524870</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a97c9a9be4cdd6cd17e4bd5978e5b98a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setName</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a13bdde1487d19fcc5e32d634c7303d1f</anchor>
      <arglist>(const std::string &amp;_newName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>afc47660e5f3588d3d52f525073b9d65b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>abaa94e0ae81238aac65e5dbddaeaeef1</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::VectorXd &amp;_grad)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalHessian</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>abfc65b2d36505b795fbd8c1c40308f58</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt; _Hess)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>de/d0e/classdart_1_1dynamics_1_1HierarchicalIK_1_1Function.html</anchorfile>
      <anchor>aa8e1aee501d7cf74f89778fe5a0b408d</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_newIK) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>convertJacobianMethodOutputToGradient</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a50391198bbb0a549c943a6c5460a7904</anchor>
      <arglist>(Eigen::Map&lt; Eigen::VectorXd &gt; &amp;grad)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; dynamics::HierarchicalIK &gt;</type>
      <name>mIK</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a56b775aa4c01480f566b07b7c0e29d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ErrorMethod_t</type>
      <name>mErrorMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ac2154d8c8f0893f298867bab42a7972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BalanceMethod_t</type>
      <name>mBalanceMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a070e458660db1452d8e6d7e85cfbf288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mOptimizationTolerance</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a55dff5f4d052d9ddf6d2377d05892dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mDamping</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a74491853d9d2296002c3d1101d8f993b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mClosestEndEffector</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a3ef0043dc3e4866cd024f6ce745033f4</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mLastError</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a1c324ada106b22dd184b683b99525f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mLastCOM</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a9e6f219b81e9931a47f2764c52c56231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mLastSupportVersion</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a91d603303eed425e907c758a3df19b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::LinearJacobian</type>
      <name>mComJacCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ab0654f037ccda540bd27c75e71b3cdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::LinearJacobian</type>
      <name>mEEJacCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ae7a2bd820bf1ff830e2b1f70f23a37d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::JacobiSVD&lt; math::LinearJacobian &gt;</type>
      <name>mSVDCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a6a5768ea2c8e66279d040805f5426ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mNullSpaceCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ab39d5dfde6822c319e7fba89e212fb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mPartialNullSpaceCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a4d5e68f31d032f3b1e11d52eb30e6d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mInitialPositionsCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ad364427196fafdca37d2ec7d4bc5e4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a201fd012640c54e6c513af5a1a16db20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::BallJointConstraint</name>
    <filename>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</filename>
    <base>dart::constraint::JointConstraint</base>
    <member kind="function">
      <type></type>
      <name>BallJointConstraint</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a5896883f90ae1373fcf593f5cb53cbe7</anchor>
      <arglist>(dynamics::BodyNode *_body, const Eigen::Vector3d &amp;_jointPos)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BallJointConstraint</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>ad816a6856eff3c0a55d3139e3a672b4f</anchor>
      <arglist>(dynamics::BodyNode *_body1, dynamics::BodyNode *_body2, const Eigen::Vector3d &amp;_jointPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BallJointConstraint</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a7e0f896e2464aec6f25c68d7eaa24646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dynamics::BodyNode *</type>
      <name>getBodyNode1</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>afed7f1ee8390c70707b23b73f80a9d7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::BodyNode *</type>
      <name>getBodyNode2</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>abbf3f3ca0549a6933c1dd5ca7eabce43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getDimension</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>aa09e2b60c56a380f9b7433f4318f51d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>af66ee53cdb07e4eae8481b57226e7e80</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>ab9095ad75f66fa78560ff90477afdab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>aa4fdff745a766cf0011f5b67ec549722</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a1f2313e32006d7ed6c492d233934c2a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a0771d7431f41d8c88e870db2e811e801</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a5a1df3d25fdc8736ee0a471289e08a0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a815493ac24071bf91e4fe251ebc02761</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a823841f350f3775451681ec6ce252365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a7ba3e5179d876fc147f630ab1a524adb</anchor>
      <arglist>(dynamics::SkeletonPtr _skeleton)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>compressPath</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a16653228e700d3b03730e87a443df9aa</anchor>
      <arglist>(dynamics::SkeletonPtr _skeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>acbd1e143b66ba1fd17af452223c924cb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInformation</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a324fcc67863ce8412b74f1ee33424d5d</anchor>
      <arglist>(ConstraintInfo *_lcp) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a6e752ca0fe7649156806fc2dd809df35</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getVelocityChange</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>ae42198d929d5acb1427e4214a01853c0</anchor>
      <arglist>(double *_vel, bool _withCfm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>excite</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a265e1e0344b6d136d297715d0791ff2a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unexcite</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a2ce8914c3b9a96c57fc9faeea626a09c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpulse</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a59c2be32a7d7c4cd7af2f9a5fb3e3ee9</anchor>
      <arglist>(double *_lambda) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a90777621d5216d98ebe7062787b08b85</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a5e92f03fc916863eb98975381baa25fe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a6d91dba1d8b9900c7adf4e761b5216d1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode1</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a9fa9aeed02ced0d97b4420eb30aa1cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode2</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a5be79b51cc1ead9f5c8757b1cc302543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mDim</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a2af10036c25d9109ff568ee7776c55a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a8abb0e69cb4ba6f44c531e936cbaa934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a234f51bdf0ff81f60e2dfbe6186ff473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a52a896483c222582ae456e83dfbc52f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a58f5272b0c2f578747a3d88f311f87df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mOffset1</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a56ecb210c9f203b76a3943b6a95a8941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mOffset2</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a526f76fd8bd9de4242ffed81222a81bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mViolation</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>aeaad4d4cadc28c34ae3bc54865d4e1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Matrix&lt; double, 3, 6 &gt;</type>
      <name>mJacobian1</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a45337287993c43b83942b76ad80405fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Matrix&lt; double, 3, 6 &gt;</type>
      <name>mJacobian2</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a5e3ad0fbbf5b246014e33646f25e3631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>ada10e354289b746345cdd33554de6472</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>ae1b931068ce4c4c7eaae8a6291478ef3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ConstrainedGroup</name>
    <filename>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstrainedGroup</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a912ad95cb43e6159f253e411f01a4030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstrainedGroup</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a5bc8b005f5e489de84f8534787becd2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a334a6c7282e18e91006f9ff5d6c6121e</anchor>
      <arglist>(const ConstraintBasePtr &amp;_constraint)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumConstraints</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aa8d72f9b38396e94216dbf3b0ed1c7a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintBasePtr</type>
      <name>getConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a5135ed65c31c5dd0123cb3d2e451378c</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a6b7ba9bf21fa269bad78c9a0058a20d2</anchor>
      <arglist>(const ConstraintBasePtr &amp;_constraint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllConstraints</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a2b23208df09b5fdbeee3230640a42761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getTotalDimension</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a2d22a633a008f1135ce034d61a0c02cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>containConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aa9f4f310e331175281fdf56135458bc4</anchor>
      <arglist>(const ConstConstraintBasePtr &amp;_constraint) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstraintBasePtr &gt;</type>
      <name>mConstraints</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac5a172e14c50d39ce2337db2bb644f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; dynamics::Skeleton &gt;</type>
      <name>mRootSkeleton</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab6403be8c801059969d6b615ac2fadd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::constraint::ConstraintInfo</name>
    <filename>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</filename>
    <member kind="variable">
      <type>double *</type>
      <name>x</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a6eee53fb4552d11cf96cbb287ae159a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>lo</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>aa6b4521948615408e6418997c2e9d25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>hi</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a326d5425aecedc0464326aab9ea0645f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>b</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a55537358b3d0eb1c4d947aec87069aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>w</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a193590af62d01236a9641a3219a9ab4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>findex</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a19a4d222483e3e54a6152f1a1b23f44c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>invTimeStep</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a30edb494d531dda2c0ceaf58ff21997b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ConstraintBase</name>
    <filename>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>ae811d09cb2dcecdc09253dbff8c6f693</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a0b3bcdc399a65d8265c60296b294e4ba</anchor>
      <arglist>(ConstraintInfo *_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a55887e9dc49113de80d8e1e452ff395e</anchor>
      <arglist>(std::size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a2e731a9c1d930f36ebf1d99d6aa0883a</anchor>
      <arglist>(double *_vel, bool _withCfm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>aea54715d5d6742635da52a09cf0bc8eb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>ae5aeea5b4ca6d6ac3782511fd7a1edc6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a35d0145b5d67a0fb1e9f3fc972795596</anchor>
      <arglist>(double *_lambda)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>aaa65531a6ce147ec94afcc5a129da208</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a5b19def48ad79687b8b414d09321219e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>uniteSkeletons</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a71f95673631df4139625f750c67ab5ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintBase</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a8c7e2f4119b286b656ea5a77b1a6db7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstraintBase</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a2d4441f9e5d6628f49840d19b3cd81c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ConstraintSolver</name>
    <filename>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstraintSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae28d036d432da9723a7c7b1ae37b5e26</anchor>
      <arglist>(double timeStep)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstraintSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>abc4a37b9d205831166f2a1c13061653f</anchor>
      <arglist>(const ConstraintSolver &amp;_other)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstraintSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae3b3e2846835db6d7afaa697b52bb6ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a5c4f85c904921cab5da313a5e5f25581</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;skeleton)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a0cf3fbc89a69ae44172016522f052c6c</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;skeletons)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aa70c9a553597554885b01afadbb2d150</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;skeleton)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a09ac22a2e38611b840518188120909f7</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;skeletons)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae2aa52f3a51f6a412b10a68d2a4526c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a99d8a33f24e70c9efa7f2471f29a6190</anchor>
      <arglist>(const ConstraintBasePtr &amp;_constraint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ab5054cb9ff50fa22d907b03533e33354</anchor>
      <arglist>(const ConstraintBasePtr &amp;_constraint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a1432a82fe9f1080d2872eca466435124</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastCollisionResult</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a0e649dc2a2a57f84fbd0ecfdc2d839c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a8e42ab1a609d86ba481fda83767352bb</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aa907e84ba399af560b67805a3e0eff12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>af3e14b70909840916dea64cc2e7f7ecc</anchor>
      <arglist>(collision::CollisionDetector *collisionDetector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a10e4f465754702e9c73222e5f6edc46b</anchor>
      <arglist>(const std::shared_ptr&lt; collision::CollisionDetector &gt; &amp;collisionDetector)</arglist>
    </member>
    <member kind="function">
      <type>collision::CollisionDetectorPtr</type>
      <name>getCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a80ec14031cf27bd97acba3d4e3102283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>collision::ConstCollisionDetectorPtr</type>
      <name>getCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae40f5d8e8d530535bc3f0da32d7153e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>collision::CollisionGroupPtr</type>
      <name>getCollisionGroup</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a40ec33128453d2ab508dc1ed3d1ee81e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>collision::ConstCollisionGroupPtr</type>
      <name>getCollisionGroup</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a6d6bfd6bb235acfae1231ef6f55364fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>collision::CollisionOption &amp;</type>
      <name>getCollisionOption</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a9a3f21eed5b31d86c05170cca39dd7dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const collision::CollisionOption &amp;</type>
      <name>getCollisionOption</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a81207eeb90f90d218bffe937cd685c37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>collision::CollisionResult &amp;</type>
      <name>getLastCollisionResult</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ab2ee1a54946705d070e55406dd5688e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const collision::CollisionResult &amp;</type>
      <name>getLastCollisionResult</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a687cf782adc74db8668f9764e57bc7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLCPSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>af0b1fd60be98e1e36b24c9097c12365e</anchor>
      <arglist>(std::unique_ptr&lt; LCPSolver &gt; _lcpSolver)</arglist>
    </member>
    <member kind="function">
      <type>LCPSolver *</type>
      <name>getLCPSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a96ddf983c0d30918233f138023aea2c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a50664aacabd70a1f6f76958cde13a798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>collision::CollisionDetector</type>
      <name>CollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a1a897cc78bf39d11b00dfcbc5514c4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>containSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>af19b1d3c5d127a07b109b470455a175e</anchor>
      <arglist>(const dynamics::ConstSkeletonPtr &amp;_skeleton) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>checkAndAddSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a79d33e170a84160831d83d7d1ead8671</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>containConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a8b111f0464a767fe4376dbb9790bad9a</anchor>
      <arglist>(const ConstConstraintBasePtr &amp;_constraint) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>checkAndAddConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a8626e98385f77bf3afefb6f3f8ef67e4</anchor>
      <arglist>(const ConstraintBasePtr &amp;_constraint)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aec369abdfa802131c7e91385a9e20759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildConstrainedGroups</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aff161f1320086c2a79505b441083d546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>solveConstrainedGroups</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a47d3db5cf42e604ec8e083724dc5af7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSoftContact</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>af8e20d6de6ef1951a911e08b8cf2b441</anchor>
      <arglist>(const collision::Contact &amp;_contact) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>collision::CollisionDetectorPtr</type>
      <name>mCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a67e194495d32060b523686d93080d1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>collision::CollisionGroupPtr</type>
      <name>mCollisionGroup</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ace7d8548b397076fece32129b70bb20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>collision::CollisionOption</type>
      <name>mCollisionOption</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aef7e73436920feee6fd985bcd632912d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>collision::CollisionResult</type>
      <name>mCollisionResult</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a0be5ed2fb2ca04bf538d173f9d88c511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae05c1138ee5ee871637388df82225c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; LCPSolver &gt;</type>
      <name>mLCPSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aa0bb017709fd4084c70fc650b9de98ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; dynamics::SkeletonPtr &gt;</type>
      <name>mSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a0a07e3dfe287f074ba948eacd24d1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ContactConstraintPtr &gt;</type>
      <name>mContactConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a4ccc2b6ea946177bba25ddcb2f781013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; SoftContactConstraintPtr &gt;</type>
      <name>mSoftContactConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a057187a75433be6a20d6633ee5918450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JointLimitConstraintPtr &gt;</type>
      <name>mJointLimitConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aeb64bd587c82eab40f69477e75d80804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ServoMotorConstraintPtr &gt;</type>
      <name>mServoMotorConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aa49233f02a6d3b2d5cfcd0f607c4ce54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JointCoulombFrictionConstraintPtr &gt;</type>
      <name>mJointCoulombFrictionConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a281f7c42912e3ee0054e852dab00176d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstraintBasePtr &gt;</type>
      <name>mManualConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>abf1d54ef145f2770172f41be80cf1ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstraintBasePtr &gt;</type>
      <name>mActiveConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ad4f07dddc5c14aa51d769ccb2a273368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstrainedGroup &gt;</type>
      <name>mConstrainedGroups</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aadfc1f1c90fb9eecc5c78373d962c6fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ContactConstraint</name>
    <filename>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>ContactConstraint</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a66bca42c356f4abf4c2ad9aed72e6b33</anchor>
      <arglist>(collision::Contact &amp;_contact, double _timeStep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ContactConstraint</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aaf3c7a8112196bbf7ac789993fe1327f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrictionDirection</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a6726d3343dd8ae5a014755983b2a6cc6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_dir)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getFrictionDirection1</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a54fea08f3d30aa6d09a78c4cbd44ba05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ad552acfea98b167273b96815f0995686</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a8dd26662822ac4bab4582a39cc3f54d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>af5b1245b114b4866f912d660551286fd</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ac3be100d9c2755b451222eb72e828c6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ac1a0d8e8e65aa1d1141551dbda74bb2a</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aac2a88e3abc71908fca94f828c4a55b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a31345696832f7802a48a25626b797ba2</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a653d41dcd80fafc1b274d4b15ea7b814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a17713b702609fae7d4625ed58dc21aaa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInformation</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a7067eae56d51d8601fa3e3d46742edd2</anchor>
      <arglist>(ConstraintInfo *_info) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a369ef5279cb961ee4b3aa902bfdfbfd7</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getVelocityChange</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a06bbbd8c1467a78b5db57c3536e279f4</anchor>
      <arglist>(double *_vel, bool _withCfm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>excite</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a2a92584ad79e33ad7877bb94342918dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unexcite</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>abe44a1888ce53c1e6a42c0c63df37ea2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpulse</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a6c05df6c8d13f4fc63a8e0b0db5f1df1</anchor>
      <arglist>(double *_lambda) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aea9d381362ee421864b9f6539dec5ddc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ad2a9c2fabc0e45d0d6e917cab5594afc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a46f8958fac1402aa870be198b395fed8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Eigen::Matrix&lt; double, 3, 2 &gt;</type>
      <name>TangentBasisMatrix</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>adf28a4044b57a28a3c6d72484ed34c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getRelVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aaec44384b85e77de9ad43db356c18b98</anchor>
      <arglist>(double *_relVel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateFirstFrictionalDirection</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a7ac6e5ebc84151ef623faa22db786174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>TangentBasisMatrix</type>
      <name>getTangentBasisMatrixODE</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ac713bfdaf242547a993008747127f52b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_n)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a0a87147294ce818cecebcbbbef593c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode1</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a23d291dc762739f4fe40b40893fd79d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode2</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a68416ccf33db8da717e62d6e0b70fbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; collision::Contact * &gt;</type>
      <name>mContacts</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ae6b807b33c3e859343a96208478b8441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mFirstFrictionalDirection</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>af645a471aa6ef1db27427c26efcc0c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mFrictionCoeff</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a78184d0b4419fa5ca282d12cbbe0e0b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRestitutionCoeff</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>acf84778e25fc924fb6bfb89f206abe7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians1</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a5ad14a660345b43a0a8ccf7689d67df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians2</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a17ae0628cb6f89ebd11158137f644b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsFrictionOn</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a1750b2aa46be0183946e8ab33b5383f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ab2c2bd7a11ab53da81e835ca12473b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsBounceOn</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>acc66b2e883e3594cb881f55aec5a47f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a43f1cac425a43e8c133fe498e7f7d2d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ac7e4956ad4f6c2ed7a59beff1fccd344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a8029beb76abbd99884fa2c2e084c6d0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a338edeef87a4de654fba0253021d4a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ae47c5441f4c48ab58b3a1440585ed023</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::DantzigLCPSolver</name>
    <filename>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</filename>
    <base>dart::constraint::LCPSolver</base>
    <member kind="function">
      <type></type>
      <name>DantzigLCPSolver</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a497f54460f9092efe8a942d830bf9967</anchor>
      <arglist>(double _timestep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DantzigLCPSolver</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a1640c1d07b01f68208b61e12a2648c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>ac07de425aa8298c103557b4abda02fa5</anchor>
      <arglist>(ConstrainedGroup *_group) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a782c763ddba6230a98338c4232da2086</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a158267fc960c755cc1872502b8f688ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>ac6911ab7d5e955418c27105dee718b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>afd3385b54db090e57d4bd2961f1461e9</anchor>
      <arglist>(std::size_t _n, double *_A)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a75bcfdbfeff781ec61facbe22ff975d1</anchor>
      <arglist>(std::size_t _n, double *_A, std::size_t _begin, std::size_t _end)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>print</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>af66639621c80eae0a64fe73ba9d0c23b</anchor>
      <arglist>(std::size_t _n, double *_A, double *_x, double *_lo, double *_hi, double *_b, double *w, int *_findex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::JointConstraint</name>
    <filename>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>JointConstraint</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a488264a669e5c98f63ddb749a470ec94</anchor>
      <arglist>(dynamics::BodyNode *_body)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JointConstraint</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a9961912ac211ae533036409e9850b20f</anchor>
      <arglist>(dynamics::BodyNode *_body1, dynamics::BodyNode *_body2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointConstraint</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a60fa5adb65975027310f3a955ea1b1c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::JointCoulombFrictionConstraint</name>
    <filename>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>JointCoulombFrictionConstraint</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a8bba110e77784a822ffd657d512b4135</anchor>
      <arglist>(dynamics::Joint *_joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointCoulombFrictionConstraint</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aad106a72a49994a428a9c5588b0634d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a10e00324a211fe3d87b3a6f777f1cee2</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ad102985a6c075083f978e4cca335ad0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ae2c3b8a1c0ca1e8bd244ab6587997430</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInformation</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>af154d2e0f2d87aad5577b7497c703f92</anchor>
      <arglist>(ConstraintInfo *_lcp) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a823368a83cb6d51694f8af3dbaae73ee</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getVelocityChange</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ad2abbc5fe7a780419f5778f4d16630bb</anchor>
      <arglist>(double *_delVel, bool _withCfm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>excite</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a4963a67d92a32ac1616bc5534992785d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unexcite</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>abcec98eccccdf2e61263c3c66938bf72</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpulse</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a8f7dc06fefbecb08eeea7a6c6f04dbe8</anchor>
      <arglist>(double *_lambda) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ab33081e2699f7bf31173e1c790807640</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a99c0af94bc6b1d85798dac864a68726b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::Joint *</type>
      <name>mJoint</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ae72ac40f71271f69c44c7e139db9a47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aff4add6238a456fb3cf709b70104d650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a6dbc731483672c38d51032f008c2f828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mLifeTime</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ae04013313e718e2716cac9de849c2788</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>abd02a9b5b8df4398ce934b2f44584564</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mNegativeVel</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ab43191043af47e60f01e4dad82db3f34</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a9aecc816b1b84800229f0ea603b03076</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mUpperBound</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a45c5c6a86e140b1ac7c555bd99ed0f6e</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mLowerBound</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aebe71b99746e453607020b684ba01824</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aaf86fcb3612d76bf01f42fcdb035458d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::JointLimitConstraint</name>
    <filename>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>JointLimitConstraint</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>afe2e6fbaa795bbdae2b4dbf705759bd2</anchor>
      <arglist>(dynamics::Joint *_joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointLimitConstraint</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a16be05b90b5d507511a02ef477389fea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a725b144477948d393265f02547a68859</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>ac360e927f70e639d620e3e898fe6db96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a63483d9739f9bbb0d0cd3c6de9c4383e</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a0d974a41683719aca5a542b40dbbb0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a0187252c0066caa5af49c2f66d25ee4d</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a8c8de2f6fa791647e2d4c7b7d30ae945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a96d86b1588767294499971d897c0bf39</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a7c79baf7eed9a28a2692ab17b600d91b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a90a3b5a106b6ed01f67c85546da6413e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInformation</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a9119f99aba82c9c9a084f4ffe8c1991a</anchor>
      <arglist>(ConstraintInfo *_lcp) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a56d20523137c902ae2118d2d2e62f789</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getVelocityChange</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a34186e5d489ea6ad0330f003f5b02ad1</anchor>
      <arglist>(double *_delVel, bool _withCfm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>excite</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>af1e97d6335f16df0c1135f0be81327bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unexcite</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a24fc0f7f16da4633e56f45b6430193d9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpulse</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>ae8f5d2ab1c767d4e8b07ac64fd48028c</anchor>
      <arglist>(double *_lambda) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a4c864c02a769579d86db3fa0c1813102</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a9439607ee88327810965bc5c90d26b93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::Joint *</type>
      <name>mJoint</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>adba11dda78d4c730f92566fae1fdaa56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>aba1da9311ffb50ca7d1d9c3270cbdc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>ab8ec90400242d6af44778d3eefd01057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mLifeTime</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a32cad2857ee51f241d51d33bb4a2fac3</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>af51d625e91035ac7a942a71dc05d844a</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mViolation</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a5ad3273599fa5441b568c3cf0addbb18</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mNegativeVel</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a6a3b2564e2b9928bb64dbebfebd9c377</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a2de9d90f361954a234c6540097e2c30f</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mUpperBound</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a01fbe4aefb49e9f86efa449d17a6977a</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mLowerBound</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a27996d4b5822709409c0767210b2e102</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a26c45dfe89fd252bd16b7dbd2a23109f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>ae4177622e17d9f24a776258d7c689f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a1ae3e614b2c994ed93698ebb7e53830a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>acb2dc360cf9180e99ed46fe3bc9092a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::LCPSolver</name>
    <filename>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a2eccc6c7a7da7aba40739880c24615f6</anchor>
      <arglist>(ConstrainedGroup *_group)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LCPSolver</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>ad97a20795d5ce9abad5eee4bc5359bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LCPSolver</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a451849008dd0b3985783ade79a6d10a6</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::PGSLCPSolver</name>
    <filename>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</filename>
    <base>dart::constraint::LCPSolver</base>
    <member kind="function">
      <type></type>
      <name>PGSLCPSolver</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>a2cda67a930d1cbc6ac57836feef868b2</anchor>
      <arglist>(double _timestep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PGSLCPSolver</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>aea77ce0ad2c867ebf83797ed57cfa0c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>a35a9f12a6d3741052db89c9a38b20b3a</anchor>
      <arglist>(ConstrainedGroup *_group) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>af459e9ca93ea584fa2935ea756e9c06a</anchor>
      <arglist>(std::size_t _n, double *_A)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>a554f59d2974d175a48806d3bfbbb6173</anchor>
      <arglist>(std::size_t _n, double *_A, std::size_t _begin, std::size_t _end)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>print</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>a4de3b6f539f785187bf9288dc66f18cb</anchor>
      <arglist>(std::size_t _n, double *_A, double *_x, double *_lo, double *_hi, double *_b, double *w, int *_findex)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::constraint::PGSOption</name>
    <filename>d8/d55/structdart_1_1constraint_1_1PGSOption.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>a4e94bf0738ddefeece1a4e4b2e3b7bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>itermax</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>a427eda0c2d3b34c71eb40719f992db81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sor_w</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>ac7cf90c4b2596a4934bb65d65426cf2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_ea</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>aefd7f847bb14caa9057f203b0752ec6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_res</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>ae8de6ba1427e142fb0decd471b34dfd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_div</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>aa4cd9b2e59655f75fd81a19f04e4d103</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ServoMotorConstraint</name>
    <filename>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>ServoMotorConstraint</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a45bab87d6416251a7f7a773ec4f08aeb</anchor>
      <arglist>(dynamics::Joint *joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServoMotorConstraint</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>ab002517ffcc7e0e72e9ac80c836475e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a5c15b36586e7d33c7fbe3df375703ff1</anchor>
      <arglist>(double cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a1d50c2b7dc71466831a4c39a032b2ee5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a805570c0d57dc9dc2b6ae8b51948c44a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInformation</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a7077f20527a4a3f630a18cb75e9bdbe7</anchor>
      <arglist>(ConstraintInfo *lcp) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a9d3c17b913725c36b8d470d3e418c757</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getVelocityChange</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a0a466a948b20d7b4ce7ab72331da66e9</anchor>
      <arglist>(double *delVel, bool withCfm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>excite</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a8625e05a4ff571556498849a814fdfab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unexcite</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a5f359ad34312eec00276a33139c79aec</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpulse</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a77215627f93155e34f601608b44790b6</anchor>
      <arglist>(double *lambda) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a9ed023676cb8df59736bb510dbd8e4d1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a03a2c608514578d96a711728455618ff</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::Joint *</type>
      <name>mJoint</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a11e5afc34baaad4c42f90299f31d4837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a5c1cb2067e5e55a675b7834767652c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>aa0bc287ec9c31aca5dade95aa1f2db9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mLifeTime</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>acaaab9884beb1dfaec70e6e3676155cd</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>aa607de86b171df55ccdf486c7f19f2de</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mNegativeVelocityError</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a9dc50f980462fe8234c696fe51e432cd</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a24107052aab2e6c349ad71434c168b24</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mUpperBound</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a0e3ffe264c2beddf3df88c919ce85678</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mLowerBound</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a77d445abf53499ca644428394c7042fd</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a61a8cdc6d953610e111ef9aeebff6519</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>d0/d43/classdart_1_1constraint_1_1ServoMotorConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::SoftContactConstraint</name>
    <filename>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>SoftContactConstraint</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ae71f85a57f40d8a74d8cf5a91d8fc763</anchor>
      <arglist>(collision::Contact &amp;_contact, double _timeStep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftContactConstraint</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a3527295292088e8d0bdfe5de85c20e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrictionDirection</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a53d2aabbc4de98c4ae3276288207cadf</anchor>
      <arglist>(const Eigen::Vector3d &amp;_dir)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getFrictionDirection1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>af28e32c8e00524f9ab849ffcc8ed419c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>af08cfdd7737da81a9ba352d10e1ad5ef</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>aa064c45d81acbdbf0a39fe72b37b5866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a8e3a0bcfd86cedf0c6fb4f3e20104977</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a0a0954c7591b4752a1140cfefdd78161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>acb4038f9658c70ef52dc64ee6f240256</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a84d09707ed79e0cefa09b9fdbebd5432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ab3cc8e34e362f72cab34ea27121ab1d2</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a32b9c4f15ab283ccaf6a8c9809b79fc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ac4e1271964563ecca6746f669fb7c8af</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInformation</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a4ab16857935e74eb41dfad68dab0b77f</anchor>
      <arglist>(ConstraintInfo *_info) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a6a2906e39188fed8a87f6b390c9eea4c</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getVelocityChange</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>af30d87b623aa5c07bfc8661dcec324a8</anchor>
      <arglist>(double *_vel, bool _withCfm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>excite</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a9d15b79679f5d34c1d7f9a5dab19d95c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unexcite</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a6a4d1b1f271301db6a49bbcf9286ebb2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpulse</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a61561361f629b0dd4e39fe65144922e7</anchor>
      <arglist>(double *_lambda) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a263a8fd19fab5f67295e30e6d4889ed4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a35aad41dee8b1051faa436f44dc6d71e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>adf4b34946c5358b51f111d74b80d4b78</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getRelVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a6b39189e60d459724bbf4ae356696607</anchor>
      <arglist>(double *_vel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateFirstFrictionalDirection</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>afd819b9a947b5398f911efd06794f7fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Eigen::MatrixXd</type>
      <name>getTangentBasisMatrixODE</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a946f65bb672d46b6f0e62a4160cc0e4a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>dynamics::PointMass *</type>
      <name>selectCollidingPointMass</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ab5aea21d7fcfaed23a3bbdc8ac5063f3</anchor>
      <arglist>(dynamics::SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const dynamics::PointMass *</type>
      <name>selectCollidingPointMass</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a457ba2fd482fa1638ecd009ede93abf4</anchor>
      <arglist>(const dynamics::SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a4a956382d75c38bb1b3a1aa72788220f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a8fdab8fa806e56056d2028ec995d626d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ac6237751e3be19f90bf179f8b2408b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::SoftBodyNode *</type>
      <name>mSoftBodyNode1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a158e9ee1866df087a92091a36328cdb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::SoftBodyNode *</type>
      <name>mSoftBodyNode2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a1a3327900c6c3d58da03befeac46f1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::PointMass *</type>
      <name>mPointMass1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a4e8b35796cd19804ce440b2d7451d94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::PointMass *</type>
      <name>mPointMass2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a0a8ddfae70dfd4875c349f25494608e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; collision::Contact * &gt;</type>
      <name>mContacts</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a30f7efb12a7ce82fa20d821175fc943c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>collision::SoftCollisionInfo *</type>
      <name>mSoftCollInfo</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a671c74c59f5100026485d0cfb0f1da36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mFirstFrictionalDirection</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ae410c0af89e3f2ec66768d44fc7257d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mFrictionCoeff</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a46fa5a0834d928d83965c4af08d0dbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRestitutionCoeff</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ab0c0bf9e59d6d80c21dfe446ba930133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a38f018a84f439b42ece2793ba2d660c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a82a06e8bfaadae469a8105c11e07705a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mBodyDirection1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>aa5141bd00b443e57c59982fc1da31157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mBodyDirection2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a0d9fe4eaf89d3917593cd0d9044e85dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsFrictionOn</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a4398bccf13f09f1934e72aa72bf92a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>aca3f6b55f9f8ee006d0b698167d7b3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsBounceOn</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a142b792b432327d948c6a8237064cdf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a9f4ad15c187592840c3b2bc4763ed07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ada8a83fc79c734939eb1cad87836b551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a55fe39a46ffdd68d7309d5b7c6019308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a56db82dbbea4b9f883efe985cef2e9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ae2cfc5fe27c28737199e989834b42fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::WeldJointConstraint</name>
    <filename>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</filename>
    <base>dart::constraint::JointConstraint</base>
    <member kind="function">
      <type></type>
      <name>WeldJointConstraint</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ad1ea6accfea90d70be625629fe93a52f</anchor>
      <arglist>(dynamics::BodyNode *_body)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeldJointConstraint</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>aec5c9c329c70bac6d739a63224a0b9ff</anchor>
      <arglist>(dynamics::BodyNode *_body1, dynamics::BodyNode *_body2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a829e4ddd308ef77f2f0d884fd93be78f</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_tf)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>aacb734672c3b01c557212bf27224e630</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WeldJointConstraint</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ab6ef11f5bcfab97c518117dc8549cca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a0644ae662b396064f6228d5e6ccb155d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInformation</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ab50e7aee09a136ec4a798ec2e302d302</anchor>
      <arglist>(ConstraintInfo *_lcp) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a1e929199e6028bb039f77d6dd6f35a83</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getVelocityChange</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a1c32cec20aa789991bc820f356950e87</anchor>
      <arglist>(double *_vel, bool _withCfm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>excite</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a5ac3c12a82240cb905521e70b62a08e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unexcite</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a357d70e5cf426bd54b64e24646f49b9c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpulse</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a8f94871fc300f1f748a8f5971affcb7e</anchor>
      <arglist>(double *_lambda) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>af98a9db8464dc432c5dfca673d7681fa</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a0a010ea41033876a25dc98a63ff9892a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ac959454cb72b96c020119993f5076250</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Isometry3d</type>
      <name>mRelativeTransform</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ac47061573a8c2c3c3201b0029db0b56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector6d</type>
      <name>mViolation</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a686d00d9994dfcd8686a198fe94fe19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Eigen::Matrix6d</type>
      <name>mJacobian1</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>adbe160496cd3efef195ad9cf40c24987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Matrix6d</type>
      <name>mJacobian2</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a23e611799c76d6ff5854ad5914c453d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>aeed9ce36337968955164b639a093e461</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>aa8f52da53d90cdafa7250b7c68d7ba96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::dynamics</name>
    <filename>d7/d5a/namespacedart_1_1dynamics.html</filename>
    <namespace>dart::dynamics::detail</namespace>
    <class kind="class">dart::dynamics::ArrowShape</class>
    <class kind="class">dart::dynamics::AssimpInputResourceRetrieverAdaptor</class>
    <class kind="class">dart::dynamics::AssimpInputResourceAdaptor</class>
    <class kind="class">dart::dynamics::BallJoint</class>
    <class kind="class">dart::dynamics::BodyNode</class>
    <class kind="class">dart::dynamics::BoxShape</class>
    <class kind="class">dart::dynamics::Branch</class>
    <class kind="class">dart::dynamics::CapsuleShape</class>
    <class kind="class">dart::dynamics::Chain</class>
    <class kind="class">dart::dynamics::CompositeStateNode</class>
    <class kind="class">dart::dynamics::CompositePropertiesNode</class>
    <class kind="class">dart::dynamics::CompositeNode</class>
    <class kind="class">dart::dynamics::ConeShape</class>
    <class kind="class">dart::dynamics::CylinderShape</class>
    <class kind="class">dart::dynamics::DegreeOfFreedom</class>
    <class kind="struct">dart::dynamics::MutexedWeakSkeletonPtr</class>
    <class kind="class">dart::dynamics::SkeletonRefCountingBase</class>
    <class kind="class">dart::dynamics::TemplateBodyNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakBodyNodePtr</class>
    <class kind="class">dart::dynamics::TemplateDegreeOfFreedomPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakDegreeOfFreedomPtr</class>
    <class kind="class">dart::dynamics::EntityNode</class>
    <class kind="class">dart::dynamics::GenericJoint</class>
    <class kind="class">dart::dynamics::TemplateInverseKinematicsPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakInverseKinematicsPtr</class>
    <class kind="class">dart::dynamics::TemplateJointPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakJointPtr</class>
    <class kind="class">dart::dynamics::TemplateNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakNodePtr</class>
    <class kind="class">dart::dynamics::EllipsoidShape</class>
    <class kind="class">dart::dynamics::Support</class>
    <class kind="class">dart::dynamics::EndEffector</class>
    <class kind="class">dart::dynamics::Entity</class>
    <class kind="class">dart::dynamics::Detachable</class>
    <class kind="class">dart::dynamics::EulerJoint</class>
    <class kind="class">dart::dynamics::FixedFrame</class>
    <class kind="class">dart::dynamics::FixedJacobianNode</class>
    <class kind="class">dart::dynamics::Frame</class>
    <class kind="class">dart::dynamics::WorldFrame</class>
    <class kind="class">dart::dynamics::FreeJoint</class>
    <class kind="class">dart::dynamics::Group</class>
    <class kind="class">dart::dynamics::HeightmapShape</class>
    <class kind="class">dart::dynamics::HierarchicalIK</class>
    <class kind="class">dart::dynamics::CompositeIK</class>
    <class kind="class">dart::dynamics::WholeBodyIK</class>
    <class kind="class">dart::dynamics::IkFast</class>
    <class kind="class">dart::dynamics::Inertia</class>
    <class kind="class">dart::dynamics::InverseKinematics</class>
    <class kind="class">dart::dynamics::JacobianNode</class>
    <class kind="class">dart::dynamics::Joint</class>
    <class kind="class">dart::dynamics::LineSegmentShape</class>
    <class kind="struct">dart::dynamics::Recording</class>
    <class kind="class">dart::dynamics::Linkage</class>
    <class kind="class">dart::dynamics::Marker</class>
    <class kind="class">dart::dynamics::MeshShape</class>
    <class kind="class">dart::dynamics::MetaSkeleton</class>
    <class kind="class">dart::dynamics::MultiSphereConvexHullShape</class>
    <class kind="class">dart::dynamics::NodeDestructor</class>
    <class kind="class">dart::dynamics::Node</class>
    <class kind="class">dart::dynamics::AccessoryNode</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1, Base2 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1, Base2, OtherBases...&gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1, Base2 &gt;</class>
    <class kind="class">dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1, Base2, OtherBases...&gt;</class>
    <class kind="class">dart::dynamics::PlanarJoint</class>
    <class kind="class">dart::dynamics::PlaneShape</class>
    <class kind="class">dart::dynamics::PointMass</class>
    <class kind="class">dart::dynamics::PointMassNotifier</class>
    <class kind="class">dart::dynamics::PrismaticJoint</class>
    <class kind="class">dart::dynamics::ReferentialSkeleton</class>
    <class kind="class">dart::dynamics::RevoluteJoint</class>
    <class kind="class">dart::dynamics::ScrewJoint</class>
    <class kind="class">dart::dynamics::Shape</class>
    <class kind="class">dart::dynamics::VisualAspect</class>
    <class kind="class">dart::dynamics::CollisionAspect</class>
    <class kind="class">dart::dynamics::DynamicsAspect</class>
    <class kind="class">dart::dynamics::ShapeFrame</class>
    <class kind="class">dart::dynamics::ShapeNode</class>
    <class kind="class">dart::dynamics::SharedLibraryIkFast</class>
    <class kind="class">dart::dynamics::SimpleFrame</class>
    <class kind="class">dart::dynamics::Skeleton</class>
    <class kind="class">dart::dynamics::SoftBodyNode</class>
    <class kind="class">dart::dynamics::SoftBodyNodeHelper</class>
    <class kind="class">dart::dynamics::SoftMeshShape</class>
    <class kind="class">dart::dynamics::BodyNodeSpecializedFor</class>
    <class kind="class">dart::dynamics::BodyNodeSpecializedFor&lt; SpecNode &gt;</class>
    <class kind="class">dart::dynamics::BodyNodeSpecializedFor&lt; SpecNode1, OtherSpecNodes...&gt;</class>
    <class kind="class">dart::dynamics::SkeletonSpecializedFor</class>
    <class kind="class">dart::dynamics::SkeletonSpecializedFor&lt; SpecNode &gt;</class>
    <class kind="class">dart::dynamics::SkeletonSpecializedFor&lt; SpecNode1, OtherSpecNodes...&gt;</class>
    <class kind="class">dart::dynamics::SphereShape</class>
    <class kind="class">dart::dynamics::TemplatedJacobianNode</class>
    <class kind="class">dart::dynamics::TranslationalJoint</class>
    <class kind="class">dart::dynamics::TranslationalJoint2D</class>
    <class kind="class">dart::dynamics::UniversalJoint</class>
    <class kind="class">dart::dynamics::WeldJoint</class>
    <class kind="class">dart::dynamics::ZeroDofJoint</class>
    <member kind="typedef">
      <type>std::set&lt; Entity * &gt;</type>
      <name>EntityPtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac56a7745ab08dd1273216cac7df61326</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; Frame * &gt;</type>
      <name>FramePtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a932d96e287e22d44ace7fe96aa2e4069</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HeightmapShape&lt; float &gt;</type>
      <name>HeightmapShapef</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea145e27c3cc189a4bf25774ea29b466</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HeightmapShape&lt; double &gt;</type>
      <name>HeightmapShaped</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a083989a945ec4636b6820498398ed686</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt; &gt;</type>
      <name>IKHierarchy</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a20a6cf4d8a08635e9bd0f74f415e8223</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>InverseKinematics</type>
      <name>IK</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6f0ee24293403ed241b0db7ca2195965</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultiSphereConvexHullShape</type>
      <name>MultiSphereShape</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a64de1d508ad60e554847a3dc34a7732e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ShapeFrame &gt;</type>
      <name>ShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a28b78f54c40628b7f58f9f72140563df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ShapeFrame &gt;</type>
      <name>ConstShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1fcc945a265236da324a476dac491878</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ShapeFrame &gt;</type>
      <name>WeakShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad247b15722635c95f73ff032380e5074</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ShapeFrame &gt;</type>
      <name>WeakConstShapeFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8a3b628646ae9f7557fb9adf3f3cba1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>SimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad33cf7bc1221fccb979fedcfec21f1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const SimpleFrame &gt;</type>
      <name>ConstSimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab62ad2053ca30a78ab75ecad9b143c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; SimpleFrame &gt;</type>
      <name>WeakSimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8097fd57011344faed86ff153e866eff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const SimpleFrame &gt;</type>
      <name>WeakConstSimpleFramePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a285407d9fcf0729ae4abe5d73a0349d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>NodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab60f35ede315bf59884651e8d4b5c574</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const NodeDestructor &gt;</type>
      <name>ConstNodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a23cfd0f4ba57582ddc0c39b2003ed562</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; NodeDestructor &gt;</type>
      <name>WeakNodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7b044ec64af5c0bafc5d3bddde4ef775</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const NodeDestructor &gt;</type>
      <name>WeakConstNodeDestructorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a37f87c97eac78b5079c65e71fc5da664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Skeleton &gt;</type>
      <name>SkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af869536bb870ff2c8c99acff9817b618</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>ConstSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a03ae028443aa91160079807d80e4ca10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>WeakSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4966abf275fb043dbbf1eb1b73a8c147</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Skeleton &gt;</type>
      <name>WeakConstSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3ab15e8ca0795c0adcaf2d4f5e4b1c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; MetaSkeleton &gt;</type>
      <name>MetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af1ed930a61b5be44b595e5ad1de55680</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const MetaSkeleton &gt;</type>
      <name>ConstMetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9b2b272797f282b0277d1e6e198d2a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; MetaSkeleton &gt;</type>
      <name>WeakMetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad5496c8a57b8a6fbb62e6562862610b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const MetaSkeleton &gt;</type>
      <name>WeakConstMetaSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a178dc75f0385da36d766e3543980f4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ReferentialSkeleton &gt;</type>
      <name>ReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4430f579c82a8c27774c7c5a64e3d697</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ReferentialSkeleton &gt;</type>
      <name>ConstReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a85676f2f9858238e746c51e466edc31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ReferentialSkeleton &gt;</type>
      <name>WeakReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a43d14f28f883f02fd1bc835ca4f424ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ReferentialSkeleton &gt;</type>
      <name>WeakConstReferentialSkeletonPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9598532db16a1da9f50c581663b402c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Group &gt;</type>
      <name>GroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afcfa19d43073de0c7052dbd3f0da7c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Group &gt;</type>
      <name>ConstGroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a361dbce5053678757c1ac2bc91e8fe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Group &gt;</type>
      <name>WeakGroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a98049c50145d55fd545ed3e0330227e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Group &gt;</type>
      <name>WeakConstGroupPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af0bb08f205acc91267510813a827af4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Linkage &gt;</type>
      <name>LinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a51ef1015baab899c152d15a14e109529</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Linkage &gt;</type>
      <name>ConstLinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af05687da44b508d0758b82a458b477d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Linkage &gt;</type>
      <name>WeakLinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4eb4963d5af4d3388d7ab983937f9163</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Linkage &gt;</type>
      <name>WeakConstLinkagePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea917567a1835f1779542d2e3ff900c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Branch &gt;</type>
      <name>BranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5db6f8e054b01e41fbaa050b3b8f4b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Branch &gt;</type>
      <name>ConstBranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a606e54c320494e8b34c88d8b8a793e2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Branch &gt;</type>
      <name>WeakBranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a945b511984087047000b96bbaa7bdee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Branch &gt;</type>
      <name>WeakConstBranchPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0fd01d28466dc4d968d0be469cf3c87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Chain &gt;</type>
      <name>ChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a93fce1643f23951f8f6996cb63293c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Chain &gt;</type>
      <name>ConstChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af360493bab027647b0410efd8bc7e553</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Chain &gt;</type>
      <name>WeakChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3d40a2d6e20b12301f5dddc0f0d6adb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Chain &gt;</type>
      <name>WeakConstChainPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a888717018a8bfc1bd227c59a96838420</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Shape &gt;</type>
      <name>ShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a197b71f7beb8ffb36e02fb67fbdd9a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const Shape &gt;</type>
      <name>ConstShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4de1edc02520709ac34deba1a48637da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; Shape &gt;</type>
      <name>WeakShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a99d533ab1884dbd5f44531a12fd2ff2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const Shape &gt;</type>
      <name>WeakConstShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>adb0ed417054fafc9d4c63e55a983f544</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ArrowShape &gt;</type>
      <name>ArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8bc4878eb0ff8d2b2d8d710347fbfccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const ArrowShape &gt;</type>
      <name>ConstArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a00f5492c8511c1d45322e9d2c4f626ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; ArrowShape &gt;</type>
      <name>WeakArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5075c4c6a5f684ed740432a3e0782b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const ArrowShape &gt;</type>
      <name>WeakConstArrowShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab7b8e08a6b64f16ec4696f35ce95b9de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; BoxShape &gt;</type>
      <name>BoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a16087d4d2bac44b7e5bb896a8b55186f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const BoxShape &gt;</type>
      <name>ConstBoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a10bd496f2adbcd2fcf363bf3d32a746f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; BoxShape &gt;</type>
      <name>WeakBoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06263ddf091fbc3f592e96538c88972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const BoxShape &gt;</type>
      <name>WeakConstBoxShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aab9e1f52a71f0835572253f5f011b0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CylinderShape &gt;</type>
      <name>CylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>adf468e4e1d197cc16513dc57d1c80cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const CylinderShape &gt;</type>
      <name>ConstCylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7c40943336684ec7e74a4ba6a4c312e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; CylinderShape &gt;</type>
      <name>WeakCylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aad924e6b6f01259e4221afd7f7ed5985</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const CylinderShape &gt;</type>
      <name>WeakConstCylinderShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a89509c874dc74e56b82f03cefb98bfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; EllipsoidShape &gt;</type>
      <name>EllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8d7d1fae9619cb0c986ae87da0015430</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const EllipsoidShape &gt;</type>
      <name>ConstEllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeff1c7d5d6da698b3b91b3cd6c68a675</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; EllipsoidShape &gt;</type>
      <name>WeakEllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af922b3608082012187234f6cf664ae83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const EllipsoidShape &gt;</type>
      <name>WeakConstEllipsoidShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a39226682f797a92b4e4315da900df8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LineSegmentShape &gt;</type>
      <name>LineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a102cfc3a3625c2ea727fc9e400263d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const LineSegmentShape &gt;</type>
      <name>ConstLineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4adac4ca209e362a7fec4bc18adc382c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; LineSegmentShape &gt;</type>
      <name>WeakLineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad35ca7d96199d911b444fb8c32fc1bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const LineSegmentShape &gt;</type>
      <name>WeakConstLineSegmentShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a75121cb9e4e5cc85b114119b6391e012</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; MeshShape &gt;</type>
      <name>MeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a147536e721dadceca5ffb8d3327e536c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const MeshShape &gt;</type>
      <name>ConstMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8b0cd29d86bf7677546315a02a5a9c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; MeshShape &gt;</type>
      <name>WeakMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae8e0c2e67aa440e4d5e1f3dd237377ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const MeshShape &gt;</type>
      <name>WeakConstMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a37b4f57089f486a6e775d8716bc57eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PlaneShape &gt;</type>
      <name>PlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8cf8f43d4b7b92174a46a4a854dcdbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const PlaneShape &gt;</type>
      <name>ConstPlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acd6df41f9f676e3a21a3e66c9526cc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; PlaneShape &gt;</type>
      <name>WeakPlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abf7b2adaa3b029399d60221e36c2b062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const PlaneShape &gt;</type>
      <name>WeakConstPlaneShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2962dd7960c94da365e92782e577bbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; SoftMeshShape &gt;</type>
      <name>SoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a396098b2ab2a0d84cfb668cf5046bf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; const SoftMeshShape &gt;</type>
      <name>ConstSoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1a6fe56a0e5f513bc35c760d05c0d7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; SoftMeshShape &gt;</type>
      <name>WeakSoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5119173daa9135eae4eccca8700b0576</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::weak_ptr&lt; const SoftMeshShape &gt;</type>
      <name>WeakConstSoftMeshShapePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6b779181999b3456f19b5e7195c1dbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; BodyNode &gt;</type>
      <name>BodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae7a75ced23de5265002eb406324cb245</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; const BodyNode &gt;</type>
      <name>ConstBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a909fac14cf3f40e5cbc810f3067a0203</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; BodyNode &gt;</type>
      <name>WeakBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac39da7eb397981164893f258386452ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; const BodyNode &gt;</type>
      <name>WeakConstBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a358a080068a18ba03ca81676c7fdabe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; SoftBodyNode &gt;</type>
      <name>SoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1fae9dad1eb2bc1e326ad6819e1f3732</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateBodyNodePtr&lt; const SoftBodyNode &gt;</type>
      <name>ConstSoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8e54c71a53bf0cde41a4e9150f6939b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; SoftBodyNode &gt;</type>
      <name>WeakSoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a32b44a858d7b9a7d1bc24d4b2d8de246</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakBodyNodePtr&lt; const SoftBodyNode &gt;</type>
      <name>WeakConstSoftBodyNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae5d946507cf4800bf720804525208e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateJointPtr&lt; Joint, BodyNode &gt;</type>
      <name>JointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af2f9534ad92072abc50ab60cb375a2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateJointPtr&lt; const Joint, const BodyNode &gt;</type>
      <name>ConstJointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9a4caf56610c021dc2994ec834e57134</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakJointPtr&lt; Joint, BodyNode &gt;</type>
      <name>WeakJointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7811748e2c5f374a0a256a1b99603e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakJointPtr&lt; const Joint, const BodyNode &gt;</type>
      <name>WeakConstJointPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0efd94bbd4abcaba48e631e2fae5ff38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateDegreeOfFreedomPtr&lt; DegreeOfFreedom, BodyNode &gt;</type>
      <name>DegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06795bffc8bb4a7cacacc58700f8317b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateDegreeOfFreedomPtr&lt; const DegreeOfFreedom, const BodyNode &gt;</type>
      <name>ConstDegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af85231954cf63cb50cabd69664f8844a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakDegreeOfFreedomPtr&lt; DegreeOfFreedom, BodyNode &gt;</type>
      <name>WeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0d9f5464c0e6d27db0ff979c8b360239</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakDegreeOfFreedomPtr&lt; const DegreeOfFreedom, const BodyNode &gt;</type>
      <name>WeakConstDegreeOfFreedomPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a922ff5805e1ed72308dfeadb6deb781c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; Node, BodyNode &gt;</type>
      <name>NodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae38b06e5b47bf29165aad76417efbb82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const Node, const BodyNode &gt;</type>
      <name>ConstNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a163b7b476fff561636afd7d8605aea46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; Node, BodyNode &gt;</type>
      <name>WeakNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4a7f57f2269209b8c5cf3c5f95d4e1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const Node, const BodyNode &gt;</type>
      <name>WeakConstNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a286d8228cd5a9be674a043bc9d622eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; JacobianNode, BodyNode &gt;</type>
      <name>JacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acfa87487d282e91d10811dc118b9bfee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const JacobianNode, const BodyNode &gt;</type>
      <name>ConstJacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abc95c234c31cf5f184c3bcb265519761</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; JacobianNode, BodyNode &gt;</type>
      <name>WeakJacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a166d308b742be302f737c0c7128a2091</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const JacobianNode, const BodyNode &gt;</type>
      <name>WeakConstJacobianNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a13e5200e28b480f8e06a32faf7b6a1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; EndEffector, BodyNode &gt;</type>
      <name>EndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a40deb491d7f16e6bcfec54adde18a72e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const EndEffector, const BodyNode &gt;</type>
      <name>ConstEndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a02b81b1c209f885678a3383a9e54da67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; EndEffector, BodyNode &gt;</type>
      <name>WeakEndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a728f12c934592651b2956bce57ee5661</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const EndEffector, const BodyNode &gt;</type>
      <name>WeakConstEndEffectorPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a09c461cb60aa04e293977cff1581ca89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; ShapeNode, BodyNode &gt;</type>
      <name>ShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a9f8338c1df5c6b41f2f0cd706cb26071</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateNodePtr&lt; const ShapeNode, const BodyNode &gt;</type>
      <name>ConstShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac7af125ec6851e1404080ea13d0c778c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; ShapeNode, BodyNode &gt;</type>
      <name>WeakShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a020636f60849f5122d14d317d456e658</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakNodePtr&lt; const ShapeNode, const BodyNode &gt;</type>
      <name>WeakConstShapeNodePtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a77798fd01879c86eaf2622af528a48d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateInverseKinematicsPtr&lt; InverseKinematics, JacobianNodePtr &gt;</type>
      <name>InverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a63cb201673acbcd3143f2382f3ce5f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateInverseKinematicsPtr&lt; const InverseKinematics, ConstJacobianNodePtr &gt;</type>
      <name>ConstInverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ad95c15e5ef3fb7251f795bed5c286121</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakInverseKinematicsPtr&lt; InverseKinematics, JacobianNodePtr &gt;</type>
      <name>WeakInverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab0823ec9a16f933ccb32324516a0e97b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplateWeakInverseKinematicsPtr&lt; const InverseKinematics, ConstJacobianNodePtr &gt;</type>
      <name>WeakConstInverseKinematicsPtr</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a45443e5b1dd9e892ec0bc54b0be02db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowTip</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ace0e10253d7750c9df732e6def570171</anchor>
      <arglist>(aiMesh *mesh, double base, double tip, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowBody</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a005aad3c4bb6a8dd38dbd2905fd2a7c4</anchor>
      <arglist>(aiMesh *mesh, double z1, double z2, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>aiFileIO</type>
      <name>createFileIO</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3933ea3434b7470b1d7ebb0dc3d0681a</anchor>
      <arglist>(Assimp::IOSystem *_system)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>extractDataFromNodeTypeMap</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a87a1709d4355f5b7a23e2ff54dcf2394</anchor>
      <arglist>(DataMap &amp;dataMap, const BodyNode::NodeMap &amp;nodeMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNodesFromDataTypeMap</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aec86d4e1019b2cfede999a88ef74fcbd</anchor>
      <arglist>(BodyNode::NodeMap &amp;nodeMap, const DataMap &amp;dataMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkMass</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0a606738487efbd1d247033b2f47b305</anchor>
      <arglist>(const BodyNode &amp;bodyNode, const double mass)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkSkeletonNodeAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a017de4d6b353f1c1881e496dc1066f90</anchor>
      <arglist>(const BodyNode *_bodyNode, const ConstSkeletonPtr &amp;_newSkeleton, const BodyNode *_newParent, const std::string &amp;_function, const std::string &amp;_operation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a374a7787cd9e06ac1bd8b90c56496959</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a90308c07aec0b5955d232f5bac673636</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa792f620923afd884f9e00973a30f960</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab908c35377add3ba671437a53a1c782a</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::set&lt; const T * &gt;</type>
      <name>convertToConstSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8157d817e7cab6ecb1199a81666a2b58</anchor>
      <arglist>(const std::set&lt; T * &gt; &amp;_set)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a18ebc4a3d3b183651b06c870144b2150</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6db9fbab0ef1b3c1ebfb7942692d47a6</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, InverseKinematics *_ik)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stepToNextChild</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acce1eec9363f7ec1c90586f0480f1caa</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap, int _initValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stepToParent</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab59f5213bd9516b054afbb3407807fcc</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayValidity</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4868404c6e1440295345b2ae712fd27d</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a600d1111406ddfa5095d6145d54a95f2</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a774f666dfca09e27a909122600b75ab8</anchor>
      <arglist>(MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setAllValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a61cbc6ea951344563de318c5d171c779</anchor>
      <arglist>(MetaSkeleton *skel, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a85ef65628134cb9b864b89b55ec8dd57</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; std::size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeec6fec6649364d7d6b4c7133d7e3023</anchor>
      <arglist>(const MetaSkeleton *skel, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyToAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6d722984d4bd1f183d0d7dce473a1fb5</anchor>
      <arglist>(MetaSkeleton *skel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7d48d2233fea14b94adc1070ab3568ef</anchor>
      <arglist>(MetaSkeleton *skel, std::size_t _index, double _value, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae15bd534caaeb4f5fd2fe4c5a0b38e3c</anchor>
      <arglist>(const MetaSkeleton *skel, std::size_t _index, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; T2 &gt; &amp;</type>
      <name>convertVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a44efb6e764576cd42a718f6c8efe23c7</anchor>
      <arglist>(const std::vector&lt; T1 &gt; &amp;t1_vec, std::vector&lt; T2 &gt; &amp;t2_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acdc21b49ade69175e14e82a9d8c37634</anchor>
      <arglist>(const ReferentialSkeleton *, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a11d89a5d479b439acd934b0c09f58f95</anchor>
      <arglist>(JacobianType &amp;_J, const ReferentialSkeleton *_refSkel, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeafbd1f0646cf8b8653313ffad705725</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6bc0da146d655196db0cce75525acadb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae51822c055651adf97a8dbbc51267d0f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2d6232c4b019551651cb66cad69192cb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a569dd6c528bd7b77541790e117e67a9f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa1c701e2d1bf2a17376c59b040d8a911</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>accf08966c21ed703d6a978f2c58405c4</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5fcd78c264e693295537438a26ffc6f1</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>setMatrixFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a27632bed7583432d63949f1de70a1817</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>setVectorFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea4199124d21f60d4f6c1a0c3dfa409f</anchor>
      <arglist>(Eigen::VectorXd &amp;V, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0dafd76a5568876a927cfa778d8ea729</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a78f04f14872e7db37d45f20a0a471361</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; const T * &gt; &amp;</type>
      <name>convertToConstPtrVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac87221859d0f539d865fc1966b22544e</anchor>
      <arglist>(const std::vector&lt; T * &gt; &amp;vec, std::vector&lt; const T * &gt; &amp;const_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>templatedGetIndexOf</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a92e34d13e871ed57f7010ba60acdcb14</anchor>
      <arglist>(const Skeleton *_skel, const ObjectT *_obj, const std::string &amp;_type, bool _warning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa8651d00389646e874adaec94a4bcfa3</anchor>
      <arglist>(const Skeleton *_skeleton, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4306bf824fa8f4696a92ab1558e5a70c</anchor>
      <arglist>(JacobianType &amp;_J, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a277114afe56c75b8e5ce038a9941ba64</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a626a8cc5b7d8a86110d1028b0c011c23</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a70da7968bce560d07638306d4dbb3b57</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6f759f85b89a1c6d56dcb2e3b55e34a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af1595ed12eebb5d91c5c2b1752a73589</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3a9685dc77f11303d4c82359bfb5c5ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a495dd6ef2917f7397cd606035aa181ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a07d54b76c16e3597a6424d7f8e9bab6a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveConstructBodyNodeTree</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a683db3338ffffeb0faba7e3c5d58274c</anchor>
      <arglist>(std::vector&lt; BodyNodeT * &gt; &amp;tree, BodyNodeT *_currentBodyNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeSupportPolygon</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a01cf4ba6e04c7ea69113aea67fb8038c</anchor>
      <arglist>(const Skeleton *skel, math::SupportPolygon &amp;polygon, math::SupportGeometry &amp;geometry, std::vector&lt; std::size_t &gt; &amp;ee_indices, Eigen::Vector3d &amp;axis1, Eigen::Vector3d &amp;axis2, Eigen::Vector2d &amp;centroid, std::size_t treeIndex)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7ca835d48302d7cd9875cf948d522174</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6afa2bc9b0d14e17b499feaed8712fa</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_FRICTION_COEFF</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2bf1880222d199764458d14155b0aeeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_RESTITUTION_COEFF</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5ad5d8d0d531c1762c3c73dd49fc4639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_VERTEX_STIFFNESS</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aaa243f1bb20e8b5cb57f10cd9283d686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_EDGE_STIFNESS</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afbdb878a4b3b904685b455b2c368a0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_DAMPING_COEFF</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1e2f2ee08c480b9bf178428e48a371af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>INVALID_INDEX</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acc27ab0704bc21556d25948075c2c253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKTolerance</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5e784e02b14816f6c3357797d342e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKErrorClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afa5d93e10f876e3f4c019333c084772b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06dc2b3d9522262637840806902b23e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abbca53d13a176c5a3272364fc8e58e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKDLSCoefficient</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab121f3e4478bbcaadebce57698c1d8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKAngularWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a69e6c0a07f5cc5a0b94a7d8a48fa24f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKLinearWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a705e6ff8260f78604f09fcefe7a164f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ArrowShape</name>
    <filename>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</filename>
    <base>dart::dynamics::MeshShape</base>
    <class kind="struct">dart::dynamics::ArrowShape::Properties</class>
    <member kind="enumeration">
      <type></type>
      <name>ColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MATERIAL_COLOR</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1a5df26b75fa14494693e47ab3d86cc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_INDEX</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1a1200902858f1dd5986eb11fddac37fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SHAPE_COLOR</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1af352ba82fe6878f2880af89504e86186</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShapeType</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SPHERE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da1a2e85ce2b2595449bc654786aa8aa01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BOX</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da7176c735acd02ef5a1e03bd78a44e502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ELLIPSOID</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da3691b628dfab6bb7743f09293b62dbbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CYLINDER</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da0f13778af4f881caa5c6b9999ba50cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CAPSULE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0dab3781e67bc25ddbdba9d9ed64dc4f7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da0ea2adb89398eb53552c6d4931eee6eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PLANE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da59fa94d70966ab54b5fbb478d2ba0c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MULTISPHERE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da1f94d2e24535ca3d0514898c01202351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MESH</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da02a8e4903d35a12457ea62b4d6346703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SOFT_MESH</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da83b71a28c527c4ffa75c17a351314497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LINE_SEGMENT</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da052d1a2f239a7f535a5bd477fc9a9599</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HEIGHTMAP</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da563a83b086e0e955596b5235211975a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNSUPPORTED</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0dae43d52b0c821bdc945470374f062deba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STATIC</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa502f95055f5bf314bf89d827ca9ca209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_TRANSFORM</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa2c5d822f3be938e676182409fd0c12b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_PRIMITIVE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa86dba45230234e3863833e2a1879f413</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_COLOR</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fabadc84c368d769a47990d20a5d1020c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_VERTICES</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa025d94e41df692427a2006cf24b7e0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_ELEMENTS</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa9193a049bafb05da2687c21150dd4cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0facab917881ac054365c6c62a35ede15b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrowShape</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a9b36f561430c9824edfea23b78caa360</anchor>
      <arglist>(const Eigen::Vector3d &amp;_tail, const Eigen::Vector3d &amp;_head, const Properties &amp;_properties=Properties(), const Eigen::Vector4d &amp;_color=Eigen::Vector4d(0.5, 0.5, 1.0, 1.0), std::size_t _resolution=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a9d2e8b206b851ca01cfd14641c88badd</anchor>
      <arglist>(const Eigen::Vector3d &amp;_tail, const Eigen::Vector3d &amp;_head)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getTail</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>ae2b002672cc017955d916094bb347fe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getHead</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a70f6d12dc91db137e40c87fa1feaeacb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a127cdb8647a510ac2a935b7e8c35ea3c</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyColorUpdated</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a0d6af784c69d82d5e94fd7e5934e446f</anchor>
      <arglist>(const Eigen::Vector4d &amp;_color) override</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>afd080294af8741fd0ac6dde81b235acf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureArrow</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a9250c2169461e4789d9991682215f50c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_tail, const Eigen::Vector3d &amp;_head, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ae750bd80ae90d63a45427d240ccf7eee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const aiScene *</type>
      <name>getMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a831a1062b1d160cd8301fe441e64499d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ad15bb39e1a87467d91dfaa8b070b7a28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyAlphaUpdated</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a08e8f3ffbf8be35622a683aa7023019b</anchor>
      <arglist>(double alpha) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>afe750fa59570b2703cf24d2dd4a0ff26</anchor>
      <arglist>(const aiScene *mesh, const std::string &amp;path=&quot;&quot;, common::ResourceRetrieverPtr resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ac9372dc4396a81c410646dd8a260e2e4</anchor>
      <arglist>(const aiScene *mesh, const common::Uri &amp;path, common::ResourceRetrieverPtr resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getMeshUri</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a8e9416d7c96bbe6be65a5a34fcc5128f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const common::Uri &amp;</type>
      <name>getMeshUri2</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>acea38284d110158475ca21705e70aa4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMeshPath</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>aa6a43b8e6799ca11d4926f25796b1c1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>common::ResourceRetrieverPtr</type>
      <name>getResourceRetriever</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a19c9230e9977ad37f87dab325aa0e064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6059eb44b7692ed0dcda1b97f6186e11</anchor>
      <arglist>(const Eigen::Vector3d &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getScale</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a695b284553aa3429392b716ee3ed16b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ab11a88fd730d89427dcd0a40a000d9e9</anchor>
      <arglist>(ColorMode mode)</arglist>
    </member>
    <member kind="function">
      <type>ColorMode</type>
      <name>getColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ae08d3e757629b70b60351dac3963f176</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorIndex</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>add07cb7c6331feca7a36930d5338d85b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getColorIndex</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a3cb5fb3edac0ee4ef3dd251b546d81af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDisplayList</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ac7ed633f7fbae0c6cf0705b5dc0a97e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayList</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>afb10d1d65a13be1c1cb42f4fdfcda773</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>aa67ec124286a8635969764f11fdc2d81</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>acc78c57b5accd3f4ef1848d413a9279f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::BoundingBox &amp;</type>
      <name>getBoundingBox</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a9b65c33aeb523ea716523e76c169bec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertiaFromDensity</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ae80641879346f6a7c9becd36fa169a2d</anchor>
      <arglist>(double density) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertiaFromMass</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aa12fd625a058eef4a4af7bafcad10f0f</anchor>
      <arglist>(double mass) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVolume</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0a8824b5ebb8b738ce0431d58e162877</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getID</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a59f9401d81166f53d2f72baa73ac392e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeType</type>
      <name>getShapeType</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a008111ba607c45955131361d493e053d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ad6981d7ba48914e48416e11abf903262</anchor>
      <arglist>(unsigned int _variance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ad0839111649737fa96e7e771eb0c7efb</anchor>
      <arglist>(unsigned int _variance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aa0685a8a9d886b01dcdcf6e2a121b5bc</anchor>
      <arglist>(unsigned int _variance)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a709cc0dc204d0c086f10ac4d1200c10f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ae551d28e14c1fc637b85228b0280808e</anchor>
      <arglist>(DataVariance type) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refreshData</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a9d3a188f020eb6b01b1472602247c010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyAlphaUpdate</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a675ea9bc41741a4a62c8288c75f09fdd</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyColorUpdate</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ad17cd8fb09091d770ea8af4ebde9b48c</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a38f07f1fbe8f37410ac4110f8d68ecd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const aiScene *</type>
      <name>loadMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ae7e694e9bcb1a67a5000b9ed8ceaa7f5</anchor>
      <arglist>(const std::string &amp;filePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const aiScene *</type>
      <name>loadMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>aab79efda47832c318cc71a15824f97f0</anchor>
      <arglist>(const std::string &amp;_uri, const common::ResourceRetrieverPtr &amp;retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const aiScene *</type>
      <name>loadMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a478b7b5a8d2f69541a5418af4d0ce28b</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;retriever)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>instantiate</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a7611b3746161e3a6cac55c05095da055</anchor>
      <arglist>(std::size_t resolution)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a852446cc322ec731fb30ce7390ccbeae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6b5029f8ee3c2999e3e605c8d7ca4a24</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mTail</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a51ea49f5ea7204b1b18c7b8b8f5eb1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mHead</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a6259de438733d4a5117960da13bb6023</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a25214998085e8d91234c2ac25286ed88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const aiScene *</type>
      <name>mMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a0ca12db4d0674aa1e5e091b567690ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::Uri</type>
      <name>mMeshUri</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ae3f642121c224bc61f6a1400ceec14a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mMeshPath</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a9906bf3cd5c0cdf207be46786bef147b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::ResourceRetrieverPtr</type>
      <name>mResourceRetriever</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a0a0664ae7f5007260b50c60e554c14fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mDisplayList</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a8c8027ef427697fac866f3c5f30b49bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mScale</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a354fcd58f9b788ed013b75714b1cb5b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ColorMode</type>
      <name>mColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a78f1c6fa9b19e9d3f202a9a8088e0d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mColorIndex</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a13ea6e9380c956f1a596f15cf771768a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::BoundingBox</type>
      <name>mBoundingBox</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a3482c31f2aaf40f450ebac6951bf1033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsBoundingBoxDirty</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0be096d66dcee0503f6fe490f442a971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mVolume</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0d9eb76ab4c229100cba7ccc833aee0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsVolumeDirty</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a4236c7e2ceda5310939c787efe8cf0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mID</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>adefad047400d9d53ed10a07816c3636e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>mVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aa4ec0172edc2d98894b5a41228b598a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ShapeType</type>
      <name>mType</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0c6e8972545c65851285061e11cc6d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static int</type>
      <name>mCounter</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>afa444536c129225a776b011281166508</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ArrowShape::Properties</name>
    <filename>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>ae353b73c190451d692c90cfbf0f81670</anchor>
      <arglist>(double _radius=0.01, double _headRadiusScale=2.0, double _headLengthScale=0.15, double _minHeadLength=0, double _maxHeadLength=INFINITY, bool _doubleArrow=false)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>a68fd171a73053c9b2ec24f7e6d8abd98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mHeadRadiusScale</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>af00879501a952ef4cc5f5d89712c6176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mHeadLengthScale</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>a9d355d6eae76218c424f5aeadf106ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMinHeadLength</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>ad12cc4f771ab3538625a736578dafcca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxHeadLength</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>a40d938ef3b752cd313b24a0a6e120d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mDoubleArrow</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>abf72a70866bc6aaa52cb3e38682479cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::AssimpInputResourceRetrieverAdaptor</name>
    <filename>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</filename>
    <member kind="function">
      <type></type>
      <name>AssimpInputResourceRetrieverAdaptor</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a067d7c0db2a859bc7872fa1ac8ceafa8</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AssimpInputResourceRetrieverAdaptor</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a5c5a590541dde83a7a596362152c2e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Exists</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a56fe471ab333f1be5d4e78da0af94046</anchor>
      <arglist>(const char *pFile) const override</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getOsSeparator</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>aca889c581c234ff4ef6fbc7c1b6b9ab9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Assimp::IOStream *</type>
      <name>Open</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a995757e584f732512d0060edbff85a7a</anchor>
      <arglist>(const char *pFile, const char *pMode=&quot;rb&quot;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Close</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a4d6e2dc83bbd2bf7ef0c6052d2aefe34</anchor>
      <arglist>(Assimp::IOStream *pFile) override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::ResourceRetrieverPtr</type>
      <name>mResourceRetriever</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a2a8e06a1c476ff7f05c8e7fe31208941</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::AssimpInputResourceAdaptor</name>
    <filename>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</filename>
    <member kind="function">
      <type></type>
      <name>AssimpInputResourceAdaptor</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a37c84b69f9953ebdcf80bcb3f54c3733</anchor>
      <arglist>(const common::ResourcePtr &amp;_resource)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AssimpInputResourceAdaptor</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>af8475b17e08d978ee2b88135b5ac1594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>Read</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>afa50418a887336738957b1697edf3dda</anchor>
      <arglist>(void *pvBuffer, std::size_t pSize, std::size_t pCount) override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>Write</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>aaeb69c3b0593678e2ec306df5dd6a1e1</anchor>
      <arglist>(const void *pvBuffer, std::size_t pSize, std::size_t pCount) override</arglist>
    </member>
    <member kind="function">
      <type>aiReturn</type>
      <name>Seek</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a37c347faf483e6cb6b339fa13b33d633</anchor>
      <arglist>(std::size_t pOffset, aiOrigin pOrigin) override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>Tell</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a655e752ccf14b33fc96064805ed7b295</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>FileSize</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a5f571e2059a2d1b18af55714e779f2ec</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Flush</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a48f4dded657b149b2abd4ad8a342c1ec</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::ResourcePtr</type>
      <name>mResource</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a3c0ac51d4aca155711e9fe5a4de6ed64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BallJoint</name>
    <filename>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</filename>
    <base>GenericJoint&lt; math::SO3Space &gt;</base>
    <class kind="struct">dart::dynamics::BallJoint::Properties</class>
    <member kind="typedef">
      <type>GenericJoint&lt; math::SO3Space &gt;</type>
      <name>Base</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>ab6607c7fb21c265c3a1996476a0dfe19</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericJoint&lt; math::SO3Space &gt;</type>
      <name>ThisClass</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acfd79266275691e600f74f5fa4867cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SO3Space::Point</type>
      <name>Point</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac112e84b6e09e3dc3490bf0f80df0cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SO3Space::EuclideanPoint</type>
      <name>EuclideanPoint</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af2aabc4ff535232c9d609fd773341f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SO3Space::Vector</type>
      <name>Vector</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aaf5267bedde8842807a55eb5b97ec0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SO3Space::JacobianMatrix</type>
      <name>JacobianMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6d76587cd89b02fc3220f6d4175bd1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SO3Space::Matrix</type>
      <name>Matrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0471a52d2a6eb3c5fd3b760ff4949627</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointUniqueProperties&lt; math::SO3Space &gt;</type>
      <name>UniqueProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a549e6f5cc7c2e9e9e1abe5f4980fb945</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointProperties&lt; math::SO3Space &gt;</type>
      <name>Properties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9a3089245ab839f160ef968632e4f93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectState</type>
      <name>AspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a394ed6fc8c892b5612d250d40310aa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>add694724d879d201d96331a4cc12324f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BallJoint</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>aed8288cf2a10d6bcd06c667c59183c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a95926e871740456bb9df393699a6abbd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a560781def06c4cbcf43d604c80e4ccda</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getBallJointProperties</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a32b8ca5079bf2df36939f6816826c195</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a8d2623bf83a63565a78ea858788552b9</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>aeda690b0d62236219d3e991b4d298036</anchor>
      <arglist>(const Eigen::Vector3d &amp;_q2, const Eigen::Vector3d &amp;_q1) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3e79d6ea6bfdcc06cd63a789d7fda95d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a22e44bfcfa7e8be5838a0a7b2b196daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3b03606625f36aced4f41a257c92adf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adc7f6dc33d3891dfe0f5bfa9f6deddb5</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad408c920d02f70d7a88cfa8e2aa54bed</anchor>
      <arglist>(const typename ThisClass::Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a52f6187489d93fdf7bf895456204074e</anchor>
      <arglist>(std::unique_ptr&lt; typename ThisClass::Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>createGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a1c78b33dec233b6cb0fb6a4e880635</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeaee8a79e3bc4399eb0b234f016b9a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; typename ThisClass::Aspect &gt;</type>
      <name>releaseGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fadd21f5d73b912f22c0b0516514527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f788c98255e791ab707289767debd68</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3523067d4ff3e9ad8550f2f7ce23a9ce</anchor>
      <arglist>(const UniqueProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0040637029227fd832d44573723ce99e</anchor>
      <arglist>(const AspectState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a984522e489da796fd4d4720811292b8c</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getGenericJointProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6bee56cc3a2e41b3c78784b5aa117cbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08db2db7a81845f2530d2f30f3566f8f</anchor>
      <arglist>(const ThisClass &amp;otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6c9fe8a8fd9f3eaa984c09cd603f0e7e</anchor>
      <arglist>(const ThisClass *otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ecc4745aad10f031ebce166ad36dc96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4bab8d9105d12abfe9be2f80dc12242f</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5fb3a506f557cbfdb1af2b742d211ecb</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4eb9e627a95c43c0202633966384df4d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaae16cb1c31b56abfff161121f99460</anchor>
      <arglist>(std::size_t index, const std::string &amp;name, bool preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a59ce80703b9e3f60868775b28626a857</anchor>
      <arglist>(size_t index, bool preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56205280218100c7506530db664bd623</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81d7363a74b7e72223e6225727021bf4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afed9c73fc6f50f3dd1e03b043e1bd504</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae57be9982b20b44a850e0c5354c56aa4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a33fc401935dc63d910d1bad81d45a33b</anchor>
      <arglist>(std::size_t index, double command) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a03d8b73d26cff1b5fe37658cb7d855ae</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab69218dbe9868776d65a76713467f2d8</anchor>
      <arglist>(const Eigen::VectorXd &amp;commands) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a055d196729db854f02ba40c237672d96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a365ded3be7bb7c5644241cc2490a9a95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a319c5bddebe18f00481c602e9e035ccf</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6d4d257a17185e40ce0b4d9874c7838</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa437a4f00772c2abf60f5c5204ae4c40</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6f2eb6a3dc43723a866206d271b37050</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a261c1c76668ca98cef95fd8d97134078</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af074da7d0fffa875a40313ca78731cb0</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7c7b377f1dea6a459c7e9600f41237f1</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56189c370db7512ed8d49c612358f74e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4c9c5ac9df1428c564a32b2ab5a4d6e9</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a818b16aec9e109f01bd07b35d55d730b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2091a3ebc63590a8e5f349c07f458c9</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a3c465480009c45584703cc84e3fbe8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac328d1b5b1e6b84f122e716bbe7944a9</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3ebb9d44080fb040e3b50dae91e183b</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af130fa6d4c82a20035eaa0593a36d080</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3622d4dde6f34d8ab1cec38c0cb91c47</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abd95cda7923b915fa3eaf488c126928d</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aca687b7cb5f70d368483dffbbcb6a99d</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7b2f0f0c27537be89b21399f3770c5f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a915177768c6b9fb0c731e67383362831</anchor>
      <arglist>(const Vector &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acf5d6f5fe1dd4144f99886f09251f90b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae30263365345e15f555a29609bb11635</anchor>
      <arglist>(const Vector &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a06ebc236d884a257e93aff551a60f85f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08bc31a281a0950acfd9f690e64e527b</anchor>
      <arglist>(const Vector &amp;accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a310c7b86fbacd458cdfb30f9539b5d6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a67f6e5cb08930ff34f24646d134a27c0</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3df75672b028ae7c6ac54d31ff0890e2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2c51c397e915dc11c48f99125677a288</anchor>
      <arglist>(const Eigen::VectorXd &amp;velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a79301b36a7cf4e970512db7321a3a4eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abb2f03e5c32d3574db7db76ce1cb0282</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab9fa2df5d92d77801b6492608ffefde5</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2509969cf54c235f68239ec13eafa327</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a23b5e40b6e7efd4dba8c31295dcda43f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac09ed7eeceb1de17b397022209bf9d1a</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5ac656366ddebb5af26d12832a533efd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d5879a4c9661cf1f73cb9ca2252e197</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae68b99a9f9feb4f7a88f691e7549feed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90aa26d57bd81027c86505f10215b944</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a062edbfb0695b30c8e0a31aa4063df56</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a489c73d485616642c20ebd2759fa7f0f</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d69fbc7c0ddccb0248c25ba5bf732c</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a498decf0c8e6cc672d76299635b38106</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab611d3ebecade8bb583a1ac6391275f6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afa69ee9d8ed2a4702ba73c4297aa093a</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a74b01b371b5c94d97e45810341ff9278</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fc7f065c1b48b85fd3e6cfab80df9f4</anchor>
      <arglist>(const Eigen::VectorXd &amp;accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aab693faddac9e163ae2dde6390a7eb06</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6cf54858df69658ce30e7bde818b3b0</anchor>
      <arglist>(size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aea6b76529cbf28ddab21a093f131e6f2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a951f5134d43732ed08a5b866643065db</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2226b5e13836d3cb6f33ab2403ab2ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaedad85161b1d459e1cbf295e7423e7</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d109ad77448660cd79a5885fc2bd387</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3c8c05f3b0bc1c77dfeb9a68459e578a</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1e0ba59064fb4e62fb70738371264289</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af75fff85fb299a60b5e2544360fc85ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a43dd3ca22950885428e9d65c46823786</anchor>
      <arglist>(std::size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a48d0c690f9cb01fe2fd0fb833d7003ea</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af568531bae6ca2c3474f56f220fb8760</anchor>
      <arglist>(const Eigen::VectorXd &amp;forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a364acf5ea7b44facc5af996ae597be70</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7ed2fa5153368fc645a4cd91ea7c2e8e</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a80c3b50b3f9644036ca6218705be30b3</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a02a7547230a0719cb581ebccae1414a0</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d1c91663ef76012d52ae331b6b3e5b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae544a782871da33239a73dd716a8527c</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad4d5390eb206173ace8add2cee8b6314</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a090c9734e2b9cf079c129c18c2c0e9c4</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9994aa5f4eb46980e6cee8b1449a4cdc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a510e581b760ee2c8388452721e07be4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a38523b9cdd019e0fdfa649e66c3ccfa5</anchor>
      <arglist>(std::size_t index, double velocityChange) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5b79e7ace836473925a8d1caa33f9c0b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aff19b9148a33dd9b072e49f9753d4d5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3d5c3ef5328c2a9f43f36ebfd0dc968</anchor>
      <arglist>(std::size_t index, double impulse) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afe22c1f788901c3005553c8be9c7a2dd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6228fa5f1e8a10eb63a35ed828bfa5a2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6eceb01c0e7e950e158fa5a46f9325a9</anchor>
      <arglist>(double dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7be803c3e7ce77d01bcf8f96c33d6b81</anchor>
      <arglist>(const Eigen::VectorXd &amp;q2, const Eigen::VectorXd &amp;q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a55ca1997e1be3cfd6e0197ac90d2de09</anchor>
      <arglist>(const Vector &amp;q2, const Vector &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7edea01b4d9e982bd308c49970db9d12</anchor>
      <arglist>(std::size_t index, double k) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8aaadb5f07668e5a34d5f4f2b944e94b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0dcfd0921ececf58033c676472f3f8e1</anchor>
      <arglist>(std::size_t index, double q0) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6a7e404ade71c2b186ab9c72afbf1dfe</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8c3e0f873d2bfd797973d2b04671632d</anchor>
      <arglist>(std::size_t index, double coeff) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb29c90a2439d918beb82731d00901f4</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0b425b68b4b040ad7d68d6a52314c810</anchor>
      <arglist>(std::size_t index, double friction) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ace08d84bb1e048b8cacfa21ae5cc5b47</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a89bdb5e079ef5ef36362f1111c90f911</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4d0ed6515f3b54197bd7d3e24a332035</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa6ece1460a81727104f716b4ff6fea45</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>const GenericJoint&lt; math::SO3Space &gt;::JacobianMatrix &amp;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac35806976c9d4bac42246b650d7d60c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual JacobianMatrix</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb38eac83601e62c86da2954d0fa6229</anchor>
      <arglist>(const Vector &amp;positions) const =0</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobianTimeDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2b26cb2bcd5234808e46cf1ace4a5c63</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const JacobianMatrix &amp;</type>
      <name>getRelativeJacobianTimeDerivStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af3a6ff49d31d9ce7829f2df717efab86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a0443a07b573a10879daacf1900730a8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>convertToPositions</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a8aa037cb97bb24b53477e0d13f37fcfd</anchor>
      <arglist>(const RotationType &amp;_rotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a114b04d9dd8169a864e01da755eda5ee</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>convertToRotation</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a1a64743339e6c4733bbef5faedefb11e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81106cf3d83e42992e60d19a6feb8bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BallJoint</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>af4573d6481c92d10d3e08fdb3ac16b27</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>afe4a1631ae64661cd4f19b718b93cb17</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>ab5b19daf7d07c0f6b699adb0719ad7cd</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a87dcd85816aeffd1f1a5aaeedbe07946</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>ac3a867a920b261b883177d185adc8b8f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a5d3fe3905382d55aa3407b35e8f7ccf4</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>ae509c1467a916ec7cbcceb52a1e9aab2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getR</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a58a79f9ec4afe3b895efd664cf3edd51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad744bdac6c626ade6d4ced294e0dbcdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abdc708b0fa38eea703b6c2b25e680577</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e74770ca664e0aceed8023fae2a7753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae4ca237cb453284ca5a4843ce0c70a10</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae35d4b29954c549ebf5c621ebfde6e55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativePrimaryAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f3541ab51e26f9a6f00b70de916cba7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5693d3a926198146fd184191e1bfe667</anchor>
      <arglist>(Eigen::Vector6d &amp;vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ca12fa08835c599d8a6be4d898a9696</anchor>
      <arglist>(Eigen::Vector6d &amp;partialAcceleration, const Eigen::Vector6d &amp;childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3fdb5d24f5f0a5187944b451af88f68e</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad7adf7c47fbcd03cc582cf86d11eb8c6</anchor>
      <arglist>(Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a54ca1558aa00bb19a51721a33db4f145</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2f520873b892ab4f5f9d1f7a5c5441fd</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertiaImplicit, const Eigen::Matrix6d &amp;childArtInertiaImplicit) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e15407a0387b67b8c39a075adf2f851</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a249c70e9db2fd0c250dc6ff5b2bd7207</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acbc422800715340aa7635ae535df88bc</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce, const Eigen::Vector6d &amp;childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeab2b61ca97501cbf7057024c377121d</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasImpulse, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6011c89b72a200e08d6d92632ef478f1</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1232b652a7763e11e445a9d855a682be</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa0cd8e3625c2a2398f0236afdb31419c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abe97b43cd57c209fe35ac73e4f8158cc</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a331c9dcba3ace1d818e2f62e68a3a7b4</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d9edceaaed0915c6b5f2c7fca01b161</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForces, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a15b8b58fa6a8222215e7e2d1e1bb35a6</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForcese, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aba2cbf2472754a730d7b8a2022bc17a7</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9b52a8a7922c399b5ffc233aeef5e40e</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6da9c563c626c5777c366406292096cb</anchor>
      <arglist>(double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af19ec6cf064e7e6effbaa1349f5eb0fe</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a925acfefe37823a98f40901cf5c575a1</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af6206c4544c095a944e39bb9bf399456</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af256acd666692cf51831971ef2155aa1</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab7bc4131dcd3e2cd423ab5acb738ab1d</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acefd31a0913e34d7e82735b15b6e3ccc</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6c950bee49174a19122cfbc383131f0</anchor>
      <arglist>(const Eigen::Vector6d &amp;spatial) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mR</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a9456934b38ce8d6a3f59704a909ec18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, NumDofs &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3491b0d1a3f09f41789001d4eec77817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1cbe6fd5a2edcd4a58469b1a395e3852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad2496953acc6dd5ce926b19a582d5308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4530f4ac2b08bde706908cbcd75208c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac427840c47eecd6143f156dc00b7cc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90e09106897395febf5346283839b33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d4729d67f1b8bd09222cd1af03528c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae0f8f270603b17142763e62187f857d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0eb851e094d5899a52f14514dac3e752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5d317587b9a874fa8e927145ee429833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a11f84a31fd25f6dbb3fcaa683c24c994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abfc60c844e4f03af9f77fc657bb4f46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::BallJoint::Properties</name>
    <filename>db/ded/structdart_1_1dynamics_1_1BallJoint_1_1Properties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <member kind="typedef">
      <type>typename ConfigSpaceT::EuclideanPoint</type>
      <name>EuclideanPoint</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ab2327cb9ede35862e564ef6955e166cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename ConfigSpaceT::Vector</type>
      <name>Vector</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ad750b77a3c9ac4003d37f4d60fa618bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; bool, NumDofs &gt;</type>
      <name>BoolArray</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ad6a0393d267f8c3927a6491d99c02b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; std::string, NumDofs &gt;</type>
      <name>StringArray</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a7568cdc6919bd4f6fc9e501752ef2ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>db/ded/structdart_1_1dynamics_1_1BallJoint_1_1Properties.html</anchorfile>
      <anchor>adc940dc69dbfaf6e94212c57dba2e49b</anchor>
      <arglist>(const Base::Properties &amp;properties=Base::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>db/ded/structdart_1_1dynamics_1_1BallJoint_1_1Properties.html</anchorfile>
      <anchor>aa761f3766ac5ba7330fc2c10488327f9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Properties &gt;</type>
      <name>createShared</name>
      <anchorfile>db/ded/structdart_1_1dynamics_1_1BallJoint_1_1Properties.html</anchorfile>
      <anchor>a509429885b645d5a3a91caf4adf30afa</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</anchorfile>
      <anchor>a66f16840ca66f1546f9c6d2fd442f3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mT_ParentBodyToJoint</name>
      <anchorfile>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</anchorfile>
      <anchor>ae9df26986678236e90a31f889aebd1db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mT_ChildBodyToJoint</name>
      <anchorfile>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</anchorfile>
      <anchor>ab821f24538d4da2e38efd8d84588049d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsPositionLimitEnforced</name>
      <anchorfile>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</anchorfile>
      <anchor>a7543b9c19cd45fa54529ec0a4aee4990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ActuatorType</type>
      <name>mActuatorType</name>
      <anchorfile>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</anchorfile>
      <anchor>a7ccdb96b4f4dbb9389b8252252db095a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EuclideanPoint</type>
      <name>mPositionLowerLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>aa4d7e06113ecfaf4a8a5976dda1642f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EuclideanPoint</type>
      <name>mPositionUpperLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a0eeb9119012fe814ddc0fb22228242db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EuclideanPoint</type>
      <name>mInitialPositions</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a8da9a8d55ec9de2b33a21c8ebe8a4125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mVelocityLowerLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>accbcbf0c066ada35fecb66bccf25f1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mVelocityUpperLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a4305dcdf9ac1d67d240914cd2ddc7e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mInitialVelocities</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ad9e8c0a448074ef3282c0c57f29bb9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mAccelerationLowerLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a06d43dbf06642ee4f5a6f2fc54fe14b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mAccelerationUpperLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a72fb726ca6b6e525613b14ff7f3834cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mForceLowerLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>aaca0b4730cf0fdb9a0e343b0245c0b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mForceUpperLimits</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>af667440e3a64d66906b6c63f6b770fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mSpringStiffnesses</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ae44a5592d680713b541a590132ff384b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EuclideanPoint</type>
      <name>mRestPositions</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ad147835511b5695f6b34048ccb197e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mDampingCoefficients</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a82004a93517e9424f839b4e5a8a3cf30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mFrictions</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ac0e3d280d052b10204606f2f80b2e919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BoolArray</type>
      <name>mPreserveDofNames</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a11e070d1eb7bef9d9bf67151e1328cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringArray</type>
      <name>mDofNames</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a4ee4d32ea0d9a4406ce6642a74d6747b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ab578b680e99b1f276fd2fd5a4b097458</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BodyNode</name>
    <filename>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</filename>
    <base>dart::common::EmbedStateAndPropertiesOnTopOf</base>
    <base virtualness="virtual">BodyNodeSpecializedFor&lt; ShapeNode, EndEffector, Marker &gt;</base>
    <base>dart::dynamics::SkeletonRefCountingBase</base>
    <base>TemplatedJacobianNode&lt; BodyNode &gt;</base>
    <member kind="typedef">
      <type>common::Signal&lt; void(const BodyNode *, ConstShapePtr _newColShape)&gt;</type>
      <name>ColShapeAddedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abba79bf32000a92f88ef6c8ea81993b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ColShapeAddedSignal</type>
      <name>ColShapeRemovedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a037c418c74becf8c9089a7e0fe37bea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const BodyNode *)&gt;</type>
      <name>StructuralChangeSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af7bfad7a867c6b66d47f92e5f819d6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::Properties</type>
      <name>CompositeProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a326a10b56fdcebbd9290a9c4214b0170</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::AllNodeStates</type>
      <name>AllNodeStates</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a470e106c90c1671573b9813a29b11347</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::NodeStateMap</type>
      <name>NodeStateMap</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0adbb0b3f55baf09a4d4b00ee21a1866</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::AllNodeProperties</type>
      <name>AllNodeProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a476367d0450e1f54d0618bdf81697d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::NodePropertiesMap</type>
      <name>NodePropertiesMap</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa4e8681ded5f9003a32b96f81a41b298</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::BodyNodeAspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a19264fe44df6cd41626b408ff5952ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::MakeProperties&lt; BodyNode &gt;</type>
      <name>Properties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af57edbc25b171ccbb0fd2fbd5ae2ab12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const Entity *)&gt;</type>
      <name>EntitySignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab332df71302a880dcdc570ebdd452bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const Entity *, const Frame *_oldFrame, const Frame *_newFrame)&gt;</type>
      <name>FrameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aa4699d7172811d709b069d584d63b829</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const Entity *, const std::string &amp;_oldName, const std::string &amp;_newName)&gt;</type>
      <name>NameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1ff3fce90beff5cf6f5abda6c4dd1b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::MakeCloneable&lt; State, Mixin &gt;</type>
      <name>MakeState</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a743625bcde208b383bfe773442f0aab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::MakeCloneable&lt; Properties, Mixin &gt;</type>
      <name>MakeProperties</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ad316e3b3aaa6368ee5758a67c4f468a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0b08cc4e8bd99d943d29cd956477f371</anchor>
      <arglist>(const BodyNode &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0c502a6125bf3ecb4e7b30f6907e7b46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SoftBodyNode *</type>
      <name>asSoftBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9540ffe3ac07dea023f4a5faf10fce28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const SoftBodyNode *</type>
      <name>asSoftBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8ca72f3c4bf4c68b2d698c25d4001ac0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllNodeStates</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab9ddafcbb33d66a2d696619209a9a998</anchor>
      <arglist>(const AllNodeStates &amp;states)</arglist>
    </member>
    <member kind="function">
      <type>AllNodeStates</type>
      <name>getAllNodeStates</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0b4ff81957de0235817f8e2f1240c29b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllNodeProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abe4e9d55c78dcf64a1c169cd208f3304</anchor>
      <arglist>(const AllNodeProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>AllNodeProperties</type>
      <name>getAllNodeProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac0bcd046c979ba94ba45680da19b0fda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1fb2871912b8c7f66b45080fd7b438e0</anchor>
      <arglist>(const CompositeProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a93fad391c05a9e94ae0ca7783a540977</anchor>
      <arglist>(const AspectProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5d59437972e0e635f0c1d765a81b35a3</anchor>
      <arglist>(const AspectState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6e0d6dba03057969826c069c0cfc81fc</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getBodyNodeProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>acf152618191ce3ea2ac701bfb4b3f6d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5afe4ab9cb57c8a5181a401fd69f8dc2</anchor>
      <arglist>(const BodyNode &amp;otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a396618ddee8564f890a5a2a2d65e71f9</anchor>
      <arglist>(const BodyNode *otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>BodyNode &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af329db481e8fd6d5a9870fca37dc5ff1</anchor>
      <arglist>(const BodyNode &amp;_otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>duplicateNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>adc72f55dc2c3e25c507508470d10f22f</anchor>
      <arglist>(const BodyNode *otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>matchNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a31295f3bb7f50c16255106782a22eb9d</anchor>
      <arglist>(const BodyNode *otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a167eb9f10bd4ae23db496942d2a989c2</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a09b46acc37016dfba21c23c366b087cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGravityMode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7c78f59d4b313cf9ae2325516bf906d6</anchor>
      <arglist>(bool _gravityMode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getGravityMode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3c3af0cab7879cc19b26104b3f7f4a71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollidable</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac8b945fe1a33f4083500c459d3ea7fda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollidable</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7f4e06b90d81f8eb6cbaf2a45c2f9c56</anchor>
      <arglist>(bool _isCollidable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afef45314364eed0cdf9d42b292fbb9ae</anchor>
      <arglist>(double mass)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af8f85c76c8ed578a14f118d5e41129dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMomentOfInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a90408d97fdfaa881a91f99a8a1c72ebe</anchor>
      <arglist>(double _Ixx, double _Iyy, double _Izz, double _Ixy=0.0, double _Ixz=0.0, double _Iyz=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMomentOfInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab45666af00d9845259d293be096e24e2</anchor>
      <arglist>(double &amp;_Ixx, double &amp;_Iyy, double &amp;_Izz, double &amp;_Ixy, double &amp;_Ixz, double &amp;_Iyz) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix6d &amp;</type>
      <name>getSpatialInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abef5d034f65c1837a8584fc444e02d83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afe2061c6422f6cf2e5f4247b4186ee92</anchor>
      <arglist>(const Inertia &amp;inertia)</arglist>
    </member>
    <member kind="function">
      <type>const Inertia &amp;</type>
      <name>getInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6c14b9cca4d2914db86055aa5546f862</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Inertia &amp;</type>
      <name>getArticulatedInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab7e760fa3b69166dfabe6d6718a5b580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Inertia &amp;</type>
      <name>getArticulatedInertiaImplicit</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5f4837fc8894fd7ed41a9bd011b32c60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalCOM</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a766a4e1784fc26e644797603f079b867</anchor>
      <arglist>(const Eigen::Vector3d &amp;_com)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLocalCOM</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae97605978ececa849e871b442144bafe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a975844aaa7320e157c81caa478f60f71</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a86bad14269a115572ab87b14a186fa07</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>adbabdd3ba03642e3137937aca0b25458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a58f2b547ad694722b54e58197d7fc14c</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af6230cf662dfed108c6eeb32a226e36c</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a98635b410291ff0692672f746ac1b7ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac760740a4536a6aef5916a81b20516d3</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrictionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7f3d878292be0083e16f7dbbb2020371</anchor>
      <arglist>(double _coeff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFrictionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a52a851a4a8497ba80da82d9f00276b18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestitutionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a857574b223162ae206b644140f65be1b</anchor>
      <arglist>(double _coeff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestitutionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4022c8dd16d3a413c1d017d57b54cdf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aef58394f50c12cc642780ea329f32d62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a431c8e06d87fd1e21d04f6ba4334a6e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa5aa31f1e3f6cbace13ea8eb0e2caae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>remove</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3a7c92bc7b6040350d5b9527bd32be5b</anchor>
      <arglist>(const std::string &amp;_name=&quot;temporary&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7e70da1efffcd3b13de641e4bc2e36fa</anchor>
      <arglist>(BodyNode *_newParent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a13e6fda5d2e71ea47261377083372c07</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent)</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab453bc5f43090f0a66234403c3dbdfab</anchor>
      <arglist>(BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0384451e895820851b91a6971a8d8f7d</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>split</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6deb29fd8d4108b09ba695d437cdbb2a</anchor>
      <arglist>(const std::string &amp;_skeletonName)</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>split</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a41d0134b4b879c78497fa270dccb8144</anchor>
      <arglist>(const std::string &amp;_skeletonName, const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>changeParentJointType</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4c404182169d9585095ab734e3269ffe</anchor>
      <arglist>(const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Joint *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afa638f3d4854dba8c63dc0cb0b765e32</anchor>
      <arglist>(BodyNode *_newParent, bool _recursive=true)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Joint *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aab8ca63286b92d07e52c6e52eb5e7627</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6878601d36771bebc31ba1943b934445</anchor>
      <arglist>(BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties(), bool _recursive=true)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa3dd427cffacc4489d473ffe8d635ca0</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties(), bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>copyAs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af670ea8f3769ef013219fd3cb4d2102c</anchor>
      <arglist>(const std::string &amp;_skeletonName, bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>copyAs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a54ab03afe846e168f9f9f53fe7c9d539</anchor>
      <arglist>(const std::string &amp;_skeletonName, const typename JointType::Properties &amp;_joint=typename JointType::Properties(), bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a380e6e396c9363b4230d45207c80be6a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a95afec3d5d4d1332f88ddde4083a4dd6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getParentJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1a834f7e603559f8dc279300ac9b7f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getParentJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af3cc72d08f1892c6df35b0e567427f5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9f179a8c938173842d764995eebfffb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa5504dc0d997c94f4bcfb32e5b0ee806</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, NodeType * &gt;</type>
      <name>createChildJointAndBodyNodePair</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a56995772455f55b16a577625ec84e660</anchor>
      <arglist>(const typename JointType::Properties &amp;_jointProperties=typename JointType::Properties(), const typename NodeType::Properties &amp;_bodyProperties=typename NodeType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumChildBodyNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5bbe42e139acee5e3db51ceb5d7bd581</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a03bc2f676a3beffa2d5eb9e71cee591e</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abbf721994d7a401b554774651eac1db9</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumChildJoints</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8b40b4588991c165e6b8b9eca1f34dc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getChildJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a18c6a2fc73ffcc328cf62ccc403521f4</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getChildJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4630ad97b971a7099fa38d8b52b28ceb</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>createNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a64839dab6e7656905233b2875f4c2e43</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumShapeNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aec26f41b57910601c7496956a6766ff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9aaa200ef4f86f49dbe411b969d66bc9</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0f18b24da7b5d11d6fa7ed5ace57b8ac</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>createShapeNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a37512ee3ebe1b56f7bf153d97e12b99e</anchor>
      <arglist>(ShapeNodeProperties properties, bool automaticName=true)</arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>createShapeNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aacdfa249571d8c95481be955dff8d13e</anchor>
      <arglist>(const std::shared_ptr&lt; ShapeType &gt; &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>createShapeNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a677dc62b734b5952eb50401d03c1c6ec</anchor>
      <arglist>(const std::shared_ptr&lt; ShapeType &gt; &amp;shape, StringType &amp;&amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ShapeNode * &gt;</type>
      <name>getShapeNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9c2ca44f4dd2b735e5a0980941ae51c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const ShapeNode * &gt;</type>
      <name>getShapeNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1559da15280b27c25c0f63e32ae96a31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllShapeNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa486d65e40842b1beb522ceff8a914d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>createShapeNodeWith</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a94919183c1ce67d3bdaf632693774ecc</anchor>
      <arglist>(const ShapePtr &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>createShapeNodeWith</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4117d90384fafe30c49c398e29a5ff89</anchor>
      <arglist>(const ShapePtr &amp;shape, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumShapeNodesWith</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7fb749b012abf113aefea38f8087b06b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ShapeNode * &gt;</type>
      <name>getShapeNodesWith</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4a1432bd4c102d666454d08a8a6dfe78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const ShapeNode * &gt;</type>
      <name>getShapeNodesWith</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8099942cc5859cb3b17f9a5bdce93251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllShapeNodesWith</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0b32240c08abe924bd8ccfddaf31d6bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumEndEffectors</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aecf6791ec050b306371ca848636fcc62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aebe37e674c733c6906aa767d67227885</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac2a21f0666ae19e69673007eda521b28</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>createEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab1f7b2f38e352ce9df125ca10c834594</anchor>
      <arglist>(const EndEffector::BasicProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>createEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a75efe36e5bf5e39bd9a1afb2f15e9445</anchor>
      <arglist>(const std::string &amp;_name=&quot;EndEffector&quot;)</arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>createEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a67d84bba6cade132f6ed37d27b1eb1e5</anchor>
      <arglist>(const char *_name)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumMarkers</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4641c2e8a9775fddbfa3741a1e7403ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>getMarker</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3aae65b02714814815468f8566adc8a9</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Marker *</type>
      <name>getMarker</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abbd4290d115b5f03b9447f92a318bc39</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>createMarker</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1701788d291f0a089fcb9aebe2c0d7d7</anchor>
      <arglist>(const std::string &amp;name=&quot;marker&quot;, const Eigen::Vector3d &amp;position=Eigen::Vector3d::Zero(), const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(1.0))</arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>createMarker</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a866e17cd4739e44f8989d103a794ea66</anchor>
      <arglist>(const Marker::BasicProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dependsOn</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>adab8e4e6a24800aedcd4973058c666cd</anchor>
      <arglist>(std::size_t _genCoordIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDependentGenCoords</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af6c97f000f97ffc417e65608fc0c9b5e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getDependentGenCoordIndex</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afdde23314babc558ead0d19758b9e7de</anchor>
      <arglist>(std::size_t _arrayIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>getDependentGenCoordIndices</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a51b5b11ce3489d36c66a771be52ccefe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae3b604075a37188c6e623d17f6f61be0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4c0f06a48b3a232b31c315e172e57184</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a14db44732027d5397d9fc026f1f7857b</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af5e97ff03bc4c44d7db63d6fbe09dba7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac894042473c828387cbed4f7429b112c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getChainDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8d5f63662b1c8fc5183ff68a8e0191b1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5d08e4e279c585e070790f1f594bd2a5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afc66d8ea5bccfbb75e9fe633d434deb7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9c528aea879554f31115a2c841cc3fa2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9bc8cdb94436ea991bddce56a513cf41</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4dfb633efee7db996e5823f433b1d201</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa7e99dc0e6eeb4d062c0997b50508884</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getWorldJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5c200c373121f6781c8b3087308ed8e9</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aaefb42c9da73712f4498f7c0c2deeb1b</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a14c15810af75be3294baa7da00614967</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getBodyVelocityChange</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2587e5d36ca364d5abfe5310f0467a0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColliding</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a85607f15b8a1926b68efdd3935b9facd</anchor>
      <arglist>(bool _isColliding)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColliding</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a261b29ae8872adcb6a0944ad0c0e534e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4332e12156d1845039b89b05eb0c136e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_force, const Eigen::Vector3d &amp;_offset=Eigen::Vector3d::Zero(), bool _isForceLocal=false, bool _isOffsetLocal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aecadf275cda4f6cad395e4e0f5fc58a5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_force, const Eigen::Vector3d &amp;_offset=Eigen::Vector3d::Zero(), bool _isForceLocal=false, bool _isOffsetLocal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtTorque</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad58bad9a2b71b4f216a0c5da6a7f3efc</anchor>
      <arglist>(const Eigen::Vector3d &amp;_torque, bool _isLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtTorque</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1ec55b0a0bf4a06a85c521f7705a50a3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_torque, bool _isLocal=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearExternalForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2dcaa23587f44597a89ccf2ca867eb52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearInternalForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3c5d7e2a2c8da2a9a862ae2c84b50548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getExternalForceLocal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6b8dc588ce4ece5df435b62a15106647</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getExternalForceGlobal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6b96a42d2328c65cf357872b4f9002a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getBodyForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa22300784c8a11eff3f2e47ca81637cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReactive</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4e0cc4563ca391dee223d014e5ce6454</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af911163885ad67e7ff33ff3dc5a39a78</anchor>
      <arglist>(const Eigen::Vector6d &amp;_constImp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a02148a7e919dbac7b020cf11af3127a9</anchor>
      <arglist>(const Eigen::Vector6d &amp;_constImp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae32a15dd2a04eab0c1329ada65d6e1d1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_constImp, const Eigen::Vector3d &amp;_offset, bool _isImpulseLocal=false, bool _isOffsetLocal=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a32ebcfea04b07480db84aefcd3081407</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a29dc788b3ca557f612e9408737521646</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeLagrangian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a088474bd7e6ba5705dc97b3ad6444836</anchor>
      <arglist>(const Eigen::Vector3d &amp;gravity) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getKineticEnergy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae017b4eeab6e96f7b706f99860fe0190</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeKineticEnergy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a05ade8ebd67bd3457c904236737b4dc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa8e9e12835dab655152d2f1de4ed3261</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2b757c18f38d6ed87ceb63f75ededb09</anchor>
      <arglist>(const Eigen::Vector3d &amp;gravity) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearMomentum</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a69296995610fc03fdba7611ba49d8c92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularMomentum</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac1ca4998f971b35ea16a2a3455f92e03</anchor>
      <arglist>(const Eigen::Vector3d &amp;_pivot=Eigen::Vector3d::Zero())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyTransform</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab61397d4f4c2e6e009fa88e1502fe5b4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab0edba3a383a59b9a5939897b1e90e5e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a235e44df54f494cc3a8d9ca8e922ad9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyArticulatedInertiaUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1118bb5fbc5f7028575e588e5a7298db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyArticulatedInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aed17422a819e8303e21de1286fdfde69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyExternalForcesUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab58b32aabbbdf50b2563a74bf56923af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyExternalForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af4b1cca57440efd226b027bb22535a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyCoriolisUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2199bcd7af128fd8069db670b15ef139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyCoriolisForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a06c775729764000f82fccee969b0b78e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a8fd81cc04ada6b02ed7c4842fc30f7f8</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a531b80f05b016b0915a4f5e7603ec927</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>afb371c7e47a231166aca6461d7d381eb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af3652e978abed8aa00a5b8e614757ac0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac89ab3e414a897d2b4920b02b06956ee</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a81a6b3668f4b4fd634fd09e8d2fbf06b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>aabb89db808e85b02daf5139e2bcfd819</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a700632cc2ff39a87c2d6e065f2c0084c</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a0d95daa11cd05b002167aa73837b7ba4</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a9b524b02e9c31a3465f7959470c00524</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab733691474b95a7dbec5e31dca1f6b35</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a80d6ff9dc602068fc0cfd539ecd60c21</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab1510f2aa590dfb41eebd761d242792e</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>acf274904bcec4c31e5f9e498ac3263ea</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af57f99782db722f589751f88e1065d6b</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; InverseKinematics &gt; &amp;</type>
      <name>getIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad625e8db7a649bd9c9d6502add43fb55</anchor>
      <arglist>(bool _createIfNull=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const InverseKinematics &gt;</type>
      <name>getIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a435970ec41a083eab79c8d4d7c59fcfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; InverseKinematics &gt; &amp;</type>
      <name>getOrCreateIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a8c4f6611187977b8ac6f77823b2fba1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; InverseKinematics &gt; &amp;</type>
      <name>createIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a739010d24becd440fe6fe41b98140ce8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aed02db81d0e67a2ac05df23fd813ec92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyJacobianUpdate</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aafa0012f8fea007dbfb708a756c51b3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a9265621a16c3a02bb9516d6093929757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyJacobianDerivUpdate</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad2b87d518644f9804335384c2008c8bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyJacobianDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ab4149d4cf2562f4928ad302d87cd8755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getWorldTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae90b9401bcdbdbbbaa4dfe280ce94769</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aa78f1921a5743eaa9af041b1c71a60b8</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a9befce37ccf4c831ad569538fae2b057</anchor>
      <arglist>(const Frame *withRespectTo, const Frame *inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a51776674c6eaa08d8014440513904958</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af2a2c3e7c27a0bbb09205c5fa085749e</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aa9072a90944c917e03da4b435d5401ce</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a36222eeec6097a502f638e8644d53989</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a751a640d050f860a64fa1a72d8ded34a</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a48fcf199aceab5e81018e562344a8255</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a55d2e26a410701f1ad9d00a7ce596e2d</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aa167319969b147569c67ade05a28e6ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>afa22c6acbec15979674a60405104f275</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a95726a0e48fd5f72ec912bf7fc81781d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a43d136c2876bf85f3bfcaba14511a6a8</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a0b2c43c79b40ef5d7d19be39ed7094b0</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ad60d3dc2ad85ab00af59bab96da618b7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af2aea6060c7be8408001d82ad654f062</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; Entity * &gt; &amp;</type>
      <name>getChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a282869ec36877e519a5fd52afa2fd37f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; const Entity * &gt;</type>
      <name>getChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af7b7047e2c04f15749b1cc87ad600f48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a7a99516915e4700b0e14a1c9408533f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; Frame * &gt; &amp;</type>
      <name>getChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a71d04a6a68ad292992b5d9dde3758c56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; const Frame * &gt;</type>
      <name>getChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a5dc7c0d7506c1ed4680690e35acb5c16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ad966588e11423b064e7ec4664906826a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShapeFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2106f505a2ac7dd03969928dc59f9dbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ShapeFrame *</type>
      <name>asShapeFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a14c965cf0bf138f4ad4dab22e941029b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ShapeFrame *</type>
      <name>asShapeFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a72333568b459a7113e409b4f37578558</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWorld</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ad21e049e9bac9c61d69a5865a50852f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Frame *</type>
      <name>getParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a10c4c8b43980159e9bb8570ba50f0da6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Frame *</type>
      <name>getParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a9fa665e65bc5d84c75ca058d1f3095ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>descendsFrom</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aa04f3ce00045e926c7c87c33affcf9b9</anchor>
      <arglist>(const Frame *_someFrame) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>acb790b0d5c01f9e3c393e01b31802dd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isQuiet</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ac29c9312055acba0453bfb1b13d35c1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyTransformUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab67377987c332b0e8158b16ed204ea1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsTransformUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a42aeb59b1bc894f994e5dcadf81c1c70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab116df52d83cb7b6edc3b3f9b1bc96ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsVelocityUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a815d2334f52d850e8b4658f692bf4126</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyAccelerationUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a618443c8bad16c985f432897381396cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsAccelerationUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1d79f755abc93dceddf79200f9fd46f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNodeState</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a81a7de31a6a67ccfbf826601d411fe39</anchor>
      <arglist>(const State &amp;otherState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; State &gt;</type>
      <name>getNodeState</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ad47cd6aee9ff69e24850017082aa443b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyNodeStateTo</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ac299f2f759197c20b2d159f8c6a99b24</anchor>
      <arglist>(std::unique_ptr&lt; State &gt; &amp;outputState) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNodeProperties</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a5f7367a8dedfee5dad3e641a31615f51</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; Properties &gt;</type>
      <name>getNodeProperties</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ad06bc5bb777fd2703584fe54c33521a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyNodePropertiesTo</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a8ed4948b74d2f67abca9d97594cd65f3</anchor>
      <arglist>(std::unique_ptr&lt; Properties &gt; &amp;outputProperties) const </arglist>
    </member>
    <member kind="function">
      <type>BodyNodePtr</type>
      <name>getBodyNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0083d0d8e79a5be14d5a01b5686af09b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstBodyNodePtr</type>
      <name>getBodyNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>afd1e2ac39cc519db0636b5a03bd6abfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRemoved</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a6381ebc8c88e055a4907b34e43233861</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Frame *</type>
      <name>World</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a6531fc7ae10eb122b887cb10946bc9d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; ColShapeAddedSignal &gt;</type>
      <name>onColShapeAdded</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4bb327a7ab6844f336ee96d7e3d3dad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; ColShapeRemovedSignal &gt;</type>
      <name>onColShapeRemoved</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0f6394adcc0a70d38ee27c4bba921306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; StructuralChangeSignal &gt;</type>
      <name>onStructuralChange</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8ed16e69922699e5b81580ef26d66ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; FrameChangedSignal &gt;</type>
      <name>onFrameChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a89f99a8be1ca0eb6188bc2304b53dfcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; NameChangedSignal &gt;</type>
      <name>onNameChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ae2c6b33adbe52d11d254b0876d63026c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; EntitySignal &gt;</type>
      <name>onTransformUpdated</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab2bb7564cd388637e5f4a479ed5ee928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; EntitySignal &gt;</type>
      <name>onVelocityChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a7310594d6402a9dca7a886ba14a9bdd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; EntitySignal &gt;</type>
      <name>onAccelerationChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aed12275bbcbca8e518590ea10307748c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructAbstractTag</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a3ad121708fa138cbb8cee29c123d9b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructAbstract</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a3ad121708fa138cbb8cee29c123d9b39ab3f1d69a3074c5b221b7c37f7a5bf3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructFrameTag</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a25b5b95ea4987e4fc165a17f90d327f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a25b5b95ea4987e4fc165a17f90d327f4abc1e3dd9885e9dbc8c5d4da3af679ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>acd6dccaf7d8e34a432ec2a5e173ff4f8</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a39f2f95088abe09c620373f2c63877eb</anchor>
      <arglist>(const std::tuple&lt; BodyNode *, Joint *, Properties &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual BodyNode *</type>
      <name>clone</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9a2d1a103dc5091b997b7f2f7e4b8fa1</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint, bool cloneNodes) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Node *</type>
      <name>cloneNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae55a7508bbf119e56df536a1d3b8a56d</anchor>
      <arglist>(BodyNode *bn) const overridefinal</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af32e7420689d67bfe7220ceb79f3dc9f</anchor>
      <arglist>(const SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0bb5b5622a63dc614d173e03286fba80</anchor>
      <arglist>(BodyNode *_body)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeParentFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2ed3bd11ddad0473f2c3687c7606bd91</anchor>
      <arglist>(Frame *_newParentFrame) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>registerNameChange</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a19b0764de9bc18252a6a230757170afc</anchor>
      <arglist>(const std::string &amp;newName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attach</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0d2e70846471e02c576e1f2e88c5ecba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stageForRemoval</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ad58cf787042834b39c4efe9bd44304f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processNewEntity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a799127a9f4f516d2ce2991d9a3b5b560</anchor>
      <arglist>(Entity *_newChildEntity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processRemovedEntity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af6d16c2a98c2133c3465fec5b2c5d05f</anchor>
      <arglist>(Entity *_oldChildEntity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransform</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a585ca6615f35f4c573a35a6141d25bfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab0aa8672f1952b0138f70278377aba20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePartialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3a7ba5b13a6090d2c3d53f613599504e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateArtInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa19588bac1d7f7953ea47a4fd31e9e56</anchor>
      <arglist>(double _timeStep) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateBiasForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a23a6968918f2cbf3a5d1413c7cd87b0e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5cb7dae3a84a57966c1e41eb450e8758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAccelerationID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad18dc8c54bc95609002b29590d24786d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAccelerationFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2f38cac239902a63a11c1f80df2b737a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateVelocityChangeFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3c5d826b7c36cc75f4b93007a5564b4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedForceID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a41b259510fce78e86c540a2efff456df</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, bool _withExternalForces=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedForceFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad793d5b523b595b2e3e633fbe468fc04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5cd722dc136f4933c6c07ea9d486d998</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointForceID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aaa9a39f03754204edff6f3f7ec13505b</anchor>
      <arglist>(double _timeStep, bool _withDampingForces, bool _withSpringForces)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointForceFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa4748e9d9d0e34ef1cbe93d4acd0a584</anchor>
      <arglist>(double _timeStep, bool _withDampingForces, bool _withSpringForces)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointImpulseFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a76e5c424e1d34c51953c84710dcc5627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1e6bff158a37e795660a972e78423354</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac7b68021b42e780a1a3009d74ba36c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aafd7b9bfb6c0f4cb84e0b468567e9327</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, std::size_t _col)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateAugMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ace04ec234f529d274407d57075b6220f</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, std::size_t _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9a2d786a60e5c782f825482722aa16c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a12a273db0c65c109a540b56c106420ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateInvMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a12c5dfa832ba1939a3e30b685a1caf29</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, std::size_t _col)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateInvAugMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad865a3a2de436a448f0fb86ce0d1b5dc</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, std::size_t _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateCoriolisForceVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a98a7aa35580f985b264d2e0e6ccc33da</anchor>
      <arglist>(Eigen::VectorXd &amp;_C)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateGravityForceVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab13f7a76f549c61af7ec9e4e80f4a377</anchor>
      <arglist>(Eigen::VectorXd &amp;_g, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateCombinedVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a43ff741556625aebfc5e5e4e3211bc88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateCombinedVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae0cd6a9bfaeac7ba37eb016d8a1d70be</anchor>
      <arglist>(Eigen::VectorXd &amp;_Cg, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateExternalForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aff17d73313815405b2d494611421722a</anchor>
      <arglist>(Eigen::VectorXd &amp;_Fext)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateSpatialToGeneralized</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4319ff06a5816181b50910e7adce4058</anchor>
      <arglist>(Eigen::VectorXd &amp;_generalized, const Eigen::Vector6d &amp;_spatial)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBodyJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae0ca78019f5a7acfd27b66e1759a0143</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0aafc087e51c8bf592abab6728496a08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBodyJacobianSpatialDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa79339007fdc17c3b7eaa07a3b10c5a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobianClassicDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6ef799d38c7b48e7460d78da8a66abe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad237b37d53baa7256bf9f158a515c41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsColliding</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0f1603a424339e96a386b4db1cba0f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aae09ae44f404397b0168e94808586a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInTree</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac4cfeea9b0c9aff5d2745c839e29df16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mTreeIndex</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7200a3af0d568a8e710eac17c656d9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Joint *</type>
      <name>mParentJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3ac0fbe1a5566e6f75cfa08178b64602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BodyNode *</type>
      <name>mParentBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a280ec016e7a9136b0f161098c3a552d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>mChildBodyNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4d8f1ca460fa03edf51b64cd0fca9f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Entity * &gt;</type>
      <name>mNonBodyNodeEntities</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a061b223ee9ef17a0c2c3fd67c97427c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mDependentGenCoordIndices</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8a6adadeefa6c943c8f7c3de01c3b4e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DegreeOfFreedom * &gt;</type>
      <name>mDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3f3fd7d6e99d166c8b70badc55023e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>mConstDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a98fdb236bede56eec50647fc9dd74cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mBodyJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aef7157582025f90bacc33095ecdaa7cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mWorldJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa43ae0299745d46a3a2443608240ab9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mBodyJacobianSpatialDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a178b098f1fe6e086cc59cab4f327cfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mWorldJacobianClassicDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af10276f3dc848c7ee218565696ca60bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mPartialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a191c815a9d72c3fdf1e1c99e959e735c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsPartialAccelerationDirty</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>adf5b1666f383840393d7d3416fb24b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mF</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1e90a0ad870961fd6ab76265431646c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mFgravity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aecfaff76502e28eeb3b4db7a8bdac62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6655e9ad881ec774d2e93c586b22ced8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertiaImplicit</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afc0fbe3acd10f643c144de297eab79e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mBiasForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad7a72bc5fa002df0d38a5f37c9e7b2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mCg_dV</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a419af114c4bcba9499a16ad948fc9441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mCg_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac57e023aa4438ab0e79beb24104f1c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mG_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6abc016b0b83d6931e0602b503c477a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mFext_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af53cf5b6ab4a95fe0565d22217fbcafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mM_dV</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa4e3aadace5b16fa50b26da2aec78800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mM_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a244bac2e6dc950b6bf7ed1dae54b71f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mInvM_c</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa112eb1fe9012acb67f41563731312c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mInvM_U</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3b556ca3604e0f9714752d5320da0e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mArbitrarySpatial</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae997246a3dffc11dc60d22ff63ed3a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mDelV</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab417ce330020874e8df8ca8b95416115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mBiasImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aafef66da8da154cc0989ae094eb0de2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a54625f7b3d4e57aa61ae366f84c101a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mImpF</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>add7ea8589802d385e36edbbb6453a324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ColShapeAddedSignal</type>
      <name>mColShapeAddedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac19bf3481c2ad7ad22201dfc5901d779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ColShapeRemovedSignal</type>
      <name>mColShapeRemovedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a29ff916983dbf784320ccaddbba5db06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StructuralChangeSignal</type>
      <name>mStructuralChangeSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a67d7cc1ac274c78b080571abe2af3e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>mSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ac3414be18a9812f62d7b5f845e504150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; int &gt;</type>
      <name>mReferenceCount</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>aad6d17ebace17f70ed6ce8e3cc9a7a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Skeleton &gt;</type>
      <name>mReferenceSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ad81100175c31706da74165fd9ba6bfb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; MutexedWeakSkeletonPtr &gt;</type>
      <name>mLockedSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a400422e72f10c1d80a54dff183d68ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsBodyJacobianDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>abbe4f56462d8fad3c441263156308ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsWorldJacobianDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad6a6d69a44f423d63b839ae0c116ea7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsBodyJacobianSpatialDerivDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a564f48e08d56186e811c627e64991df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsWorldJacobianClassicDerivDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ae896131903056a28ad39280bb4de5242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a4ae0339caf1adf4e83ef565e8164c736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; JacobianNode * &gt;</type>
      <name>mChildJacobianNodes</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1e967204251a4b590b46f7d7560cc5f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mWorldTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a476d3518e3912b2e4ec72f4ee4c229db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a998dba8b9a76cac9df26dee76a11aeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>afc58a2afca86b1629ad00fa4888ea67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Frame * &gt;</type>
      <name>mChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a5c6fb9d277328a7f383124d903f252bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Entity * &gt;</type>
      <name>mChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a017f7a11835dadf9ab5155fd9fc3616e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Frame *</type>
      <name>mParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a5cec7baa6bc3c423742d36e14e99edee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedTransformUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab801c61fd3438c6a916be8264d1ac6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedVelocityUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ad14eb572f3b82efee46ea88c3f46b0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedAccelerationUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a91cbe1081892564b1f84d2d09470c93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FrameChangedSignal</type>
      <name>mFrameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a3c139811e7f4cfc361a868fac330c2ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameChangedSignal</type>
      <name>mNameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aadfdfede108bfa24d07cdd9920bf64cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EntitySignal</type>
      <name>mTransformUpdatedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a6714c8e1ce5b89d01ad6bea5894d7ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EntitySignal</type>
      <name>mVelocityChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a7b6717c5b297dc3f65519eef2615c559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EntitySignal</type>
      <name>mAccelerationChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a11c38bdf0fafb4c16bb17c17676b0522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; NodeDestructor &gt;</type>
      <name>mDestructor</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a6729f60f63bb95d26f4a1de37995fd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a9a2ecc7d4a7224b2e2c4d0fa4a062282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAmAttached</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a3b3225fa67667a0afa1ab2a755860cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInBodyNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a871c164de3408d62e8d3c45c1d0dcae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::size_t</type>
      <name>msBodyNodeCount</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4faaf58363d48cd42f3746cb9309cd3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>mSelfDestructor</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab3f81018e4ed78b0481553635ba89e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Joint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2b27269e818d7b63995be0e0f812bf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a675c233a38e7db8b610228796a2a5591</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PointMass</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2891ad00d7d39eadfb0738378a56f5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Node</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6db9d28bd448a131448276ee03de1e6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BoxShape</name>
    <filename>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>BoxShape</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a5cc09d23451bc597526bca46d2493e65</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxShape</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>ae26897cfb3225572170f4ae649541a00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a6e83a39df7f1397a9794141dec34c379</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a1eeed4a6cbd8f2aa23d75120f854b4b6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getSize</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a32499e9f5d57dece0e1a4d12577ba12e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>ad83d21233593bc863a07fe8fa53c3eba</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyAlphaUpdated</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a3e65a047d1139d8929a750740d297231</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyColorUpdated</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a7e4cfc32e34e739317e27a90a1b6dad4</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a403850a9aa41267b303c68cc9342e0ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeVolume</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a40f16a7dddd0ddf3c62958374e459e75</anchor>
      <arglist>(const Eigen::Vector3d &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a89a3de7af81cf1794768bf2a20028aab</anchor>
      <arglist>(const Eigen::Vector3d &amp;size, double mass)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a571aac2a83280c7159cec464d1fb3ef2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a5651dd172b59869c331092fd605a5818</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mSize</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a373340b90b4093560753c534d55ada3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Branch</name>
    <filename>dd/d80/classdart_1_1dynamics_1_1Branch.html</filename>
    <base>dart::dynamics::Linkage</base>
    <class kind="struct">dart::dynamics::Branch::Criteria</class>
    <member kind="typedef">
      <type>common::Signal&lt; void(std::shared_ptr&lt; const MetaSkeleton &gt; _skeleton, const std::string &amp;_oldName, const std::string &amp;_newName)&gt;</type>
      <name>NameChangedSignal</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1ddbf3d540e1d9ee7398c51a14abe594</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStillBranch</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>aa74e32f364be8a3ac8a91a98f4c941ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAssembled</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>afc5953ded253e44e5839830be4fe344d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassemble</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a50eca25d3461245bff7cdd6ef9f7bc6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satisfyCriteria</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a8def9d3515deca5d03a49425fb80c853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; common::LockableReference &gt;</type>
      <name>getLockableReference</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>afb3d059ad878f22e3c7e635f069994fe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a0174eb5b11f6676f9e8a49b15df8d47e</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a3636f5137b591ca4f388cf04b5088231</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumSkeletons</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad91b00a42233f8907a790cc2f2d2442b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSkeleton</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a08164ed8600b38d03d1779394780531e</anchor>
      <arglist>(const Skeleton *skel) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a51590c78715b7b5d1ae731fb6fcb8e68</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a942f6849801d013094fe4a8307b4eeff</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a1147054a5b3a3568cb9e9ee1101d002d</anchor>
      <arglist>(std::size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a9c6608c91c4f4048843f79f7a27b84ba</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af2673ab072f5569dc3df270d81075861</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abb92eb609f7b1f2c3b43281efa8d1eda</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af3a5ae0bbc99a18851832b56d0ed8646</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>getBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a8de452031f7bf294f8b0b4c89e9fa97b</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>getBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af45758757855ce13b6d69690b38cee5a</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a1ce87480a2e0d516d8bc9b6b35bc2d19</anchor>
      <arglist>(const BodyNode *bodyNode) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>afa366d1d064690ae46b95dd9af987b1b</anchor>
      <arglist>(const BodyNode *_bn, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a740d45214f78a88928e730e3213ba01c</anchor>
      <arglist>(const Joint *_joint, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a630a33d0845334e27a249d038fa98d8a</anchor>
      <arglist>(const DegreeOfFreedom *_dof, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumJoints</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a47c91a60cd7510f315dd0aa9e43f8060</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2388df0bffb265b32c26068c09c3c872</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a73ca2c83a71e5cf22a6345a8b01972e6</anchor>
      <arglist>(std::size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab7a44427a882f3dfb765f54a079855cc</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a4c7ce83353d508f29cb56d21cce650cf</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a1714162ebf9472134a2861533ef72d1b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab6064eba922634a9ee4a74a4da4d19f1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abc752104432c8a2018b3aa842f57659a</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad573d8740e417a9a7f96e30e4ac5161a</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab20f207e3df80b1f301520af48ccff00</anchor>
      <arglist>(const Joint *joint) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aae46430ccc0fe13b7db7e906cbc89b9c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abb7340dd41f73ec33920d9d95a80b368</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a88434cc937bba1c2010b4507a4e81ab8</anchor>
      <arglist>(std::size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a239cafbed2d21c762f85001b01c7f088</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae9dda8d7c8a4ab5a679052a2f242058a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a5170a2f0c7daf8304e67a9b38629acf6</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a487a4ec4f2a39cf0f60e7cbc2949c291</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a544b63de3fc8ca1028afda654aa18f55</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a6d995ff98234e5b21ffa48cceff3a387</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2dd2740ed742fdc4883db8842f9c40e0</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a6bcbac764910e439edddb8e67ed09732</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abafab57306b3061ca1623c1c18185003</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2dac01542cfe56e49b3449001aae262d</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a8407f5b662dbedad44d3bf4b37ab7ec4</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a86e1948d4eb91796b0d510eb89f9a7ed</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa3850d2bf9d76169a6f3ec2ee83c9f69</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a0b47fba262d46c2b54eb712f2d360615</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a61aa1b4ba51e78630f1a427721899b94</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>afb85fa6e8bd17d4c266fd1854152ce46</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f040c9359f3c320319e9ed3726be3c2</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aea35739dc9072773e6ce85bf413b0d84</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad20a2c806d772e064a896660d34b5b0d</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae7280124da37c1700bd9c6368e9e37d2</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a150e8479bf2195bd4985f657cc984a91</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7c4fce947579b716d25c6ef03b504afa</anchor>
      <arglist>(const JacobianNode *_node, const JacobianNode *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aefcfb4478ba44cda5673ed5571125319</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const JacobianNode *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a71d85b091297dfdbecbafbefe7239d50</anchor>
      <arglist>(const JacobianNode *_node, const JacobianNode *_relativeTo, const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a64ac3e0afde17ce3a62a234096b7076f</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const JacobianNode *_relativeTo, const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a547381c63e76d2370d5ebc2ed6fdc1f2</anchor>
      <arglist>(const JacobianNode *_node, const JacobianNode *_relativeTo, const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5b6d5985ee814fce2148db1263decbf0</anchor>
      <arglist>(const JacobianNode *_node, const JacobianNode *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a10855cc179e1e4761acf6ba414071e50</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const JacobianNode *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a369a2830d8cc4ebb10e58bcf21c19b35</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a95530f3dc4152df4ed81560db1d0a6e1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a4902ddfd5b6ac8dddaf7c78cc60e53a5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a434cf2e7f22ca0599277d8ee2bdf43c0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abf863d2e8f11ac02d7e6bb5f282d89f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a511ca2b3110a517c65cd756f67896211</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ac4f1ee2e1c5318ac96b8cc0acb1802f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad72bc23072b656afca6e871aa62b0ec6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a28b5aaaeb2a9df78cdc4638ee095c772</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a07d1d15358c3dc7308d1097c8b59b783</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearExternalForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a18767247ed30505020bc6e5be85de850</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearInternalForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a8a009d6467f3bd5699d52dfb5025d381</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeKineticEnergy</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a683d365974f5765cc378fefd4fb7feae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a994005c1902147e8a3878815466dbdad</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCollidingBodies</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a9fb4a925eca9cf30fb1acc86311e033f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af30b74c8fdfca18df578435a3185fc8f</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af06c5f57c4f8120636c849cedc6f2fc0</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a563836c1f8bb281556db2962c0715ed3</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a220402f26655595649a85a49aa548594</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae0ede1093b86e19a6db579bf1d84141b</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a37fc989733d51827a2fb11916e6982eb</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a028b005d84d882b21a93e78c7ee61574</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af0a02d3177345ca2740a62d6c7be7082</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af2272bf8c03aa647331a10f236afdb73</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5a41fd1f9d1402e66cd4cd50d54b6d69</anchor>
      <arglist>(std::size_t _index, double _command)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af63df14d2b9553e54ed015fb658bbafb</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8815caf719bd8c7fb6e3fa42cf4506bf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac45a5507e9226afbb208b32032d838fd</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_commands)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>afafbccf2253f7330a905fc0df2f1e92b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a852f80a1ae331ac27221ea667f217c76</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a05f03894dc8e7604cacf3ea9319d9fe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3c6e894a5218dc8159c9f33fb9242f09</anchor>
      <arglist>(std::size_t index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab9cac32e166ab9b2c6331f7a5aec134e</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a864a9a58092a513d9aedabbab1b7f0ae</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae15b06a0fd47316043f356e893f87894</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8689b2438d521350c2ce433b40f68ba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac1b1e6d4dc6ef32f5743801cc7b840ea</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a2d5743bd10523f194d37c7daf62d9da5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a85cf61cdc2102ddfdaa288da33db0f97</anchor>
      <arglist>(std::size_t _index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa1e43dea3dd5d9a292f2a2a5dcb65892</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa80a5cf21a736315ac175e02f12c3ca4</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a01f918b61e39b8cd5deed3525e8ea97a</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0370a39fd96a39ddb24ef905f347dca0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a77fbf63b7476930cccee24ae47ab7646</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab2799ef4ce5a1c9aec9ec229b95e86f0</anchor>
      <arglist>(std::size_t _index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5524dde0f5e886cf8ee515c1d214cb13</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5a9540a99d99eb5e006802cec12a9f89</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af19023f9373228abf1d46f93d7bd264e</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a47f0b9bffafede68444ba451c64a151c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5a1703b34636d3e4063f3cf69b9a083c</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>afc13320b4307d8a336c2d6b4edee2fd2</anchor>
      <arglist>(std::size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a39838b8e3a2b53720f0b9fde688c6ddc</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7c6ed483b8a6cc6195da0a0c7151e620</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>abe3241a4b77779c9545315f7193cfa56</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab7d4d84098a2c146023739b7b11af064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a13d97049813c11a991141e3f9e10e3eb</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a65c11584b555e59d2226439def15a3e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac773b39c26bd983f6486040882940c0f</anchor>
      <arglist>(std::size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0df6e7858f679f5360451c784c7ae702</anchor>
      <arglist>(const Eigen::VectorXd &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a452c138358127de8bb23a1c33699020f</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acd8363c40a39f80c7bd6f01bb2a0eb2a</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a37cf67f8c4df3c8b75fa97afe42c4554</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a15e25f2d91aeb2822f498dc4e32fce98</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5bbd7ede293d2bc83ffc4e3188f4c473</anchor>
      <arglist>(std::size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0f8b37af581d7158b8ac0a0194f94075</anchor>
      <arglist>(const Eigen::VectorXd &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a853e7de99a44b9b6cbede9361c833987</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa638227dae9153291c7034168cde2411</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a25bea1968f1810c4885e3ae4846f6590</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab98504c76de5955c03029f7d66933418</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a149b2d34d54d5a4bff253938f0b4e5c9</anchor>
      <arglist>(std::size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a171bac12015b26f5365a1c3784bcd4d7</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aafb640ad61ea2ddc9c8b2a30b69ea3bf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a51464ade960ca76ebcfa2974b2cb9417</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_accelerations)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0732a4c1bd2159e711efbc23ab7cefca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a38497e9d19c5bbd25815d4370af4d9ed</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a252522fc88f5b4606de8119920a5a2dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5e512e62403cd88b7ff58cb0d7430160</anchor>
      <arglist>(std::size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a025cdbfd50fc6156c3451ddd622160d3</anchor>
      <arglist>(const Eigen::VectorXd &amp;accelerations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae2dd6f424a4f21c306a62b954dbefa07</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;accelerations)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae84a6c78d03bf99430efd0ef1e8e3a09</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aed68f96fad0e755e4d52d807e37a5636</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a468679f1d62273c0bb1753d744010cdf</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a18e9677cf7946974327e5028b624c8a1</anchor>
      <arglist>(std::size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a4787a4d431c6bded4311e7feb801dda7</anchor>
      <arglist>(const Eigen::VectorXd &amp;accelerations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab40e1e01fad006f743f68ece1a3244c9</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;accelerations)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>adb4c0e914e3e345b876d10e1ad345515</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab538b532c48d0cb706ce7289337f71b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aac0ddbf96ef06907de6b023215a35e81</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1f9242a74faa07df1ea0ced2cb0e7103</anchor>
      <arglist>(std::size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a168e98fdad5ddd9b2b9c266dc9d3e5bf</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7215484511907665ef49e0b4e92e3ae4</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ad89eba792f8f55cd84883cb811281512</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_index, const Eigen::VectorXd &amp;_forces)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a51eca2a587d2360699e0e08a7c5a75b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0e93be7ebdd8365f9db18088bd4fcbaf</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetGeneralizedForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a57825238cb68f955e405e5bd8aaf78e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aad3873e33cbf8ca006d88f402ef9abf3</anchor>
      <arglist>(std::size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3cf11dd27cc4d4c431917dd96483ac4d</anchor>
      <arglist>(const Eigen::VectorXd &amp;forces)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac00c6d0393ad92cb518e14a2a40d5875</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;forces)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a2964192e8712d8a6ba4df925012eff8a</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a686212053e8dec0596ba9f8ef01c7ee8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa7743a6edb0cbe3980e076ad94f7abcd</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa649c2f4a7a0c8625437fe49b894a848</anchor>
      <arglist>(std::size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a108c9db3041f868c9a2bc17e7eb91653</anchor>
      <arglist>(const Eigen::VectorXd &amp;forces)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a6178b96b54b754dfaa228b8d507120d6</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;forces)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a481b4f8378527305ccc1c1edaad9a88c</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab2be52b0fa9feb1f89cc9318c2ea3acf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae694a8e97e6c284f86601f4dcf0ed72c</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityChanges</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7c1199282560b98e011841a7a16fdd8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointConstraintImpulses</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af3e9c9aa288d6c5347928730696b74c9</anchor>
      <arglist>(const Eigen::VectorXd &amp;_impulses)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getJointConstraintImpulses</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a179199e1c053e24848431f6bbb5c6227</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeLagrangian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aff6a3471e83845fe0d56f5e51fb06026</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getKineticEnergy</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a242d8011736271e4133585a96fc93c67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a6e7782146a7d9dbf227b2703fe8c2959</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BranchPtr</type>
      <name>create</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>ac6a5a5f5e763f5c12da262eb7ab1ef8f</anchor>
      <arglist>(const Branch::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Branch&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LinkagePtr</type>
      <name>create</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>aac3c41390795cdf256b0de24d8cfb897</anchor>
      <arglist>(const Criteria &amp;_criteria, const std::string &amp;_name=&quot;Linkage&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; NameChangedSignal &gt;</type>
      <name>onNameChanged</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac5fd03d4f660de35f67c8252c253015a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Branch</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>a85e036c35fbb1410313923ac399bdade</anchor>
      <arglist>(const Branch::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Branch&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>a9d8e2953306e5bfbf1fd2932bfc3e4f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerComponent</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a60c1d8cb451d4c92f83cb7b2eca00fdb</anchor>
      <arglist>(BodyNode *_bn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ac90644f5bf6bd902c82b4a2152b2b081</anchor>
      <arglist>(BodyNode *_bn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae1721fb3667cfcc36705f1d52b6644a2</anchor>
      <arglist>(Joint *_joint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDegreeOfFreedom</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f327945deedc9e049da6effe93da1af</anchor>
      <arglist>(DegreeOfFreedom *_dof)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterComponent</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa68c24c7e1116ec65b2731f7ff4391f2</anchor>
      <arglist>(BodyNode *_bn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a3a5e51ec627642c15518052cb36dea9d</anchor>
      <arglist>(BodyNode *_bn, bool _unregisterDofs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab0599a1b4daf515ad40d78f39686f764</anchor>
      <arglist>(BodyNode *_child)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterDegreeOfFreedom</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a7f417fe1e3b6ac0112305e5add8133a6</anchor>
      <arglist>(BodyNode *_bn, std::size_t _localIndex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCaches</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a1b5711f0ab5746de7addee75647ac9f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mNumChildNodes</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>abc8eda45e169f668afd19b0509676c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Criteria</type>
      <name>mCriteria</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>af3b9272bf9eade128e6c681e3511b77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; WeakBodyNodePtr &gt;</type>
      <name>mParentBodyNodes</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a943d8aa3949b0f9169c9c26c21f7c536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; MetaSkeleton &gt;</type>
      <name>mPtr</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa229e19e3f85ae9c4cb36deb9cfae6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2143d22159c61d191468bd87cd1b9f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; const Skeleton * &gt;</type>
      <name>mSkeletons</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a70300c24b5d07061ea5d6c051343ac8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::mutex * &gt;</type>
      <name>mSkeletonMutexes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a23cfd8227b96e1031ed6da214e175a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; BodyNodePtr &gt;</type>
      <name>mBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a3b1b1faab634e61655fce162d16cc6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>mRawBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa79b2228d86ea1d3dc8cb98bbfefcc97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>mRawConstBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f2a21e5f8415dd5a6bb34f05d7c93ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; JointPtr &gt;</type>
      <name>mJoints</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aedb1d7f74bdc9e069238eb4e529b8bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DegreeOfFreedomPtr &gt;</type>
      <name>mDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a399a92f1621b614a3c10ed04f2c5e1a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DegreeOfFreedom * &gt;</type>
      <name>mRawDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a87656443923b6295e3ab124b54c37d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>mRawConstDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa1c59ded783973917d49c312ab770718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; const BodyNode *, IndexMap &gt;</type>
      <name>mIndexMap</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab760fee8ae4700933ac34344b3accf92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a6c92e7b589bc45e7dce39592491ccb67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mAugM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a16c51c4b57dd1120ab2091d82d752b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mInvM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab731b9da81142974de5b7cc323ae5518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mInvAugM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a7da2693dace1dcc8014510a880adb7ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mCvec</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a36449ddd13a2ee9eee80f00087a50fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mG</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad84efd55973b6b59f5af547b3faf7681</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mCg</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a1f74d5dac133153587d4172e28adc154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mFext</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a470b474413b781756b0abddf616e8154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mFc</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a8aee33a8f6a2c73bb1116bc0f3aa72bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameChangedSignal</type>
      <name>mNameChangedSignal</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a25a31c6b43a3070a7901965ac69de281</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Branch::Criteria</name>
    <filename>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</filename>
    <member kind="function">
      <type></type>
      <name>Criteria</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a602dadf8bb1cf287243aef8179c7d6a2</anchor>
      <arglist>(BodyNode *_start)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>satisfy</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a28b24bfc150920c0038832ba1bfcbd5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Linkage::Criteria</type>
      <name>convert</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a0398e64f89d0da97b031aeccda1f005b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Linkage::Criteria</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>aec642f3a98a34daab49b6c0235b89b46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mStart</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a6aa2610b4c4c4e469e1de3e30a33a149</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CapsuleShape</name>
    <filename>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>CapsuleShape</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>adb72735a5b68a53175e5e3c1021735b4</anchor>
      <arglist>(double radius, double height)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a3675713569913f7b204e3f458a3725a9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a49866ab2dfbe4a6f8a6391bc085528be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a50df8ebdf45ba7f30d76926081299941</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeight</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a7068343dcc07655baa9c917f825f5e41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>accce2a5f451fb7ff484080c9db20809e</anchor>
      <arglist>(double height)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>aa5397509d1f34d79768c7fa92d8ffb4e</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a1a10035684496ac7b81c65040afb673e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeVolume</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a743316a7f53090dd08972938495875f7</anchor>
      <arglist>(double radius, double height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a2d624517c304b53e0302fd015d564380</anchor>
      <arglist>(double radius, double height, double mass)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>af98fd97f9909b1284bfca41e3ae03ae1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a0189c28e28f2e08e92c1a502665db058</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a868649b006b99cdea1cf46473996fb66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mHeight</name>
      <anchorfile>d8/d65/classdart_1_1dynamics_1_1CapsuleShape.html</anchorfile>
      <anchor>a0e97b8fac8be38174e3872c8d3bcd497</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Chain</name>
    <filename>d3/d43/classdart_1_1dynamics_1_1Chain.html</filename>
    <base>dart::dynamics::Linkage</base>
    <class kind="struct">dart::dynamics::Chain::Criteria</class>
    <member kind="enumeration">
      <type></type>
      <name>IncludeBothTag</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a0c91c6e8f5dabaead9a74e9e6fec892e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IncludeBoth</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a0c91c6e8f5dabaead9a74e9e6fec892eae06f90381bbb267d8be68b3b67887711</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStillChain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a0243c0faa4cc72a1cf64eddf8899f827</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChainPtr</type>
      <name>create</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>ad87dd8d0bf3f2a3056b36559c86980e4</anchor>
      <arglist>(const Chain::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChainPtr</type>
      <name>create</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>aa4e71b2c87eabcbf90ba7f4fba2b8324</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChainPtr</type>
      <name>create</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a4d4ac89047c864fe3ba4f6d352f63276</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, IncludeBothTag, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Chain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a126f7008ee3a01e52aebb98dea3be2c6</anchor>
      <arglist>(const Chain::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Chain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a3b57f447c737ab5dd429d54df40c8ce5</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Chain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a79f0f12e59f6eb14f59b7d8b0345d2ba</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, IncludeBothTag, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a6e4b64dcfb4789c15e0fbd3dfacea17d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Chain::Criteria</name>
    <filename>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</filename>
    <member kind="function">
      <type></type>
      <name>Criteria</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a5b4ca600debebadfbcd0ec783e1a5ce0</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, bool _includeBoth=false)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>satisfy</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a7a04b272d22ca452367fefe3564e8cef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Linkage::Criteria</type>
      <name>convert</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>afb26457ee8e53f9b4c6971bda4546ec9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Linkage::Criteria</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a0a20d3c12e99657a7670e503f93b2f6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mStart</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a85b115f01a96aad00e50775277c0f579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mTarget</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a38745c91ea79e82843618fa201ae12a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIncludeBoth</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a82efee81e7d844e615530c3df4a0763f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CompositeStateNode</name>
    <filename>d7/d3d/classdart_1_1dynamics_1_1CompositeStateNode.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Node::MakeState&lt; common::Composite::State &gt;</type>
      <name>State</name>
      <anchorfile>d7/d3d/classdart_1_1dynamics_1_1CompositeStateNode.html</anchorfile>
      <anchor>a08173aa802bc472af9ba75734ebaa6fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeStateNode</name>
      <anchorfile>d7/d3d/classdart_1_1dynamics_1_1CompositeStateNode.html</anchorfile>
      <anchor>a8947c0f18aa79c9070771c86cb40fae9</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNodeState</name>
      <anchorfile>d7/d3d/classdart_1_1dynamics_1_1CompositeStateNode.html</anchorfile>
      <anchor>a47a498c15e7baad6affbe39afbae6995</anchor>
      <arglist>(const Node::State &amp;otherState) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Node::State &gt;</type>
      <name>getNodeState</name>
      <anchorfile>d7/d3d/classdart_1_1dynamics_1_1CompositeStateNode.html</anchorfile>
      <anchor>a7e4e7b62f089150c5f0826e5dbbff302</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyNodeStateTo</name>
      <anchorfile>d7/d3d/classdart_1_1dynamics_1_1CompositeStateNode.html</anchorfile>
      <anchor>a6305af84868efece4f6fcfdca341119b</anchor>
      <arglist>(std::unique_ptr&lt; Node::State &gt; &amp;outputState) const overridefinal</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CompositePropertiesNode</name>
    <filename>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</filename>
    <templarg>Base</templarg>
    <member kind="typedef">
      <type>Node::MakeProperties&lt; common::Composite::Properties &gt;</type>
      <name>Properties</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a3431ee48cb34626c28a95e5300445066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositePropertiesNode</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a04ae4a33f993d225ebdb4de0798df4a5</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNodeProperties</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a293fe92a27596a177fa89a17d37ffd9b</anchor>
      <arglist>(const Node::Properties &amp;otherProperties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Node::Properties &gt;</type>
      <name>getNodeProperties</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a2ceee52280780e8480f2b2d72c2f108c</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyNodePropertiesTo</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a1adbc56aec6eb479a86473127d62e5ed</anchor>
      <arglist>(std::unique_ptr&lt; Node::Properties &gt; &amp;outputProperties) const overridefinal</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CompositeNode</name>
    <filename>d9/de8/classdart_1_1dynamics_1_1CompositeNode.html</filename>
    <templarg></templarg>
    <base>CompositePropertiesNode&lt; CompositeStateNode&lt; Base &gt; &gt;</base>
    <member kind="typedef">
      <type>Node::MakeProperties&lt; common::Composite::Properties &gt;</type>
      <name>Properties</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a3431ee48cb34626c28a95e5300445066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeNode</name>
      <anchorfile>d9/de8/classdart_1_1dynamics_1_1CompositeNode.html</anchorfile>
      <anchor>ab8d8a439b4211f3f65862be28ea4f8c3</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNodeProperties</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a293fe92a27596a177fa89a17d37ffd9b</anchor>
      <arglist>(const Node::Properties &amp;otherProperties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Node::Properties &gt;</type>
      <name>getNodeProperties</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a2ceee52280780e8480f2b2d72c2f108c</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyNodePropertiesTo</name>
      <anchorfile>d1/dd1/classdart_1_1dynamics_1_1CompositePropertiesNode.html</anchorfile>
      <anchor>a1adbc56aec6eb479a86473127d62e5ed</anchor>
      <arglist>(std::unique_ptr&lt; Node::Properties &gt; &amp;outputProperties) const overridefinal</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ConeShape</name>
    <filename>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>ConeShape</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a73a41bc03477bf731b164c5b7a8cf265</anchor>
      <arglist>(double radius, double height)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a2d3d533391633169b0bbfd77f7a3bf46</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a4857f1c54919d1c6a333bc1447eaf02a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a80cbfd574299ebcd2152d0bbe8b4b391</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeight</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>aacefa5ff2a1dbf563d4f4077ada20564</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a80ca34c0801f37bc776568f8634cdc89</anchor>
      <arglist>(double height)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>af8bea650366935d4218d2ee36c7aa3f5</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a4cb5e075a35402db26df8832e39efd40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeVolume</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>aab248e30ce2a455cf7614740a20503c7</anchor>
      <arglist>(double radius, double height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a4fc55557f98bba45186fd33e00626f4b</anchor>
      <arglist>(double radius, double height, double mass)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a72b76136d0f9b4ec3a00bd8eb53c6be6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a8a870ad517c3b0e43f6b0e4a31f3fddc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a896c23e9bfbbfba8caed2669b057345e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mHeight</name>
      <anchorfile>de/d3e/classdart_1_1dynamics_1_1ConeShape.html</anchorfile>
      <anchor>a169dacc6799027a500d008d0fafba61c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CylinderShape</name>
    <filename>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>CylinderShape</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a829aeadbd4103a478669be65815f867c</anchor>
      <arglist>(double _radius, double _height)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>aab37a21a46fe624c9c9e161dab42a2d2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>afb43ed668b0add2601b277647ee3faad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a1873b2df9f8725f197ccb15d61efa452</anchor>
      <arglist>(double _radius)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeight</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>ac580922aa36bfcf93b197a26bd1fe703</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a7aa79d94f90ae5b4326b869e769ab6b0</anchor>
      <arglist>(double _height)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a54c0a3d18fd968c7ae49747a75e5dd2e</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a052614080c8aba1d1caa471de5347ed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeVolume</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a2c25cb54bf9e750701deb54f58a7357d</anchor>
      <arglist>(double radius, double height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>aad7cd9f64678925e0bb3da348a95aea5</anchor>
      <arglist>(double radius, double height, double mass)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>aef5a19a2248802a9757abe37182e3276</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a0d6222cc66e4909371a3c109838715e3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a903af8b02264b4e21417769ed3d11072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mHeight</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>aa759ba117b9136bd01a9b314e63af8c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::DegreeOfFreedom</name>
    <filename>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="function">
      <type></type>
      <name>DegreeOfFreedom</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a38e97f9a4dc7b48e01d113337038533f</anchor>
      <arglist>(const DegreeOfFreedom &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aeb4b5f50c9a12054c1ec7a47a508f330</anchor>
      <arglist>(const std::string &amp;_name, bool _preserveName=true)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a374ff502cd4202bb9760f742ba936af2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveName</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>abb0fc08e06e8523d5bc09726d90e1089</anchor>
      <arglist>(bool _preserve)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNamePreserved</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aea2cf2c1f4b29003ebc6542a5ca64f99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a1073dfdf7e731f82723b4e3c22ad9108</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a864c25d261f26d06347611a691311437</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af6593e7d2402f2622ed1e97cca234eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a08b6221cd04d297c35ce01610df5dddb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a766f0239dae9baff95de3f8b0a5fa834</anchor>
      <arglist>(double _command)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a19a068e0ab4dd6eab90e998beb1d6ca9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommand</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a587972f807f8bce5ea243ceaa6231f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aec9e528d91a9c09c174ed8a7d60ab9cc</anchor>
      <arglist>(double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acbe1ab5fbd06ef4f57cfa8831096f8f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8f3ad68159541dee8bafef10b0f8dc8d</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9ab15aa03276815a18a7a918be384471</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getPositionLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a562f320112ffa1599f74ac522058e639</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af78929bb86347ba712cac092cbe917ba</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>afe09fc07b046b11921c7257f200e2c0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>abe7b59064fd38b4ead57d6003523d70d</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a684e1aca1964f4b9db05f93111e83e3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a5ca795f03e3511f1dcb52dd75bf228e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aba515d30d1a6fc66af1cb0a7400468e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a1be451e0547ba180c81fc10f31684779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8fed3479888c351bfb851202021afd4e</anchor>
      <arglist>(double _initial)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a4a4699ee543de7622c66adba258c63ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a07919edec439cb7679e23fde8fbdd7b9</anchor>
      <arglist>(double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a1842dd6a7886ea884e9b5a37e1b80bda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acd3d2639e62dd5ef5acde52febfcfbbc</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a1b6892cb3f1cd15e61548cba8e12e118</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getVelocityLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a7cabc34efae4746de269fdbecfcbd352</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6c4c17ff11eee3c090d49a6fef73e6ab</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a858d56b746321957562a03184066de91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8fbde9a2a40f925a27d14cbed232ad7c</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6d7efcf7546e9061f984735fcf1891ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>afac54afdbadea249ae4023bffbd4555a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ada1d0fe302361c430148c1232e0ad050</anchor>
      <arglist>(double _initial)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a0c6c2e19a709bebff600dff10f79dd34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a2efe2b2022cf5cc77d0c2701d791baea</anchor>
      <arglist>(double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a4d78fb7b3fcb3ec99a2a13ae263265cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAcceleration</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae834277a05318c8adea9a7550649f0f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a075e718fee2ef1e2664d931b5314169b</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae85ed5602b203813f422848c8a49e795</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getAccelerationLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a04db2de533eb15877236b1f7ad0fd2ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a72479ea21d2b58bf8d98fb81f1d5221c</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af812ceffc8983a546ed1259bfb6fb2b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a0db97ca53131bf0be5c81a8ef48a902c</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9a6c1c4104d7d3774ff85cc86fdb9ff2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a35d2282bb48d197207283bcd63b0f437</anchor>
      <arglist>(double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a601029faf95673798ba1ec5b96d66047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForce</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a05de61928807faeeb8dd287039752f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9543f3222fcd7e5c6144a216d3362a17</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ad86e51df5b0f5231f37e58b88ef72811</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getForceLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8cbae7c4503b0472ef051ec0fe612202</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acad847eec2661de425fe40d4d7d2449e</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a407d559133ef9063b124db5a9b7c6d34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af1d1d893f68ac3eec65b1223e7ab2967</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae095187fb4122e5e1b0317c342f5ba4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aae8c43a609304fc02fbd2e89ff1810ac</anchor>
      <arglist>(double _velocityChange)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a793aff4f748af6e2afafe1bfa945031f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChange</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af0c468512b3afc4c1d9b4877bf95aa50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ac2640f9e1d11edb566a17adb13f1b927</anchor>
      <arglist>(double _impulse)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae6f422bb4f15b5c81c6325f7060f7346</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulse</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a2bd2d47f63421385e1e4ea0a88417d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpringStiffness</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a750e22162274209f3926d003f08923b9</anchor>
      <arglist>(double _k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpringStiffness</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6803760ccde054b380c62f8e91f417cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a64e5497dd1a706e02dcfe429242d1727</anchor>
      <arglist>(double _q0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a856a514c64896ed5211dd12377088831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a610a30e97eae9a5fae53de5a1028752e</anchor>
      <arglist>(double _coeff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a71be56982c293c99977c6232e06362ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoulombFriction</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a3ac99e2599c7f9869dcd49172675bfb9</anchor>
      <arglist>(double _friction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCoulombFriction</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae2b11dec5368a113b0b403e2a0783a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a4f9166e956300af431447aceab442962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae7cd13f1918bb01ce25ef29a60aeae0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ab56861ca61eb682d4b310b87436025e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acd918acb3a74c538b8db40eae20c605b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a3387cb9f9aeeab634b8b510d262c0715</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9ff8b97f1667c0368f2bcb8232e0a2ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a916c16b49a1a13f360bc10d24f3f2b21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a02eb249111260681b1c6327d135de728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DegreeOfFreedom</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a7f9cf4b74448c149f467dacb648cfc00</anchor>
      <arglist>(Joint *_joint, std::size_t _indexInJoint)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ac19d30bbab0adc72a58627dacfdd4a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae9b1aef3e647ff306d910ec78a97dc44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInTree</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a60403dc46840d12bdf0507d449f78326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Joint *</type>
      <name>mJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>abae21e2528be496528b3d1732f5a7514</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Joint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a2b27269e818d7b63995be0e0f812bf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>GenericJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a925f583182ced8a2fef780b42b2b18ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::MutexedWeakSkeletonPtr</name>
    <filename>de/d69/structdart_1_1dynamics_1_1MutexedWeakSkeletonPtr.html</filename>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mMutex</name>
      <anchorfile>de/d69/structdart_1_1dynamics_1_1MutexedWeakSkeletonPtr.html</anchorfile>
      <anchor>ae99b07a21b689fc4a701632d2dae61ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::weak_ptr&lt; const Skeleton &gt;</type>
      <name>mSkeleton</name>
      <anchorfile>de/d69/structdart_1_1dynamics_1_1MutexedWeakSkeletonPtr.html</anchorfile>
      <anchor>a064f9c58e46829ad633b31b030634dda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SkeletonRefCountingBase</name>
    <filename>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</filename>
    <member kind="function">
      <type>std::shared_ptr&lt; Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a5097fc0bfad73097ccdbdebf1ab650b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a66b09f3013315ff3683add88b8b28322</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SkeletonRefCountingBase</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ab44eb3a667cc01c9331c3e3f50009818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>incrementReferenceCount</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a64fac8ddc9d6179823310a614f2bf16d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>decrementReferenceCount</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a4f2ff3db1bcfee39dc241224e0f89733</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ab03141eaad52bc5fde8ba32b8414c307</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>af3f6424130a51834774ff8bdb617eb93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateBodyNodePtr</name>
    <filename>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</filename>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a701aebe8d4fe456f3abbf5055127ca68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a9ffbfea0bfc648b5cff606bba82c079d</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>ab2de0184c2a78bef08d70d7adecac249</anchor>
      <arglist>(const TemplateBodyNodePtr &amp;_bnp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a24fb06ddef47a413f8b89c2a4a32e91c</anchor>
      <arglist>(const TemplateBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_bnp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>ab4b8cdbc16851a7ee80ecbd6e317e921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>ad4e4313415b0f3c0d3714c7ce61f3243</anchor>
      <arglist>(const TemplateBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_bnp)</arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a593a6ec66439490ef75ada1d18812401</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BodyNodeT *</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>aca19d1b6e494db49ca1139a943740b01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNodeT &amp;</type>
      <name>operator*</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a8f1e9b2d80ca67051b07f2f741949f59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNodeT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a9b723bf68b18931ffc061a1136eb1d9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNodeT *</type>
      <name>get</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a010bb70b67700bab234f929d5a1a5fe0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a80276f9298b9e4161ea85b72eea23673</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BodyNodeT *</type>
      <name>mPtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a2491098b31a85f7a0ea5bf264dc93762</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakBodyNodePtr</name>
    <filename>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</filename>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a462348b0d170b9d517de3d97bd24b6f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a176fc15c8fc06d8610a236335d5501ac</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a73b2e4a4d13dbd6a5d0565931221685b</anchor>
      <arglist>(const TemplateWeakBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a0724cc4c55ddb23d3ed1b0acf49a06d0</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a6b5a9f58133cfa4fe2d7ef6987c513db</anchor>
      <arglist>(const TemplateWeakBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a4d1b4033c0ee3f37fc3c787b4112ebe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a05584de0a754b6b637e40dfde6a27c4a</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a26eaed2c1c9a53e827fcd37ee511caaa</anchor>
      <arglist>(const TemplateWeakBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expired</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>ad4ac94cabf1dff46ef9cbe7b8ec9341f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BodyNodeT *</type>
      <name>mPtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a0bc0fc9039197c397be1a9af0be2a755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; MutexedWeakSkeletonPtr &gt;</type>
      <name>mLocker</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>acae0717e4f508c9493b90f9c532ac9b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>af3f6424130a51834774ff8bdb617eb93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateDegreeOfFreedomPtr</name>
    <filename>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a419d5fb64b441518c2f3c2317a5b67f4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a4f873f2bb700ead8d88036a93eda7976</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a6838f70f18229ac0f65f3e1fde0c120f</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDegreeOfFreedomT, OtherBodyNodeT &gt; &amp;_dofp)</arglist>
    </member>
    <member kind="function">
      <type>TemplateDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a7728fcfd82173ef39c2b030caa9ded9b</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>aca2ac8cc7f4a5138cf5cca6e38fa4d7e</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDegreeOfFreedomT, OtherBodyNodeT &gt; &amp;_dofp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator DegreeOfFreedomT *</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>af7884cff00399dc444adedc01c138bec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedomT &amp;</type>
      <name>operator*</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a72264079eda915d5c9449a14418195a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedomT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a2f87ca36892453d4e6c8bb7500c694da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedomT *</type>
      <name>get</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a2df1c111d2f1f224a7a37478c49d0084</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>getBodyNodePtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a966d2959495f1b9081023b51e0de1f95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getLocalIndex</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a677ff64a9c94c861da8a7f304b22ea88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a7f28e8aefcaaac554cbe7a564c5d9ed4</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>ac1fb6d9f04cd90f136aee9ad6899825d</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>ab446311871f329ff9bee448af86a3936</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a1c248458c0631b787109f7f2791fbd6c</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>aff39d4c2e787fa14f555894c55778bdf</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>ab6a7e4e4efdf1a0f90b4497cf3ee2644</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a3ccea119074a1422c34bedceca172225</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mBodyNodePtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0fc0549bda77bcb859a725799b98aef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mIndex</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>afc9a223f0a53d62ca9e7339d6c76b5b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>af442ca2a2b600657ce0b061353f97dc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakDegreeOfFreedomPtr</name>
    <filename>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a2a5f2fb08edcc43953b80529c9a16618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a6fe887baeee404f96eaf84f36bac936f</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a155bb1b691d1cd4f0379b0e84508a7f3</anchor>
      <arglist>(const TemplateWeakDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a1766d6439428981200e8c680b5a01ae4</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a992950f171c8d7ac98b0780c3d93ddab</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0d4705bfba72e0584679fb0954a9cc76</anchor>
      <arglist>(const TemplateWeakDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a480a06eb7b2fa6a0b805f8d0bfb122ad</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateDegreeOfFreedomPtr&lt; DegreeOfFreedomT, BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0ef5e83f6d35d587957540dad9790876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0a6da469aa4e40decf28dc5e76340c65</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a75625421ed9284f741679474b201419f</anchor>
      <arglist>(const TemplateWeakDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateWeakBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mWeakBodyNode</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a49fa95097614a916a6973e7cdd7dae23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>mIndex</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>ad2c1583d2a6d60834c43065c0cac7718</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a40bce841a8f61fbd831fe9eb633a3905</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::EntityNode</name>
    <filename>d4/d4c/classdart_1_1dynamics_1_1EntityNode.html</filename>
    <templarg></templarg>
    <base>EntityNodeBase&lt; Base, std::is_base_of&lt; common::Composite, Base &gt;::value &gt;</base>
    <member kind="typedef">
      <type>typename detail::EntityNodeAspectBase&lt; Base &gt;::Aspect</type>
      <name>NameAspect</name>
      <anchorfile>d4/d4c/classdart_1_1dynamics_1_1EntityNode.html</anchorfile>
      <anchor>af79d3a6e3096e7368694a79934c259af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityNode</name>
      <anchorfile>d4/d4c/classdart_1_1dynamics_1_1EntityNode.html</anchorfile>
      <anchor>ade3992eccd967af1645d15568fc22840</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityNode</name>
      <anchorfile>d4/d4c/classdart_1_1dynamics_1_1EntityNode.html</anchorfile>
      <anchor>a168e961c426ee3aca598a97297e0b2aa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d4/d4c/classdart_1_1dynamics_1_1EntityNode.html</anchorfile>
      <anchor>af54a0e19b94de2751b8388930a44903a</anchor>
      <arglist>(const typename NameAspect::Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d4/d4c/classdart_1_1dynamics_1_1EntityNode.html</anchorfile>
      <anchor>a89ec3d2ef9bb9ca555c5c279060724a4</anchor>
      <arglist>(const std::string &amp;newName) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d4/d4c/classdart_1_1dynamics_1_1EntityNode.html</anchorfile>
      <anchor>a681ba58d29b686d073c8ed60c4970176</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::GenericJoint</name>
    <filename>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</filename>
    <templarg>ConfigSpaceT</templarg>
    <base>dart::common::EmbedStateAndPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>GenericJoint&lt; ConfigSpaceT &gt;</type>
      <name>ThisClass</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acfd79266275691e600f74f5fa4867cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointBase&lt; ThisClass, ConfigSpaceT &gt;</type>
      <name>Base</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9a3d29360dbb61ea378c3e266f6e7dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename ConfigSpaceT::Point</type>
      <name>Point</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac112e84b6e09e3dc3490bf0f80df0cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename ConfigSpaceT::EuclideanPoint</type>
      <name>EuclideanPoint</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af2aabc4ff535232c9d609fd773341f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename ConfigSpaceT::Vector</type>
      <name>Vector</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aaf5267bedde8842807a55eb5b97ec0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename ConfigSpaceT::JacobianMatrix</type>
      <name>JacobianMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6d76587cd89b02fc3220f6d4175bd1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename ConfigSpaceT::Matrix</type>
      <name>Matrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0471a52d2a6eb3c5fd3b760ff4949627</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointUniqueProperties&lt; ConfigSpaceT &gt;</type>
      <name>UniqueProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a549e6f5cc7c2e9e9e1abe5f4980fb945</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointProperties&lt; ConfigSpaceT &gt;</type>
      <name>Properties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9a3089245ab839f160ef968632e4f93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectState</type>
      <name>AspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a394ed6fc8c892b5612d250d40310aa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>add694724d879d201d96331a4cc12324f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3e79d6ea6bfdcc06cd63a789d7fda95d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a22e44bfcfa7e8be5838a0a7b2b196daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3b03606625f36aced4f41a257c92adf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adc7f6dc33d3891dfe0f5bfa9f6deddb5</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad408c920d02f70d7a88cfa8e2aa54bed</anchor>
      <arglist>(const typename ThisClass::Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a52f6187489d93fdf7bf895456204074e</anchor>
      <arglist>(std::unique_ptr&lt; typename ThisClass::Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>createGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a1c78b33dec233b6cb0fb6a4e880635</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeaee8a79e3bc4399eb0b234f016b9a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; typename ThisClass::Aspect &gt;</type>
      <name>releaseGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fadd21f5d73b912f22c0b0516514527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericJoint</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9b7a22e3241c9023c36d5bb446a2caca</anchor>
      <arglist>(const ThisClass &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericJoint</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acb4e25a9f3e5c048990ca63885096af9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f788c98255e791ab707289767debd68</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3523067d4ff3e9ad8550f2f7ce23a9ce</anchor>
      <arglist>(const UniqueProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0040637029227fd832d44573723ce99e</anchor>
      <arglist>(const AspectState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a984522e489da796fd4d4720811292b8c</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getGenericJointProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6bee56cc3a2e41b3c78784b5aa117cbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08db2db7a81845f2530d2f30f3566f8f</anchor>
      <arglist>(const ThisClass &amp;otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6c9fe8a8fd9f3eaa984c09cd603f0e7e</anchor>
      <arglist>(const ThisClass *otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>ThisClass &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a87a432f0ab455b125e1b13dfabad1c09</anchor>
      <arglist>(const ThisClass &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ecc4745aad10f031ebce166ad36dc96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4bab8d9105d12abfe9be2f80dc12242f</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5fb3a506f557cbfdb1af2b742d211ecb</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4eb9e627a95c43c0202633966384df4d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaae16cb1c31b56abfff161121f99460</anchor>
      <arglist>(std::size_t index, const std::string &amp;name, bool preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a59ce80703b9e3f60868775b28626a857</anchor>
      <arglist>(size_t index, bool preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56205280218100c7506530db664bd623</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81d7363a74b7e72223e6225727021bf4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afed9c73fc6f50f3dd1e03b043e1bd504</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae57be9982b20b44a850e0c5354c56aa4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a33fc401935dc63d910d1bad81d45a33b</anchor>
      <arglist>(std::size_t index, double command) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a03d8b73d26cff1b5fe37658cb7d855ae</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab69218dbe9868776d65a76713467f2d8</anchor>
      <arglist>(const Eigen::VectorXd &amp;commands) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a055d196729db854f02ba40c237672d96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a365ded3be7bb7c5644241cc2490a9a95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a319c5bddebe18f00481c602e9e035ccf</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6d4d257a17185e40ce0b4d9874c7838</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa437a4f00772c2abf60f5c5204ae4c40</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6f2eb6a3dc43723a866206d271b37050</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a261c1c76668ca98cef95fd8d97134078</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af074da7d0fffa875a40313ca78731cb0</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7c7b377f1dea6a459c7e9600f41237f1</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56189c370db7512ed8d49c612358f74e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4c9c5ac9df1428c564a32b2ab5a4d6e9</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a818b16aec9e109f01bd07b35d55d730b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2091a3ebc63590a8e5f349c07f458c9</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a3c465480009c45584703cc84e3fbe8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac328d1b5b1e6b84f122e716bbe7944a9</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3ebb9d44080fb040e3b50dae91e183b</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af130fa6d4c82a20035eaa0593a36d080</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3622d4dde6f34d8ab1cec38c0cb91c47</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abd95cda7923b915fa3eaf488c126928d</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aca687b7cb5f70d368483dffbbcb6a99d</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7b2f0f0c27537be89b21399f3770c5f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a915177768c6b9fb0c731e67383362831</anchor>
      <arglist>(const Vector &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acf5d6f5fe1dd4144f99886f09251f90b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae30263365345e15f555a29609bb11635</anchor>
      <arglist>(const Vector &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a06ebc236d884a257e93aff551a60f85f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08bc31a281a0950acfd9f690e64e527b</anchor>
      <arglist>(const Vector &amp;accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a310c7b86fbacd458cdfb30f9539b5d6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a67f6e5cb08930ff34f24646d134a27c0</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3df75672b028ae7c6ac54d31ff0890e2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2c51c397e915dc11c48f99125677a288</anchor>
      <arglist>(const Eigen::VectorXd &amp;velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a79301b36a7cf4e970512db7321a3a4eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abb2f03e5c32d3574db7db76ce1cb0282</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab9fa2df5d92d77801b6492608ffefde5</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2509969cf54c235f68239ec13eafa327</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a23b5e40b6e7efd4dba8c31295dcda43f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac09ed7eeceb1de17b397022209bf9d1a</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5ac656366ddebb5af26d12832a533efd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d5879a4c9661cf1f73cb9ca2252e197</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae68b99a9f9feb4f7a88f691e7549feed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90aa26d57bd81027c86505f10215b944</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a062edbfb0695b30c8e0a31aa4063df56</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a489c73d485616642c20ebd2759fa7f0f</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d69fbc7c0ddccb0248c25ba5bf732c</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a498decf0c8e6cc672d76299635b38106</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab611d3ebecade8bb583a1ac6391275f6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afa69ee9d8ed2a4702ba73c4297aa093a</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a74b01b371b5c94d97e45810341ff9278</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fc7f065c1b48b85fd3e6cfab80df9f4</anchor>
      <arglist>(const Eigen::VectorXd &amp;accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aab693faddac9e163ae2dde6390a7eb06</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6cf54858df69658ce30e7bde818b3b0</anchor>
      <arglist>(size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aea6b76529cbf28ddab21a093f131e6f2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a951f5134d43732ed08a5b866643065db</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2226b5e13836d3cb6f33ab2403ab2ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaedad85161b1d459e1cbf295e7423e7</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d109ad77448660cd79a5885fc2bd387</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3c8c05f3b0bc1c77dfeb9a68459e578a</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1e0ba59064fb4e62fb70738371264289</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af75fff85fb299a60b5e2544360fc85ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a43dd3ca22950885428e9d65c46823786</anchor>
      <arglist>(std::size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a48d0c690f9cb01fe2fd0fb833d7003ea</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af568531bae6ca2c3474f56f220fb8760</anchor>
      <arglist>(const Eigen::VectorXd &amp;forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a364acf5ea7b44facc5af996ae597be70</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7ed2fa5153368fc645a4cd91ea7c2e8e</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a80c3b50b3f9644036ca6218705be30b3</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a02a7547230a0719cb581ebccae1414a0</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d1c91663ef76012d52ae331b6b3e5b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae544a782871da33239a73dd716a8527c</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad4d5390eb206173ace8add2cee8b6314</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a090c9734e2b9cf079c129c18c2c0e9c4</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9994aa5f4eb46980e6cee8b1449a4cdc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a510e581b760ee2c8388452721e07be4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a38523b9cdd019e0fdfa649e66c3ccfa5</anchor>
      <arglist>(std::size_t index, double velocityChange) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5b79e7ace836473925a8d1caa33f9c0b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aff19b9148a33dd9b072e49f9753d4d5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3d5c3ef5328c2a9f43f36ebfd0dc968</anchor>
      <arglist>(std::size_t index, double impulse) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afe22c1f788901c3005553c8be9c7a2dd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6228fa5f1e8a10eb63a35ed828bfa5a2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa0e283a0d2b4425090803948b5f843b2</anchor>
      <arglist>(double dt) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6eceb01c0e7e950e158fa5a46f9325a9</anchor>
      <arglist>(double dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7be803c3e7ce77d01bcf8f96c33d6b81</anchor>
      <arglist>(const Eigen::VectorXd &amp;q2, const Eigen::VectorXd &amp;q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a55ca1997e1be3cfd6e0197ac90d2de09</anchor>
      <arglist>(const Vector &amp;q2, const Vector &amp;q1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7edea01b4d9e982bd308c49970db9d12</anchor>
      <arglist>(std::size_t index, double k) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8aaadb5f07668e5a34d5f4f2b944e94b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0dcfd0921ececf58033c676472f3f8e1</anchor>
      <arglist>(std::size_t index, double q0) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6a7e404ade71c2b186ab9c72afbf1dfe</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8c3e0f873d2bfd797973d2b04671632d</anchor>
      <arglist>(std::size_t index, double coeff) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb29c90a2439d918beb82731d00901f4</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0b425b68b4b040ad7d68d6a52314c810</anchor>
      <arglist>(std::size_t index, double friction) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ace08d84bb1e048b8cacfa21ae5cc5b47</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a89bdb5e079ef5ef36362f1111c90f911</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4d0ed6515f3b54197bd7d3e24a332035</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const GenericJoint&lt; ConfigSpaceT &gt;::JacobianMatrix &amp;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac35806976c9d4bac42246b650d7d60c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa6ece1460a81727104f716b4ff6fea45</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual JacobianMatrix</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb38eac83601e62c86da2954d0fa6229</anchor>
      <arglist>(const Vector &amp;positions) const =0</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobianTimeDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2b26cb2bcd5234808e46cf1ace4a5c63</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const JacobianMatrix &amp;</type>
      <name>getRelativeJacobianTimeDerivStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af3a6ff49d31d9ce7829f2df717efab86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81106cf3d83e42992e60d19a6feb8bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GenericJoint</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a298ccc5bb95dece00d72c1ee8d0ced69</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad744bdac6c626ade6d4ced294e0dbcdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af19ec6cf064e7e6effbaa1349f5eb0fe</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a925acfefe37823a98f40901cf5c575a1</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af6206c4544c095a944e39bb9bf399456</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af256acd666692cf51831971ef2155aa1</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab7bc4131dcd3e2cd423ab5acb738ab1d</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acefd31a0913e34d7e82735b15b6e3ccc</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6c950bee49174a19122cfbc383131f0</anchor>
      <arglist>(const Eigen::Vector6d &amp;spatial) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, NumDofs &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3491b0d1a3f09f41789001d4eec77817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1cbe6fd5a2edcd4a58469b1a395e3852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad2496953acc6dd5ce926b19a582d5308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4530f4ac2b08bde706908cbcd75208c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac427840c47eecd6143f156dc00b7cc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90e09106897395febf5346283839b33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d4729d67f1b8bd09222cd1af03528c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae0f8f270603b17142763e62187f857d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0eb851e094d5899a52f14514dac3e752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5d317587b9a874fa8e927145ee429833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a11f84a31fd25f6dbb3fcaa683c24c994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abfc60c844e4f03af9f77fc657bb4f46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abdc708b0fa38eea703b6c2b25e680577</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e74770ca664e0aceed8023fae2a7753</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae4ca237cb453284ca5a4843ce0c70a10</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae35d4b29954c549ebf5c621ebfde6e55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativePrimaryAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f3541ab51e26f9a6f00b70de916cba7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5693d3a926198146fd184191e1bfe667</anchor>
      <arglist>(Eigen::Vector6d &amp;vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ca12fa08835c599d8a6be4d898a9696</anchor>
      <arglist>(Eigen::Vector6d &amp;partialAcceleration, const Eigen::Vector6d &amp;childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3fdb5d24f5f0a5187944b451af88f68e</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad7adf7c47fbcd03cc582cf86d11eb8c6</anchor>
      <arglist>(Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a54ca1558aa00bb19a51721a33db4f145</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2f520873b892ab4f5f9d1f7a5c5441fd</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertiaImplicit, const Eigen::Matrix6d &amp;childArtInertiaImplicit) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e15407a0387b67b8c39a075adf2f851</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a249c70e9db2fd0c250dc6ff5b2bd7207</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acbc422800715340aa7635ae535df88bc</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce, const Eigen::Vector6d &amp;childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeab2b61ca97501cbf7057024c377121d</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasImpulse, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6011c89b72a200e08d6d92632ef478f1</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1232b652a7763e11e445a9d855a682be</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa0cd8e3625c2a2398f0236afdb31419c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abe97b43cd57c209fe35ac73e4f8158cc</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a331c9dcba3ace1d818e2f62e68a3a7b4</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d9edceaaed0915c6b5f2c7fca01b161</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForces, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a15b8b58fa6a8222215e7e2d1e1bb35a6</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForcese, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aba2cbf2472754a730d7b8a2022bc17a7</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9b52a8a7922c399b5ffc233aeef5e40e</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6da9c563c626c5777c366406292096cb</anchor>
      <arglist>(double timeStep) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaToDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a281ff8c6522a257bbc20f19443df11f1</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaToKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afb95ce23ddcc46f7bb38981d1f77cd8b</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaImplicitToDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae9849ecb83ae8b1b41eb90017c31a90c</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaImplicitToKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a04a38d165836a6d79882b5a73d8b0104</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4b70c0b900e4360adb95db1ab55e561a</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac2a6fc9e9d18c3f162e54a70625928fc</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicitDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9bd30046ecbeddcb90d9dd8165aecfcc</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, double timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicitKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4ce2cf6a50d058bf68f056801d0f8dd2</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, double timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasForceToDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa7c3d84b224b0fcf4948112a476410bb</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce, const Eigen::Vector6d &amp;childPartialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasForceToKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abfdec678c72b47f430e5082227a0fedd</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce, const Eigen::Vector6d &amp;childPartialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasImpulseToDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a70fe74e1a065860c5fba31096ba761ec</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasImpulse, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasImpulseToKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2d63b642a7bcb71f617e9d71acaba1a2</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasImpulse, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalForceDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae280e822b6be57218ce515f781301ea7</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalForceKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9f2710f11cf6d64d5ef587df4eef7c55</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalImpulseDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a40f7dcf4cb32792c1fa71210a23bcc49</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalImpulseKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0a76f53bc1cf90203007060101a7e261</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateAccelerationDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af0bac4c50b5231ea464bba7af87e0007</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateAccelerationKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a20781e592803c7fc468166b78e2b9b5e</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateVelocityChangeDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a22748417d4a210295f8720376825e8bf</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;velocityChange)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateVelocityChangeKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab5945400a65a9bac0f7037d7f1b8744e</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;velocityChange)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstrainedTermsDynamic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a25b74c62af0008965cf7e3e8c59c14e4</anchor>
      <arglist>(double timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstrainedTermsKinematic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a93cb7381fe348137325569c61b42ec55</anchor>
      <arglist>(double timeStep)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateInverseKinematicsPtr</name>
    <filename>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</filename>
    <templarg>IkType</templarg>
    <templarg>JacobianNodePtrT</templarg>
    <member kind="typedef">
      <type>IkType</type>
      <name>element_type</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a879a55f935e3cbd86f4e8604cf8a2ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a7dd523b9c03ab99929e5b8055a3e099e</anchor>
      <arglist>(const std::shared_ptr&lt; element_type &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>ad87977cec4559c38ab868d8a6371a14a</anchor>
      <arglist>(std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a0d558ed12823bffa14f0ac0db252400a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a3d54372079b18443155da149e4e8b5b5</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodePtrT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::shared_ptr&lt; element_type &gt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a0d6551c3974fdc519840acd2e2a02afd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a795708988235b6c6df62c4cbb344638b</anchor>
      <arglist>(const std::shared_ptr&lt; OtherIkT &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a25de0d473178a702a6f7ab8b53c58a6a</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodePtrT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>aac3254fb7a0480204914585dc343dbd7</anchor>
      <arglist>(const SharedPtrT &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a3fd1fe26b3c2a1301d7bda413bed7a83</anchor>
      <arglist>(std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a18270247999a66039742b81b7986f06e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>element_type &amp;</type>
      <name>operator*</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a6f0b3366225860c9f179172248ae1a46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>element_type *</type>
      <name>operator-&gt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a39faa42ea71b6e6ca2b88fe819993f1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>element_type *</type>
      <name>get</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a9125c8a5ab7e8549cf2879bc582c1d40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; element_type &gt;</type>
      <name>get_shared</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a5c1f192c11f7b96b676de2a758cfbe61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>aa651837034988be6e1a16516ea0c7d69</anchor>
      <arglist>(const std::shared_ptr&lt; IkType &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>aa26db7b72ba14c28441af3db676f646f</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a41ee0727aae66d38b00753a4a73d7c14</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a17356c88b675c0f4983ead26bc9244df</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>ac07472ece8d9d0b4665b4117c94db103</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a243a7866961863f4a5a4b9943e24bce1</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a811543cae3c88f0711bee07fefe34d88</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; element_type &gt;</type>
      <name>mIK</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a8b60fa044976a16ff054c668719001af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianNodePtrT</type>
      <name>mJacNodePtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a6b3b09324f68e733b8a0eb98a65aaf04</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a6a416fcf8ba11e55919ff2a2f013e000</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakInverseKinematicsPtr</name>
    <filename>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>InverseKinematicsT</type>
      <name>element_type</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>af64da281a080555550fcce634058a65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakInverseKinematicsPtr</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a5e21e9cea1d9e948c9a2ccd315fd1154</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakInverseKinematicsPtr</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>ac4cd0dda70a13fed21678dce68992583</anchor>
      <arglist>(const PtrType &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a595eec7724db16beb67e45f526e1e928</anchor>
      <arglist>(const PtrType &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr&lt; InverseKinematicsT, JacobianNodePtrT &gt;</type>
      <name>lock</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a245792824d5ee8b1093662e01832df80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a52f4cd6422bf620512fa99192f86a47d</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodePtrT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a2805854a68ddded1e8c1c04718bc94bd</anchor>
      <arglist>(const TemplateWeakInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; InverseKinematicsT &gt;</type>
      <name>mWeakIK</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a8dbbcbbf44a970c1e2952e690c9deb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianNodePtrT</type>
      <name>mWeakJacNode</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a84e6590e5c9a8e76f58eb5d14c6f0252</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakInverseKinematicsPtr</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>ace773ba830a1ed02acc9437d8e05ecc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateJointPtr</name>
    <filename>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</filename>
    <templarg>JointT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="typedef">
      <type>JointT</type>
      <name>element_type</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>aaef25767cc47c829dfb94ddda08cb907</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a1a90726b7151478c639e97c1265fed27</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a19f187da42d2f350af803981fc4866c4</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a7e6da674b35ce44caa2e2558e5dfb024</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_jptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a13436e73a4ec31bd034311c13ce794b7</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>af51408a2899c29293ebf039cb6c4f93e</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_jptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator JointT *</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a694f94ab66869156034ad76cbd7579fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointT &amp;</type>
      <name>operator*</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ab4046a932009f38322279528403b4848</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a71d1534f2bc5d4317ce79fd5e27d5bab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointT *</type>
      <name>get</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>aa50a858f1dac04af69c7defa8338479c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>getBodyNodePtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ab373d6010e46d0e698d6b6f773fe7938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a454e4845a5ec0ce911a4d2ebcc2d4f21</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ad1567d24bbd50a48ce1118bbf324f1fe</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ad227ce0ca598801b1f130ced15900836</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a13ceb68b825f14f6b4d1eb9fe57a60cc</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a34291804ae7ae7203f4958bba6150186</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a8affd52419c92af0df9dff6278488250</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a34dfdb6c0562c27cdb02bfccdb28bb0f</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mBodyNodePtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ae1a667fcbd7df3cb279e0eb754c62086</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a3021d253b6e5ca623ce1d71a819d511c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakJointPtr</name>
    <filename>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</filename>
    <templarg>JointT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>ac7c2aa91795fbc1d83a4aab6963e9cd9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a370cacdff338b7e2243738bacf0a9f4f</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a1cfb148b46abcdc01a356b372eedbe40</anchor>
      <arglist>(const TemplateWeakJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>ae178f8357860fa9c418afad4dd8d2ca1</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>aa150daab20ecc9e58b99875b4b309eb2</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>acce5d943e06930149870dc3842ccbce5</anchor>
      <arglist>(const TemplateWeakJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a13c9f5fafd203eb8c2d128f078ca3eb0</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateJointPtr&lt; JointT, BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a90dbfcb17ff997189df072139f5da094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a9eca89ac3708cdbde233c0e018caea0c</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>adb42c6faa50c16b6dbd93d5bb2fc1fd7</anchor>
      <arglist>(const TemplateWeakJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateWeakBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mWeakBodyNode</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>af9a63d1021fdf0a1e7c306b11c661a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a25edc8761f7a8acdb8b944b17934bd52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateNodePtr</name>
    <filename>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</filename>
    <templarg>NodeT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="typedef">
      <type>NodeT</type>
      <name>element_type</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a67c69c0b378164524f2ae4188261566b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a6260221dd0c064e1e35616a092b2ae4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a86d902004d42b04bddee1b3b320a7f20</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a518b910d354a3dfc65f0e9f13747d6d0</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>afd15ff753789e5c45b0c6a8769b166da</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a861d2daadc3e11bfdf951069808ccd08</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator NodeT *</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a86414a4450f3b43a81ce65b47708b065</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeT &amp;</type>
      <name>operator*</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>ac5ee15c5985c6c22a9a1d13d46dae051</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>afa9ca11d2251248a076611863f463c33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeT *</type>
      <name>get</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>ade65dbb1e0c02495fa324bb9bd5a1e28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>aec26235ea529a84ea177747362110e85</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeT *</type>
      <name>mNode</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>ae8769d6ce0464921d1dd6b2c7f324435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>mDestructor</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a78f3b547ac79f4369c2edb8fe61e6bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mBodyNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a37b3ba8963d32e74214eebade636ed0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a1a3d8e9e0914d57bab6a8b9ef2cc21dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakNodePtr</name>
    <filename>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</filename>
    <templarg>NodeT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a58736772d7c7c38e6b6a9b8120d7b43d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a69aeb09b0396080f89dd2a759d3c7c5e</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ae3fd6eac73026468ed5a17dc27fdd721</anchor>
      <arglist>(const TemplateWeakNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a9d2403d43f7529ffa8c7235d1b497a96</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>addb293e33ce2a3add8cb70189cd28fa1</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a181f63708cbe18487e53653e8d2d9c55</anchor>
      <arglist>(const TemplateWeakNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a148f808fd2ed579371457f28a1afd608</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateNodePtr&lt; NodeT, BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a767a46825bc66fc7ac558a5185426daf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ad16fab7cb85e0440bc75aed5e40fb99e</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ac79d9bf0601c28050a2bb243483a53d8</anchor>
      <arglist>(const TemplateWeakNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeT *</type>
      <name>mNode</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a06e953bef7a344c1ee57642a86045a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; NodeDestructor &gt;</type>
      <name>mWeakDestructor</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a31593cb79170fb34c3c0f5305814b354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TemplateWeakBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mWeakBodyNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ade4bbe43c0ff8609d4fa91fcc081ba23</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a1dc904ae4e952e78708ec0f6cfe0e22e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::EllipsoidShape</name>
    <filename>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>EllipsoidShape</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>ac573a4485f241b2cf68adb06e1d3b263</anchor>
      <arglist>(const Eigen::Vector3d &amp;diameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EllipsoidShape</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>ab357790e4655e1478e1919132e2e9c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a7239bf547c3cf8e50207f1f971697add</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a9e91e9cc9e1a8da3fd51b6303041dd5b</anchor>
      <arglist>(const Eigen::Vector3d &amp;diameters)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getSize</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a159808e5461ff9c3f9dc990fbe56b65e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiameters</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>adc119f4fafd85891450a4dc7d3a39f2d</anchor>
      <arglist>(const Eigen::Vector3d &amp;diameters)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getDiameters</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a5f29bc1035fd63f8112438452d736412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadii</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>ad6c038da424f0130a9b132db5f562865</anchor>
      <arglist>(const Eigen::Vector3d &amp;radii)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d</type>
      <name>getRadii</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a7aa069d414197557b19f3d22a7eaf6fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a21e53b746045a7ed8c4efed3dd1b7e68</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSphere</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a1c9afbef5b42181cba134fa03f476a70</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>ad87114836f9b74265e4c7eaa7fbad3bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeVolume</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a0ebc25f297c5ede5172a19ba9291f933</anchor>
      <arglist>(const Eigen::Vector3d &amp;diameters)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a40c90ef90862e91ed807b4319ca197ec</anchor>
      <arglist>(const Eigen::Vector3d &amp;diameters, double mass)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a33efb80a3ec52cf78862ece557fbc08d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>aa8282162021c67bce668ead29bce8079</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mDiameters</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a058a9460c186458471444dc357da5513</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Support</name>
    <filename>d9/d4f/classdart_1_1dynamics_1_1Support.html</filename>
    <base>AspectWithStateAndVersionedProperties&lt; Support, detail::SupportStateData, detail::SupportPropertiesData, EndEffector,&amp;detail::SupportUpdate &gt;</base>
    <member kind="typedef">
      <type>Support</type>
      <name>Derived</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a9ad62f8e51f51b6209762ad466e64b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::SupportStateData</type>
      <name>StateData</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a1b79a2e430ae5fa3c651cc0ab91b0d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::SupportPropertiesData</type>
      <name>PropertiesData</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>add485a69c05080b8be81d50fa60a7faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EndEffector</type>
      <name>CompositeType</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>af4447005623dc12b5981a81c50d98c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Aspect::MakeState&lt; StateData &gt;</type>
      <name>State</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>ab352e81c20e72e27becd6b735856e637</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Aspect::MakeProperties&lt; PropertiesData &gt;</type>
      <name>Properties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a1664501785584f81e032dab7d5c9e4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithState&lt; Derived, StateData, CompositeType, updateState &gt;</type>
      <name>AspectStateImpl</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a74fc62eb84a474e043e40726a24145e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::AspectWithVersionedProperties&lt; AspectStateImpl, Derived, PropertiesData, CompositeType, updateState &gt;</type>
      <name>AspectPropertiesImpl</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>ad79156ff0c52843530da60a13982f37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithStateAndVersionedProperties&lt; Support, detail::SupportStateData, detail::SupportPropertiesData, EndEffector, updateState, updateState &gt;</type>
      <name>AspectImpl</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a7c0e52d2527f3500e06c33f632d93bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithState&lt; Support, detail::SupportStateData, EndEffector, updateState &gt;</type>
      <name>Base</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>ae9e7b9279d48e7a359b4eae5e683fa6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectWithVersionedProperties&lt; Base, Derived, PropertiesData, EndEffector, updateProperties &gt;</type>
      <name>AspectImplementation</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a594d0df157edcab5a947a41979817709</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Support</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a8e766712587ff1e6fb903cb69182bbd9</anchor>
      <arglist>(const Support &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Support</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a3bed936725bbd8bc08dc156d51ac8ea4</anchor>
      <arglist>(const StateData &amp;state=StateData(), const PropertiesData &amp;properties=PropertiesData())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Support</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>abd94ffeacf2a6667131dabf051ee5f36</anchor>
      <arglist>(const PropertiesData &amp;properties, const StateData state=StateData())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometry</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>aad143072171e969402c622cf2e6f0f07</anchor>
      <arglist>(const math::SupportGeometry &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const math::SupportGeometry &amp;</type>
      <name>getGeometry</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a9a4f12ca04e4702005c12a3d2b8b33cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>aa16c361a6172553068b7638f026b161b</anchor>
      <arglist>(bool _supporting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a714629c29e6e6c0b2cdbd4f96aa0a8a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>cloneAspect</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a2f6ded1adf7bf94b5ea2219b35a1e79f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a2937acb0a9b1635e86ea09c67e13cb47</anchor>
      <arglist>(const Aspect::Properties &amp;someProperties) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::Properties *</type>
      <name>getAspectProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a807ae137ea64aa4c73c57f87a3d7b9a8</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>acbf5ef8933f8335ab5aa9c60da06a9b9</anchor>
      <arglist>(const PropertiesData &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a1c05004b6a950a6d658a31b81b978b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>incrementVersion</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a11b1ab21ed0067629afb973c72998107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPropertiesUpdate</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a0d756177774029eaebe7b09609701f2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPropertiesUpdated</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a050393391376ff42024d0dbb931d4c13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a94a86e27fdb8691d31412bd77d969d97</anchor>
      <arglist>(const Aspect::State &amp;otherState) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Aspect::State *</type>
      <name>getAspectState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a1d84287e22c65ada3857c5125c375142</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>aaf4114caf39a4b22ff780fcded7aaf7b</anchor>
      <arglist>(const StateData &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>getState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a19de096c02e4acbfcc8799a3dd51cc3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>UpdateState</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>a9ad4a903337d3e9fa1114d2014f45cb1</anchor>
      <arglist>)(Derived *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr void(*</type>
      <name>UpdateProperties</name>
      <anchorfile>dc/d3f/classdart_1_1common_1_1AspectWithStateAndVersionedProperties.html</anchorfile>
      <anchor>aab43623e995881078646866cb014eb0f</anchor>
      <arglist>)(Derived *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>da/db5/classdart_1_1common_1_1detail_1_1AspectWithVersionedProperties.html</anchorfile>
      <anchor>a7fde45d2751984165544c3dc8454f86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>mState</name>
      <anchorfile>d9/d04/classdart_1_1common_1_1detail_1_1AspectWithState.html</anchorfile>
      <anchor>a96646506e02438db8dd93e671f0ae1b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::EndEffector</name>
    <filename>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</filename>
    <base>EmbedPropertiesOnTopOf&lt; EndEffector, detail::EndEffectorProperties, detail::EndEffectorCompositeBase &gt;</base>
    <member kind="typedef">
      <type>detail::EndEffectorProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ad7befec61b3e834449f1c53cc96ba06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::MakeProperties&lt; NameAspect, FixedFrame, EndEffector &gt;</type>
      <name>BasicProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a7ddc088243dc4f760a9fbcb977be6c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::Properties</type>
      <name>Properties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a31cecba1996f866a1caa4d9ec53c7522</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EmbedProperties&lt; EndEffector, detail::EndEffectorProperties &gt;</type>
      <name>Impl</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a11332640ee8bf15a4d85852ee5073d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Derived</type>
      <name>Derived</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a1e7c44cb7dfd94ea61cadb38ff619116</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectPropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a2c5e9d784c674edc0763646d88870ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>addc9941aced02c95143557599e8bccf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Aspect</type>
      <name>Aspect</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a7a09a3abbcd10a188a9dafff5a420cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeJoiner&lt; Impl, CompositeBases...&gt;</type>
      <name>Base</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>ad9af78a0e035eb90052912c29cf2895c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EndEffector</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af92cffadac276a233b230dff804ab6f2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a235467e11b04e78d5f1b59f087c3acf9</anchor>
      <arglist>(const BasicProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af738c8dffac77ce1984d80648dd822c3</anchor>
      <arglist>(const UniqueProperties &amp;properties, bool useNow=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a5d26b9245bb377bbc748c550b6f07dab</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getEndEffectorProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a5c0681c332f07f32462a023baa9355d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af89d4f498d4bebcdadb3ddd6e2f54d95</anchor>
      <arglist>(const EndEffector &amp;_otherEndEffector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>acedae02a8f5cf0839e9fc03eb3c5852f</anchor>
      <arglist>(const EndEffector *_otherEndEffector)</arglist>
    </member>
    <member kind="function">
      <type>EndEffector &amp;</type>
      <name>operator=</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>aeaf7419486e996ee378c5f1e3ebf2c36</anchor>
      <arglist>(const EndEffector &amp;_otherEndEffector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultRelativeTransform</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a2848b99c5d111c64a1b85829c334a806</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_newDefaultTf, bool _useNow=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRelativeTransform</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a710f8c7f7bd913d242144f96b4f42f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a54baa30c8fda41728c7d0c9fe299d3c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Support *</type>
      <name>getSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a93a922fa23d25c11f8c265a45398b0f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Support *</type>
      <name>getSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af2cf43433aabd7ac6333d91bd9714ce0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Support *</type>
      <name>getSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a5d24376d0ffc6b41bbc5998d5e44296b</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a663165035b646155dc9d0231590de2ee</anchor>
      <arglist>(const Support *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a65826ddf82d4b77e814eaaa2feeb9052</anchor>
      <arglist>(std::unique_ptr&lt; Support &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Support *</type>
      <name>createSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a9e3c3c065111b83381cd1f8db24c5797</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>adba187fe5882920ac8b0086e3341ebd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Support &gt;</type>
      <name>releaseSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a0685a0069d5a78bb80159f6ec54b4782</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyTransform</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a355f29b09d277aeae53b4a71debd04c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EndEffector</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a0310120288c94054ab2e25e07b0ab28a</anchor>
      <arglist>(BodyNode *parent, const BasicProperties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Node *</type>
      <name>cloneNode</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a15c956cd892243781acafc2205162c70</anchor>
      <arglist>(BodyNode *_parent) const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Entity</name>
    <filename>d7/d42/classdart_1_1dynamics_1_1Entity.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>abd18504ee3491fc9fef953e947edc2f9</anchor>
      <arglist>(Frame *_refFrame, bool _quiet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1b9a1d2e6b7af7d3cfc1e4332c8816bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>abf7d735bc5013e746620a91a671b85ee</anchor>
      <arglist>(const Entity &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a69539cfb17b2b8c6f39d5cd3aa988c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1a07773b34d8cb828c7e9fb0b546537d</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a7853339a43da6c645e0e7e82ab4fe9d9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dirtyTransform</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ae3569f7203f5db10e03a8fb514ae294c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dirtyVelocity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a10d530660cb78efa27e9786eb9505c03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dirtyAcceleration</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a74bd9c30372d480ad4a6d760f8ee7d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructAbstractTag</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab7b77e0b87e7af9c8525c2b4749f228d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructAbstract</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab7b77e0b87e7af9c8525c2b4749f228da0376d0cc62fda4f1de1ed180db40c418</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a72caf8d522dc4b0408a597b198d8c2d2</anchor>
      <arglist>(ConstructFrameTag)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a9ba81ff65e1dd34c841a422c1661ef76</anchor>
      <arglist>(ConstructAbstractTag)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a65d524a41527aa134b586405f2a0f5e6</anchor>
      <arglist>(Frame *_newParentFrame)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Frame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aee3a66b0ddf3b769f015c89b610db0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const bool</type>
      <name>mAmQuiet</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a4169c654d2a5e50d95b22922379f88dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mAmFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1b1ed11d66b4113ebd8577927c3766f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Detachable</name>
    <filename>df/dc4/classdart_1_1dynamics_1_1Detachable.html</filename>
    <base virtualness="virtual">dart::dynamics::Entity</base>
    <member kind="function">
      <type></type>
      <name>Detachable</name>
      <anchorfile>df/dc4/classdart_1_1dynamics_1_1Detachable.html</anchorfile>
      <anchor>a5c69a2b54275448fdd6c6f7f04468d15</anchor>
      <arglist>(Frame *_refFrame, bool _quiet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentFrame</name>
      <anchorfile>df/dc4/classdart_1_1dynamics_1_1Detachable.html</anchorfile>
      <anchor>affcdfa10f62780eaf14ba3db2b5515fe</anchor>
      <arglist>(Frame *_newParentFrame)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Detachable</name>
      <anchorfile>df/dc4/classdart_1_1dynamics_1_1Detachable.html</anchorfile>
      <anchor>af4e32415b5ad3ee4a9b0f37035ce04e8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::EulerJoint</name>
    <filename>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</filename>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::AxisOrder</type>
      <name>AxisOrder</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ad6477fa72f5b31310d2a866cc309c974</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EulerJointUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>aedffef780a3bfb5a4e89ab255d3aeb3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EulerJointProperties</type>
      <name>Properties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a1e8c6f6bb691c8791c5f332f880b2611</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::EulerJointBase</type>
      <name>Base</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>abda1be5285a525351f19dfc1e5a50409</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a2a3ab15fac071534364fac0aed78681f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a0845a71945461838ca802558f13556f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>af41672e0fb959919c3e9c859268d1bc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a292bbb2af86d022f3d20f083306f0c71</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a23cf1d6e22e2dd4be2719b65cd79605f</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a9bd827e7daba113aa6e7adfd1cc3dbfe</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a27ce4e79230516bfa1f4b5921b7403a2</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>aa74bba68dfffb6871849eca83fbb3619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releaseEulerJointAspect</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ad4aeeec2223f13408a0a4c08a0e96e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EulerJoint</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a94113290cb25aedaf61fcc46fa7ad696</anchor>
      <arglist>(const EulerJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EulerJoint</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a456f60d529d88aac13968f8dc95b2357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a6f03535f34741a25aa5327be6dcf6944</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a040f7cb051422f3d2e1ed846470a2ae4</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a459a36ffa7720c63b76f02e2ab781f11</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getEulerJointProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a4a45578f7093db57ecf61a8f57a5ccb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a341a430b6121c2155a5f11d80a52421f</anchor>
      <arglist>(const EulerJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ac6a40a2d76dcd46582457cdd6cb6c0c1</anchor>
      <arglist>(const EulerJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>EulerJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a945d7140cf6d288020afc5452c646acb</anchor>
      <arglist>(const EulerJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ad698007390db695fc26d903c77a2a902</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a7df77a38fbba2a1ce7fa38c600788679</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxisOrder</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a2947580ce65af2df1f25e19f99a85b14</anchor>
      <arglist>(AxisOrder _order, bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>AxisOrder</type>
      <name>getAxisOrder</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a0608b7cc9cabf06b70907db8650a7c1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>convertToPositions</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a0090f556ea1a9fbdc3ef8d39f770117c</anchor>
      <arglist>(const RotationType &amp;_rotation) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a5c2d930352ecc038a132d3ce21122609</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>convertToRotation</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>af3930c7824b306b9705163c45f8d2a95</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>aac4dc1888ef010a100804bf8db18c5c9</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ae423cfb40e991d4be0baf0a69ddde9d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>convertToPositions</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a0a5008be5732260123f42aabc7da805d</anchor>
      <arglist>(const RotationType &amp;_rotation, AxisOrder _ordering)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a8ddb8237e4e93414046e56089cedc04c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions, AxisOrder _ordering)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>convertToRotation</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a9aaaef407195f5388136348fef381899</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions, AxisOrder _ordering)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EulerJoint</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a8a5e530bc17cbb44aeee2709405788e1</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ad0f4af3e0ccb333ab0eab97c9f3e4884</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a9de1af7d61192a90f3987f27a03ca9d0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a8f4d75581fc8dfd9454a4b42fd2e255d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a83eddd5abc82ef259fa26f832f9ff3fe</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ab6729510fcb33dfc9776810edae6aad3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::FixedFrame</name>
    <filename>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</filename>
    <base virtualness="virtual">dart::dynamics::Frame</base>
    <base virtualness="virtual">dart::common::VersionCounter</base>
    <base>EmbedProperties&lt; FixedFrame, detail::FixedFrameProperties &gt;</base>
    <member kind="typedef">
      <type>FixedFrame</type>
      <name>Derived</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a97ea5474e8a99d03350e48a531c87ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbeddedPropertiesAspect&lt; Derived, detail::FixedFrameProperties &gt;</type>
      <name>Aspect</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>acd58d0c7b37e0750b83ddac696629f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::Properties</type>
      <name>AspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a9fe1dd1e36565464bf9cd87e8380b96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::PropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a667fc3b7d3c507750e75c1be918acb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::RequiresAspect&lt; Aspect &gt;</type>
      <name>Base</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a45ffcfe97460f6c10a880eb05d4acfc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedFrame</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>ab3a4413a81b9bfb3d1ed91df7febdd2c</anchor>
      <arglist>(Frame *refFrame, const Eigen::Isometry3d &amp;relativeTransform=Eigen::Isometry3d::Identity())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FixedFrame</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a284ba1e6fc1ebb1c030d9e56ae95d91d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a6abe9934e25ac7e5737fda82dc7ca65d</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRelativeTransform</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>aa9899ac9d779f35749270165ba9f7e8c</anchor>
      <arglist>(const Eigen::Isometry3d &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>afa03e240c1736ab12e5f973fb0a8bf6b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>af09781f381e76aec84b366962024b498</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a97c75d000b50df45ce15a48a808c9656</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a63bfc40e3dba66cfa564d1d114843d63</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>adff2e94ec30251f5c8d8e59842a46e0f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dirtyTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aff7a6e3572f3f373465608b9bec8afdd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dirtyVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a650c9cd6259817e85cf577550113c4b6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dirtyAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>afeef0cd99e5c63a5ea80296ccc989a3a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const AspectProperties &amp;</type>
      <name>getAspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>abefb3bea09385788bf00867bd47a68ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FixedFrame</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a91b2cc47c22cd441e7f5632d4bb33b5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FixedFrame</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a0f75ab0a5ff741c5ebff26eb5e936316</anchor>
      <arglist>(ConstructAbstractTag)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processNewEntity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2f08842b9f2d57889c9f5add7f3a30f6</anchor>
      <arglist>(Entity *_newChildEntity)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processRemovedEntity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a682ad78a596a6b23a4f039bd5b9213c4</anchor>
      <arglist>(Entity *_oldChildEntity)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AspectProperties</type>
      <name>mAspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a07c72a6b991a9fde7662062f75371b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const Eigen::Vector6d</type>
      <name>mZero</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a8a04b423055016a8b4e89a5f31b07d07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::FixedJacobianNode</name>
    <filename>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</filename>
    <base>dart::common::CompositeJoiner</base>
    <base>AccessoryNode&lt; FixedJacobianNode &gt;</base>
    <class kind="struct">dart::dynamics::FixedJacobianNode::Cache</class>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a05429ef46010490758fd9f42d96e3b76</anchor>
      <arglist>(const Eigen::Isometry3d &amp;newRelativeTf) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dependsOn</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a0f166fe0a5a039d52b85804bb9f8be63</anchor>
      <arglist>(std::size_t _genCoordIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDependentGenCoords</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a34c2e47550eb4ffbb5fedbfe89071fd0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getDependentGenCoordIndex</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a523ea859e1973c78d09537488ac1dac8</anchor>
      <arglist>(std::size_t _arrayIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>getDependentGenCoordIndices</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a5b7778bb0ab6d62d4e5e1dbf820915c8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDependentDofs</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a85e2228fb7efa2d8c68a5378dca2e099</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a66093ca79eea687c79731eb3cd554c75</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>acfea1fae91f610ace7fa7211ab06753f</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a15d401f415715bf9d917ab77bc8fa0af</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a5f541f09c7f34c6c90c8f5c1c6cdf058</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getChainDofs</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>ae326d3d43464f0e61a8f51c0b90e6e26</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInBodyNode</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a2976091cf27d7121ae52393bd8902d43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>ae3e45964c4e127c1344038f9d86949b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a802f6324b658acfa2c017c9e1af6a494</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a522ad0ba947468331f61968521bc005f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a837eb31019d03c06d40e2fe0d223dd3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reattach</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a956604ad92530ee558259bf2822c9e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobian</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a45f2f1926487a78577721b51c2fc9e92</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getWorldJacobian</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>ab04f488dcd4e0a85757bd772c4a81db9</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a3f5df04fac40c48712379ab4dd5f3467</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a3aea8c3f191b33499878f71a0924eeed</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FixedJacobianNode</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a6e781d4a25fc184ed83df3e66d9c0db2</anchor>
      <arglist>(BodyNode *parent, const Eigen::Isometry3d &amp;transform)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FixedJacobianNode</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>ac9b702c7d71359401c2262f82e734aee</anchor>
      <arglist>(const std::tuple&lt; BodyNode *, Eigen::Isometry3d &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBodyJacobian</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a948170ce442296fe9845f10f9964466b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobian</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>af179d5ba9e11038541ed45fd7dc9d228</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBodyJacobianSpatialDeriv</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a26ac4e9d5128eeb5b4cbca6ae56f5bbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobianClassicDeriv</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>acd765e961b5a12355b22da0c435337b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Cache</type>
      <name>mCache</name>
      <anchorfile>df/d75/classdart_1_1dynamics_1_1FixedJacobianNode.html</anchorfile>
      <anchor>a632b703e2ba77dd1fcd4a8771d014e92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::FixedJacobianNode::Cache</name>
    <filename>d9/d66/structdart_1_1dynamics_1_1FixedJacobianNode_1_1Cache.html</filename>
    <member kind="variable">
      <type>math::Jacobian</type>
      <name>mBodyJacobian</name>
      <anchorfile>d9/d66/structdart_1_1dynamics_1_1FixedJacobianNode_1_1Cache.html</anchorfile>
      <anchor>a0b5325674f1e90e0f3179f3c87a5efa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>math::Jacobian</type>
      <name>mWorldJacobian</name>
      <anchorfile>d9/d66/structdart_1_1dynamics_1_1FixedJacobianNode_1_1Cache.html</anchorfile>
      <anchor>a966f35507b4655ec574e3e32854a94bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>math::Jacobian</type>
      <name>mBodyJacobianSpatialDeriv</name>
      <anchorfile>d9/d66/structdart_1_1dynamics_1_1FixedJacobianNode_1_1Cache.html</anchorfile>
      <anchor>a831c0a56aceb9fe3c9806fb52024ed27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>math::Jacobian</type>
      <name>mWorldJacobianClassicDeriv</name>
      <anchorfile>d9/d66/structdart_1_1dynamics_1_1FixedJacobianNode_1_1Cache.html</anchorfile>
      <anchor>a4c7169690e82577c309c825e9580c3a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Frame</name>
    <filename>db/d38/classdart_1_1dynamics_1_1Frame.html</filename>
    <base virtualness="virtual">dart::dynamics::Entity</base>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ad9a0a07845f5042d17e271c7449eff68</anchor>
      <arglist>(const Frame &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af9603dedf9dcb0cb65f60356fafc6699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af3cdd8f9baaf0941f202fd38573cb1bc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a56266fc322dc4915f762c1347aeee6a3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae6a85312c5dbfba5c78b18e89fa2519d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a79abd92e6bef6efb58ffae4b2988a72f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2f0f4068238a39f6aff37428d5e42378</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a8683db56565dec586cb20f61adc76cf5</anchor>
      <arglist>(Frame *_refFrame)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aabc87d5de28139a116fbce4fcf17c85a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a30eb83ef7adfe617e659f4519fd17f52</anchor>
      <arglist>(ConstructAbstractTag)</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>ConstructWorldTag</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a7885fed0f95dd721da216d553b70ae60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <type>@</type>
      <name>ConstructWorld</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a7885fed0f95dd721da216d553b70ae60a0f22a2cb742313a96324231a4a1eeedd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a4fffa772feca904ae0d5f93be700fc80</anchor>
      <arglist>(ConstructWorldTag)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const bool</type>
      <name>mAmWorld</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a3bd1e48a1fcdd3ad084f89a3e33fdd1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mAmShapeFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2cb32c1420beed97d7ac97f02c7cec90</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Entity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a614439ccac0344926adc4c0165d64060</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>WorldFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a289ce3131b796e0e3ec34d284249cdaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ShapeFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a5da04225ea21f1c299f7587aa8e00d98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::WorldFrame</name>
    <filename>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</filename>
    <base>dart::dynamics::Frame</base>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>af64008785bea52fe998839c39fe4fb95</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>abf0ebbeb5d1f13d35030149b9ef4c1f9</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>ae6efc30c68de1454b7f9feb4abd81a74</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a12f0572e4c083a1e23a965a2edfdc55c</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a544c8a1c432e10b17d603e63881028a9</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>afff6006c547b1139763cc07fec2b6e3c</anchor>
      <arglist>(const std::string &amp;name) overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>acf37830a3e1f6a889035efb05908ff7f</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>WorldFrame</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>af8c9a39291f05c38178a89f9960338da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Eigen::Isometry3d</type>
      <name>mRelativeTf</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a0d59244f1dea78fc0aa99e718657fcd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const Eigen::Vector6d</type>
      <name>mZero</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a944be965ab58d08a5394fdf99299ce1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Frame</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>aee3a66b0ddf3b769f015c89b610db0c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::FreeJoint</name>
    <filename>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</filename>
    <base>GenericJoint&lt; math::SE3Space &gt;</base>
    <class kind="struct">dart::dynamics::FreeJoint::Properties</class>
    <member kind="typedef">
      <type>GenericJoint&lt; math::SE3Space &gt;</type>
      <name>Base</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a63ad27044c4ef48a2e161b5e48a1870a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericJoint&lt; math::SE3Space &gt;</type>
      <name>ThisClass</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acfd79266275691e600f74f5fa4867cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SE3Space::Point</type>
      <name>Point</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac112e84b6e09e3dc3490bf0f80df0cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SE3Space::EuclideanPoint</type>
      <name>EuclideanPoint</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af2aabc4ff535232c9d609fd773341f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SE3Space::Vector</type>
      <name>Vector</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aaf5267bedde8842807a55eb5b97ec0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SE3Space::JacobianMatrix</type>
      <name>JacobianMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6d76587cd89b02fc3220f6d4175bd1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::SE3Space::Matrix</type>
      <name>Matrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0471a52d2a6eb3c5fd3b760ff4949627</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointUniqueProperties&lt; math::SE3Space &gt;</type>
      <name>UniqueProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a549e6f5cc7c2e9e9e1abe5f4980fb945</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointProperties&lt; math::SE3Space &gt;</type>
      <name>Properties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9a3089245ab839f160ef968632e4f93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectState</type>
      <name>AspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a394ed6fc8c892b5612d250d40310aa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>add694724d879d201d96331a4cc12324f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FreeJoint</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a204d737140fec81f4303615493813af0</anchor>
      <arglist>(const FreeJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FreeJoint</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aee51e1b0ccf3ea427243dafbbe9e7c78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getFreeJointProperties</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a126ae930237b0fca29c3ca9ff26dc4b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab034fe5326085db41d5bc37777762b67</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>afce0d33e6bf79aa6881410c47a777b0f</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialMotion</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a668a2489360d6b3dca86e53b6740d577</anchor>
      <arglist>(const Eigen::Isometry3d *newTransform, const Frame *withRespectTo, const Eigen::Vector6d *newSpatialVelocity, const Frame *velRelativeTo, const Frame *velInCoordinatesOf, const Eigen::Vector6d *newSpatialAcceleration, const Frame *accRelativeTo, const Frame *accInCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a01ffce4b0e965bf33256390b57369913</anchor>
      <arglist>(const Eigen::Isometry3d &amp;newTransform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab9e0af27b7fd844a9850b774cf71b0b9</anchor>
      <arglist>(const Eigen::Isometry3d &amp;newTransform, const Frame *withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a5fbeb4648f6c9c05eeba7ac8fb82fcab</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a0a5d92ba58b461cbbe26ab04799afac0</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialVelocity, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>af4316321021c5e71bec1f7394a699015</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialVelocity, const Frame *relativeTo, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a5fc60f9aa03a6c9ee8e99ccfe5990eac</anchor>
      <arglist>(const Eigen::Vector3d &amp;newLinearVelocity, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab8d563588f1324da299e17830bcaa6eb</anchor>
      <arglist>(const Eigen::Vector3d &amp;newAngularVelocity, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a6132a8389a3b702d34215ac653bdd79a</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialAcceleration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aeff18da2935b23ea99bdfd869a90f7b7</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialAcceleration, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a8fdbf7e13ec32821d5dbef6d06acbdfc</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialAcceleration, const Frame *relativeTo, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a22fda685c3c4a053886f5b00d524d44b</anchor>
      <arglist>(const Eigen::Vector3d &amp;newLinearAcceleration, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a6a54226dfc42516d401594601eb97c89</anchor>
      <arglist>(const Eigen::Vector3d &amp;newAngularAcceleration, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix6d</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a5432259e86518813b318a10dbb2fb885</anchor>
      <arglist>(const Eigen::Vector6d &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a0c70b3e9b5194fad2f52051073d0df12</anchor>
      <arglist>(const Eigen::Vector6d &amp;_q2, const Eigen::Vector6d &amp;_q1) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3e79d6ea6bfdcc06cd63a789d7fda95d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a22e44bfcfa7e8be5838a0a7b2b196daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3b03606625f36aced4f41a257c92adf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adc7f6dc33d3891dfe0f5bfa9f6deddb5</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad408c920d02f70d7a88cfa8e2aa54bed</anchor>
      <arglist>(const typename ThisClass::Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a52f6187489d93fdf7bf895456204074e</anchor>
      <arglist>(std::unique_ptr&lt; typename ThisClass::Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>createGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a1c78b33dec233b6cb0fb6a4e880635</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeaee8a79e3bc4399eb0b234f016b9a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; typename ThisClass::Aspect &gt;</type>
      <name>releaseGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fadd21f5d73b912f22c0b0516514527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f788c98255e791ab707289767debd68</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3523067d4ff3e9ad8550f2f7ce23a9ce</anchor>
      <arglist>(const UniqueProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0040637029227fd832d44573723ce99e</anchor>
      <arglist>(const AspectState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a984522e489da796fd4d4720811292b8c</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getGenericJointProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6bee56cc3a2e41b3c78784b5aa117cbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08db2db7a81845f2530d2f30f3566f8f</anchor>
      <arglist>(const ThisClass &amp;otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6c9fe8a8fd9f3eaa984c09cd603f0e7e</anchor>
      <arglist>(const ThisClass *otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ecc4745aad10f031ebce166ad36dc96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4bab8d9105d12abfe9be2f80dc12242f</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5fb3a506f557cbfdb1af2b742d211ecb</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4eb9e627a95c43c0202633966384df4d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaae16cb1c31b56abfff161121f99460</anchor>
      <arglist>(std::size_t index, const std::string &amp;name, bool preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a59ce80703b9e3f60868775b28626a857</anchor>
      <arglist>(size_t index, bool preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56205280218100c7506530db664bd623</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81d7363a74b7e72223e6225727021bf4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afed9c73fc6f50f3dd1e03b043e1bd504</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae57be9982b20b44a850e0c5354c56aa4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a33fc401935dc63d910d1bad81d45a33b</anchor>
      <arglist>(std::size_t index, double command) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a03d8b73d26cff1b5fe37658cb7d855ae</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab69218dbe9868776d65a76713467f2d8</anchor>
      <arglist>(const Eigen::VectorXd &amp;commands) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a055d196729db854f02ba40c237672d96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a365ded3be7bb7c5644241cc2490a9a95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a319c5bddebe18f00481c602e9e035ccf</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6d4d257a17185e40ce0b4d9874c7838</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa437a4f00772c2abf60f5c5204ae4c40</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6f2eb6a3dc43723a866206d271b37050</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a261c1c76668ca98cef95fd8d97134078</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af074da7d0fffa875a40313ca78731cb0</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7c7b377f1dea6a459c7e9600f41237f1</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56189c370db7512ed8d49c612358f74e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4c9c5ac9df1428c564a32b2ab5a4d6e9</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a818b16aec9e109f01bd07b35d55d730b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2091a3ebc63590a8e5f349c07f458c9</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a3c465480009c45584703cc84e3fbe8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac328d1b5b1e6b84f122e716bbe7944a9</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3ebb9d44080fb040e3b50dae91e183b</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af130fa6d4c82a20035eaa0593a36d080</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3622d4dde6f34d8ab1cec38c0cb91c47</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abd95cda7923b915fa3eaf488c126928d</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aca687b7cb5f70d368483dffbbcb6a99d</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7b2f0f0c27537be89b21399f3770c5f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a915177768c6b9fb0c731e67383362831</anchor>
      <arglist>(const Vector &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acf5d6f5fe1dd4144f99886f09251f90b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae30263365345e15f555a29609bb11635</anchor>
      <arglist>(const Vector &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a06ebc236d884a257e93aff551a60f85f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08bc31a281a0950acfd9f690e64e527b</anchor>
      <arglist>(const Vector &amp;accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a310c7b86fbacd458cdfb30f9539b5d6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a67f6e5cb08930ff34f24646d134a27c0</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3df75672b028ae7c6ac54d31ff0890e2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2c51c397e915dc11c48f99125677a288</anchor>
      <arglist>(const Eigen::VectorXd &amp;velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a79301b36a7cf4e970512db7321a3a4eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abb2f03e5c32d3574db7db76ce1cb0282</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab9fa2df5d92d77801b6492608ffefde5</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2509969cf54c235f68239ec13eafa327</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a23b5e40b6e7efd4dba8c31295dcda43f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac09ed7eeceb1de17b397022209bf9d1a</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5ac656366ddebb5af26d12832a533efd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d5879a4c9661cf1f73cb9ca2252e197</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae68b99a9f9feb4f7a88f691e7549feed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90aa26d57bd81027c86505f10215b944</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a062edbfb0695b30c8e0a31aa4063df56</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a489c73d485616642c20ebd2759fa7f0f</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d69fbc7c0ddccb0248c25ba5bf732c</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a498decf0c8e6cc672d76299635b38106</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab611d3ebecade8bb583a1ac6391275f6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afa69ee9d8ed2a4702ba73c4297aa093a</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a74b01b371b5c94d97e45810341ff9278</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fc7f065c1b48b85fd3e6cfab80df9f4</anchor>
      <arglist>(const Eigen::VectorXd &amp;accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aab693faddac9e163ae2dde6390a7eb06</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6cf54858df69658ce30e7bde818b3b0</anchor>
      <arglist>(size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aea6b76529cbf28ddab21a093f131e6f2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a951f5134d43732ed08a5b866643065db</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2226b5e13836d3cb6f33ab2403ab2ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaedad85161b1d459e1cbf295e7423e7</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d109ad77448660cd79a5885fc2bd387</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3c8c05f3b0bc1c77dfeb9a68459e578a</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1e0ba59064fb4e62fb70738371264289</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af75fff85fb299a60b5e2544360fc85ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a43dd3ca22950885428e9d65c46823786</anchor>
      <arglist>(std::size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a48d0c690f9cb01fe2fd0fb833d7003ea</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af568531bae6ca2c3474f56f220fb8760</anchor>
      <arglist>(const Eigen::VectorXd &amp;forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a364acf5ea7b44facc5af996ae597be70</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7ed2fa5153368fc645a4cd91ea7c2e8e</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a80c3b50b3f9644036ca6218705be30b3</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a02a7547230a0719cb581ebccae1414a0</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d1c91663ef76012d52ae331b6b3e5b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae544a782871da33239a73dd716a8527c</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad4d5390eb206173ace8add2cee8b6314</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a090c9734e2b9cf079c129c18c2c0e9c4</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9994aa5f4eb46980e6cee8b1449a4cdc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a510e581b760ee2c8388452721e07be4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a38523b9cdd019e0fdfa649e66c3ccfa5</anchor>
      <arglist>(std::size_t index, double velocityChange) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5b79e7ace836473925a8d1caa33f9c0b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aff19b9148a33dd9b072e49f9753d4d5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3d5c3ef5328c2a9f43f36ebfd0dc968</anchor>
      <arglist>(std::size_t index, double impulse) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afe22c1f788901c3005553c8be9c7a2dd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6228fa5f1e8a10eb63a35ed828bfa5a2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6eceb01c0e7e950e158fa5a46f9325a9</anchor>
      <arglist>(double dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7be803c3e7ce77d01bcf8f96c33d6b81</anchor>
      <arglist>(const Eigen::VectorXd &amp;q2, const Eigen::VectorXd &amp;q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a55ca1997e1be3cfd6e0197ac90d2de09</anchor>
      <arglist>(const Vector &amp;q2, const Vector &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7edea01b4d9e982bd308c49970db9d12</anchor>
      <arglist>(std::size_t index, double k) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8aaadb5f07668e5a34d5f4f2b944e94b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0dcfd0921ececf58033c676472f3f8e1</anchor>
      <arglist>(std::size_t index, double q0) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6a7e404ade71c2b186ab9c72afbf1dfe</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8c3e0f873d2bfd797973d2b04671632d</anchor>
      <arglist>(std::size_t index, double coeff) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb29c90a2439d918beb82731d00901f4</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0b425b68b4b040ad7d68d6a52314c810</anchor>
      <arglist>(std::size_t index, double friction) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ace08d84bb1e048b8cacfa21ae5cc5b47</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a89bdb5e079ef5ef36362f1111c90f911</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4d0ed6515f3b54197bd7d3e24a332035</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa6ece1460a81727104f716b4ff6fea45</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>const GenericJoint&lt; math::SE3Space &gt;::JacobianMatrix &amp;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac35806976c9d4bac42246b650d7d60c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual JacobianMatrix</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb38eac83601e62c86da2954d0fa6229</anchor>
      <arglist>(const Vector &amp;positions) const =0</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobianTimeDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2b26cb2bcd5234808e46cf1ace4a5c63</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const JacobianMatrix &amp;</type>
      <name>getRelativeJacobianTimeDerivStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af3a6ff49d31d9ce7829f2df717efab86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a451786dabe667bed168310e78c3a35af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector6d</type>
      <name>convertToPositions</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>acc7a438182cba8bc736dc83ca9df3e6f</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_tf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>acb4ab7d8fec8da1295ac0e9422761e0c</anchor>
      <arglist>(const Eigen::Vector6d &amp;_positions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab870c5dc84953c39c3cd5a39bb49f34d</anchor>
      <arglist>(Joint *joint, const Eigen::Isometry3d &amp;tf, const Frame *withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a02089cc6bd6d2cecade8c8eb3bd2ef2f</anchor>
      <arglist>(BodyNode *bodyNode, const Eigen::Isometry3d &amp;tf, const Frame *withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a61a15d70bd2413d42a15178b7cef0d22</anchor>
      <arglist>(Skeleton *skeleton, const Eigen::Isometry3d &amp;tf, const Frame *withRespectTo=Frame::World(), bool applyToAllRootBodies=true)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81106cf3d83e42992e60d19a6feb8bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FreeJoint</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a12c44f7d939d1dfa7f8fabbcf3afc2fa</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aa3dbffdac0691038ac19af3bfa1137ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aa12efb5db61fa61cdf8ec37571ae7e50</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a2c1bca9df00481db2000d87567bb0a3e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a56678a5490b2ed9b14a31c045c97c4c9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a52dc0d3c8517beeca2adf4676e5754db</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a8fb17f7ebed4c4fd61b409fb7f50b991</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getQ</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a91ed82b4f0aad5ab84f076c26a35b60a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad744bdac6c626ade6d4ced294e0dbcdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abdc708b0fa38eea703b6c2b25e680577</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e74770ca664e0aceed8023fae2a7753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae4ca237cb453284ca5a4843ce0c70a10</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae35d4b29954c549ebf5c621ebfde6e55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativePrimaryAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f3541ab51e26f9a6f00b70de916cba7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5693d3a926198146fd184191e1bfe667</anchor>
      <arglist>(Eigen::Vector6d &amp;vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ca12fa08835c599d8a6be4d898a9696</anchor>
      <arglist>(Eigen::Vector6d &amp;partialAcceleration, const Eigen::Vector6d &amp;childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3fdb5d24f5f0a5187944b451af88f68e</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad7adf7c47fbcd03cc582cf86d11eb8c6</anchor>
      <arglist>(Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a54ca1558aa00bb19a51721a33db4f145</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2f520873b892ab4f5f9d1f7a5c5441fd</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertiaImplicit, const Eigen::Matrix6d &amp;childArtInertiaImplicit) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e15407a0387b67b8c39a075adf2f851</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a249c70e9db2fd0c250dc6ff5b2bd7207</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acbc422800715340aa7635ae535df88bc</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce, const Eigen::Vector6d &amp;childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeab2b61ca97501cbf7057024c377121d</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasImpulse, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6011c89b72a200e08d6d92632ef478f1</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1232b652a7763e11e445a9d855a682be</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa0cd8e3625c2a2398f0236afdb31419c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abe97b43cd57c209fe35ac73e4f8158cc</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a331c9dcba3ace1d818e2f62e68a3a7b4</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d9edceaaed0915c6b5f2c7fca01b161</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForces, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a15b8b58fa6a8222215e7e2d1e1bb35a6</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForcese, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aba2cbf2472754a730d7b8a2022bc17a7</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9b52a8a7922c399b5ffc233aeef5e40e</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6da9c563c626c5777c366406292096cb</anchor>
      <arglist>(double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af19ec6cf064e7e6effbaa1349f5eb0fe</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a925acfefe37823a98f40901cf5c575a1</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af6206c4544c095a944e39bb9bf399456</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af256acd666692cf51831971ef2155aa1</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab7bc4131dcd3e2cd423ab5acb738ab1d</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acefd31a0913e34d7e82735b15b6e3ccc</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6c950bee49174a19122cfbc383131f0</anchor>
      <arglist>(const Eigen::Vector6d &amp;spatial) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mQ</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ad78aafd9c3250d3df8e9342198fbbf7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, NumDofs &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3491b0d1a3f09f41789001d4eec77817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1cbe6fd5a2edcd4a58469b1a395e3852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad2496953acc6dd5ce926b19a582d5308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4530f4ac2b08bde706908cbcd75208c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac427840c47eecd6143f156dc00b7cc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90e09106897395febf5346283839b33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d4729d67f1b8bd09222cd1af03528c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae0f8f270603b17142763e62187f857d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0eb851e094d5899a52f14514dac3e752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5d317587b9a874fa8e927145ee429833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a11f84a31fd25f6dbb3fcaa683c24c994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abfc60c844e4f03af9f77fc657bb4f46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::FreeJoint::Properties</name>
    <filename>d3/d91/structdart_1_1dynamics_1_1FreeJoint_1_1Properties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d3/d91/structdart_1_1dynamics_1_1FreeJoint_1_1Properties.html</anchorfile>
      <anchor>aef4bec43a41fdcf7c646a901797386da</anchor>
      <arglist>(const Base::Properties &amp;properties=Base::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d3/d91/structdart_1_1dynamics_1_1FreeJoint_1_1Properties.html</anchorfile>
      <anchor>a1807340ff846f523f8872fe128d75771</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Properties &gt;</type>
      <name>createShared</name>
      <anchorfile>d3/d91/structdart_1_1dynamics_1_1FreeJoint_1_1Properties.html</anchorfile>
      <anchor>afa266f726d2787b5f53b140ea454a01d</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Group</name>
    <filename>db/db4/classdart_1_1dynamics_1_1Group.html</filename>
    <base>dart::dynamics::ReferentialSkeleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>ae76a96ce16e8dc90513e9b9e76ab7a33</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapBodyNodeIndices</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>aa140c88a1b63b96afa68f4356cb414af</anchor>
      <arglist>(std::size_t _index1, std::size_t _index2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapDofIndices</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a0dd807f03e797d20c8689c3a319394e3</anchor>
      <arglist>(std::size_t _index1, std::size_t _index2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addComponent</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a701c68983261f7157a2243383f7a8ef1</anchor>
      <arglist>(BodyNode *_bn, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addComponents</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a67ae597485fe09101c01bdfeaf45f4d7</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeComponent</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a303570e2cd201b6ca3b7b6061f02eb20</anchor>
      <arglist>(BodyNode *_bn, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeComponents</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a0b6b9a3006a9a3dab6c794a61d1e4c34</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addBodyNode</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a2de1852645d17bdbda0ac0281439f387</anchor>
      <arglist>(BodyNode *_bn, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addBodyNodes</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a7e3fd11dc79ae8c6aad0b306a3760eb6</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeBodyNode</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a09efcd268edc04e5fd25b6b0a56cd602</anchor>
      <arglist>(BodyNode *_bn, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeBodyNodes</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a0962a70d1e07bc1b443cf510b95f7b0e</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addJoint</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a8b48b7a7b0e8d92c0744cf9626513e75</anchor>
      <arglist>(Joint *_joint, bool _addDofs=true, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addJoints</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>adf3248d15391cd7f7e0b7bb4bb46f7d7</anchor>
      <arglist>(const std::vector&lt; Joint * &gt; &amp;_joints, bool _addDofs=true, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeJoint</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>ac4ae57c4fe7432bd432a233fc5f9eaf7</anchor>
      <arglist>(Joint *_joint, bool _removeDofs=true, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeJoints</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a5a0e61c101f8d788b388cfeeb4da7762</anchor>
      <arglist>(const std::vector&lt; Joint * &gt; &amp;_joints, bool _removeDofs=true, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addDof</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>af0df7523983f28ecac403c47dd3ec4f3</anchor>
      <arglist>(DegreeOfFreedom *_dof, bool _addJoint=true, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addDofs</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a37a499fc361c83bbe322c1fe33e92ddb</anchor>
      <arglist>(const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs, bool _addJoint=true, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeDof</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a21b02219b48d83fa2f127555c61b8f11</anchor>
      <arglist>(DegreeOfFreedom *_dof, bool _cleanupJoint=true, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeDofs</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a80fd0a48f445e6be0a34fd34bd75a3cb</anchor>
      <arglist>(const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs, bool _cleanupJoint=true, bool _warning=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupPtr</type>
      <name>create</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a6afd47101a37136f18edee917cfdc58d</anchor>
      <arglist>(const std::string &amp;_name=&quot;Group&quot;, const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes=std::vector&lt; BodyNode * &gt;(), bool _includeJoints=true, bool _includeDofs=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupPtr</type>
      <name>create</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>ad56ebc8166b94e9cfb283fa2ed0e4588</anchor>
      <arglist>(const std::string &amp;_name, const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs, bool _includeBodyNodes=true, bool _includeJoints=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupPtr</type>
      <name>create</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a7192b55aca49719b458023507f7a0a63</anchor>
      <arglist>(const std::string &amp;_name, const MetaSkeletonPtr &amp;_metaSkeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Group</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>ab2d609662b1517d505cb6c1bac28bc10</anchor>
      <arglist>(const std::string &amp;_name, const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes, bool _includeJoints, bool _includeDofs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Group</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a35a848180b6e52919c7c7c9fe18c6ca1</anchor>
      <arglist>(const std::string &amp;_name, const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs, bool _includeBodyNodes, bool _includeJoints)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Group</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a8e06a0a102b53086f4afd4f430513c0f</anchor>
      <arglist>(const std::string &amp;_name, const MetaSkeletonPtr &amp;_metaSkeleton)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HeightmapShape</name>
    <filename>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</filename>
    <templarg>S_</templarg>
    <base>dart::dynamics::Shape</base>
    <member kind="typedef">
      <type>S_</type>
      <name>S</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a226af859935ecce6596aa237d6d5be43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; S, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor &gt;</type>
      <name>HeightField</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a98d24421f209d3a40e96e665f5b241d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HeightmapShape</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a860c20ac9739de57d2be5cb1c3d177cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HeightmapShape</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a96fe4e0e82dc128e3356d24f8708a1f9</anchor>
      <arglist>() override=default</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a96f95b599a056cb351009eb9a860c519</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a1a8f2ed8019d0c5b1b1f224c870ebd48</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a09d7ff7d6d408e574143fd3dba2ccba3</anchor>
      <arglist>(const Eigen::Vector3d &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getScale</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a402d57ec8997cec120d55862a47d6a3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeightField</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>aef7aea6450604cc54bc1770a62d6f7cb</anchor>
      <arglist>(const std::size_t &amp;width, const std::size_t &amp;depth, const std::vector&lt; S &gt; &amp;heights)</arglist>
    </member>
    <member kind="function">
      <type>const HeightField &amp;</type>
      <name>getHeightField</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a72827adc309a2d07f2a2b58c3d25d9f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>HeightField &amp;</type>
      <name>getHeightFieldModifiable</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>afa051913380c29c435903638ed245bbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipY</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>afd75c87be038082ee3e40a6b38b61f8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getWidth</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a877f671b68ad7632265754f3dea88935</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getDepth</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a286d8b659cf8b514ec9d5d537bf3c024</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>S</type>
      <name>getMinHeight</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>ab034eea22faf02c26f576365645bad7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>S</type>
      <name>getMaxHeight</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>aade593fc62f5159580c8143717955f43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a373558a0591a98b84e7df590d9190c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a8316bea2ea69297b4a1002b6b7837f1e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a3256b49ee86135979b9e95f23c3d7db5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeBoundingBox</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a233057867f6f6dbb423b894f68d5d730</anchor>
      <arglist>(Eigen::Vector3d &amp;min, Eigen::Vector3d &amp;max) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mScale</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a60fa8c6d078037e1146b1dc5fd83f963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HeightField</type>
      <name>mHeights</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>a62ad3f9f63af159dd8f8d37693921aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>S</type>
      <name>mMinHeight</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>ad793fa44934563a5e72612ca21e69663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>S</type>
      <name>mMaxHeight</name>
      <anchorfile>d7/de4/classdart_1_1dynamics_1_1HeightmapShape.html</anchorfile>
      <anchor>aa7a698d56ffe60a8314538f2a8f5e0a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK</name>
    <filename>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</filename>
    <base>dart::common::Subject</base>
    <class kind="class">dart::dynamics::HierarchicalIK::Constraint</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Function</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Objective</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchicalIK</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a7b5e108f2926e82c9780728568acd1e7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>aaea5d53d25dab0d574a95c7191cf8bc4</anchor>
      <arglist>(bool _applySolution=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a53cb002fb86d571ad47a90ba758d05c3</anchor>
      <arglist>(Eigen::VectorXd &amp;positions, bool _applySolution=true)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; HierarchicalIK &gt;</type>
      <name>clone</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a096a2f7f05b1bf7422510d8ca48e59ec</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ace3106f744460be171e17eb4e7f8b01d</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_objective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a6e3a5559d97ffa5223b0af5f7b20571c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a469522a7462040e029e79b786c466dc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a3fb12a6a67bc9dbfa547b5430383b0ad</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_nsObjective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ab9bc37e2bbe855f281d3d7f1d351b60e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>abfdf3e9b5aa21c6a24c1724a9eb86456</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a4eec316087be11c8fa667173d961c70f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Problem &gt; &amp;</type>
      <name>getProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a8f286830406e442f0118d0924d1f7401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Problem &gt;</type>
      <name>getProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>af1e893fc3d92b9345517f3f1fa94e1d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a1744a89b2f9bf0d096afb9596c8a5cc8</anchor>
      <arglist>(bool _clearSeeds=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a6814f07af2cfb3826e329e66ab294fed</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Solver &gt; &amp;_newSolver)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Solver &gt; &amp;</type>
      <name>getSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a55f42c0ea8af80753effea41153d7d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Solver &gt;</type>
      <name>getSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a465ccc88deb03763856352cb893f0eee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refreshIKHierarchy</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a7d8cc0350157f96420cc095656c7337b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const IKHierarchy &amp;</type>
      <name>getIKHierarchy</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a433cc2ee10a47aeaa9f682a4d67dfca7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Eigen::MatrixXd &gt; &amp;</type>
      <name>computeNullSpaces</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ab7c8f17f4f28cd7f3e47835eed5ab665</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a771082d00aafa54708f520bcb7be6e5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a58c007feb71456be40a5a991cf1e5dd3</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ae4beed01bdca7e74ca39dfbc38c7eb2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a4c57456b6f006442e730faceee9e13dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getAffiliation</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a88c8ab69f688a4ceec7d39b3dd789573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getAffiliation</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a3f6d78109d94ce0cf4b21b597767e865</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a0dd67adc0d3cfe7b0d1ddd661fa6acf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HierarchicalIK</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ae68d967ad4942b9873c147875b69138c</anchor>
      <arglist>(const SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a8a9e5c76f2941a43dedfda7db9253d28</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;my_ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyOverSetup</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a2a8c6a89c8b5c343ec909cfc5232d402</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_otherIK) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WeakSkeletonPtr</type>
      <name>mSkeleton</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a18916124af441aebbe8bc48dc02e6093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IKHierarchy</type>
      <name>mHierarchy</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a0e547814f5fc0a8c39894bbf4001758c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Problem &gt;</type>
      <name>mProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ad44a2739e55ab7e53d9a137426dfd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Solver &gt;</type>
      <name>mSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a16df8ff934c1134325ebfc21d064728a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>optimizer::FunctionPtr</type>
      <name>mObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a2cc0ca997c817a95e78ce16223c8ffd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>optimizer::FunctionPtr</type>
      <name>mNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a17e517735e74c512c31e2d9d079ecb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; HierarchicalIK &gt;</type>
      <name>mPtr</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a9a6cf7de383c3c47ede262f079a0e447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastPositions</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>aa94741a795804e6f5c32936b25027ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
      <name>mNullSpaceCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>aac6e5ed67120a122e5780210eddea8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mPartialNullspaceCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ad2182863a87f98fd9cc99691e6f14e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::JacobiSVD&lt; math::Jacobian &gt;</type>
      <name>mSVDCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ad80b43ce92fdc7453aeacf5e76607818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mJacCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>af2aa2f6da386d41948f896c58c825b62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK::Constraint</name>
    <filename>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</filename>
    <base>dart::dynamics::HierarchicalIK::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>aed43b7169bdb89e1a8b4b31a6a398c54</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a4be07f394c5f9831939b6f3dbb8b4fd4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>abdf7908474cc16d70b06a287afdf6cf4</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>afe31c9f91a4ec19ceaf57791ec657be9</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a5612a45345ba9317b75ab1dbbc150ee7</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; HierarchicalIK &gt;</type>
      <name>mIK</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a2372f4ba752d0edf7afdf7733f85e2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLevelGradCache</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>af72da1086aae91bf5f514fc2009bfc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mTempGradCache</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a0c5861f24e06ac935cc3e314435cb632</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK::Function</name>
    <filename>de/d0e/classdart_1_1dynamics_1_1HierarchicalIK_1_1Function.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Function</name>
      <anchorfile>de/d0e/classdart_1_1dynamics_1_1HierarchicalIK_1_1Function.html</anchorfile>
      <anchor>ae1d0b1add8da7a879567176412c6f198</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK::Objective</name>
    <filename>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</filename>
    <base>dart::dynamics::HierarchicalIK::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Objective</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a0cf639ed9d1dc991251fbb12fe3956fc</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Objective</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a85722ba4d3b3d772aaf095e1acfa75e5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a3f46d649f4d86de2fda1ed5561814747</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a76e6f4dd1158a76ba7d2f0c7dc4005e5</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>aecbed757bbfd434e6f018845d687b79b</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; HierarchicalIK &gt;</type>
      <name>mIK</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a8780206879ed5ae6cf7f38d1d125ac60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mGradCache</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>ac197d1c8e2d500de782c1e76daa82006</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CompositeIK</name>
    <filename>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</filename>
    <base>dart::dynamics::HierarchicalIK</base>
    <member kind="typedef">
      <type>std::unordered_set&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt;</type>
      <name>ModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>ac4bc0f2b9774763f205ad5eee38f783e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_set&lt; std::shared_ptr&lt; const InverseKinematics &gt; &gt;</type>
      <name>ConstModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a15eadbacfb3dad2b3de63a0a81c7a0c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; HierarchicalIK &gt;</type>
      <name>clone</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a6fb8ddc767eb76cc01ab57ca582308b8</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; CompositeIK &gt;</type>
      <name>cloneCompositeIK</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a3db8bfb715fefb1728b6565b363bf857</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModule</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>aafd14fb86a0da4cfbc0c5d2b7ab2d22f</anchor>
      <arglist>(const std::shared_ptr&lt; InverseKinematics &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function">
      <type>const ModuleSet &amp;</type>
      <name>getModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>acc5a840583a9447cba54e3133aaa3387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstModuleSet</type>
      <name>getModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a78124876a6511fa52849bdbc7b92285e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshIKHierarchy</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a1083f1c727c276e9fc145efd5185e589</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; CompositeIK &gt;</type>
      <name>create</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a2d4208463727a1148103312c1d62dbf4</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CompositeIK</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a3775aab31035a023788da1c020601d70</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt;</type>
      <name>mModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a663bb8ff8b7d8d8ecc76a27941c8ade8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::WholeBodyIK</name>
    <filename>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</filename>
    <base>dart::dynamics::HierarchicalIK</base>
    <member kind="function">
      <type>std::shared_ptr&lt; HierarchicalIK &gt;</type>
      <name>clone</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>ad9f2f3de8bad24793f85d1b5735bfa4b</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; WholeBodyIK &gt;</type>
      <name>cloneWholeBodyIK</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>ae773cc8e1c8e6013559bca3a59070322</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshIKHierarchy</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>a9512114f90f850d97a02ca04d22cc419</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; WholeBodyIK &gt;</type>
      <name>create</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>a89bda32f31d4d9e53e5bb80d8016faf6</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WholeBodyIK</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>a08edac0e76ba0e5cb676b207ac6eb948</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::IkFast</name>
    <filename>da/de8/classdart_1_1dynamics_1_1IkFast.html</filename>
    <base>dart::dynamics::InverseKinematics::Analytical</base>
    <member kind="enumeration">
      <type></type>
      <name>Validity_t</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a3b7b030cb29c20fe67a45af603738802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VALID</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a3b7b030cb29c20fe67a45af603738802a390ace8d984091980d70980f73f77994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>OUT_OF_REACH</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a3b7b030cb29c20fe67a45af603738802a6961d22c2f27c44c2eb557aa01ccf98e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LIMIT_VIOLATED</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a3b7b030cb29c20fe67a45af603738802a5c7fb5ded28b44cac09fb6b2ecfa1895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ExtraDofUtilization</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a7f0ed15c333011eac3f7f47b131ccf4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNUSED</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a7f0ed15c333011eac3f7f47b131ccf4da76d7c10b0ef14d9cc269e1a1bd103006</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PRE_ANALYTICAL</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a7f0ed15c333011eac3f7f47b131ccf4dad7bab23eea8845b11e5accb5b8f79f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>POST_ANALYTICAL</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a7f0ed15c333011eac3f7f47b131ccf4dabfe4db21302486aa09517a5571d3c29a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PRE_AND_POST_ANALYTICAL</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a7f0ed15c333011eac3f7f47b131ccf4da1e9e2a822c4592331b8a67ed7791dd8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const Eigen::VectorXd &amp;_better, const Eigen::VectorXd &amp;_worse, const InverseKinematics *_ik)&gt;</type>
      <name>QualityComparison</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>af571c39110b25c8cee0387db23b47bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IkFast</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a4bd6101cad52ed4ce8a890d9e13615ca</anchor>
      <arglist>(InverseKinematics *ik, const std::vector&lt; std::size_t &gt; &amp;dofMap, const std::vector&lt; std::size_t &gt; &amp;freeDofMap, const std::string &amp;methodName=&quot;IKFast&quot;, const Analytical::Properties &amp;properties=Analytical::Properties())</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>computeSolutions</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a2288fc7ce70bac5b602b02c5f269dfae</anchor>
      <arglist>(const Eigen::Isometry3d &amp;desiredBodyTf) -&gt; const std::vector&lt; InverseKinematics::Analytical::Solution &gt; &amp;override</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>getDofs</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a4163cb957dc2eab86831e0e4a94504c0</anchor>
      <arglist>() const -&gt; const std::vector&lt; std::size_t &gt; &amp;override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConfigured</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>adf8e6d5f0409efc1e33155e11a5ecd9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Solution &gt; &amp;</type>
      <name>getSolutions</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a7a024b60e94b1b98c9662f3cf29dc7d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Solution &gt; &amp;</type>
      <name>getSolutions</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a07b467aede3c97c44a1b4502f925ec76</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_desiredTf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeGradient</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a8f2ab56bec3e0efdcc0d332cf1a2c83e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_error, Eigen::VectorXd &amp;_grad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a954b31284057f17a2b658da4e58c284b</anchor>
      <arglist>(const Eigen::VectorXd &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a67ae7427f6ef5d54b515b6c3964a385f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraDofUtilization</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>aab9f40502831d4831a530146ce07e962</anchor>
      <arglist>(ExtraDofUtilization _utilization)</arglist>
    </member>
    <member kind="function">
      <type>ExtraDofUtilization</type>
      <name>getExtraDofUtilization</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a527385c8fd355b6b070f6d337e529011</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraErrorLengthClamp</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a68683f502955da71bfa491194c8e5903</anchor>
      <arglist>(double _clamp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExtraErrorLengthClamp</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>ab43a03eefd58fc09f395cd4213ac21cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQualityComparisonFunction</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>af1243bc082d7df0ad966fe2d59b174c1</anchor>
      <arglist>(const QualityComparison &amp;_func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetQualityComparisonFunction</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>ae3eb2812fb2f9f51a2062367d9afb387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getAnalyticalProperties</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a4986fda2417f88a479d97aae951826d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constructDofMap</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a0c0e0d86d08ec418117082adf89cbac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>clone</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a358b2ce964093050e7175fdd8d998e12</anchor>
      <arglist>(InverseKinematics *_newIK) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>acb8403ba28323560640cac6a1eb7e4cf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q, Eigen::Map&lt; Eigen::VectorXd &gt; _grad)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMethodName</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a8b0d66d0a9586a32a9ce4257c0c10b29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clampGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>afd9895eff6da5f076405fc869ab97175</anchor>
      <arglist>(Eigen::VectorXd &amp;_grad) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComponentWiseClamp</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a155e99d503735e1e9d769f055699717b</anchor>
      <arglist>(double _clamp=DefaultIKGradientComponentClamp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getComponentWiseClamp</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a2be888a28d1b4d4319f95115b0f48989</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyWeights</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>aa2b951535bc1a35b882ce8221fa275ff</anchor>
      <arglist>(Eigen::VectorXd &amp;_grad) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComponentWeights</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a9fba6987c5f071533d010bb4c7a43265</anchor>
      <arglist>(const Eigen::VectorXd &amp;_weights)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getComponentWeights</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a4d8887e76943852ff02a4423afae4aaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertJacobianMethodOutputToGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>abcb09a078c009d83941a0d0bb163f2a2</anchor>
      <arglist>(Eigen::VectorXd &amp;grad, const std::vector&lt; std::size_t &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getGradientMethodProperties</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a1eedbc1f9c3a9783236393f984eafdc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a888731b4b274a85406570a3448d6c471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InverseKinematics *</type>
      <name>getIK</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a09a38844e5aacdcedfaf56ce818d4ded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const InverseKinematics *</type>
      <name>getIK</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>af5aaa87d90c4524406c0cc3678e804ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getNumFreeParameters</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>aa825acdea6894240dd4d28b4eed7fb83</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int *</type>
      <name>getFreeParameters</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>ab02c6a1da39b80ecec2a01df9df6624c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getNumJoints</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>aacaf0c22a07e11a6f41ec172383cdc0b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getIkRealSize</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a4067a86f71fb82da04a804a3718018df</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getIkType</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a3d24586e6e76a58f3e686fb29c5b2089</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>computeIk</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a3074e2cc28ff845d25b805d53f0c37ee</anchor>
      <arglist>(const IkReal *mTargetTranspose, const IkReal *mTargetRotation, const IkReal *pfree, ikfast::IkSolutionListBase&lt; IkReal &gt; &amp;solutions)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const char *</type>
      <name>getKinematicsHash</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>abab91803db95ba97c86f797e9e071841</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const char *</type>
      <name>getIkFastVersion</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a7788c3522dc8cbb5255ab61f6287fe5c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>configure</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a66d33c827c9616f919384bec18b47fa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addExtraDofGradient</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a85673851706f4e73e28c0d776a3f9b55</anchor>
      <arglist>(Eigen::VectorXd &amp;grad, const Eigen::Vector6d &amp;error, ExtraDofUtilization utilization)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSolutionJointLimits</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a616ee175659ccaf8fa6872b9e593480e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>mFreeParams</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a7d3ca26e51c74db276175bf6505f2fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mConfigured</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a442cc76321f12fe38151e88430ff6c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a9a748bc63fd1fb26ec907f7e74d977b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mFreeDofs</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>aa47f170d345a3d54a02488d1750ad702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Solution &gt;</type>
      <name>mSolutions</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>aa3a48c1eac8df29cc1bcd383590f9d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mAnalyticalP</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a23ea036a607f6c0de3fb9fefe660b1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>aa0d3b3fca2c935154f44494f2a0898e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mMethodName</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a1747a0e1688b185f1b26c58633afa483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastPositions</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a9be4823acc2404ef51541f5197522ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>ad07e1a8119541fb898652b466b4e55e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mGradientP</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>ad6e44c86f78b7126405a4513cc0a149a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::array&lt; IkReal, 9 &gt;</type>
      <name>mTargetRotation</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>a2f8ed771c37a83e2a68b354cedff536a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::array&lt; IkReal, 3 &gt;</type>
      <name>mTargetTranspose</name>
      <anchorfile>da/de8/classdart_1_1dynamics_1_1IkFast.html</anchorfile>
      <anchor>adef1c2ffa00c05c638af441781d63e10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Inertia</name>
    <filename>d6/d91/classdart_1_1dynamics_1_1Inertia.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Param</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MASS</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a4bb56e2cb0e3756c43659c3f4065a2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COM_X</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a83a24cd22c75d992d152467f2bef60e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COM_Y</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a521e771f0affbd5ae8c44f9545be1836</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COM_Z</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411aa98d17241e1a10c238caa45fe0ce48cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_XX</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411affbfaede838338054962195e6f448986</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_YY</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411ae31fdc2da489d15755723b2f4acca79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_ZZ</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a824f3cf04da86061340fe7ed21f3b679</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_XY</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a39c27751ddadadb2ec8c5c23f5a6b33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_XZ</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411ac3b48ccb1d8d998ba2dc90a095af4a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_YZ</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411af1ea9cac3127a65cc50e0ec54ced7822</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inertia</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>aeddf0b7cd44544ccdd1f726e56ce2f3b</anchor>
      <arglist>(double _mass=1, const Eigen::Vector3d &amp;_com=Eigen::Vector3d::Zero(), const Eigen::Matrix3d &amp;_momentOfInertia=Eigen::Matrix3d::Identity())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inertia</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>aa4661f9950d5958efa4c8609d42aedf7</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_spatialInertiaTensor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inertia</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>ae175b217bd5dc4e20ef8721a58e6ede0</anchor>
      <arglist>(double _mass, double _comX, double _comY, double _comZ, double _Ixx, double _Iyy, double _Izz, double _Ixy, double _Ixz, double _Iyz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a0d14e1d586bba1fe5a1baf1fbdf8cc82</anchor>
      <arglist>(Param _param, double _value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getParameter</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a6187920f726b2b4a60427ab9972cda4f</anchor>
      <arglist>(Param _param) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a6f46ab2c4fd917945e409c6da9c353b2</anchor>
      <arglist>(double _mass)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a9988f48e42bd59e3dfd7a9a682090a55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalCOM</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a5d2cc45655068902f494da81bb52be05</anchor>
      <arglist>(const Eigen::Vector3d &amp;_com)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLocalCOM</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>af500dc6fdc38b8448cccb58bac3910fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a4116bf64fe31b72b2ba14269fd242de4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_moment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a2fcfd4e69dd16824ddec37ac55d425fa</anchor>
      <arglist>(double _Ixx, double _Iyy, double _Izz, double _Ixy, double _Ixz, double _Iyz)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>getMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a5ff08f7cab0a1dc6ad847ec6f658ae15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a598f5e772b66e0dc6dda7f3471eaad8b</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_spatial)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix6d &amp;</type>
      <name>getSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>aeba2ec22bd692bffe85c913085ea46b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a6bbeabd3938f1403744ee239eb3c35c2</anchor>
      <arglist>(bool _printWarnings=true, double _tolerance=1e-8) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a94db529e2772415513f96bf0eede12ba</anchor>
      <arglist>(const Inertia &amp;other) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>verifyMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>ae0367356fafa9a3fe96a75e3e6d76fe3</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_moment, bool _printWarnings=true, double _tolerance=1e-8)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>verifySpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a2f15a99666cb025edefa96f6e99ae701</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_spatial, bool _printWarnings=true, double _tolerance=1e-8)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a9d346a8c4109414a61ade222ec65927f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeParameters</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a751262c30080df3bdd915ab2ea651b2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>af1d9a8589617c4c0cf01af83cc032dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mCenterOfMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>afa084ff8d9833faff3ed498235e58f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; double, 6 &gt;</type>
      <name>mMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a5ed236ebf88f9c50b88be7a769c33ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix6d</type>
      <name>mSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a0519ae34244002fcaa16f6f8f7fb9022</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics</name>
    <filename>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</filename>
    <base>dart::common::Subject</base>
    <class kind="class">dart::dynamics::InverseKinematics::Analytical</class>
    <class kind="class">dart::dynamics::InverseKinematics::Constraint</class>
    <class kind="class">dart::dynamics::InverseKinematics::ErrorMethod</class>
    <class kind="class">dart::dynamics::InverseKinematics::Function</class>
    <class kind="class">dart::dynamics::InverseKinematics::GradientMethod</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianDLS</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianTranspose</class>
    <class kind="class">dart::dynamics::InverseKinematics::Objective</class>
    <class kind="class">dart::dynamics::InverseKinematics::TaskSpaceRegion</class>
    <member kind="function">
      <type></type>
      <name>InverseKinematics</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a51469bfb6d252a2e1245ed0b3df8d1cc</anchor>
      <arglist>(const InverseKinematics &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InverseKinematics &amp;</type>
      <name>operator=</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a8a207fc336403be59ed7276fac5bd04c</anchor>
      <arglist>(const InverseKinematics &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InverseKinematics</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a6780b995be574e78ad0944964c08fe3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>afe03b7e5d231c46398f44dae3a3b8b63</anchor>
      <arglist>(bool _applySolution=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a16f039ea7b7764a48c46f49e914f0625</anchor>
      <arglist>(Eigen::VectorXd &amp;positions, bool _applySolution=true)</arglist>
    </member>
    <member kind="function">
      <type>InverseKinematicsPtr</type>
      <name>clone</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a47714c1aa0cf1fad6f7652380776f94a</anchor>
      <arglist>(JacobianNode *_newNode) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a02761d556eb6492181f351ae3018f85b</anchor>
      <arglist>(bool _active=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInactive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad8b919a14495d55452c4c765e3e18290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab93a090d942d5f9f382e083d96caa18e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHierarchyLevel</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ade4380907bc4b36896fa26a75fba3912</anchor>
      <arglist>(std::size_t _level)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getHierarchyLevel</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>aa8ebfa78c397002ca6abf033a47e4789</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useChain</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a2fb9d70b8477636b644d313c80f135dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useWholeBody</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1dc57f20a736cd666e42c08ad852202f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab4258a94e33ee865c943430c52e98fec</anchor>
      <arglist>(const std::vector&lt; DegreeOfFreedomT * &gt; &amp;_dofs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>aecaa6a8c45f0d2d145fb210b7554fc9e</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;_dofs)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>aa5c51b13750cec433d95d7cbf08f42ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>getDofMap</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a2d2cd08ce9bfe4919e57b1a3fe70ab69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>aedce2ee302e9bc0b2e274df819ec84e0</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_objective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a4d0cb55497185e378c7d3bf42c65fde0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a265a1c80c6b25407f0b4b880968d28da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a7f07851f03d200d45a218ab228480aa4</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_nsObjective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a11ba16183479a663d9e25cbe1784dc9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af71b929bb0a4c727841bfe20bdab63da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a38c0e3cd03d968d337baa9228106838a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IKErrorMethod &amp;</type>
      <name>setErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a79f3db88fa05ebef8dc9851803fe7126</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>ErrorMethod &amp;</type>
      <name>getErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>adf232faf6e1246cea8bd1e1b64976105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ErrorMethod &amp;</type>
      <name>getErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>acc4d9538db86e0152aa05bc0cbd2f119</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IKGradientMethod &amp;</type>
      <name>setGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a6e26c8d6b39c79c985cfcd7aed6a8aa0</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>GradientMethod &amp;</type>
      <name>getGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad6517c7bf7335f893825d0f28d76005d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GradientMethod &amp;</type>
      <name>getGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af1ab0ee70c48d1837c45c4311bc89922</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Analytical *</type>
      <name>getAnalytical</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a6fb99ca0a61e7af864b613ed6ce4a959</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Analytical *</type>
      <name>getAnalytical</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a422dd1512d26eb7453ec181e5c90c220</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Problem &gt; &amp;</type>
      <name>getProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>aba09513be2d20e621a399b05c95d2888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Problem &gt;</type>
      <name>getProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a610a0245a7f1410edc9ab931f359d85e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a237ae26530785ad5c4c11ab036dbf951</anchor>
      <arglist>(bool _clearSeeds=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a34475daac24ddba607d1b7ac462c62e1</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Solver &gt; &amp;_newSolver)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Solver &gt; &amp;</type>
      <name>getSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a10acbb1b70a946eb909451e34309edc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Solver &gt;</type>
      <name>getSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a9853414a8831dec6d940b797542e5580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab5319b69eae7c114d010e26387a16fea</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset=Eigen::Vector3d::Zero())</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a83cea02fe68a05471fa6a96cfe490e02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad8e296a6aacbac5c9bbadcf996e39095</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a76b756ea7682434a2a9d359cdd865a84</anchor>
      <arglist>(std::shared_ptr&lt; SimpleFrame &gt; _newTarget)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>getTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a073bb175a23d5b705a7b3c5fc3a9b306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const SimpleFrame &gt;</type>
      <name>getTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a092cdf9e7c5627c135bd0ba01babb1b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JacobianNode *</type>
      <name>getNode</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a66857342fba0b96111a14fd775975c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const JacobianNode *</type>
      <name>getNode</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a06cce3e0eb5fe706b093a82f79d36810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JacobianNode *</type>
      <name>getAffiliation</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a5c4f418c60eeb5c37bfdd883c8bbf893</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const JacobianNode *</type>
      <name>getAffiliation</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1f284a9f5c64deed53c2c507fc8fa615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>computeJacobian</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a3a4d2302247110fb89bc3c74aae6a574</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a79f5495be3c229e347e94e5540e3f260</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a2941f3c3d9835fc49ec1ebad1574ee05</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1035b741940c4e4a99409b8ae188301a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InverseKinematicsPtr</type>
      <name>create</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1dbdf61a389c5dd72eba90ea7cea8a27</anchor>
      <arglist>(JacobianNode *_node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>InverseKinematics</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a8fc7879447a95f8cac3921bd823c3909</anchor>
      <arglist>(JacobianNode *_node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a37a7e671f3ad7b892d5c120e919651ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTargetConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a553b50ea2ac82dd734d59a297d737646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetNodeConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1752d81d07c534a9404371404ad00d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::Connection</type>
      <name>mTargetConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a7ac659a036f4747ce5553c48373a1d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::Connection</type>
      <name>mNodeConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a9f0ae10b40ba613019e47ab2c63470a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a73c517fc9e01937d6662d1ca9dce2c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mHierarchyLevel</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a81f5f4cae7e97755be7a5eb2000954ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a80a9577fd3d8d70c0bba5b133cbe9c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>mDofMap</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a7791d2b820e2f5623fd9c4999587bbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>mObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a897ef2919adb9a949063c4823201ab1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>mNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a81b69f9aec6952d4cb9292ae8985bf24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; ErrorMethod &gt;</type>
      <name>mErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ae555b821480b29302109aa6d74c4428d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>mGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af5d9ac877c4ebac5da142eb6633347d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Analytical *</type>
      <name>mAnalytical</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>abd571f1fe76380c28d73b08bb9f5fde6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Problem &gt;</type>
      <name>mProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad924f542ab476c4ab59fd1073b4c4669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Solver &gt;</type>
      <name>mSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad171a081c171c77e947f28bbc9b0855d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab4e750a744f0074d0e300e1582defdfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mHasOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a3cbdfd4ca1f4ccf3ff1cc9c200979ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>mTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af7cf2605a4b82a22a9caf990dbf0a76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sub_ptr&lt; JacobianNode &gt;</type>
      <name>mNode</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a476bdbdf0a4e37c80746ddca365d21bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mJacobian</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1a26feddbfefcefd3f9f3af6050d7840</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Objective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a49a13cb2647058c4cf107bd6b82507a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Constraint</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a697ed9eaa8955d595a023663ab1e8418</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::Analytical</name>
    <filename>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</filename>
    <base>dart::dynamics::InverseKinematics::GradientMethod</base>
    <class kind="struct">dart::dynamics::InverseKinematics::Analytical::Properties</class>
    <class kind="struct">dart::dynamics::InverseKinematics::Analytical::Solution</class>
    <class kind="struct">dart::dynamics::InverseKinematics::Analytical::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>Analytical</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>acc6fc9cb5f349e5029b176b7f77d0a54</anchor>
      <arglist>(InverseKinematics *_ik, const std::string &amp;_methodName, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Analytical</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a7152a5f1b1374a3eb66aca59553fe02b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; Solution &gt; &amp;</type>
      <name>computeSolutions</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a955c43dfc590e6c9df9a7f7625b77abc</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_desiredBodyTf)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>ad94bcd3431573c66dc1fa1c4d1dd5174</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>mDofMap</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>af77d07227fc6612145ef11772b89c797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mExtraDofs</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>aac62d5856582226d268c4142c2dbb7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Solution &gt;</type>
      <name>mValidSolutionsCache</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a248cf474c0e45cd02c14dc18ca363de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Solution &gt;</type>
      <name>mOutOfReachCache</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>ab457b66779b15d56b2153ca89ff57167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Solution &gt;</type>
      <name>mLimitViolationCache</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a1cb76819bb1b5860dc7cf7552287dba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>mConfigCache</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a838057dfa8727c475d43b2b1ebeae994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>mRestoreConfigCache</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a1326e228b7002c909a2d0318aeb64d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>mExtraDofGradCache</name>
      <anchorfile>dd/dec/classdart_1_1dynamics_1_1InverseKinematics_1_1Analytical.html</anchorfile>
      <anchor>a1dcb9715069ed79c4df73f7bf0eed33c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::Analytical::Properties</name>
    <filename>d3/d04/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1Properties.html</filename>
    <base>dart::dynamics::InverseKinematics::GradientMethod::Properties</base>
    <base>dart::dynamics::InverseKinematics::Analytical::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d3/d04/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1Properties.html</anchorfile>
      <anchor>a97cce876cbb48884adb49d8b8eaa0c35</anchor>
      <arglist>(const GradientMethod::Properties &amp;gradientProperties=GradientMethod::Properties(), const UniqueProperties &amp;analyticalProperties=UniqueProperties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d3/d04/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1Properties.html</anchorfile>
      <anchor>a0d2c7dcceb8e01ce5619e06929f1e0d2</anchor>
      <arglist>(const UniqueProperties &amp;analyticalProperties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetQualityComparisonFunction</name>
      <anchorfile>d3/df9/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1UniqueProperties.html</anchorfile>
      <anchor>a9f921e7b88a23714545d5d8042485513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mComponentWiseClamp</name>
      <anchorfile>d2/d08/structdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod_1_1Properties.html</anchorfile>
      <anchor>aee950b36b5c49403dd76d0c9dfe146ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mComponentWeights</name>
      <anchorfile>d2/d08/structdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod_1_1Properties.html</anchorfile>
      <anchor>af8477572c97c73641fb50ab22ac35bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExtraDofUtilization</type>
      <name>mExtraDofUtilization</name>
      <anchorfile>d3/df9/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1UniqueProperties.html</anchorfile>
      <anchor>ad0b411f93cffff87e017060eee95fbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mExtraErrorLengthClamp</name>
      <anchorfile>d3/df9/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1UniqueProperties.html</anchorfile>
      <anchor>afe3664b7e42dc7525db77e4234dfad1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QualityComparison</type>
      <name>mQualityComparator</name>
      <anchorfile>d3/df9/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1UniqueProperties.html</anchorfile>
      <anchor>a52236d2eb16e4f9e04161a637bd28a6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::Analytical::Solution</name>
    <filename>d6/d5d/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1Solution.html</filename>
    <member kind="function">
      <type></type>
      <name>Solution</name>
      <anchorfile>d6/d5d/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1Solution.html</anchorfile>
      <anchor>a4bb665fedbedf3f336cb4dda66ff56e4</anchor>
      <arglist>(const Eigen::VectorXd &amp;_config=Eigen::VectorXd(), int _validity=VALID)</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mConfig</name>
      <anchorfile>d6/d5d/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1Solution.html</anchorfile>
      <anchor>ac3fc4a78de587cf9d69033c054a30b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mValidity</name>
      <anchorfile>d6/d5d/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1Solution.html</anchorfile>
      <anchor>ab0149d1d673658828d5814d406fce9c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::Analytical::UniqueProperties</name>
    <filename>d3/df9/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1UniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d3/df9/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1UniqueProperties.html</anchorfile>
      <anchor>a542c8ef445372e018793b1ed25701c70</anchor>
      <arglist>(ExtraDofUtilization extraDofUtilization=UNUSED, double extraErrorLengthClamp=DefaultIKErrorClamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d3/df9/structdart_1_1dynamics_1_1InverseKinematics_1_1Analytical_1_1UniqueProperties.html</anchorfile>
      <anchor>ab1ae58d109ef2f42a50eccf63f1e04ed</anchor>
      <arglist>(ExtraDofUtilization extraDofUtilization, double extraErrorLengthClamp, QualityComparison qualityComparator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::Constraint</name>
    <filename>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</filename>
    <base>dart::dynamics::InverseKinematics::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a779a0c514afe40d8690f73da88e3eb45</anchor>
      <arglist>(InverseKinematics *_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a7ceb68d461ccf6fbb6dd0201d42079c1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a45acfa422b35cb7140de3b50c0dd61c8</anchor>
      <arglist>(InverseKinematics *_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>ab9fc38c4ae83c10a81dbd3842ffa0b3b</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a64a47e89b80334e339446f10d7dc6349</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>ae43e1069e2c669ef1108b2eb05a8a106</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::ErrorMethod</name>
    <filename>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</filename>
    <base>dart::common::Subject</base>
    <class kind="struct">dart::dynamics::InverseKinematics::ErrorMethod::Properties</class>
    <member kind="typedef">
      <type>std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt;</type>
      <name>Bounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a4c940824f69c15ac230ca9ecd1dafab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ErrorMethod</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>acb43b9038a5fa87318b1ab3ae9fdd2d5</anchor>
      <arglist>(InverseKinematics *_ik, const std::string &amp;_methodName, const Properties &amp;_properties=Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ErrorMethod</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a15e150ee2ff0fae977c3103032bfb284</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; ErrorMethod &gt;</type>
      <name>clone</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a899e84db84097ebc94ac0cc42b8a1311</anchor>
      <arglist>(InverseKinematics *_newIK) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>computeError</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ab511624a6199223f6c28aa3b98cc0932</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Isometry3d</type>
      <name>computeDesiredTransform</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a17eb9de38c377610bfd92fadaeb8daa1</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_currentTf, const Eigen::Vector6d &amp;_error)=0</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>evalError</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a75bd0c2fed89fd8af252949f60b9a2d4</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMethodName</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a6de3f56a3bbca885cf3e26f7cfd92f0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>abfee0840a689c716719bf9cbba080e79</anchor>
      <arglist>(const Eigen::Vector6d &amp;_lower=Eigen::Vector6d::Constant(-DefaultIKTolerance), const Eigen::Vector6d &amp;_upper=Eigen::Vector6d::Constant(DefaultIKTolerance))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a0caea72ea6539e327dc5930f1fe4ab9b</anchor>
      <arglist>(const std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt; &amp;_bounds)</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt; &amp;</type>
      <name>getBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ae5bc5df362a7ec1e468e7d6f5aac9a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a8c5b38bf4d977ef616070009ab925664</anchor>
      <arglist>(const Eigen::Vector3d &amp;_lower=Eigen::Vector3d::Constant(-DefaultIKTolerance), const Eigen::Vector3d &amp;_upper=Eigen::Vector3d::Constant(DefaultIKTolerance))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a3a909c8854d0b6b77de21f2557dedb05</anchor>
      <arglist>(const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;_bounds)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt;</type>
      <name>getAngularBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a6f14ffc75f303a020fbc702dadbf6687</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a22a9888550d1d6be9eb88488703a44ec</anchor>
      <arglist>(const Eigen::Vector3d &amp;_lower=Eigen::Vector3d::Constant(-DefaultIKTolerance), const Eigen::Vector3d &amp;_upper=Eigen::Vector3d::Constant(DefaultIKTolerance))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a0b630d8d76ab51c171b048975d596b9d</anchor>
      <arglist>(const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;_bounds)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt;</type>
      <name>getLinearBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a06409e1723cfa9263a33e569be3dac7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorLengthClamp</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>af7fb6255d14ac824da370c7119ed15e8</anchor>
      <arglist>(double _clampSize=DefaultIKErrorClamp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getErrorLengthClamp</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ae56d9edac0e2787938969021bf7b6252</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a83e016ef8592a44bcc29ce5825ff4503</anchor>
      <arglist>(const Eigen::Vector6d &amp;_weights)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a9763541ef90f73a47569584a4ade8df1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a9b3ca8e1c444239455bd796773409cd1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_weights=Eigen::Vector3d::Constant(DefaultIKAngularWeight))</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ae9e99faa5d368687b71aae010c88e2d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a93ef38d7434917011925c6d6b49f164f</anchor>
      <arglist>(const Eigen::Vector3d &amp;_weights=Eigen::Vector3d::Constant(DefaultIKLinearWeight))</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>afccee8b918a6087b86e500ece9d07338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getErrorMethodProperties</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a134d4864b2c471eecc7742848ecbeb9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>af7137c657a64cbb570afad141ae12a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a117089e9064a708c397de39182efcd75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mMethodName</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ac3f793a1ec5bcc10419f79ac4d7b2840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastPositions</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>aad1566f7023e43d6f0ea65b54c215270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mLastError</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a4c7e7ed5418232c00d32094a3157f26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mErrorP</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a3b066660f1cbfadbfcb4fda249e02143</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::ErrorMethod::Properties</name>
    <filename>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>a0383c2595e61ddc7cd25dabff852201a</anchor>
      <arglist>(const Bounds &amp;_bounds=Bounds(Eigen::Vector6d::Constant(-DefaultIKTolerance), Eigen::Vector6d::Constant(DefaultIKTolerance)), double _errorClamp=DefaultIKErrorClamp, const Eigen::Vector6d &amp;_errorWeights=Eigen::compose(Eigen::Vector3d::Constant(DefaultIKAngularWeight), Eigen::Vector3d::Constant(DefaultIKLinearWeight)))</arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt;</type>
      <name>mBounds</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>a851d29fe57fab0df7e87edb260b102b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mErrorLengthClamp</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>ab6bf47bae4bc5689eef19279b4bed845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector6d</type>
      <name>mErrorWeights</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>a63405484fc8173dc5833d31595a189ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::Function</name>
    <filename>d6/def/classdart_1_1dynamics_1_1InverseKinematics_1_1Function.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d6/def/classdart_1_1dynamics_1_1InverseKinematics_1_1Function.html</anchorfile>
      <anchor>a32b2cc147ac6f5f4dec399c6b627deb8</anchor>
      <arglist>(InverseKinematics *_newIK) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Function</name>
      <anchorfile>d6/def/classdart_1_1dynamics_1_1InverseKinematics_1_1Function.html</anchorfile>
      <anchor>a81a4d308d440ec7da21085b695ec57a5</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::GradientMethod</name>
    <filename>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</filename>
    <base>dart::common::Subject</base>
    <class kind="struct">dart::dynamics::InverseKinematics::GradientMethod::Properties</class>
    <member kind="function">
      <type></type>
      <name>GradientMethod</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>ade06ecdee4f1d1d74205001c1128040a</anchor>
      <arglist>(InverseKinematics *_ik, const std::string &amp;_methodName, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GradientMethod</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a68b85fe5f92a58d0f9647c1ba35ed4f3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>ae447178e29921aed8e4c8619a2e403b6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_error, Eigen::VectorXd &amp;_grad)=0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>mInitialPositionsCache</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a05f468e6ae18bdac2db0747a5001bad1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::GradientMethod::Properties</name>
    <filename>d2/d08/structdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d2/d08/structdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod_1_1Properties.html</anchorfile>
      <anchor>a460861676f7e58b33aab6cb406307e4f</anchor>
      <arglist>(double clamp=DefaultIKGradientComponentClamp, const Eigen::VectorXd &amp;weights=Eigen::VectorXd())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::JacobianDLS</name>
    <filename>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</filename>
    <base>dart::dynamics::InverseKinematics::GradientMethod</base>
    <class kind="struct">dart::dynamics::InverseKinematics::JacobianDLS::Properties</class>
    <class kind="struct">dart::dynamics::InverseKinematics::JacobianDLS::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>JacobianDLS</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>afdcf0f9ec4f936fda69b96391115f47f</anchor>
      <arglist>(InverseKinematics *_ik, const Properties &amp;properties=Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianDLS</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>ae6fc979af9c143ff2819a660a0af8e3f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>clone</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>a27aba2fa7f01366dfd6e01a1f4904742</anchor>
      <arglist>(InverseKinematics *_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeGradient</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>a80602d420aefd11714e5eb0f98e85fed</anchor>
      <arglist>(const Eigen::Vector6d &amp;_error, Eigen::VectorXd &amp;_grad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>ab534c0ae27b0ba7c9ce2e1c07c29165d</anchor>
      <arglist>(double _damping=DefaultIKDLSCoefficient)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>a53af1ee157817fd569e4109a140bdac4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getJacobianDLSProperties</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>abd7482bfe6f0b2aef46c7fcaf969b4d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mDLSProperties</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>a17324baae17af05c41e86ef803030170</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::JacobianDLS::Properties</name>
    <filename>dd/dda/structdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS_1_1Properties.html</filename>
    <base>dart::dynamics::InverseKinematics::GradientMethod::Properties</base>
    <base>dart::dynamics::InverseKinematics::JacobianDLS::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>dd/dda/structdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS_1_1Properties.html</anchorfile>
      <anchor>a34888b77a18e9ae065d254253bf74e38</anchor>
      <arglist>(const GradientMethod::Properties &amp;gradientProperties=GradientMethod::Properties(), const UniqueProperties &amp;dlsProperties=UniqueProperties())</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDamping</name>
      <anchorfile>d5/d76/structdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS_1_1UniqueProperties.html</anchorfile>
      <anchor>a3f811bc4f07e6782606e173ac0b3d978</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::JacobianDLS::UniqueProperties</name>
    <filename>d5/d76/structdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS_1_1UniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d5/d76/structdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS_1_1UniqueProperties.html</anchorfile>
      <anchor>a1f6c228a9b03da4785a0048dd6ab9e5b</anchor>
      <arglist>(double damping=DefaultIKDLSCoefficient)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::JacobianTranspose</name>
    <filename>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</filename>
    <base>dart::dynamics::InverseKinematics::GradientMethod</base>
    <member kind="function">
      <type></type>
      <name>JacobianTranspose</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>a25a8489137361920c01e49ef63cb187b</anchor>
      <arglist>(InverseKinematics *_ik, const Properties &amp;properties=Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianTranspose</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>aa68ced5cf8141c24aa076022f3191677</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>clone</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>adb013e3d2e0183079d8a5b70c1cf6cf0</anchor>
      <arglist>(InverseKinematics *_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeGradient</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>adaf9267e18591703007f5b425550c8b1</anchor>
      <arglist>(const Eigen::Vector6d &amp;_error, Eigen::VectorXd &amp;_grad) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::Objective</name>
    <filename>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</filename>
    <base>dart::dynamics::InverseKinematics::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Objective</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>ab84556c2bd5aa08b24c435e30de2440a</anchor>
      <arglist>(InverseKinematics *_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Objective</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a7b169098a7d9e1b83d25e4a2df06d192</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>ab692075b00ae83d38557a2e8c975d64e</anchor>
      <arglist>(InverseKinematics *_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a7cb118e6f3a2d4aacc90849d51e6bf4f</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a048f699547283ac079138cba2c3aac01</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; InverseKinematics::Objective &gt;</type>
      <name>createShared</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>addbbc0a56a2857d1645eadcd985f08e8</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a895b7f0e263259fcf057d3b07117e70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mGradCache</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a83365c3ce7d1b049b549d978ee5960e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::JacobiSVD&lt; math::Jacobian &gt;</type>
      <name>mSVDCache</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>ac2bbebf8ccb0e16873d5edcd868b1d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mNullSpaceCache</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a586ef1513a053c1d8ebfd0d27967e024</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::TaskSpaceRegion</name>
    <filename>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</filename>
    <base>dart::dynamics::InverseKinematics::ErrorMethod</base>
    <class kind="struct">dart::dynamics::InverseKinematics::TaskSpaceRegion::Properties</class>
    <class kind="struct">dart::dynamics::InverseKinematics::TaskSpaceRegion::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>TaskSpaceRegion</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a16933c0f271cea43055b68474d3bd3ef</anchor>
      <arglist>(InverseKinematics *_ik, const Properties &amp;_properties=Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TaskSpaceRegion</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>aabb077d79efdf318cc70a033fa528d46</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; ErrorMethod &gt;</type>
      <name>clone</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a280c8337f302f7a045eab92d9c66f892</anchor>
      <arglist>(InverseKinematics *_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>computeDesiredTransform</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a95a483736e76fc036e104882389a46a2</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_currentTf, const Eigen::Vector6d &amp;_error) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>computeError</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a32bc5b04d5ae15879410e3805e6f22d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComputeFromCenter</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>ad5297f75b3361633ddb83302c019ecd2</anchor>
      <arglist>(bool computeFromCenter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComputingFromCenter</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a2497c0cf7e62ffca2131ad3d2cf0b7aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getTaskSpaceRegionProperties</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a95135bfc47a5057054ac0178431c8fdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mTaskSpaceP</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>ad4884e0bd7b258114b189dacab22ff0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::TaskSpaceRegion::Properties</name>
    <filename>d8/d4d/structdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion_1_1Properties.html</filename>
    <base>dart::dynamics::InverseKinematics::ErrorMethod::Properties</base>
    <base>dart::dynamics::InverseKinematics::TaskSpaceRegion::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d8/d4d/structdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion_1_1Properties.html</anchorfile>
      <anchor>a314310382d72dce6dafda1a82266cafa</anchor>
      <arglist>(const ErrorMethod::Properties &amp;errorProperties=ErrorMethod::Properties(), const UniqueProperties &amp;taskSpaceProperties=UniqueProperties())</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mComputeErrorFromCenter</name>
      <anchorfile>d1/d29/structdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion_1_1UniqueProperties.html</anchorfile>
      <anchor>ad39aa38ff1cb6628213d3c64b0bbbc21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::TaskSpaceRegion::UniqueProperties</name>
    <filename>d1/d29/structdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion_1_1UniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d1/d29/structdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion_1_1UniqueProperties.html</anchorfile>
      <anchor>ad8fc8f640902260099f68abe9fa991be</anchor>
      <arglist>(bool computeErrorFromCenter=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::JacobianNode</name>
    <filename>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</filename>
    <base virtualness="virtual">dart::dynamics::Frame</base>
    <base>dart::dynamics::Node</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianNode</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aafc10f6336f58c14cfc8133669feb8e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a160eb754f6132b8abf116d21cd8f8e3a</anchor>
      <arglist>(const std::string &amp;newName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a167de9a4b14795966683920b7641f2ae</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a90d33f8c84161f202052645252f76509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ae9d52ebdca4f9502a60f01ae1043faa4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dependsOn</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a45e15fad80d1bbb21609408128e8d411</anchor>
      <arglist>(std::size_t _genCoordIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getNumDependentGenCoords</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1a3c6080599c613b4500afbef00c421e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getDependentGenCoordIndex</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ab88b93cc55e6dec4659debd967c84429</anchor>
      <arglist>(std::size_t _arrayIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>getDependentGenCoordIndices</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ae59c4a7824048769fbcb68fed862aec9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getNumDependentDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ac30b338ab8e37e1bc3ebae82467b0d86</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a2f158ac167895e540709929d3265f1e5</anchor>
      <arglist>(std::size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a7ba105834ab99ebf2aa485bf36cd32cd</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aa14105863155c2c01b3dce610b36e89f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a219a6b5d1c82ce34c097454de828f918</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getChainDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aef3b25dce4a40b8b9c670ceca750725d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a0036014d7653b055726cf73769e07806</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1731ee2d0550550e254d1d4b2f3f1c81</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a05e67d64781aad86a2ca64b6a96821a5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a743859c023779a49ec4701fc432567d6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getWorldJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad4de7f1c725b675d49cd2c23eb5b65af</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ae5c3e9ceadc04a6edc23e18d1964158f</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aa583425e2e63a9fe41b5fb8dd9ffc799</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a267c46a559aebd870645e5e939ad294e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a178448beac27bb12e3fd4b961da694ba</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aa3cbcd072f6485b98cd9c63d82884025</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a8a02386d7ba41e703088a935373651f2</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a2bed3a75efe3110ccdd4e686ab6a89fb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1ae73d47459f5c1cdbe183132849db18</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a090d32ab8f504d163f758d5d5ef5251d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a59dc435aead2076e41188c04f9bc5d39</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a3e128472fbe54a08c6999aeade162db0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aae9efffa9ace1e90749d050a2fc8338a</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a5de6c1bd22305f28507855e7cb615ea6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aab6a9362137222bee00ed382c919e136</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JacobianNode</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad74f935f55d62640eefa4be20215b794</anchor>
      <arglist>(BodyNode *bn)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Node *</type>
      <name>cloneNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a7f4a62784268a631779aaf421654e28b</anchor>
      <arglist>(BodyNode *bn) const =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInSkeleton</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a5966521e6e9c264d59048f8b7f5f19c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndexInTree</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a2518386305a28786bb722d1dd1ae376a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Joint</name>
    <filename>d6/d5b/classdart_1_1dynamics_1_1Joint.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <base virtualness="virtual">dart::common::VersionCounter</base>
    <base>EmbedProperties&lt; Joint, detail::JointProperties &gt;</base>
    <class kind="struct">dart::dynamics::Joint::ExtendedProperties</class>
    <member kind="typedef">
      <type>common::Composite::Properties</type>
      <name>CompositeProperties</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af22b93f3e6cc6d7088f30713102b4251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::JointProperties</type>
      <name>Properties</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a50ab28a753b66dbcce46b4a4fb28fe64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::ActuatorType</type>
      <name>ActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a1e5e3886432159c1dd21d4a00ce0b6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Joint</type>
      <name>Derived</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a97ea5474e8a99d03350e48a531c87ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbeddedPropertiesAspect&lt; Derived, detail::JointProperties &gt;</type>
      <name>Aspect</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>acd58d0c7b37e0750b83ddac696629f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::Properties</type>
      <name>AspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a9fe1dd1e36565464bf9cd87e8380b96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Aspect::PropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a667fc3b7d3c507750e75c1be918acb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::RequiresAspect&lt; Aspect &gt;</type>
      <name>Base</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a45ffcfe97460f6c10a880eb05d4acfc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae93cd49472a8eed76869a54a4c729ba9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0797c63a351d2d30e0e3c1709ade2576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af19ccdadb7bba538a7593743dcaf2c48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a172cf0f1ce1bb5f412155c91ed20824d</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>abd2a1f530816f22cb123147c520f510c</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa8602c84bd9331aa8566360bdb5ff09f</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acd2c65039a239c6a520c57a037022037</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a494adcb256f226a20ea625450873d917</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releaseJointAspect</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2fda6e044f16a9c2d03bb873db18621f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Joint</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaba213b26a47dc4d17fad9dffbda5d8e</anchor>
      <arglist>(const Joint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Joint</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af87d36a8f7e467a1845e33f737a85f5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aee2c9e2cb47f69f91bb9d28da135609f</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7656bcdd99e1c55d68473b55704b384e</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getJointProperties</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a191b56545d8e505375b7f084a8707d03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a54d086163310e8a4c2f391bc81c116f8</anchor>
      <arglist>(const Joint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7d6b2bd1ca6cb0c0d37a9d1628d90e60</anchor>
      <arglist>(const Joint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>Joint &amp;</type>
      <name>operator=</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aad5f0768868f318b7eebe0729efada2e</anchor>
      <arglist>(const Joint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a69c499c9349bef45138d27f35a7adb1a</anchor>
      <arglist>(const std::string &amp;_name, bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a1a0f23c04b9c1348d9bf2187bb58e252</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae2d6d52f59fc7887fc7168b73c4ac2e2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ab6112df3f12631be0bc385fd898450</anchor>
      <arglist>(ActuatorType _actuatorType)</arglist>
    </member>
    <member kind="function">
      <type>ActuatorType</type>
      <name>getActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6d4a95679808c7620b599235cde5bfd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKinematic</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a19db067df41a7e16e34055d017e423c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDynamic</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acd4a8d4a100f203ed5255c8fcf66c161</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae18f1f52945eb3e558f2ed80c4114926</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a28d3bf6e0b843bcfccf27493f4262459</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a46ae90ae92ab034cd557c3e5b865a7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>addc7128b79bc27c26fa764aa451ce644</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa2eb3ca91def6c54cc7161e7a79a8f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9ba2298842daa800567e545ebf9cdb7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransformFromParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4b86d9681d4519cca8b4fa4046333f5d</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransformFromChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a048d55f67f4caa7108e5416cb733d0cb</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getTransformFromParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2d096d1ac6a4d79070fc5d43e358012f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getTransformFromChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0cf31e9e9ae066be9835932781dd1888</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLimitEnforced</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acbfc6d5ef87c0be22547a778e74e3e0e</anchor>
      <arglist>(bool _isPositionLimitEnforced)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPositionLimitEnforced</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaaf2c1c363aab354feef09da7334c134</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afce92c5eab1de6c988cf37cb393b40ba</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a77dc8212549b803cc3064b93885aae0e</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getJointIndexInSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a8c47d1e3095ca1808e0b681b5288d694</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getJointIndexInTree</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad72cfe450fc01b5db220e57f49e5f3e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a22f697164c3467427b0667916f1e00a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a418883104df7c3e3620dad612f792cbf</anchor>
      <arglist>(std::size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aac7b6a803ddae8fd963c4aacb2daea7b</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad4328ec5ea8cfd273c1d38e55c02b701</anchor>
      <arglist>(std::size_t _index, const std::string &amp;_name, bool _preserveName=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preserveDofName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a65ccdd97bae3bae02b59660fb4823dba</anchor>
      <arglist>(std::size_t _index, bool _preserve)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aefacebfd63e47f32c121811b8842a242</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac014ad7db11eda47ce2cafe6d8bb7a2e</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a16327c0dc8a419a7c900666a429266cf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afe32a00608f76e750c55419b4a2ea625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2d490efca2066a32c4d2359060d665fd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getLocalTransform</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac0493cc445b8744277914dcb980b7fda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2d2dff6236fbcd15e1594e12a90c5f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aebb425dcaa45ae4f92d5ea17c06e4b32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalPrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa619c9fadeb9fcafaf21fe722de57da5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a23cf86f29eda9ee70058cc5b79476c08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a07f1469ae90ac237bbcabe468b03593b</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions) const </arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a28b276d365be9d97ec0b8e82bfa46d98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aad7e00f0a5f85ac70a5fe4071b026f2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae7f019f17834150a5449de2733690972</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aee68faf9e4807ea479996fd77140148e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativePrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad6f0d0ac868ada8cad39e33f0a8d1bf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>adc4134667f113fc13a6f5a4c55aa2924</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0dbaa7940cf1403ec9a0b5fe46645530</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian</type>
      <name>getRelativeJacobianTimeDeriv</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac3fe7478f58cabd8ddacb53983a265c9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afdc74ee0832d12b85afa4544b9d63ff2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>const AspectProperties &amp;</type>
      <name>getAspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>abefb3bea09385788bf00867bd47a68ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCommand</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a1ab8158fb248778e1574e04f92592691</anchor>
      <arglist>(std::size_t _index, double _command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getCommand</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a53ddacad185b8252ff00ca83c3e015c2</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCommands</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>adb1b3b75ce59b1f6cd1b1d8c696af3fd</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7e7b2480982fec7911e35c1fba5a88e5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetCommands</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac15f618f8e166f7010dd585bd3c0047c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aed6cd0dcea78ae5e5c51812e8e201c78</anchor>
      <arglist>(std::size_t _index, double _position)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac96f638bde59446725e0b774bb0f02ad</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0fcfa96fb18a7c6f9b24b6624f72b0f6</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac98858647eab043e2b7e95b4bbf61399</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a5cc059e862147a0d0978437a6ab34513</anchor>
      <arglist>(std::size_t _index, double _position)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac5386d1759113084a850d465aaf00a4e</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaece7f88b98e160694064ea93adafa55</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae73b9423fd52ed7b78200a25daf6f521</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a91d33b945b7736c97979c24bb9e3a476</anchor>
      <arglist>(std::size_t _index, double _position)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae0ac6454bc825e83daf5c3bb49d6f26f</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aad720503dbf478f0da252cbac9079f0d</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2a2e8bbdb9f878ac58ad9eede6eb0384</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afd301cd11c4d950c0c2532f7341d6c87</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a81f728eeffa9e2ab5a9927a686aa1b31</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a109bd6bcfe0ff38188a552cd96138c89</anchor>
      <arglist>(std::size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a74e33663d1175a8ae146237b8f1c6c86</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a687bd76087d4a0f8df3c9d8c2e88538d</anchor>
      <arglist>(std::size_t _index, double _initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getInitialPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a03717b21a733f752f843a97f21481894</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae191b1881fa5a7cd02d24400b8a20132</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a70a06c94d9ccd8809a8983a130f4564e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2d3c1b0e69babe2274e36c0f89ef98bd</anchor>
      <arglist>(std::size_t _index, double _velocity)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4d860bebf0e9c6c8f4821025bb87ddf5</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab669ed16fb874dc0f4bbcaad89a944e8</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af15a842080b0a58c4c52818c74a85ef0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aea26521a66f56430d9cfab94b81a6f91</anchor>
      <arglist>(std::size_t _index, double _velocity)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a013bad422e720744e1faab959f8d197c</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a87919a116cbe58eb7b067292be4f7526</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a705442bfc126c3f59a5c329fb5631775</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>adc55ca03ca2a22ad66723f45ea50512a</anchor>
      <arglist>(std::size_t _index, double _velocity)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0a22f1897cfdc27e0ceba1f1ae0873b8</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3cd4d1de8fead91b92bb379573c93857</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6792eaaec78c1b678bb06b41af15a89f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9c15a10f35c0e6cae81900a71bc5c2d9</anchor>
      <arglist>(std::size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9357c095f23bd1c298ddede84722394d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a220de3b89e40085d446ad8372af1623e</anchor>
      <arglist>(std::size_t _index, double _initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getInitialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>abea03e83a59f375e7f7095ce7f2a3514</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a346966a2b8358721f395610359486f4e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6917d9b8e35ea21256986e7ffcd67e14</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa392246e6437bf56499b3091434456e5</anchor>
      <arglist>(std::size_t _index, double _acceleration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4db5caeb5732d3d06f654b8db6c84f5d</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerations</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a8573dd184120f2af88cf5a85774d44df</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9a55c927f8527d33509ccd90aba651bf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetAccelerations</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a1fe18a369615e06757a3bd779cc49fa7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a361f404c2623151c34710ffc658704d3</anchor>
      <arglist>(std::size_t _index, double _acceleration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a938a8e923ea6c08dab6a785c686e1a23</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aafa138c3d6558e9c57e549b6e6e84877</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aba2e886439b41dc3cc25f5699aab1519</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afe879dabebeec3e57ef60d4ea1be52a4</anchor>
      <arglist>(std::size_t _index, double _acceleration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0e4deb21b3729497fbc27d5ae0b785c8</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afbd386abf206181ac2e0ac6cdd4e9a1b</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae6d3b9fb72d87087c62949113bf3d6ed</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForce</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7fb4ae07eeb286f050722d982309e1a0</anchor>
      <arglist>(std::size_t _index, double _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getForce</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab5ce4da3d34b2ad176822a73b8bc9a61</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForces</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2eaa146434e7ee615e8f4f9f43dd1c64</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a04dc108c3f57da8b0447dd0a8c6c3c9c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetForces</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4b1b6dd3b89f95b180ae52d218fa2529</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab57fca1eec5c1f68462d459eb5fbc94a</anchor>
      <arglist>(std::size_t _index, double _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3059d960fa6a0816e664494471fa0866</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a93d5c1e7895a5011f01d48ce1d203780</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa6d2f95cd215dfd0ca5b69ad170c48f5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a13bbc8ac4436bfbfc883310889e80b87</anchor>
      <arglist>(std::size_t _index, double _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a217032599da2df53aeae407a240785c0</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a43aae5d44033da2a876f8fbbcf203361</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab9a684f1159b46cd2eba91ea5bead678</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSanity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac7e837a5bed7d3d123b366953c389fa9</anchor>
      <arglist>(bool _printWarnings=true) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9b1f07cfee6f1e02da1859b22cc8cd65</anchor>
      <arglist>(std::size_t _index, double _velocityChange)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a450efadaff4b6e9669a18942bc3326d5</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a35a03cc529f1fbc38a6a34a75210f4b9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7c0bda61fb168c903bc267143137fa9f</anchor>
      <arglist>(std::size_t _index, double _impulse)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2bc63dcb9ba1c52d944b23e4b97c6b57</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a152786ea424158e245871374070f4d32</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integratePositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4352d854bb6c323cc030e0d067cf6995</anchor>
      <arglist>(double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af274e5caf2a79342ea204806821dd984</anchor>
      <arglist>(double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4627c9e30893a61719056bc0dd505b9c</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9ecfefe5e2447b1365370be4bcc7cb1b</anchor>
      <arglist>(std::size_t _index, double _k)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a46e06b4c474de01e57687776090b1dac</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaa9a6e9c8ed9dde2e63df2eb5871ceda</anchor>
      <arglist>(std::size_t _index, double _q0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a80d7c9f5ba969e08541efdd540eada5c</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9abad05c12dbdada95266986ddb9696e</anchor>
      <arglist>(std::size_t _index, double _coeff)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0369900df38a1b370760bc7f98d767a3</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad89c67032e0f3bc72d8f20899a4d0272</anchor>
      <arglist>(std::size_t _index, double _friction)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acda15045e8e207d2a11535f299530e1b</anchor>
      <arglist>(std::size_t _index) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPositionUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a57977210b66f005c446a3c33b0bb578e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyPositionUpdated</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>abe0c7e8f6dbc5b208e8bf3db92936ffd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a8fe413bf4e47765f2cdff2f5db4a14eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyVelocityUpdated</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a53ec4e4ebd1d45e0a3deb1f72049cd27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyAccelerationUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a52639faf7a863932fb97bd4ab97c42a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyAccelerationUpdated</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aacaa5afd5ec49dd5b912a832d336ba88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ActuatorType</type>
      <name>FORCE</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa30ce613352c187e9ded318ca8367123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ActuatorType</type>
      <name>PASSIVE</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2ca5f61f849124b65626732072ec7976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ActuatorType</type>
      <name>SERVO</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3d936a0e5a4c8e97d38513eae83aa7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ActuatorType</type>
      <name>ACCELERATION</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a471dac84b126a89cc8a22bc33648fb77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ActuatorType</type>
      <name>VELOCITY</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af3f739337c59408d06dbf17e1ec29680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ActuatorType</type>
      <name>LOCKED</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a536035df79c998493509484ba06d1ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ActuatorType</type>
      <name>DefaultActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab1f38e3e1945586f2e6dd0446f6d8bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Joint</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a5a03003b41f6cbb9e8a23fc7ab508af9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a79f88baad0ca5a053a6531e3d212e3da</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>registerDofs</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa5fbcf670b519197d2ea11e23fb7c020</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DegreeOfFreedom *</type>
      <name>createDofPointer</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a5100faa4f13af95592a4ae6c3aefa69c</anchor>
      <arglist>(std::size_t _indexInJoint)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2c496f22f2789325ce5c5f1bc0f7f144</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aea9cf7b00f1776d792fb21e076e90337</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a032fc3e73566ff12ebe47c9134148d94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac90366318fc6681e0783d0035f2865e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a46c5a9274243a1c45779e6e26983dc84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a98526e42b271d7fc9d1c06c2c11409ae</anchor>
      <arglist>(bool mandatory=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af00976bf8c9bd84c4e64e7d773379bd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac7b244001523fbc867e576f2047cad42</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateRelativeSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4fc3c18eb600fad95e43bc45c8d801ae</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateRelativeSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af7269e153912c0277c4fa3dcec9eaff4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateRelativePrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a91896169e2e7e2370e188dd31871e03a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a25789cbbe4d0316a37b3cdfaf0b744fd</anchor>
      <arglist>(bool mandatory=true) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a250182704a20cb59988435d02f8dc42c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArticulatedInertia</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3fd1e735dc9f700a2768e7ad4d88c889</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addVelocityTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af13fd51ad3af5bf73e9cf907fec34559</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac4c911980f955947e9689316df7e370a</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addAccelerationTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6222aaefc61ae809a5d82542d7334eb9</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac18a70e8c0790768a4a9fc60796b1866</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acdee2e2b636776951d9e01c842e557dc</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaebeb23e43c0755ae5d3abf73c203b83</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertiaImplicit, const Eigen::Matrix6d &amp;_childArtInertiaImplicit)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a00c978cc89d7bfc00659d8ff6e93d803</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a236b6ca4fd937ab219f181a0964903c1</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac9c46e0d69e5b358df7fcdbca02c780c</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4a0a7ec2ba4a787cce002a4f22e40f4f</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateTotalForce</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae08d011cc44595c665864393d3ecc166</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a078cc697928165d8657fb91772ddbf6c</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae8e0c2e86bf72d84e2fa4069834a59bf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae76f01fe9085f3a7632a39d838fcb748</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateVelocityChange</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a48374a535fd60cce8bf9aed401861b0c</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateForceID</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a017c92053276f2c207e68a5f7ce9fd36</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateForceFD</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0b4fdd4198dfadf29e0e93da08e32b51</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForcese, bool _withSpringForces)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateImpulseID</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae915ee69860633c5eb28a8db43e675a9</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateImpulseFD</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a04d936e83d32d592d9004c7aabf7cace</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aba7ae136431ecc85c87f98c5e230c623</anchor>
      <arglist>(double _timeStep)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ec73e8e6df9f413db9b44f47f83388e</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad1c9ecdabab1bb655883d3e817a169e6</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a01b5842801994555d3bf7edf39d497ee</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aab7bf11baac6fa34f7af1fa63b3d7d7b</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const std::size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2ec49815d255e7ba6989d649e952fc94</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const std::size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a85c7b150e987b27288c0d1f87f703063</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0747e996d2d09f934345b7f8b1942e14</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BodyNode *</type>
      <name>mChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7560aa4130a25f6f0eaa52e10239ef01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mT</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad65b631e90dae3b36cc3df3b3492d4f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a568d47e98b81b92fae26c210c7bc9a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a47f82accdbd66200f5aff217d3d83df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mPrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0b56730e3b67a130d162b950f00d7192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedTransformUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a50923451aa330ac28e04c610643ee825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedSpatialVelocityUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3aaf7f3d32a13723cd1f90506c64c758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedSpatialAccelerationUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a01114a7acdcc297dd045a4b2ae85e719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedPrimaryAccelerationUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a27a5575d06590e88e62afb6fafea2ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsRelativeJacobianDirty</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae5863dad2188b08405da88f0a29fddfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsRelativeJacobianTimeDerivDirty</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acfa5258e3f66fcc1f59f9e5d3425878b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AspectProperties</type>
      <name>mAspectProperties</name>
      <anchorfile>d4/dc0/classdart_1_1common_1_1EmbedProperties.html</anchorfile>
      <anchor>a07c72a6b991a9fde7662062f75371b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Joint::ExtendedProperties</name>
    <filename>da/d68/structdart_1_1dynamics_1_1Joint_1_1ExtendedProperties.html</filename>
    <base>dart::dynamics::detail::JointProperties</base>
    <member kind="function">
      <type></type>
      <name>ExtendedProperties</name>
      <anchorfile>da/d68/structdart_1_1dynamics_1_1Joint_1_1ExtendedProperties.html</anchorfile>
      <anchor>a2fe898a6f381f14d945bce544657af2f</anchor>
      <arglist>(const Properties &amp;standardProperties=Properties(), const CompositeProperties &amp;aspectProperties=CompositeProperties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedProperties</name>
      <anchorfile>da/d68/structdart_1_1dynamics_1_1Joint_1_1ExtendedProperties.html</anchorfile>
      <anchor>a9fc56c8f43a528983f3c9eac912e12dc</anchor>
      <arglist>(Properties &amp;&amp;standardProperties, CompositeProperties &amp;&amp;aspectProperties)</arglist>
    </member>
    <member kind="variable">
      <type>CompositeProperties</type>
      <name>mCompositeProperties</name>
      <anchorfile>da/d68/structdart_1_1dynamics_1_1Joint_1_1ExtendedProperties.html</anchorfile>
      <anchor>a559f45281886b0ab52ef76e4f6241ad0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::LineSegmentShape</name>
    <filename>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>LineSegmentShape</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a9018a109d55502935c7b4429b546decc</anchor>
      <arglist>(float _thickness=1.0f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineSegmentShape</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>ae4a47f436808d27b764b254170444071</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v1, const Eigen::Vector3d &amp;_v2, float _thickness=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>aaf48d36366a8ca3e43fbdfb9b478a204</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThickness</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a23e097569abf296a12d617056e8a0607</anchor>
      <arglist>(float _thickness)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getThickness</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a5e8ea175abc7e5e89e837fde1ee9b50a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a8039163fdec866f2d45ea391fc987be1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>aa20d3e6742a33747aba3e16be070ba4c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v, std::size_t _parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>ac567d6c743418ce413951dc538246a41</anchor>
      <arglist>(std::size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>accdb3d1d25d5a868f4cd23c19694a355</anchor>
      <arglist>(std::size_t _idx, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a2850b2bd58b8b36aacb1b366467cdca3</anchor>
      <arglist>(std::size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Eigen::Vector3d &gt; &amp;</type>
      <name>getVertices</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a9249fbf049af2ca02a828903c6cf1420</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnection</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a64b059d6149b5ae7b123a5363253354e</anchor>
      <arglist>(std::size_t _idx1, std::size_t _idx2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConnection</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a901638f57bcaf571f5d0a38adbf2a577</anchor>
      <arglist>(std::size_t _vertexIdx1, std::size_t _vertexIdx2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConnection</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a7a3f3fc35b9ab9b858506003e43fce0c</anchor>
      <arglist>(std::size_t _connectionIdx)</arglist>
    </member>
    <member kind="function">
      <type>const common::aligned_vector&lt; Eigen::Vector2i &gt; &amp;</type>
      <name>getConnections</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>ab03e10b0230c5b6054c2e116afb9134e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a04724a5c1f88ba635fc19f53112c38d9</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a5bbd0b1426e8a555533093dee7bc93c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a5fa16642c9b9166bc4c0441e7c88803e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a09c3382a63ae2ee689b007d642933668</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mThickness</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a35e6805d7d5eee797073d61f03316414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>mVertices</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a3e2eeaaca28476cb71715983ac1adeee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::aligned_vector&lt; Eigen::Vector2i &gt;</type>
      <name>mConnections</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a859f5fe651228bbddfeca31aa91ae3c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const Eigen::Vector3d</type>
      <name>mDummyVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a025cc816ddee9ca11e78ce9f73fad261</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Recording</name>
    <filename>df/d79/structdart_1_1dynamics_1_1Recording.html</filename>
    <member kind="function">
      <type></type>
      <name>Recording</name>
      <anchorfile>df/d79/structdart_1_1dynamics_1_1Recording.html</anchorfile>
      <anchor>a2fef3302bd4a7516a1a3fa8f4fc964d9</anchor>
      <arglist>(BodyNode *_node=nullptr, int _count=0)</arglist>
    </member>
    <member kind="variable">
      <type>BodyNode *</type>
      <name>mNode</name>
      <anchorfile>df/d79/structdart_1_1dynamics_1_1Recording.html</anchorfile>
      <anchor>af297e36a5b11db82b5e40477eb807375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mCount</name>
      <anchorfile>df/d79/structdart_1_1dynamics_1_1Recording.html</anchorfile>
      <anchor>aa01a485f3492cbc94c52634f1b6ee326</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Linkage</name>
    <filename>d8/d57/classdart_1_1dynamics_1_1Linkage.html</filename>
    <base>dart::dynamics::ReferentialSkeleton</base>
    <class kind="struct">dart::dynamics::Linkage::Criteria</class>
    <member kind="function" protection="protected">
      <type></type>
      <name>Linkage</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a3c8eb0801e1d9ec5e93732ddab2b467c</anchor>
      <arglist>(const Criteria &amp;_criteria, const std::string &amp;_name=&quot;Linkage&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Linkage::Criteria</name>
    <filename>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</filename>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Target</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Terminal</class>
    <member kind="enumeration">
      <type></type>
      <name>ExpansionPolicy</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INCLUDE</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca6ebcc4392553d81cf86437a479e07264</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>EXCLUDE</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca6a4d4c5d8faab1a36cfbf96b48abc571</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DOWNSTREAM</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca7c091fdce5ae9bbe012f8a099db17ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPSTREAM</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca37126a60abacad226db7d89f4ad476f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>satisfy</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a6ad88b5c15e67aa849745e78635ff962</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Target</type>
      <name>mStart</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a01069aa5779ae1a59e3e7bad301fb9df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Target &gt;</type>
      <name>mTargets</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a32aff57b36e113c5de2aedd181bd21b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Terminal &gt;</type>
      <name>mTerminals</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a48c52cc69af5d1491593045e1db28db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshTerminalMap</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>aa0e0f11feae69ccdde12d2e43913d693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expansionPolicy</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a19f2b53c61519720955984b79b7b701b</anchor>
      <arglist>(BodyNode *_start, ExpansionPolicy _policy, std::vector&lt; BodyNode * &gt; &amp;_bns) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expandDownstream</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7f7218cdd079f67f9c042ad613063033</anchor>
      <arglist>(BodyNode *_start, std::vector&lt; BodyNode * &gt; &amp;_bns, bool _includeStart) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expandUpstream</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a97c27425b30c4c3eb92ee509f796f6b1</anchor>
      <arglist>(BodyNode *_start, std::vector&lt; BodyNode * &gt; &amp;_bns, bool _includeStart) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expandToTarget</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>ae7280a662e494b5433352dd8521a344a</anchor>
      <arglist>(const Target &amp;_start, const Target &amp;_target, std::vector&lt; BodyNode * &gt; &amp;_bns) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>climbToTarget</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>ad0c4e918d6ac89a58005db89741661a5</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>climbToCommonRoot</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>afdde502ec7e666514f5af0767bc4e3f1</anchor>
      <arglist>(const Target &amp;_start, const Target &amp;_target, bool _chain) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>trimBodyNodes</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a9ccae89c381dabd9a580337773b0027a</anchor>
      <arglist>(std::vector&lt; BodyNode * &gt; &amp;_bns, bool _chain, bool _movingUpstream) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; BodyNode *, bool &gt;</type>
      <name>mMapOfTerminals</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>ab5eda4b2b1c47493aee228ab5c80c2b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Linkage::Criteria::Target</name>
    <filename>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</filename>
    <member kind="function">
      <type></type>
      <name>Target</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>acfd147000f56852294a79c06df50193e</anchor>
      <arglist>(BodyNode *_target=nullptr, ExpansionPolicy _policy=INCLUDE, bool _chain=false)</arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mNode</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>a752206a856fa396d0a58f00e9766123a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExpansionPolicy</type>
      <name>mPolicy</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>aa7c258c80b6db10fa71d612bd9b99e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mChain</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>a6b7abbac3f472bcf5f8a0713ac3bb1f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Linkage::Criteria::Terminal</name>
    <filename>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</filename>
    <member kind="function">
      <type></type>
      <name>Terminal</name>
      <anchorfile>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</anchorfile>
      <anchor>adaab8c45f9cd35bf3d1feb65e6e41733</anchor>
      <arglist>(BodyNode *_terminal=nullptr, bool _inclusive=true)</arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mTerminal</name>
      <anchorfile>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</anchorfile>
      <anchor>a84cca8df926924a86d171169cf35d013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mInclusive</name>
      <anchorfile>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</anchorfile>
      <anchor>a55254dba11e32b98ea74cabd88080fb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Marker</name>
    <filename>db/d20/classdart_1_1dynamics_1_1Marker.html</filename>
    <base>EmbedPropertiesOnTopOf&lt; Marker, detail::MarkerProperties, FixedJacobianNode &gt;</base>
    <member kind="typedef">
      <type>detail::MarkerProperties::ConstraintType</type>
      <name>ConstraintType</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>af47a9e756a2763b98c9f94c43558b5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::MakeProperties&lt; NameAspect, FixedFrame, Marker &gt;</type>
      <name>BasicProperties</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a0462e93ba85a5c9b7e6b8999cc8341e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::Properties</type>
      <name>Properties</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a4aedac8ac137a3a2586f66904505cd30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EmbedProperties&lt; Marker, detail::MarkerProperties &gt;</type>
      <name>Impl</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a11332640ee8bf15a4d85852ee5073d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Derived</type>
      <name>Derived</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a1e7c44cb7dfd94ea61cadb38ff619116</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectPropertiesData</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a2c5e9d784c674edc0763646d88870ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>addc9941aced02c95143557599e8bccf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Impl::Aspect</type>
      <name>Aspect</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>a7a09a3abbcd10a188a9dafff5a420cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeJoiner&lt; Impl, CompositeBases...&gt;</type>
      <name>Base</name>
      <anchorfile>d2/d2f/classdart_1_1common_1_1EmbedPropertiesOnTopOf.html</anchorfile>
      <anchor>ad9af78a0e035eb90052912c29cf2895c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Marker</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a5d1503673bc5639e842acf43566c6307</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a1d257b91c0afc8bed9a2b2f500e5b6d7</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a4461f7a28e3ed7df9f2e15e7c93bc8c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a304ad05cdaf7a4b509d1b577269310bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLocalPosition</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ad4e9e82af25d84ba6b3492ae5f8acb99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalPosition</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abeb4b1e7375563d0f0c7955b5b24c856</anchor>
      <arglist>(const Eigen::Vector3d &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getWorldPosition</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ab9540c2d2342fef3eaae7b447c70e45c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getID</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abb94ae64171cede1b442517f18f01f9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintType</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ac10a33077ad0dad9612a0f7ca1514a7e</anchor>
      <arglist>(ConstraintType type)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintType</type>
      <name>getConstraintType</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a6539d7277e70cb75fd732583e0058c2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a66d36b59c3587b3daff487690760ccd3</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector4d &amp;</type>
      <name>getColor</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a8a84629682ad0259bb11136473e4cfbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ConstraintType</type>
      <name>NO</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a532fe872390da9afb89b53b181fb6d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ConstraintType</type>
      <name>HARD</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ab9cd854ade37a2b40ffa0f8b65d9f5ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr ConstraintType</type>
      <name>SOFT</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a55c35b25cc51cd318d9798a9342e391e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Marker</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a898f0f1e7098afc42ca7f676673be134</anchor>
      <arglist>(BodyNode *parent, const BasicProperties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Node *</type>
      <name>cloneNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a1c2476e3fb4cf9d830542bd36164b061</anchor>
      <arglist>(BodyNode *parent) const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mID</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a4f706ac3268e88f6e6a9499cff052802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>msMarkerCount</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abec01dbc256f15cb2d785b946b4581b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::MeshShape</name>
    <filename>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>MeshShape</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a5ff5265ce51a05a6372c977475ea8bd8</anchor>
      <arglist>(const Eigen::Vector3d &amp;scale, const aiScene *mesh, const common::Uri &amp;uri=&quot;&quot;, common::ResourceRetrieverPtr resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MeshShape</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ab92a5e369f1d1a738d92634682690c6c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::MetaSkeleton</name>
    <filename>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</filename>
    <base>dart::common::Subject</base>
    <member kind="function">
      <type></type>
      <name>MetaSkeleton</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab7569e723777b2834b4fd409e7b11703</anchor>
      <arglist>(const MetaSkeleton &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MetaSkeleton</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a14623e1df9e8f179facf21ebb66b238a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; common::LockableReference &gt;</type>
      <name>getLockableReference</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ada751de216d917664063b866b7257f24</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a6f1a8a8817d901853133b1109c71a48d</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ad9d0dc2c7f004dfb71d6fee0683ca6e2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getNumBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5cefc06d355cbadd060837ba2ae7f63e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>afac256145cf5ce929097ae0535c238c9</anchor>
      <arglist>(std::size_t _idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a899b6bf84fa1c8e450ab398c8d090145</anchor>
      <arglist>(std::size_t _idx) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab13dc0d1280621f4a523b1e09690477b</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a6e1a044b530f5b356e1bd811764be44a</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa39e76de5829c06168e653062d5db7e1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a34f11035f0a16ccaee45c96d68845faf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; BodyNode * &gt;</type>
      <name>getBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac0a32b590848f133fb31eeea3c22c3d1</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; const BodyNode * &gt;</type>
      <name>getBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a629239c826d3e0b95a0ab39c9c28446b</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasBodyNode</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a2d6bc3105e159066e05ec1d21cbe59ef</anchor>
      <arglist>(const BodyNode *bodyNode) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa609fa8e0a9a2b6bf2ae6c0056036dff</anchor>
      <arglist>(const BodyNode *_bn, bool _warning=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getNumJoints</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a39c59e66a85fe069f6b5436e1651160e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Joint *</type>
      <name>getJoint</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a861e6af1bff961ab42ce4815053ef8cb</anchor>
      <arglist>(std::size_t _idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aacd40f9e796e922c30455f143b39b786</anchor>
      <arglist>(std::size_t _idx) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Joint *</type>
      <name>getJoint</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a704c7039fab5a3d45289b4f8872e574b</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af17fb8a6d340662ac6a82d16265b281f</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>adb1c24ec6b272892be36591e57c8d074</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; const Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>afcd0edb761cf0300709246931ef3dd6a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acf275ba64905c4ef5a114c1414330421</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; const Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a72d55caeeb2b8c1d11ab23aae9c3825f</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasJoint</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8c5790acffc18e484bdc885439cb86af</anchor>
      <arglist>(const Joint *joint) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>afe40d2d9a2d4c7ea62e6e3ab3d951252</anchor>
      <arglist>(const Joint *_joint, bool _warning=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af4e0253b37fe58ddcd4bec355f914be2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac91f3680d8ea55382a1ac58bc2b206c9</anchor>
      <arglist>(std::size_t _idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a40badabe46f1497ffa4689c55203ded7</anchor>
      <arglist>(std::size_t _idx) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a17a262fcf000113dab82e95a7e8ed870</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getDofs</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a61c592755183aa6671165cdaf3cd82ea</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a296ba4c7e51d8764c986d95772a9ee92</anchor>
      <arglist>(const DegreeOfFreedom *_dof, bool _warning=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a912cf17de72c50a9bfe31b52f2a1a75e</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a490e4c3d3e67c5b3f55fba6ac627c010</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a90b3b2cf1a72a981e96111e199cf1772</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0331bc933f5fe914134918899c060ec9</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac1083532af5b277abc53401d978a61d7</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab12b66d6b114cff5fd41eab5682efb86</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a28925ae0bc27d473bf9e6aa8a1431ac5</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a55daf00be7b427076cdab6955282c05d</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab3d19408ad580c9df1644fcb8c2ce7de</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acb50bb8bed6cfc0a865a02a23f5afd26</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8bcb55f7386ee5eaef17144e94a26c60</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae893b9ada7976ac6de688ea1e6412f91</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aaff83a1576a0f9a8acd439f25323c4ec</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a662748d70921bdfb0156b263f9d10f22</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a246093a2127b1d4f6a7ed0e60081bb48</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8dd0c06856314d6074533d11b5299d7c</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a05c24b46eddd0beebd0487641a6ba0c6</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aedce7ba9f69595e2b510bb0060b46766</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3c6aafc7051580ddb48e928d935c09a9</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getMass</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3cee7051450118bd105d704f3aff2d83</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae1035dc055fc0371a828dc0c6c81a602</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab7d122c509fbb7236a3e4c04749dbbf0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aaeec2539bafde71c42b54f5bb7f2c6c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab89ca4f16ffc79c783ce1f602608d1ee</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a4fcd6e2daaf66f9f0eceac27bbef7ef7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a98877f105477ec75d21f3d073b2ac15e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acebaf1036f3a985cf88bb8b81caea51a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aabbedb06e10d34df0759623a89bc95c7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acc91c08770edce0d1b53ae3bbc193d6a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clearExternalForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3682740dac6801983295b5bcae9a554e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clearInternalForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8bdce217c2d8292a4d1366879bc8dab6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeKineticEnergy</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac65b6bebe2e0db2347f5e326681d353a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ad1188c0b00b9963fed78bb4c8cd97774</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clearCollidingBodies</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1b2c2fe955726b264f2e4fd3537dd382</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1077e6235273ac26b36a513a340cf1e0</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8f988963d9fafb5a6ae0b5e065c18ef8</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1aab3cdbb048171e931faf3931a3c8c6</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ade3cad0b2002051d1e4127ffe64ad705</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3fa6fac084eb25eba364fc0ebd6d916d</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getCOMJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5636ef2c3615dc21185bf565a9d0eb17</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getCOMLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae0bc8bd13935617151ee0ee96fcd260f</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getCOMJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a91e57d7900985f5d4a4c86892bc233f9</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getCOMLinearJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac06fcbd68628926fd58515e021ee33ec</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MetaSkeleton</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a80a4245d052e54458455d2885ae304f2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::MultiSphereConvexHullShape</name>
    <filename>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="typedef">
      <type>std::pair&lt; double, Eigen::Vector3d &gt;</type>
      <name>Sphere</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a4aef07fad4b8c8cdc701b995d08924c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Sphere &gt;</type>
      <name>Spheres</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a1959a6d9f8ca6104c41e9e84b484abe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiSphereConvexHullShape</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a10798768d9bda43166f40090b343c11e</anchor>
      <arglist>(const Spheres &amp;spheres)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiSphereConvexHullShape</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a40edc990cb19e851676832598d91f8b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>aefc0c7e438af38096b03bffbda62ee8b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpheres</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a4b1fb3fd5491bb64dc6f0be567252d94</anchor>
      <arglist>(const Spheres &amp;spheres)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSphere</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a229a577e13793da71f394d6603050522</anchor>
      <arglist>(const Sphere &amp;sphere)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSphere</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a0bbb127be04740a6dd8d2a93ed594acc</anchor>
      <arglist>(double radius, const Eigen::Vector3d &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllSpheres</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>ab0c2ba2a56775aaaa42045b9d057e467</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumSpheres</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a835c182f76a8e8546eef15d88851244a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Spheres &amp;</type>
      <name>getSpheres</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a5b73f4540b52cf695e057f01b32ff632</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a0053077758d043d05c664f92f12b429f</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a9a60588e8056c94096799b6744e79c37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a582024cb3fcc3447a0054e7c4594da06</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a258094af2f4a1a36995a398c1fd2fe8f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Spheres</type>
      <name>mSpheres</name>
      <anchorfile>dc/d4c/classdart_1_1dynamics_1_1MultiSphereConvexHullShape.html</anchorfile>
      <anchor>a7e905f190d7966af595d48e440b6d22a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeDestructor</name>
    <filename>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeDestructor</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>a29de015cf0c4b1eb8710e1f3f306a0e7</anchor>
      <arglist>(Node *_node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeDestructor</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>adb5b9d45cbb6dbcf8d4e1c221b6496de</anchor>
      <arglist>(const NodeDestructor &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeDestructor</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>a50bbbcac7286ce81f9c42cb408168631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getNode</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>ae489de4562bdfff74bf765e0b8b3e5ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Node *</type>
      <name>mNode</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>af23a7368f5681345fd9b603cda9dee8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Node</name>
    <filename>db/dc8/classdart_1_1dynamics_1_1Node.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <base virtualness="virtual">dart::common::VersionCounter</base>
    <class kind="class">dart::dynamics::Node::Properties</class>
    <class kind="class">dart::dynamics::Node::State</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Node</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>aabce31d5c1b43e2e5a686db2aa95b50e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Node</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>abfc02dbfa88ba4adc05fd17e4103cfbe</anchor>
      <arglist>(BodyNode *_bn)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>getOrCreateDestructor</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ab1f0bd39805f5a240d18781feb7c0fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>AccessoryNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a07a57092c147bed2024fba41595f91e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a1a3d8e9e0914d57bab6a8b9ef2cc21dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a1dc904ae4e952e78708ec0f6cfe0e22e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Node::Properties</name>
    <filename>df/da8/classdart_1_1dynamics_1_1Node_1_1Properties.html</filename>
    <base>Cloneable&lt; Properties &gt;</base>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Node::State</name>
    <filename>d4/d98/classdart_1_1dynamics_1_1Node_1_1State.html</filename>
    <base>Cloneable&lt; State &gt;</base>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::AccessoryNode</name>
    <filename>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</filename>
    <templarg>NodeType</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AccessoryNode</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a18715f97f227902b87272317622e5bcb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInBodyNode</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a2976091cf27d7121ae52393bd8902d43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>ae3e45964c4e127c1344038f9d86949b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a802f6324b658acfa2c017c9e1af6a494</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a522ad0ba947468331f61968521bc005f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a837eb31019d03c06d40e2fe0d223dd3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reattach</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a956604ad92530ee558259bf2822c9e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AccessoryNode</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a0ea8eab86ee025b9556fea291c99e07b</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForBodyNode</name>
    <filename>d5/dc2/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode.html</filename>
    <templarg>OtherBases</templarg>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1 &gt;</name>
    <filename>d3/ddb/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1, Base2 &gt;</name>
    <filename>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForBodyNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a43a4d89b22f5973db07781732444aeed</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForBodyNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a5ea1c3a393baa862361869ba92d5380f</anchor>
      <arglist>(Base1Arg &amp;&amp;arg1, Base2Args &amp;&amp;...args2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForBodyNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a54b13ee22f6dde897b5d82c7c7a3b61a</anchor>
      <arglist>(Base1Arg &amp;&amp;arg1, common::NoArgTag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForBodyNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>ae337a7af2c9b2060a54d770551d90744</anchor>
      <arglist>(common::NoArgTag, Base2Args &amp;&amp;...args2)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumNodes</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>acbc5f7822363b13109493e66f4235b5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>aa55bc14d9c74b69e5ee6d60d2be6b76b</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>ad13137627a95c454239eb7ec09468573</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a39312cd6838c9e44c47fd8cf7201a775</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a997549b931423bd76406a842fde7d2cc</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>isSpecializedForNode</name>
      <anchorfile>db/db9/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>aad5595308dc798949c5eb170c7729945</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1, Base2, OtherBases...&gt;</name>
    <filename>da/d5a/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>OtherBases</templarg>
    <base>NodeManagerJoinerForBodyNode&lt; Base1, NodeManagerJoinerForBodyNode&lt; Base2, OtherBases...&gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForBodyNode</name>
      <anchorfile>da/d5a/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</anchorfile>
      <anchor>a547c024e6fcfc16ea7c6e1a3dc3ff2bb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForBodyNode</name>
      <anchorfile>da/d5a/classdart_1_1dynamics_1_1NodeManagerJoinerForBodyNode_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</anchorfile>
      <anchor>a9703230b9ac95d5204e96504d39084f8</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForSkeleton</name>
    <filename>d0/d2f/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton.html</filename>
    <templarg>OtherBases</templarg>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1 &gt;</name>
    <filename>d1/dc4/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1, Base2 &gt;</name>
    <filename>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>dart::dynamics::NodeManagerJoinerForBodyNode&lt; Base1, Base2 &gt;</base>
    <member kind="typedef">
      <type>NodeManagerJoinerForBodyNode&lt; Base1, Base2 &gt;</type>
      <name>Base</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a9121dfcdcd179d24c7cccf4caf1add62</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForSkeleton</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a5c6158a68ae4c49514a8c5cc958c1248</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForSkeleton</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>ad15b72d2e7d35f1c6ca1735d3e890e24</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumNodes</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a70f46a95f47d91ecc9e555d4602f1feb</anchor>
      <arglist>(std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a178b69dcce63306a1a78e10dff58a929</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>ab8dba0940f34ae7ea4f503242c02dfdc</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a0744d14d6a63d858f65b35c5c597c7cb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a5670f0c128e6e50b24776d726e9a0256</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a914b26528636d86db6a08076b2866848</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>aef60e28caec478f857fc5fc0bf18f337</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a6c6ce75187168e317603a746aefbcf35</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getNode</name>
      <anchorfile>db/d96/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_01_4.html</anchorfile>
      <anchor>a58fda8d03b737a9d59166f230aadb581</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeManagerJoinerForSkeleton&lt; Base1, Base2, OtherBases...&gt;</name>
    <filename>da/de4/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>OtherBases</templarg>
    <base>NodeManagerJoinerForSkeleton&lt; Base1, NodeManagerJoinerForSkeleton&lt; Base2, OtherBases...&gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForSkeleton</name>
      <anchorfile>da/de4/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</anchorfile>
      <anchor>a2dd358db947c2eb18579072e33e198b3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeManagerJoinerForSkeleton</name>
      <anchorfile>da/de4/classdart_1_1dynamics_1_1NodeManagerJoinerForSkeleton_3_01Base1_00_01Base2_00_01OtherBases_8_8_8_4.html</anchorfile>
      <anchor>a3358cca8c54a9b4f8e25cb823f0a9bdf</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PlanarJoint</name>
    <filename>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</filename>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::PlaneType</type>
      <name>PlaneType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>acbfcbc8f4a149dea51b3a5fa1efd9782</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::PlanarJointUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a8b5b8681964b8287fa0ac9427324821b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::PlanarJointProperties</type>
      <name>Properties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ad19efe7718a6084757f4a667e3c515cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericJoint&lt; math::R3Space &gt;</type>
      <name>Base</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a828dbe2ef5b25f43b1b1075a77ab9462</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a67ae498cab2a84e45ddad4bab62d818a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getPlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a09127495be26e7854044ac6987066d77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getPlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a2a30f632e471678202d2f13535ab0856</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getPlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>afd2dc5c1c4790918322359b05d55b442</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a512929f9057664c946101ef7b9843147</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a73b816710173a25e9c208abe18758791</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createPlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a06a2982fca74eddb470f8d0a7bd60939</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a1bb98058ad4ff5e84a1bdb9d30d3c96c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releasePlanarJointAspect</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a2cd06489e0d1439b42c42d41849e4602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlanarJoint</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a40185fc29c7fb48dfa9d2c61d629d445</anchor>
      <arglist>(const PlanarJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PlanarJoint</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af85cf4a3097b1d64dc7c83e6e80bd41a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a26d7e67a09a44b9e0d4e2893068e11df</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ac834dace40819fb46c42ab769906b3f3</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a0b5370e2c423d60ee657969cd88e5892</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getPlanarJointProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a85c9cf403eacb5c63862415f4cb0355d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>afee4e7eeda0ae2f366b646ddd43effaf</anchor>
      <arglist>(const PlanarJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a43fbe8b3cd1ff9e5ebc33beb7fcf83e1</anchor>
      <arglist>(const PlanarJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>PlanarJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a6d8c4310c2722f1810386981bcea22c9</anchor>
      <arglist>(const PlanarJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a971596c917c26818d31e8afc0deaf838</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a3cb2f0413561d64780115baf7db2c434</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXYPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ab52c4a495256852e1bb3ddd72954270d</anchor>
      <arglist>(bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYZPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af9d194ccb052b8cf44b1a75baaaab584</anchor>
      <arglist>(bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZXPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a807ec09e1696c077004eabb3be46cab7</anchor>
      <arglist>(bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af21c664ccfa1fdad5b240866dcf1eca3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_transAxis1, const Eigen::Vector3d &amp;_transAxis2, bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>PlaneType</type>
      <name>getPlaneType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a7d2af72aeaa39019e12170357d362f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getRotationalAxis</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a9bf2075ea6c8ffc3c80ccd8d3edc3975</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getTranslationalAxis1</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>aa9a822c23707c0d545d55c4142b6eb8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getTranslationalAxis2</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a32504b4025081d4d6b70022caf57044e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a9d5f4cdf5c6bd3fa738549d42f85b82a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a9f023c0b1937cf530c27524fa95c5e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PlanarJoint</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a77368c1cc7a39471ef400b5b41709f74</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a6205110329a5206938cb49d663adbcc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a24f8df559c3ee386d01785a1a8b1eb95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af9a2ba98b6f181f12ab3bd7642932ee3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ab898462dc684cab753e6259a137dcca8</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a3973cb2cc637a3ae39be59a45020e883</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PlaneShape</name>
    <filename>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>PlaneShape</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a7243a821411d9b883b2c1ea520c42c3d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, double _offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaneShape</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a004d3ca6187b5834025dcf004abe34b6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, const Eigen::Vector3d &amp;_point)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a40dbcf056d2f1857c6ee541296208f67</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a9442a47096421e395af58c56e02c20c6</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormal</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a3ca8cd3857f836da605fb34303cf5458</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getNormal</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a7feaeaaaa43f788750abf11ea926823c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>af251e54278cfef1da211b0922e358cb3</anchor>
      <arglist>(double _offset)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>ae2542f2bb10f09b5e12a93b25f145291</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalAndOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a3b807d1edba96009c41c08c78ac84b68</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, double _offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalAndPoint</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a1b7cd72b325223d3d3b3cc834fa52af1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, const Eigen::Vector3d &amp;_point)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistance</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>aa4e858a5bc3a4d9f8b552a012a3a8c51</anchor>
      <arglist>(const Eigen::Vector3d &amp;_point) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeSignedDistance</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>ad768ba8f5a08d1d9d1857f262dd2c6d2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_point) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a6c1494866c14f63f032d75846606933d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a42248c00d152875693648489aea7df94</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a55084c3a90861f29f954fa0a93603984</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mNormal</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a9027f36f592fcdcacc7cebb1a005eb9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a5f9837381bc76d79925feabbdc093ea1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PointMass</name>
    <filename>d5/d55/classdart_1_1dynamics_1_1PointMass.html</filename>
    <base>dart::common::Subject</base>
    <class kind="struct">dart::dynamics::PointMass::Properties</class>
    <class kind="struct">dart::dynamics::PointMass::State</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a516c86b07d09fb524720f2a4f9f2acc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>State &amp;</type>
      <name>getState</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a5252c64b0daac09c8487851d87f1cc8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>getState</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac2f721aaef679f5b7e6986c46966a1b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aab5f4527f0fcdb55f66d65768aea62bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2a02666ac35c4404009fbededf8ac135</anchor>
      <arglist>(double _mass)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aaf137b5fdd72cf08420ba8250b1715ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afe3769c261d6e92c3087d29095ee8bd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getImplicitPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2adf059c8b76a6e682d17c5314114eea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2e7639ce71527e73191db52617a8f6de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getImplicitPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abf16bf697753e4904282a3bcc9d8a824</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnectedPointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac0719c87d37dd53a418e4589fca241e3</anchor>
      <arglist>(PointMass *_pointMass)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumConnectedPointMasses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a13b49e6fd79af9cd36b7f2c8e82303f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PointMass *</type>
      <name>getConnectedPointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a69d992d0f2370edcdb953325f4d8c849</anchor>
      <arglist>(std::size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>const PointMass *</type>
      <name>getConnectedPointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ae7448efee851c7b1299aa193ef6e7003</anchor>
      <arglist>(std::size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColliding</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab46bc6f844068db811751529af3d61b1</anchor>
      <arglist>(bool _isColliding)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColliding</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a6d3b0ad79ab8b47601af1579be8b60c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a89dce78f03c82273d56481ff68ce1219</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a0b055913d3aa5463ea8d932ba5430cc1</anchor>
      <arglist>(std::size_t _index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af0a6c18414148e906b06e9054639c79e</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af9745e9a6849694a09230282e406b498</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getPositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2733238762bfc8e362cb46a228ffae27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa3bae24fac0294804fb90f560f83cefb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad5dc84f53e920b6fd7290aa2b9354f6d</anchor>
      <arglist>(std::size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a3c8a3843d39b33be982151d0f90cf0d7</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8d49c5ef0eefc383322f22c5c43999a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa607490682c224ed445fcb8d3dc279fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7bc244d8346e69165458a9042b5e25ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>accb54b786445374e98186cc91f51c8c2</anchor>
      <arglist>(std::size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>acf6c43e0f109bf1e6859bda2adb7961d</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af777e9e33df886c268da65c79d878965</anchor>
      <arglist>(const Eigen::Vector3d &amp;_accelerations)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aadcbe63ff32eddfa09d2b8291ea396ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getPartialAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a62a3cd652213c650eef25b75b358ba1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad894c1c6203fcc1c4e86bd1dae2230f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a627d612ce04eb298b3efcdd4e9618082</anchor>
      <arglist>(std::size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a481814b7a578ece56f0db2017c278616</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aaabef4291aa1985c01125022b7a629e3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_forces)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a355d56ecf68c316a40422673d9499c30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>acb6fa3637358d9b4f86e7b12d8746208</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2146205a0a124002c63679e5b5dc18b4</anchor>
      <arglist>(std::size_t _index, double _velocityChange)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1c4e7def51ca6f65b71bbfc2d0bc20e1</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a8a48843e820b76c4bf3b2805f43f6dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a631ddb47fef62c6d5919b539347bc720</anchor>
      <arglist>(std::size_t _index, double _impulse)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad9194f484fb44de353ff448764b2dfd7</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2bb1eba67e41b9d6d192605b7a994c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a16979f576f90cad3247c8a3066c4ced1</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1b04256000b6ca0f4f7f5bf42b0a72fb</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aab89de4ade62cbdcea161a5b08e61bc9</anchor>
      <arglist>(const Eigen::Vector3d &amp;_force, bool _isForceLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearExtForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abcfba90a4ac1274adcd8fd7ee4e5843c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa1a8f35d048e979b6985f4da30c10791</anchor>
      <arglist>(const Eigen::Vector3d &amp;_constImp, bool _isLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a91b1c7ae586b8abd9865ca6e94544a74</anchor>
      <arglist>(const Eigen::Vector3d &amp;_constImp, bool _isLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a34dddc85c8af755ae372763cda7c390c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getConstraintImpulses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a262c71fbad64edf8e321b10177eb5529</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestingPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab0f2326306654a2cd084accd2a495a9a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_p)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getRestingPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aff0e44b95c3c7af0c5ecce26fab82db3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLocalPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a54f38978ae4b901f7e9c515ec3554bf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getWorldPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aedfd17f73aafb91914d472fd9d8f443d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>getBodyJacobian</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afce1060d927707a7821f31a7b78e9d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>getWorldJacobian</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a28b8d68828ac56bca83851cbc83d8b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getBodyVelocityChange</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a86aca29876829a5f4e17dd3142b3fc1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode *</type>
      <name>getParentSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2e9e0e1b55129375ba27bee0ad165f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getParentSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a238c256040815b7b79fcf490a68cf463</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getBodyVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa364e94f8322f6ce9e8c97962c6cfe51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getWorldVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afb80516e7de350d9f128a4ab0ff5382c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getBodyAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afcf749a0d746739c62ed0c014791badc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getWorldAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad16ad4e4871dfb90f70e2de6e442077b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>add88bea1650723537d9ab81396b45067</anchor>
      <arglist>(SoftBodyNode *_softBodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ae7f9124fe333d4a2ede17d0622fde607</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransform</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a10c829e15c148a71ee5012adb8e091c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af8449d2716e2e8f59767542c5fd9fc09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updatePartialAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab06808f6d445a5b7ea6f7d407960644a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArtInertiaFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ae568ca18e83caf73aa2906f0525fcfd0</anchor>
      <arglist>(double _timeStep) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBiasForceFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a0da4bf852a8738e2f9142a9441671a1f</anchor>
      <arglist>(double _dt, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBiasImpulseFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a9ca03d5ec48c2e108299c1d17e98991a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAccelerationID</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>adb544791ddd1aaec08f99f3e6e64656d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAccelerationFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a37aff16822df74c1789aa9c0ddccc5ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChangeFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4de0a5f4a4f54ea84c1cc53e72d4f710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedForceID</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a5e1c92dc8ca9aeace72534759595c01c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, bool _withExternalForces=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a86c80952d632b533e67947f5fff30a41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7c02bffd4f4f47acb54c59ade7198699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateJointForceID</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a079fa56c5a13b06061261a5f2ee5556e</anchor>
      <arglist>(double _timeStep, double _withDampingForces, double _withSpringForces)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTermsFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abb2b07f1b17f645a39e8e53491ea4a76</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8278587a1c7ff62289bb5c2a373ddc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a0bd180d7a285a0b278dd5d5b9bf0d4f0</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, int _col)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateAugMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac1f6de3396fb75e47fbed9b402c617b8</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, int _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a206791576f94a2666a02bb260448192b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1abec22ebbb1f7382b3ccb8b1c9ab5fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateInvMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac525b68784f1c88b7a649e947c4fd6f5</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MInvCol, int _col)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateInvAugMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1d146b369a8db85ae45f102a33204fe6</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MInvCol, int _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateGravityForceVector</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2fe94dc6e2aca9beaeb291c05c420fe4</anchor>
      <arglist>(Eigen::VectorXd &amp;_g, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCombinedVector</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a867168fafa67283bf2cf0d0fc5cd5773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateCombinedVector</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abef4ad51fe6dedf3c33e708cad0cccfd</anchor>
      <arglist>(Eigen::VectorXd &amp;_Cg, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateExternalForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8b29077ce24ba993d00f777d85f1f49</anchor>
      <arglist>(Eigen::VectorXd &amp;_Fext)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mM_dV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a05932f291f1293222795766b470bb285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mM_F</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad63cab304d815957b5b78c65e392d268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mBiasForceForInvMeta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a313314cf4c37f8c2c27d9ffa85db2c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mG_F</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad78b2502ddc77742fc5b25e241daa6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mCg_dV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a5cba4d35bfb919b5536acb0380edf345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mCg_F</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4a7efa8770b65f2d336f012b5d3509d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SoftBodyNode *</type>
      <name>mParentSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af2039b7cfd0dac33825893dba93fbe7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mIndex</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af407d34f355d0b0c35c3a03a013f71e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mPositionDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8ff99f917ea1438280b2a6f2005c487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mVelocitiesDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a36f95fe5093be35bfa1d65871849fb2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mAccelerationsDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a8b2acdef4e8cd7ae645f58d8738e41b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mForcesDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a92d96e4ed7ada229cf0d2b9b65c78113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mVelocityChanges</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a97f4e17c1c3f2fa4c460b8850a18abc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mConstraintImpulses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab3d8b3646c651f07ef2fb0932a4ec0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mW</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1fd1c7ae8ce714d1943c75b1d5ecc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mX</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa2d8f358236d3812d7db7dff1b10a97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac49dc6aee24791672573ab1bfba2eba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mEta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4c8230a0e998ec92cd986e924cce7df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mAlpha</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aed5a12dd970c37f2181393c355b44b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mBeta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a338fab029248f204e05b245417a17fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mA</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>acf997b47d3febff63a6fa1e9bed92992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mF</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a047434ed469362b9a54bffb1698a9446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4b5c0858c9ed94e4a084cbed544cbba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mImplicitPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac68e06f4afabc1bc32195bad9eacb6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>acc85afcbd17949e2846415f061911460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mImplicitPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a68a378830c101dae5d6bfab662186bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mB</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1d1369f40bb5aeeee78b78a397ea9eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mFext</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a638540d9e3b416cb5857649ca1e47ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mDependentGenCoordIndices</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a39fca584bc7eb0886257dd847cabced3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsColliding</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ae841605a1dec1f858d5b234f7b7674a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mDelV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a15a1ab1e4a7681d1db0affc2ceb0b937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpB</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1f57de358b4fec39a4117f840cfc5889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpAlpha</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a21c50dac78bfd86082d589c6d78124cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpBeta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aab08ed797e82ba257de751f0a0c2e3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpF</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4f96f51866052c64392b1d96e84c1f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PointMassNotifier *</type>
      <name>mNotifier</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7797430bc9a7499d1a559c0e1adf1a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::PointMass::Properties</name>
    <filename>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>acc9cc4a35a1acddff1d9333556783720</anchor>
      <arglist>(const Eigen::Vector3d &amp;_X0=Eigen::Vector3d::Zero(), double _mass=0.0005, const std::vector&lt; std::size_t &gt; &amp;_connections=std::vector&lt; std::size_t &gt;(), const Eigen::Vector3d &amp;_positionLowerLimits=Eigen::Vector3d::Constant(-math::constantsd::inf()), const Eigen::Vector3d &amp;_positionUpperLimits=Eigen::Vector3d::Constant(math::constantsd::inf()), const Eigen::Vector3d &amp;_velocityLowerLimits=Eigen::Vector3d::Constant(-math::constantsd::inf()), const Eigen::Vector3d &amp;_velocityUpperLimits=Eigen::Vector3d::Constant(math::constantsd::inf()), const Eigen::Vector3d &amp;_accelerationLowerLimits=Eigen::Vector3d::Constant(-math::constantsd::inf()), const Eigen::Vector3d &amp;_accelerationUpperLimits=Eigen::Vector3d::Constant(math::constantsd::inf()), const Eigen::Vector3d &amp;_forceLowerLimits=Eigen::Vector3d::Constant(-math::constantsd::inf()), const Eigen::Vector3d &amp;_forceUpperLimits=Eigen::Vector3d::Constant(math::constantsd::inf()))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestingPosition</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a9f720dbf1631e2d1d68809e40614b9c7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>ac590ff1b6699a7423456b1c40c1d329c</anchor>
      <arglist>(double _mass)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a4cc3f714c7717904bfe6b4f867202ffc</anchor>
      <arglist>(const Properties &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>afae49843491592ff4d1e175d586415fe</anchor>
      <arglist>(const Properties &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a83c95146da022a6cd5ebae6c37fa6ca9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mX0</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a620828d1d90d43e794012750a4616abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMass</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a777070fbf90183563f3b78f7052966e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mConnectedPointMassIndices</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>ab7485ec1e5ba48d477d0d141598a50ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mPositionLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>afa2786ef209b7edd2e55b29660bbcd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mPositionUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a671dc80e93cb45a9a779cff122e4d646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mVelocityLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>ad161a57901146087fdbaca9098f77129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mVelocityUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a1c165372cb39fab715d7108868411c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAccelerationLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a1c2330ad823bf5f0c8e386da5758931b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAccelerationUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a4bfcc46857a08ce7299fedc1b922195e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mForceLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a53e5eb5d39325f6a3903d3de6794591c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mForceUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a9dbaa58b2726b83ae71d02fc715d209d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::PointMass::State</name>
    <filename>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</filename>
    <member kind="function">
      <type></type>
      <name>State</name>
      <anchorfile>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</anchorfile>
      <anchor>a3459d9858f09408d03a14781e3f9f284</anchor>
      <arglist>(const Eigen::Vector3d &amp;positions=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;velocities=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;accelerations=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;forces=Eigen::Vector3d::Zero())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</anchorfile>
      <anchor>a584e3090f1f9ce4c10c544c1692b5cdd</anchor>
      <arglist>(const State &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~State</name>
      <anchorfile>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</anchorfile>
      <anchor>a356f5f403ca3165ee3f7f8e6fa27f307</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mPositions</name>
      <anchorfile>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</anchorfile>
      <anchor>a1df24f6b35e9215523110236b29e9f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mVelocities</name>
      <anchorfile>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</anchorfile>
      <anchor>ae43d75bbc34859d0606dbdc9d95bad07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAccelerations</name>
      <anchorfile>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</anchorfile>
      <anchor>a881c1101aa7beef9a43ae7c9433d338e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mForces</name>
      <anchorfile>d4/d3b/structdart_1_1dynamics_1_1PointMass_1_1State.html</anchorfile>
      <anchor>a463a78be9797dc4d7800ad1aa67ca97e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PointMassNotifier</name>
    <filename>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</filename>
    <base>dart::dynamics::Entity</base>
    <member kind="function">
      <type></type>
      <name>PointMassNotifier</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a77fc64aa5c54784d0289147e7776530f</anchor>
      <arglist>(SoftBodyNode *_parentSoftBody, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsPartialAccelerationUpdate</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a5d5a4cca4c2773616744e2cc6c9261d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTransformNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a4c821d4695764227f4c416a3514b150b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearVelocityNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>aa1fd7a049151e36fa0454bd46e791af1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPartialAccelerationNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>ad97725caa5e25835ba119852d3d8689b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAccelerationNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>ae33d550ec5dbf94596e88d621619e697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyTransform</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a474489f3ea7dabec63608b6ff493247c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyVelocity</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>aef28b4b44295693352a77c7db7323b4f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyAcceleration</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a25c80eb09f7ba37b624c33b061f80fcf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a534d6e80891082da3e0d9a811495dd2c</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a9da57ffe753498cf2e3f574008d346fd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>aa8f973ea4e01dd4fe370fdd0a9f5373d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedPartialAccelerationUpdate</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a39de151ebd5ad3ff0c349477b7a2b74a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SoftBodyNode *</type>
      <name>mParentSoftBodyNode</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a421ea71c96686d50787b780aba202120</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PrismaticJoint</name>
    <filename>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</filename>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::PrismaticJointBase</type>
      <name>Base</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ab39e0cd531a92893ba69ff9fe128b5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::PrismaticJointUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a2ecb15c38197e8b5eedaf9d982e93de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::PrismaticJointProperties</type>
      <name>Properties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a27c903a6fad57cb3f3d9fc6f02a13cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a05df56ced06031638a6f36e44172a235</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getPrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a7bcf5bcd4dae11936baafb3174875ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getPrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a475bfe51d65252111088cc30a371f6dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getPrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ae9b5cc871b635e7a6d481d3223399ec8</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>af97ec1e44854218457584be48a039c5d</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ad3da33770418c5a4623c69671f2ce657</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createPrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a12be9abc93677f22fd3723fa43d3e148</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ad0dee9b60b3e32de1227f5330c23f85d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releasePrismaticJointAspect</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a389e1ed16a96a66dd9dc2c51df8adb3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrismaticJoint</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ad2037bcb19b0112393d8ee5c9f9167d6</anchor>
      <arglist>(const PrismaticJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrismaticJoint</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a2242017a4bc32794213e1bd57932ff79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a31bf2f59683ecf8bf31ded5b2f82ff28</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>aabaf6ae0a1d786621eef23f69de35fd1</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a06e2c180e3dcb09ed4a7e1fd34952ebe</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getPrismaticJointProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a065a96ed47488ff9c67bd607d197c72b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a4adfbba6ca99f5427235f0a19f4dc10c</anchor>
      <arglist>(const PrismaticJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ab6c29fffe9e83c831dde581e6fadc0d4</anchor>
      <arglist>(const PrismaticJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>PrismaticJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a5864cbc3b4eb919be1d1fd4363743325</anchor>
      <arglist>(const PrismaticJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a02c7e6fbd73ec9dc7953eff29a81e712</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>aef2bf4d138e1d96bd398b0e4bfe1c820</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ae99a004f8ecbdb44db9ec5b51b726c64</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a19d7bdada0e84dffaee3431fb442be97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GenericJoint&lt; math::R1Space &gt;::JacobianMatrix</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>aebae92f8d6aea8e1b3d1571abd5b197d</anchor>
      <arglist>(const GenericJoint&lt; math::R1Space &gt;::Vector &amp;positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>adaf8b545421de1d11d7ae426458169d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrismaticJoint</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a7db3233688302c897f16f1809d089eee</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a008b6655aa1cfa445eaa784a4ae5fb55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a33e31dfdcab9db8873c69a8ecdd93c3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a415be08a9a8d0b5d0fe5c9e3deb696e9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a3915b87e31ab263c66ed43670e9d49d0</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ad394e1197dd621b1bc8aed74dcc7a904</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ReferentialSkeleton</name>
    <filename>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</filename>
    <base>dart::dynamics::MetaSkeleton</base>
    <class kind="struct">dart::dynamics::ReferentialSkeleton::IndexMap</class>
    <member kind="function">
      <type>ReferentialSkeleton &amp;</type>
      <name>operator=</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a92bff147e2e6a231ac4c7c004cd8926a</anchor>
      <arglist>(const ReferentialSkeleton &amp;_other)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReferentialSkeleton</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f799440c097b1123dd8834cd364fea4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ReferentialSkeleton</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae426f3dd84cc9197387229813fcdf8fa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>registerSkeleton</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af847baecc1a2c8c87025e11a4ed31c29</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>unregisterSkeleton</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a5ee1e7f3678c5a048b8bb2e94e2cc05d</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ReferentialSkeleton::IndexMap</name>
    <filename>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</filename>
    <member kind="function">
      <type></type>
      <name>IndexMap</name>
      <anchorfile>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</anchorfile>
      <anchor>a7abc7547ae09ab8ca493146ea0302e7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExpired</name>
      <anchorfile>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</anchorfile>
      <anchor>aa76f0ffb3f67a1459800581ac9c61f96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mBodyNodeIndex</name>
      <anchorfile>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</anchorfile>
      <anchor>a51ca647fb6c13aeb41fa5de1496d8d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mJointIndex</name>
      <anchorfile>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</anchorfile>
      <anchor>a54f6f1478d195d1565f69396eae74b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mDofIndices</name>
      <anchorfile>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</anchorfile>
      <anchor>ae88e2c97db2379a1b54fabb87c050489</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::RevoluteJoint</name>
    <filename>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</filename>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::RevoluteJointUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a618d5a68de153eb7a8134ee2ddfd058a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::RevoluteJointProperties</type>
      <name>Properties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a20fa793c949e88bdf4b6c97ea5f6deee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::RevoluteJointBase</type>
      <name>Base</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>aba564fff386e035b6d9e9a8f0e54292f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6ddb6b9d12e16921ae4a7307531505c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ac4b6052cc64f4868a23af779c5c89709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ac0cbaadec21f6123cc52137a8f61d539</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>af97b82d34532a94454f8fbc74da621ff</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a86aa3d2063c2566099fd961218d6ec8c</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a017508f065842083d55856023786600e</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ace21c30bfa7a63eb803612071589bcfd</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a83c9896d644a6c0a7d6eed162866efc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releaseRevoluteJointAspect</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a187faf528167846c06adc41e9b5b1650</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RevoluteJoint</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>aa5df2585cdcfd9834fcb4d1a8b67fff8</anchor>
      <arglist>(const RevoluteJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RevoluteJoint</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>abfc419843c6b1f44cb7f98b6f6d50a90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ac78238aefd6e1f4063eb7f6b3d45a3f3</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>aa1dae75360f29b79767e7a55eb6299f9</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a277eca15c00f037b40844975ea40ddf2</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getRevoluteJointProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ada5931cf1f977f8cf287504839711c39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6dbf9998c56d94ce9363275e41eab0b6</anchor>
      <arglist>(const RevoluteJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a11095f913d3c44e294c65a6de1263272</anchor>
      <arglist>(const RevoluteJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>RevoluteJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a182ca74da0f7dce2ce63934ec6e0529d</anchor>
      <arglist>(const RevoluteJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>aff4abb1d9f42271db94f6e08cc50502c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a9a843e21345dc034ae703a2c09a344a8</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6d02f33772be956790e781b058e40f6a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a258ca44f13a2f6df4e411b6ab2bde8d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GenericJoint&lt; math::R1Space &gt;::JacobianMatrix</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a44190786326f97860ade1d328bf8b84f</anchor>
      <arglist>(const GenericJoint&lt; math::R1Space &gt;::Vector &amp;positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ad569b5a0e79b7ae7478ba51d09fa50b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RevoluteJoint</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a5d17405536e15b65fe3c5e09c80e5a5e</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ab810c1a655538d2f3171e08e05fd4a94</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>af37ffbcfe5be52e0d4ef70b546ad1e30</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a431d26057c3e8a8394c72e99cbd3e815</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ad7a510b0e7097a58b4b8730bd107781a</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6da36fb3ea844ffd095e63c714edf513</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ScrewJoint</name>
    <filename>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</filename>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::ScrewJointUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a80743ae40f4d74ad6ae337f290dd5c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::ScrewJointProperties</type>
      <name>Properties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a2a7aba450674b8ec2b2329af0955d1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::ScrewJointBase</type>
      <name>Base</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a528c1c9ed35262e7d37b2978ef2ac5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ae2d1b7097ddbffae75ca334b9883e13d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>aeed657e932ce4d365e3643ab1cf9c2d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a94333ecf8744bf017089763a7ad165aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a585ada16a16ec00feec20567d50d4f6c</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ad1a42a7a5462b5c2784551fc0e334f60</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a0b52d1cbb387bc24f2a839281ab0c1ad</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ac49daa53104918f402fb9e55738402b2</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ac1c9c1973e65aa47bc7c3c1664337b9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releaseScrewJointAspect</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a0ab96503af1c482788e23f65f8579df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScrewJoint</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>aa8107690a937bd0316e91fe4a04337cb</anchor>
      <arglist>(const ScrewJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ScrewJoint</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a349cb15096925f3c8627e45f113b8827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a1973ab66315b5b0c6749c1eea207b642</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a1f8a9e2562b24b1a79b3663ad383f0b8</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ae53e1b49c3b32802ca5b2048dfbbc894</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getScrewJointProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a6fa6def8ced1f635f710f234b4b22fe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ac4b30ae3c118765256fc0a8afac4cd72</anchor>
      <arglist>(const ScrewJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>abf166c1bdd50557b46652cd8afaa7280</anchor>
      <arglist>(const ScrewJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>ScrewJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a204cbf4bf4e16fcbf11fb1f68667cf6a</anchor>
      <arglist>(const ScrewJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a940752d8fa24286f3ca6f71e1cd4f014</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>adc7ca5f304bb28aa6fa9ed4c6fff7e20</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>afe56727d45b40d589641249207be0c68</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a8ee69b5728c648f1410f03475e71525a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPitch</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>af8dcfdeac0e9b863e2280e6c7dc2ae84</anchor>
      <arglist>(double _pitch)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPitch</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a3d91a2c1334d271af6cfe07e2b2a8e53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GenericJoint&lt; math::R1Space &gt;::JacobianMatrix</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a3a981b271d244c32c58c62dc6bae7787</anchor>
      <arglist>(const GenericJoint&lt; math::R1Space &gt;::Vector &amp;positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ad53783c3186a494144865904b4bb8219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ScrewJoint</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a9c1231e5c58c9cfd4287c26cda0e1932</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>aab1b2fffd11caf29b249f2bed40b3ed2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>aad2a0091d08f0ccacb392389b229703f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ad0a2ab75969977ac350968638cf84673</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>af42a7324887d4f6568e91b88b66616fe</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a56100fde357838c8bf3efbc424a84d2b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Shape</name>
    <filename>db/d1c/classdart_1_1dynamics_1_1Shape.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a75aa60456007c8a607c0ca5b3066f460</anchor>
      <arglist>(ShapeType _type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a59ee93e10035592e4d8c69f6f611f6c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aeb636289f25b7ca29ad5701212fd85bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a7abd5aaf01b44ca0515527e4f42ab715</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>af069973a7f686f89cdc61ce103fec747</anchor>
      <arglist>(double mass) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateVolume</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ac2e6b1a14d06548dea26e2f3bb82278a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateBoundingBox</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a685815e152ff951ee396c9969c3907f2</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::VisualAspect</name>
    <filename>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</filename>
    <base>dart::common::detail::AspectWithVersionedProperties</base>
    <member kind="typedef">
      <type>common::AspectWithVersionedProperties&lt; VisualAspect, detail::VisualAspectProperties, ShapeFrame &gt;</type>
      <name>Base</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a9970a86c49c31ffa69a9ae4fe1bda06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisualAspect</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a4939a5cb6de226a8f300d8b7c5cbaed9</anchor>
      <arglist>(const PropertiesData &amp;properties=PropertiesData())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisualAspect</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a20d7f6a7404baf875a00c162ec2cf6c2</anchor>
      <arglist>(const VisualAspect &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRGBA</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>abaa9decf4b3515de3e1e49bbbe3949d9</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector4d &amp;</type>
      <name>getRGBA</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a6fa986b72f170f10bd44ed9d13932166</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a1efbf68315edfefbba63fc29415ca127</anchor>
      <arglist>(const bool &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>getHidden</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a1385700e31f0ce079c8c2b6fdc7a6f94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadowed</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a469cf700cb3e8caff5d0095c06a50c20</anchor>
      <arglist>(const bool &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>getShadowed</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a83e8c6171078ef3c0baa151f77696f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a095196da4e019f1b6b57f0922db36144</anchor>
      <arglist>(const Eigen::Vector3d &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a029ec025b526fbba02a4bab54b406649</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRGB</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a0d6e6c08634b978c19f3c171d5ac4ff2</anchor>
      <arglist>(const Eigen::Vector3d &amp;rgb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlpha</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>ad2ad9a4c377f77dc8795afb3816e5f4f</anchor>
      <arglist>(const double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getColor</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a35135552a43d3ecb40513c1d12b0f5ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getRGB</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>ad2b301a20e67723024ae37993df0f36e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAlpha</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>adafc5b71fcbbf19d3ccf9207fe0e5dc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>a5814f14bf6282a81c75c72be63059572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>ac4741d29df073a76f72d1f1eaa8e9f5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>d1/d66/classdart_1_1dynamics_1_1VisualAspect.html</anchorfile>
      <anchor>aa7db54726d6c36aea21d100af333a6a6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CollisionAspect</name>
    <filename>d3/d7c/classdart_1_1dynamics_1_1CollisionAspect.html</filename>
    <base>dart::common::detail::AspectWithVersionedProperties</base>
    <member kind="function">
      <type></type>
      <name>CollisionAspect</name>
      <anchorfile>d3/d7c/classdart_1_1dynamics_1_1CollisionAspect.html</anchorfile>
      <anchor>afaf9533a8376419b1d8d459f7ff0cf9f</anchor>
      <arglist>(const CollisionAspect &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CollisionAspect</name>
      <anchorfile>d3/d7c/classdart_1_1dynamics_1_1CollisionAspect.html</anchorfile>
      <anchor>aa3568f3c77d7a651b728514826800316</anchor>
      <arglist>(const PropertiesData &amp;properties=PropertiesData())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollidable</name>
      <anchorfile>d3/d7c/classdart_1_1dynamics_1_1CollisionAspect.html</anchorfile>
      <anchor>aba83f93d37734f8aadfd53ddb57044c0</anchor>
      <arglist>(const bool &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>getCollidable</name>
      <anchorfile>d3/d7c/classdart_1_1dynamics_1_1CollisionAspect.html</anchorfile>
      <anchor>add666bce08293fc20377ecca81589048</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollidable</name>
      <anchorfile>d3/d7c/classdart_1_1dynamics_1_1CollisionAspect.html</anchorfile>
      <anchor>a9b2ab077c750e7c419e50bfeca79d136</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::DynamicsAspect</name>
    <filename>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</filename>
    <base>dart::common::detail::AspectWithVersionedProperties</base>
    <member kind="typedef">
      <type>common::AspectWithVersionedProperties&lt; DynamicsAspect, detail::DynamicsAspectProperties, ShapeFrame &gt;</type>
      <name>Base</name>
      <anchorfile>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</anchorfile>
      <anchor>a7bb03b043167678c2ff062d35591d8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DynamicsAspect</name>
      <anchorfile>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</anchorfile>
      <anchor>a4f73f04a953cfd419b60e9b46ffbc018</anchor>
      <arglist>(const DynamicsAspect &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DynamicsAspect</name>
      <anchorfile>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</anchorfile>
      <anchor>a6669ef448e15b438dd5b1c2a64e1d165</anchor>
      <arglist>(const PropertiesData &amp;properties=PropertiesData())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrictionCoeff</name>
      <anchorfile>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</anchorfile>
      <anchor>a48c14947c9e348f5cbc6242a70fe1f84</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>getFrictionCoeff</name>
      <anchorfile>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</anchorfile>
      <anchor>a5d191d006b4e5ab0388f030804eaa05c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestitutionCoeff</name>
      <anchorfile>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</anchorfile>
      <anchor>a161e4b2eb7feacbe3df2eb8d413c2031</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>getRestitutionCoeff</name>
      <anchorfile>d9/d67/classdart_1_1dynamics_1_1DynamicsAspect.html</anchorfile>
      <anchor>a17a614c8a35754d45655e2388765d347</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ShapeFrame</name>
    <filename>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</filename>
    <base virtualness="virtual">dart::common::VersionCounter</base>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <base virtualness="virtual">dart::dynamics::Frame</base>
    <member kind="typedef">
      <type>common::Signal&lt; void(const ShapeFrame *thisShapeFrame, const ShapePtr &amp;oldShape, const ShapePtr &amp;newShape)&gt;</type>
      <name>ShapeUpdatedSignal</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ab2a8eda44813fb0cbecdbbbde384ec64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const ShapeFrame *thisShapeFrame, const Eigen::Isometry3d &amp;oldTransform, const Eigen::Isometry3d &amp;newTransform)&gt;</type>
      <name>RelativeTransformUpdatedSignal</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>aa2d52fb064f0ccb774cd6225071b1a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AspectProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a0506a49eec4a1c60119aa243375d4731</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UniqueProperties</type>
      <name>Properties</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>af825bfb12107a6b755cd4343e7be2dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShapeFrame</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a488a43a39245f3523b90e2e9a01dd073</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a9e32265e029431ae4c3c517cafdc034c</anchor>
      <arglist>(const UniqueProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a3581b4bff7739064f71610fa29431a06</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const AspectProperties &amp;</type>
      <name>getAspectProperties</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a7ef74409c1576d8c0041ba6fcea210e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShape</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a6886f3aee3fb21c68d1ec1843d417f34</anchor>
      <arglist>(const ShapePtr &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>ShapePtr</type>
      <name>getShape</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>abb2604d22720115cd4b70946f37cfbfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstShapePtr</type>
      <name>getShape</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a47c4305a30be15d82c3b90b42345a1f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>abbcb5eb4af743e11d24879d10d0a9ea8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VisualAspect *</type>
      <name>getVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a7ad5ee966aff2be3bcadd0298b99f057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const VisualAspect *</type>
      <name>getVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a27559d93dd649199e1d661216084af61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VisualAspect *</type>
      <name>getVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a134845351099288e22dc52f445d7a26b</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>af15953e094322ac47af2b76ad474f98a</anchor>
      <arglist>(const VisualAspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a9f7553f55728b75b566a2a7ce759c9f9</anchor>
      <arglist>(std::unique_ptr&lt; VisualAspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>VisualAspect *</type>
      <name>createVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a1edc2631036d606b428a7f2836a4a4a3</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ad8da66090b65dcb6736a2bbff66b6bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; VisualAspect &gt;</type>
      <name>releaseVisualAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a3a6c498e9cda96ce5a0bee6e653fa521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>af2efb692cdb3cd94191c3951d04d433a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionAspect *</type>
      <name>getCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>adba7f396c571dc081bacba4ddf2ec0ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CollisionAspect *</type>
      <name>getCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>af95aee30f98218399e45681fb234c10e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionAspect *</type>
      <name>getCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>aebe48086ca6640b5b28650fb353d5890</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a08ace17f097b04688ea6770e235c9f24</anchor>
      <arglist>(const CollisionAspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>aabc16f90f00c71c4f3829f9df25b4266</anchor>
      <arglist>(std::unique_ptr&lt; CollisionAspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>CollisionAspect *</type>
      <name>createCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a2767028207889e653ffe2ea915a6d9ef</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a7ee1107ca1989de0d9f7a4f8b843d2fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; CollisionAspect &gt;</type>
      <name>releaseCollisionAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a2a52df3b79fe1a9deb40131efbe7ea9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a3db61c378d00eb876dae4345e2f79049</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DynamicsAspect *</type>
      <name>getDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a8a3f596acbb226b3a8978e29e4d9e3c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DynamicsAspect *</type>
      <name>getDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a37ee857af11216543522c7e85c78b8a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DynamicsAspect *</type>
      <name>getDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>aaf9c009f009900b45ba8ad91b743376c</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a0b789747f679cb67be2fbd081b1cb4c6</anchor>
      <arglist>(const DynamicsAspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a1031179d05042576418f4d37da021159</anchor>
      <arglist>(std::unique_ptr&lt; DynamicsAspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>DynamicsAspect *</type>
      <name>createDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ae5dbd6e5f18ab989a1fdb490c66e3206</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a13f6e2d96d80cf7cbb4af74576597444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; DynamicsAspect &gt;</type>
      <name>releaseDynamicsAspect</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ac63e89151aea6b608d7d1924c76e5dd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ShapeFrame *</type>
      <name>asShapeFrame</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a55a6555cc462e97d3d30888e755af8e2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const ShapeFrame *</type>
      <name>asShapeFrame</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a6e76801e7ed395859c94196bd638cb79</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShapeNode</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>af6359731b795fcf766da339ee0c4f739</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ShapeNode *</type>
      <name>asShapeNode</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a1c3107cce281336bc9954f921f2e3c1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ShapeNode *</type>
      <name>asShapeNode</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>adce93b7632d0d5a22270c5a735c6f342</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; ShapeUpdatedSignal &gt;</type>
      <name>onShapeUpdated</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a7e7f93045a560da5e3cbf9525ca08910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; RelativeTransformUpdatedSignal &gt;</type>
      <name>onRelativeTransformUpdated</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ad7a1153d735451f31eb853e0e0138c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShapeFrame</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a44c14bad7836eaa43145f1e9dc197e9c</anchor>
      <arglist>(Frame *parent, const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShapeFrame</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>a4909fce82bb072415ad08e3bf30bc14c</anchor>
      <arglist>(Frame *parent, const ShapePtr &amp;shape=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShapeFrame</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ab8006182d2d14d27a8ef405b3e68bfbd</anchor>
      <arglist>(const std::tuple&lt; Frame *, Properties &gt; &amp;args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAmShapeNode</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ab045ed306f3a79f78bc4d9460e8d616d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ShapeUpdatedSignal</type>
      <name>mShapeUpdatedSignal</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ad04f445b0ed5cbd86d9ae2be32eeba61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RelativeTransformUpdatedSignal</type>
      <name>mRelativeTransformUpdatedSignal</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>afd368e030127da9a5a752e8b4b8262b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>d9/d52/classdart_1_1dynamics_1_1ShapeFrame.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ShapeNode</name>
    <filename>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</filename>
    <base>dart::dynamics::CompositeNode</base>
    <member kind="typedef">
      <type>common::Signal&lt; void(const ShapeNode *thisShapeNode, const ShapePtr &amp;oldShape, const ShapePtr &amp;newShape)&gt;</type>
      <name>ShapeUpdatedSignal</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a70b1e5b3eb3df6c155b3d5fa6fdf6db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const ShapeNode *thisShapeNode, const Eigen::Isometry3d &amp;oldTransform, const Eigen::Isometry3d &amp;newTransform)&gt;</type>
      <name>RelativeTransformUpdatedSignal</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ad7600ee0dcb86d66682f349523e9e7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::MakeProperties&lt; NameAspect, FixedFrame, ShapeFrame &gt;</type>
      <name>BasicProperties</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a66ab34aee36f208b1b54ea2b41a1450f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::Properties</type>
      <name>Properties</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a8c1c11f2c4984445639e2cc53e8a9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShapeNode</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>af9b92f5eba11e304ecf0384fb51da9a9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ab2ffedb5ceb8eba30160a6c93b23d69d</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties</type>
      <name>getShapeNodeProperties</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a5212a706d4a44068286ad35acce7261c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ad6b24760812677366d51cdaff60f76bc</anchor>
      <arglist>(const ShapeNode &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>af15124b09a2e64bb5e78db00685155b0</anchor>
      <arglist>(const ShapeNode *other)</arglist>
    </member>
    <member kind="function">
      <type>ShapeNode &amp;</type>
      <name>operator=</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ae0aa9340c34b5356bbdaf7f59509481c</anchor>
      <arglist>(const ShapeNode &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a97fca2bb1f33eace76b7735e5a609c85</anchor>
      <arglist>(const Eigen::Isometry3d &amp;transform) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeRotation</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ac25fdc36a1e9168ad76b91c77dc15d88</anchor>
      <arglist>(const Eigen::Matrix3d &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>getRelativeRotation</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a3712bc56bbdcff4f1b695888457acc81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTranslation</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a882f5f432ed8b81655d07f48a33b9090</anchor>
      <arglist>(const Eigen::Vector3d &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>abc3a32cfef724a03af0a281695fb343a</anchor>
      <arglist>(const Eigen::Vector3d &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getRelativeTranslation</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ad7dc9e1ea59254c10c27365fad775538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getOffset</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>adae1cd126f3f0a4c24d8b6554778665f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>asShapeNode</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>abd6ca4c3daed9d7cc7b4e2d61cff494c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const ShapeNode *</type>
      <name>asShapeNode</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>af37f547c0acfc3612c15461b0302853b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShapeNode</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ae8037eb0e657a2f40d8daf06c7b25ae7</anchor>
      <arglist>(BodyNode *bodyNode, const BasicProperties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShapeNode</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ac675860b85d86de118aaf71712267995</anchor>
      <arglist>(BodyNode *bodyNode, const ShapePtr &amp;shape, const std::string &amp;name=&quot;ShapeNode&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Node *</type>
      <name>cloneNode</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>a95cfc06465daf619a20dc511f6208d2e</anchor>
      <arglist>(BodyNode *parent) const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>d4/d9d/classdart_1_1dynamics_1_1ShapeNode.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SharedLibraryIkFast</name>
    <filename>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</filename>
    <base>dart::dynamics::IkFast</base>
    <member kind="function">
      <type></type>
      <name>SharedLibraryIkFast</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a37f9fd4bee39556ad82b45125a4d86fa</anchor>
      <arglist>(InverseKinematics *ik, const std::string &amp;filePath, const std::vector&lt; std::size_t &gt; &amp;dofMap, const std::vector&lt; std::size_t &gt; &amp;freeDofMap, const std::string &amp;methodName=&quot;IKFast&quot;, const Analytical::Properties &amp;properties=Analytical::Properties())</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>clone</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a41c715dd72130ca471bde5f48fd289b1</anchor>
      <arglist>(InverseKinematics *newIK) const -&gt; std::unique_ptr&lt; GradientMethod &gt; override</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>int(*)(</type>
      <name>IkFastFuncGetInt</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>afe3a26d314c753a654fbe16ee2a1960a</anchor>
      <arglist>)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>int *(*)(</type>
      <name>IkFastFuncGetIntPtr</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a12131ac73ecaf0d4bafe239758bcaaf6</anchor>
      <arglist>)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>bool(*)(const IkReal *targetTranspose, const IkReal *targetRotation, const IkReal *freeParams, ikfast::IkSolutionListBase&lt; IkReal &gt; &amp;solutions)</type>
      <name>IkFastFuncComputeIk</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a80f533ba79834f763fe857c6dc2c8ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>const char *(*)(</type>
      <name>IkFastFuncGetConstCharPtr</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a6f9ba1ff5b4b47612b9fc78e1bff2458</anchor>
      <arglist>)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getNumFreeParameters</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>afb11490a2bb1c50bf21110fe6ed39851</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int *</type>
      <name>getFreeParameters</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>af71623a97f3894a467b873ef4d07f039</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getNumJoints</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a3f4dc8844792e6192186e3a97aa83b38</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getIkRealSize</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a092521b46ab2ec2a0ba4d48e17334337</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getIkType</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a6911a75f895883dcedd708ea8022e699</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>computeIk</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a7ce174b407af3f15bb14db64adf89acf</anchor>
      <arglist>(const IkReal *targetTranspose, const IkReal *targetRotation, const IkReal *freeParams, ikfast::IkSolutionListBase&lt; IkReal &gt; &amp;solutions) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>getKinematicsHash</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>aea3fd4a8cc6a7e8f27dda6238702f5c6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>getIkFastVersion</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a4724a3344bca1f4ebe1cf96af9d125b6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>configure</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>ad5c81c7be57025c5e02b404212ae8b20</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mFilePath</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>aa104cf7fe8d7bd1804148cb26c7621a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; common::SharedLibrary &gt;</type>
      <name>mSharedLibrary</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>aee8932d997887acd9c6691648286298e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncGetInt</type>
      <name>mGetNumFreeParameters</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>aa6f3bff70bbe1475f0a2672870cd2c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncGetIntPtr</type>
      <name>mGetFreeParameters</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a0dc6b0759a2c38ca1a8710faa04b0414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncGetInt</type>
      <name>mGetNumJoints</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a3c6c1aa4d08c55666920cc8bbb6a301f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncGetInt</type>
      <name>mGetIkRealSize</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a41d5c578c4cc3e9d71684029feec0f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncGetInt</type>
      <name>mGetIkType</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a2802ff3891a24d7174294f1d0495221c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncComputeIk</type>
      <name>mComputeIk</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>aee99133c92e43a885d63fe0e98ddbc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncGetConstCharPtr</type>
      <name>mGetKinematicsHash</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a537efe5fa4e5bc0e69bccf496fdbc376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IkFastFuncGetConstCharPtr</type>
      <name>mGetIkFastVersion</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>acf70911f5018e1dfeefcabea55f9f255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/dfd/classdart_1_1dynamics_1_1SharedLibraryIkFast.html</anchorfile>
      <anchor>a665ee10b71ac3f517f551085c628c23a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SimpleFrame</name>
    <filename>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</filename>
    <base>dart::dynamics::Detachable</base>
    <base>dart::dynamics::ShapeFrame</base>
    <member kind="function">
      <type></type>
      <name>SimpleFrame</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aab9efa74dd656f705a47f3bdb2e29d91</anchor>
      <arglist>(Frame *_refFrame, const std::string &amp;_name=&quot;simple_frame&quot;, const Eigen::Isometry3d &amp;_relativeTransform=Eigen::Isometry3d::Identity())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFrame</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aca0b006d018f83ebac1733d7567cc3ab</anchor>
      <arglist>(const SimpleFrame &amp;_otherFrame, Frame *_refFrame=Frame::World())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleFrame</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a58534f500cb604ec927435afc18e8f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>ac19bc6875ac3ee40b6994d5ec2876fec</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a5cf19848a3e6dde6abaeb6a69386a266</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>clone</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a624e53d5ab5c34b3b7781041aa5fee35</anchor>
      <arglist>(Frame *_refFrame=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a2c38ef8cb72682f3cc27d73cfa1143ca</anchor>
      <arglist>(const Frame &amp;_otherFrame, Frame *_refFrame=Frame::World(), bool _copyProperties=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a72e9f7fcb9c32aab775c55ada5c04bb4</anchor>
      <arglist>(const Frame *_otherFrame, Frame *_refFrame=Frame::World(), bool _copyProperties=true)</arglist>
    </member>
    <member kind="function">
      <type>SimpleFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>ad5c83dc169d185f676380c2f1515382c</anchor>
      <arglist>(const SimpleFrame &amp;_otherFrame)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>spawnChildSimpleFrame</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a8d27c984bab8d009590c6540f9419a47</anchor>
      <arglist>(const std::string &amp;name=&quot;SimpleFrame&quot;, const Eigen::Isometry3d &amp;relativeTransform=Eigen::Isometry3d::Identity())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a4319dc693d8cc4fd03b8da3c0fb32d9a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_newRelTransform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTranslation</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>adf4302863f9dc57b65e6c30c5171c321</anchor>
      <arglist>(const Eigen::Vector3d &amp;_newTranslation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeRotation</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a160378a8d9ceae558572d6d46616af50</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_newRotation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransform</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a7df0bb20e4899db888f5530a4ec0810e</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_newTransform, const Frame *_withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranslation</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>acb8683b5e27c151a759a3bdc69760ca0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_newTranslation, const Frame *_withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotation</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aabfdb48cc03a991001c237c6a84d9b93</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_newRotation, const Frame *_withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aaa0d2d2a056da39cff88b2e7a2056d5b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a3651848b70865a6f3f67f0f49b8e603a</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a12923f50bb38efd65355c1e1829f7121</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialVelocity, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aa685084dcfbaa6c7556f018d93ddbc59</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aaa3a280240c3f3ea84cdb54c5bd70548</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialAcceleration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>af2080cb5dabe92dd0f01642708855934</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialAcceleration, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a3123b702929cda9c9b08b1bba29b6428</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a4c8a147b6006ccd6542f74727ea220ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>acea9e582f6120c6f144c60ce2709fd36</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClassicDerivatives</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a3a59c34c9df83fcb2f957f3e077bcb03</anchor>
      <arglist>(const Eigen::Vector3d &amp;_linearVelocity=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;_angularVelocity=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;_linearAcceleration=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;_angularAcceleration=Eigen::Vector3d::Zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>createShared</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>abf3d3eec8856c53fdc836c0a092c9810</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a1a49484d86d8c7af6a23e8e29b6885e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mRelativeTf</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a34ebb6e624c61af6356ce5587fbfe48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mRelativeVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>af1357a9d9de0a5811ccbd8a5d4d06300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mRelativeAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a3a93a3d3bba79ca298d86c85d583f832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mPartialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a53692ad9c9028f3b974f1cde6fc523ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Skeleton</name>
    <filename>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</filename>
    <base virtualness="virtual">dart::common::VersionCounter</base>
    <base>dart::dynamics::MetaSkeleton</base>
    <base>SkeletonSpecializedFor&lt; ShapeNode, EndEffector, Marker &gt;</base>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <class kind="struct">dart::dynamics::Skeleton::Configuration</class>
    <class kind="struct">dart::dynamics::Skeleton::DataCache</class>
    <class kind="struct">dart::dynamics::Skeleton::DirtyFlags</class>
    <member kind="enumeration">
      <type></type>
      <name>ConfigFlags</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONFIG_NOTHING</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621a7328170df67d356f7d059056872edfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONFIG_POSITIONS</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621ad6271b54b3b90ec5cb25580e0072ec8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONFIG_VELOCITIES</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621a1f9dd7c0c5dae6f73f3599b6f616eec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONFIG_ACCELERATIONS</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621ae324fdf9797bf9c09bae492fb2e73cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONFIG_FORCES</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621a11a2d53168863f600ef034d0bfe5900c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONFIG_COMMANDS</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621a6ed4a92e4c4c0534f16c952fbb407182</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONFIG_ALL</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cf04a106dd4e2ebb233ac874d31f621a80ab8d40f887707f1dcfcaf09443b09b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::SkeletonAspectProperties</type>
      <name>AspectPropertiesData</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9808eef3d1c7faa4c7f4f6cc3152e831</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Aspect::MakeProperties&lt; AspectPropertiesData &gt;</type>
      <name>AspectProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa9a5df5310c343ce19523b57579ef3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::State</type>
      <name>State</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4e5cb4e018b054cdd0c25397d5eb8dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Composite::Properties</type>
      <name>Properties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af32cf0ec3fd380a2f78ef54b6007a5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>acaec88fc55e1bc305c599ac3070cc639</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6aa2cd5416a6d20386dd521305b19ae5</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0efbe60087cd9418b15f9034f45d053e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityDifferences</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cc705b9621419d7386378099c30af77</anchor>
      <arglist>(const Eigen::VectorXd &amp;_dq2, const Eigen::VectorXd &amp;_dq1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardKinematics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a72af91bb702c3361f015009b98f3d516</anchor>
      <arglist>(bool _updateTransforms=true, bool _updateVels=true, bool _updateAccs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardDynamics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a030ab29aa39fd5f834d62cdc5ced5898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeInverseDynamics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4581d0cf6b403cc5c9a965d28266f3b1</anchor>
      <arglist>(bool _withExternalForces=false, bool _withDampingForces=false, bool _withSpringForces=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearConstraintImpulses</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa1979a8127800f19b4bb8a42af09639e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a793c963960498f48b9edaaa531eb3cca</anchor>
      <arglist>(BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adaeb6222aceb8742ffeda937f0a6cb5f</anchor>
      <arglist>(BodyNode *_bodyNode, const Eigen::Vector6d &amp;_imp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac169a563bf8b4ef8fd5b8a50120ff4e0</anchor>
      <arglist>(BodyNode *_bodyNode1, const Eigen::Vector6d &amp;_imp1, BodyNode *_bodyNode2, const Eigen::Vector6d &amp;_imp2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8d9c0f125501b4e90d90af3f48b3500c</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, PointMass *_pointMass, const Eigen::Vector3d &amp;_imp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a955a9bc048642ab575851d2c9e6709d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImpulseApplied</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a244eafeb84ad7eba71c08395d3e384fb</anchor>
      <arglist>(bool _val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImpulseApplied</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7f8420072938d5e17b6a909e1cedec4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeImpulseForwardDynamics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a90f8a3008da785f2ab845f9af94c2ce5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetUnion</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7c9cd2641f87b78cd2b273e45f0ccb3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfiguration</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad2592d1d46ac14f871c1de0a7dad7efe</anchor>
      <arglist>(const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type>Configuration</type>
      <name>getConfiguration</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>afa29104f09bbe0c6cd6e6015f74e52b7</anchor>
      <arglist>(int flags=CONFIG_ALL) const </arglist>
    </member>
    <member kind="function">
      <type>Configuration</type>
      <name>getConfiguration</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3998ca95615cc6e00e6e38ed9ab98b99</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, int flags=CONFIG_ALL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac914d8e576d7dd35f90b1025092ac3e6</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>getState</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3663fb1e9bef71e7fa1970f31b80ca45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a151f1f3f450bb78e8ba113bc47f30095</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a893202c93c37817bcbdd112255ead357</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aae6dc7c19381c5ecd5bf984fd7fa8c5c</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const AspectProperties &amp;</type>
      <name>getSkeletonProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a66c060e82daefa0b2f3f7d050c788dca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a79b58dd77df685898e4349aed1f05ad0</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6363af2facfbf5808f14da7bd5b4b655</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a583867ed1a17d3f2397562d68b860a7b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableSelfCollision</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a54cc6480467f8533eb77f7d26cf20fb9</anchor>
      <arglist>(bool enableAdjacentBodyCheck=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableSelfCollision</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7ac410509ce3e9d78bae4a8233de96f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelfCollisionCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a49dd4c29977ca8d110fc68d565663f33</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSelfCollisionCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a37bc4470de497795dacd33a7d18a2f66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableSelfCollisionCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7d35f48cdfd497cd5f798310423d2f1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableSelfCollisionCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a132ea93f4b22824f8c801bc3d1d5bc22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabledSelfCollisionCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a90f653512128391c606b8b736a92e666</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAdjacentBodyCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8386e06f5e772212149e5bf1260ee5b0</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAdjacentBodyCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4c180a2a96406a40143ca05926dc565a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAdjacentBodyCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aaa9c849e70314d5cc58667a6e8f55d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableAdjacentBodyCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa8d8058e4ab0b088622d078e99ef8cfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabledAdjacentBodyCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a26c2c8b986713dc885cf345cb4961170</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMobile</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a370567481d4b0bcdded73ba07731378e</anchor>
      <arglist>(bool _isMobile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMobile</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac44a6766f96ce66f58806428227c8a4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4dbadffeae6cdf9fa4dd3abfbab1e61b</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3f33156b4ac8a4030cd671f1bb4d1484</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGravity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a58a52b805d73dce9d2174889d86b0d8a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getGravity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2fc44de3b4b5d927bded17657284d1db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, NodeType * &gt;</type>
      <name>createJointAndBodyNodePair</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a118cf80ea54d1e2950de384aa41aeb81</anchor>
      <arglist>(BodyNode *_parent=nullptr, const typename JointType::Properties &amp;_jointProperties=typename JointType::Properties(), const typename NodeType::Properties &amp;_bodyProperties=typename NodeType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a354944e7d5ae4c25ac4206b26afea6f4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumRigidBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7f08b53e4bd2b58de8b33c12a762db5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumSoftBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad939c08645eb8f192b2d63990bad13fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumTrees</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cad964248a8c262c6ace7057fec7b35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getRootBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7e62d394365cdbbc33890995b452b12d</anchor>
      <arglist>(std::size_t _treeIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getRootBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a196bfbfd6af1cc60b9d27fed8f7f8b9b</anchor>
      <arglist>(std::size_t _treeIdx=0) const </arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getRootJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac2d77df087dd4587fa1b24725e312b80</anchor>
      <arglist>(std::size_t treeIdx=0u)</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getRootJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a958c0ede7ace78ee3ddda6f6b778eb8d</anchor>
      <arglist>(std::size_t treeIdx=0u) const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4e5d9917c39e15e70c173bd9d8fee93f</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0e287602d43cc6de4ae50a056c534520</anchor>
      <arglist>(std::size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a06f0298e8295dab475de42eab0e44c33</anchor>
      <arglist>(std::size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5c233b4eac1c6609183da67ff9bc2540</anchor>
      <arglist>(std::size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a809c0ef44096e08c6d3a36cd202bafdb</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a768d87b37683c593612201dd6f8d348c</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0204832c0eccf8533b25d1e286067cf9</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a88d9f14ff8fd23d41aeee2091615cbc4</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a054be83f1d95ea84e5d39c75a7a5f8dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af76584475d7ac040b3947c54050bbf61</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>getBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a334e922f2840bf5ba881a9203972d2c6</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>getBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a304c92770f01a15eab72ac36949f884c</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4082b300e4538be28337ffefda4a9d86</anchor>
      <arglist>(const BodyNode *bodyNode) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a214cad5d6b709cc737e281709f7f9f8e</anchor>
      <arglist>(const BodyNode *_bn, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getTreeBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adcd486093b798509971d23cee31dbcfc</anchor>
      <arglist>(std::size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>getTreeBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a25918429559a8c0816da9b5e55b9ed94</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a362f7fcb88bc3ffee2c204461fd2db15</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a96dca1436f07be3508837bc0f87cee1d</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a84276d34265eb2fd7feab70650dc3416</anchor>
      <arglist>(std::size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae5e6958ef5e2384a9aa17eca0334785a</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa9de196ddf9d04e71091f1144b0b7e81</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab6b22ad7a35087a916fe80459b68c812</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a42c29dc8f38380470f668c8727748ce1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a80008c2235206da827f338b4c1794f93</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Joint * &gt;</type>
      <name>getJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9a4b41c82c0549c96bdd6c6838e66a5e</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a561ed6f6bd0f1f677188c207ddcc8527</anchor>
      <arglist>(const Joint *joint) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a97dbd2f52c8ed2585d274e3be6e15ba5</anchor>
      <arglist>(const Joint *_joint, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>abbcfbd9ef51775a34ea34cf6c242c53e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a1130aaae3f08f496391a032f1cee30fb</anchor>
      <arglist>(std::size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa54b97d281dd941879d126c77389f585</anchor>
      <arglist>(std::size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af0dfaaccb999ad079646302bbda9297d</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5291cd254b7fa66f4d0b2edd956d183c</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af8fbb9cdb6861f7f8637e6490a1b2f21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4441434c5b04270b28e27343ad2d3412</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab7b1cd8043898627ef05c6c2e82aaaaa</anchor>
      <arglist>(const DegreeOfFreedom *_dof, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getTreeDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a70dc830b7d5cf8f7ca3953bcd6984540</anchor>
      <arglist>(std::size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getTreeDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a27f2c87f8244bb8139ec6e1d269da7ee</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkIndexingConsistency</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a57bec6a8b5fb458de09e6661d3695b3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; WholeBodyIK &gt; &amp;</type>
      <name>getIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af9e9308fb0e458bd96c899955dfc345a</anchor>
      <arglist>(bool _createIfNull=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; WholeBodyIK &gt; &amp;</type>
      <name>getOrCreateIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7798c99048951765a603e8c10aeea979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const WholeBodyIK &gt;</type>
      <name>getIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9ff1c6109376f72f8b0defec51f6bd0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; WholeBodyIK &gt; &amp;</type>
      <name>createIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aca9ce72460cb0a86c1ec9fe2c6a0b5fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aee4de0a407cdc0bedfe0e8c463218ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumMarkers</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0fdbb5470828545c947663f00f3f9348</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a247c06df998f72497ecc4024af7591bf</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6e62f3e7b149dcb4ece4adc6e3bd3ba9</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumMarkers</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2321663d7da132a391b11e4bd010718d</anchor>
      <arglist>(std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a899601720cba58f7af7a44dbe4e394f5</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function">
      <type>const Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a183a2d31b8ce019f3cbd8c481acc4398</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac63791d41e17060719b26b5721d5ff0d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ade35c7b179058660c8c429edfcab8ab0</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumShapeNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a71a7e6f40086789f9e35b691bada2412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aea78f8874f661b1ae18824f1ce3e27e7</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a295585a7459d6b200dc58024b8056c22</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumShapeNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab6c4474ba3a40eb0a56ef5d7ceaf8277</anchor>
      <arglist>(std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aba47d03b1692501ef69708c5aff13699</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function">
      <type>const ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adaec3571984b6bc70a345301baab1261</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0a4fd4131414e1ab74c8001ccf260fe1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const ShapeNode *</type>
      <name>getShapeNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a51b6f120d1c53474509296a093235b0c</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumEndEffectors</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aaab674f0af63dc4722cf1dffc8d83867</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4cd6bdfbe95778f03640346b32e4c27b</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6c4f5db4b2434f4c8583bb60a5cb5012</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumEndEffectors</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8af6f82242256d69bc3635c149255f8f</anchor>
      <arglist>(std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a71687044ac5e255ef620b962e37086f6</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function">
      <type>const EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a303310e56e1e0e998aa834745ea6b9e5</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a95a3e9c4c89fa47df333e0bf1f6913a6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4799fdb862029e799da51989676ed4e8</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const math::SupportPolygon &amp;</type>
      <name>getSupportPolygon</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aedadd167494fc4d21c9b889408631ecc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::SupportPolygon &amp;</type>
      <name>getSupportPolygon</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adc93381619e1a7049f238d19a1cd2210</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>getSupportIndices</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2fc7a62d767cb6ecd4d3e166ee336209</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>getSupportIndices</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aeef4ed4cfe1df75dd7bc02458adb34a3</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;</type>
      <name>getSupportAxes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae08e0e2cb25261d57dea950e82c30593</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;</type>
      <name>getSupportAxes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a75a5e3fba606fb044f8fdedcd7e744ef</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector2d &amp;</type>
      <name>getSupportCentroid</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a36d65e4ee841d7b982b8089e4637292b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector2d &amp;</type>
      <name>getSupportCentroid</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a095a424fa8ab0fb03c0ab15ea79c9b74</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getSupportVersion</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a55b530b8c3ed50455bd2c620d2c41464</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getSupportVersion</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3e356536bb4aac8749c2cb7cebb5e568</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aff119bb9d386b73d6c986a6107e18769</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a1cb1dee8f9b21cfec7b46c6d7988f015</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af3f08f4e9e41ba624190e2fb000e2806</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a20e01a54fd19d9efdf2ebd9768ee3c41</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4ecea23890f3cb344510cb4728a02d49</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aae49fd0d3ec2f22189d2b2c5e979180b</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a667794e8f5180b52c8352433a5b6dd1f</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3eb798ec275b36fc094f1101673505a8</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a69bcf8e161095692f8e960baae037bb8</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6c26bcc60a7ac9f4fb5844d28a1cecd0</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af027637f1b2e842a1e72bb608c418bf9</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aaa181e4ce162d3014b6e5a28b755ecdb</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4a137579162dfa9135697e6db7772f31</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af7f3c1ff7cef2845fb16ec54bd3129ba</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a50aae1b7e4f56ec558f7ab62d976f526</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4b1bba7c94f4cf3cfd0cdb770b5af25c</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a63f1c29d0f2de46678d7998422ef10ea</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0282e9faace3c70c20f7c1c3ae4a75a9</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a323fc3c63b9053f3a2bca654c3f328cf</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0f294f105e9d1401af934972814fde51</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad07f66a7bbf74cff4e173023262c279a</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a09779bd989e6d54ec02ae16b9525b632</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6cc7f3428e3529063364d9c948c8b061</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a49365b24607f710afe7e4ff09dfdba12</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0a3f364bcf592ee743207fee3b297fab</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac2d7889dce1c8b3f4e5732fd9b01ddfe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad6202afd43f04e958c0bdb44ea4d83ac</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7b714bc26e5ce1c00e39b6448c64cb3f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>afa34d986503bba17a7ee5325f5bec31d</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7853402061b1b1800bba74a526676ee4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac37dfa7e2a09e9fe9ed95c9c75b831be</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab0375f2de0525f03e7a36ffd0406e9f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a666a24bf738973f94085a0a07566ec06</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aecbeaedba732e2d31922b05cfa1d9a82</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae65abd27598eba5ab74226701fc01e1f</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab5461b6eba6956af3bccaa6909563c62</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6b979ab89cccbe192750500842138d26</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5b44864dc1291ae98f9791959002b7a4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a23a8adbe0f83356b6b886277cbc40979</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearInternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae5ff38e15969a0406465bbdd17a2ecaa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyArticulatedInertiaUpdate</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a28194229625e4042145fe411ffc854a7</anchor>
      <arglist>(std::size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtyArticulatedInertia</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a1ab3c0f02de8cf8c9a5d72b7c7cd26ef</anchor>
      <arglist>(std::size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySupportUpdate</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aabd9ca0df8828ea42d1b65cda83eee63</anchor>
      <arglist>(std::size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dirtySupportPolygon</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a86168e7a0567844e09b0d35b3b3e4fec</anchor>
      <arglist>(std::size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeKineticEnergy</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4a68f7974d4a9765067dbbf2a04c7cfe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aee0c5f05a457f7a4e8c90a004fb645a4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCollidingBodies</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a512eb0a6abdd24eb4a967d4eeea641c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a87d28b5213f30f397cda7f293c1d63d9</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a95d957c595fdd209deae1e12e87a3ec5</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a64feb32d4e1f283ef2b8cd4ff6878c85</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7fdb23bde028f6d66fd57845f9e4792c</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af21aba3131f7e454429bfb0ab63a65e2</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af1faaf55a72f8001a3e07a3ace9c12b2</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa8aa3a0f3ff8dddfc181489f5f1bd3ae</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6142d2d30136291c2f0362bd75f48724</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3e6a05fe87ab3c7ba644833e738e6cb5</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="variable">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>mUnionRootSkeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae7b1b9f69eeb310ac04596e25b41ae89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mUnionSize</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adaca9f3ef69c1b093121ad5d6fdbb31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mUnionIndex</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adae8928cfeef138c3cf5026b98fb8c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::type_index, std::vector&lt; NodeMap::iterator &gt; * &gt;</type>
      <name>SpecializedTreeNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa09c02fa1612b120035bf6b0d8da6979</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Skeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad5b449b4cac61aad8b13bd208fa0090a</anchor>
      <arglist>(const AspectPropertiesData &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a62ecd115a307b69e23b6c71e9af5cbe4</anchor>
      <arglist>(const SkeletonPtr &amp;_ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>constructNewTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2fb917ade800e5263625ad0c52f80aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adef819051322c28db52d9128443d676a</anchor>
      <arglist>(BodyNode *_newBodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0bcec8b1354e2f10f76e0f23756161c4</anchor>
      <arglist>(Joint *_newJoint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3d8f8781eec523a5f5ec58f52b7b9f72</anchor>
      <arglist>(NodeMap &amp;nodeMap, Node *_newNode, std::size_t &amp;_index)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af4752034003c6dbdecb317b74de5fcb5</anchor>
      <arglist>(Node *_newNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>destructOldTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab71217fb8414c98258070b34912a1a08</anchor>
      <arglist>(std::size_t tree)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a37b170608a4f06f13f8584cd3b090e93</anchor>
      <arglist>(BodyNode *_oldBodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3752bad106dca4db6794edb7e7b8f12e</anchor>
      <arglist>(Joint *_oldJoint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6e40df680b01a5d70a84ab7f3d0b09ec</anchor>
      <arglist>(NodeMap &amp;nodeMap, Node *_oldNode, std::size_t &amp;_index)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a52dbf0c03ed11e65bd54eb0dd7d87b72</anchor>
      <arglist>(Node *_oldNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>moveBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>abf09eb1a8c26b208eb7faa7efa8a6f86</anchor>
      <arglist>(Joint *_parentJoint, BodyNode *_bodyNode, SkeletonPtr _newSkeleton, BodyNode *_parentNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointType *</type>
      <name>moveBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a828a757d9077835360b74cb8b77f8dbe</anchor>
      <arglist>(BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, const typename JointType::Properties &amp;_joint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; Joint *, BodyNode * &gt;</type>
      <name>cloneBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6a5c3bc57fb84bc17d5a6977bf906156</anchor>
      <arglist>(Joint *_parentJoint, const BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, bool _recursive) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>cloneBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac34086c92f7a49028a7d0fce4cf744d5</anchor>
      <arglist>(const BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, const typename JointType::Properties &amp;_joint, bool _recursive) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>constructBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8c320595ec7890c288f8f630b82d6b63</anchor>
      <arglist>(const BodyNode *_bodyNode) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>constructBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa1257ad72f37c4300e6be0de6ae41bb6</anchor>
      <arglist>(BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>extractBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a650a161de9fc1b627cc4d5bd850d81e9</anchor>
      <arglist>(BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aab5fb90e41650d9b663b6224f7b1033a</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_tree)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalMass</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad5b2115ab5787d485405def487749792</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCacheDimensions</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac0d76c24a3016f1c6e65d532696129d1</anchor>
      <arglist>(DataCache &amp;_cache)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCacheDimensions</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad4ea2ccf55b3f3619eeee019fac1ee47</anchor>
      <arglist>(std::size_t _treeIdx)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArticulatedInertia</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3d4bb6f85cb3bd9e4b5704be44198d99</anchor>
      <arglist>(std::size_t _tree) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArticulatedInertia</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a21f6c4522a51eb1422e005df508cb7b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a030314a11689d2e68c3c0262302aee30</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa93572b0cfdbd7e4d5daae809774d838</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0bc41376c5762d019760306f9fc30471</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad5594dc1ed556e142b73c47aa900d98c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab6d2fe2e2e6689d47ec6438ed2d8bd89</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a338c983301f8deb2cd86a579972d75ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af0a7c65e648dfa98c6091865a7cbbd83</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4577238f4819c3737f6e6c4139719eee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aedadb6a1d3e8dff89f3d2598a16e2ea5</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab3b44f89d766a8c0c413e254e1266592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a21ecbb4bb32120ad78860a69f641024c</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2ec4dd2a83dfa6a3edfaff80029fcccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab6a613bee9fd3b14346122b4047761f3</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa3cc0c8c13f7939c51fa338999800822</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4b734609e73e85086476034904e0cb9a</anchor>
      <arglist>(std::size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9132e9a9f24776b04b59cf47e557469c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::VectorXd &amp;</type>
      <name>computeConstraintForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aec71fa44397db84ecf96d1fc5aa6c382</anchor>
      <arglist>(DataCache &amp;cache) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::string &amp;</type>
      <name>addEntryToBodyNodeNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad97dbbb66c3f035ce3b96de53438b9be</anchor>
      <arglist>(BodyNode *_newNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::string &amp;</type>
      <name>addEntryToJointNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>abd4cceb4e00f8bf7c490277fcfcf0e61</anchor>
      <arglist>(Joint *_newJoint, bool _updateDofNames=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addEntryToSoftBodyNodeNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae0acbcaf76501001fb580fc24dd33e63</anchor>
      <arglist>(SoftBodyNode *_newNode)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>mPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2afa29e12041fec99e998783749a2173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; SoftBodyNode * &gt;</type>
      <name>mSoftBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a66362ef1bc9907dea780d67125d21c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; BodyNode * &gt;</type>
      <name>mNameMgrForBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a08fee58a53efcb81f1b862538a9a08ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; Joint * &gt;</type>
      <name>mNameMgrForJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af00831cd164cc383e084d11c3a91eb61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; DegreeOfFreedom * &gt;</type>
      <name>mNameMgrForDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad243ba51aa2d58a33945f3b95041ee27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; SoftBodyNode * &gt;</type>
      <name>mNameMgrForSoftBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0afe9c12c29a92f87e0cb37f8ab8ce98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; WholeBodyIK &gt;</type>
      <name>mWholeBodyIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8652b82c58ad014d057329ccedb91aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::aligned_vector&lt; DataCache &gt;</type>
      <name>mTreeCache</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad6f9b48f6eebb04a64c92bf28dd0efbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DataCache</type>
      <name>mSkelCache</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>affbd5a9e992e63ae466ec220f415e5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SpecializedTreeNodes</type>
      <name>mSpecializedTreeNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0acc75c5597904c3b10ea0c94735c30a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTotalMass</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a40c851393473b08c152de53145261f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsImpulseApplied</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a80ef43601b26369859895244bea83b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mMutex</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a646b88e1f50e5c7b078f350ffc08d6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Joint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2b27269e818d7b63995be0e0f812bf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>GenericJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a925f583182ced8a2fef780b42b2b18ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>DegreeOfFreedom</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a68bd66bdc2a02ad9075f39219bcdfe54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Node</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6db9d28bd448a131448276ee03de1e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ShapeNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7f4b888a7e3effe3aae67e1337239f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a675c233a38e7db8b610228796a2a5591</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkeletonPtr</type>
      <name>create</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4910aa8ba98138133e015e0be89db35b</anchor>
      <arglist>(const std::string &amp;_name=&quot;Skeleton&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkeletonPtr</type>
      <name>create</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac84fd93285d21993240473f96c844a42</anchor>
      <arglist>(const AspectPropertiesData &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a72819f9545a0ebb97b44176d31a8461a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aff3e17b2125e5d281a8e3e0353a33bae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a25ad97921d1b0aafe4548674822139f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aedfa1d0d54c8c36193869539c09e5714</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::mutex &amp;</type>
      <name>getMutex</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a66684ec6fcdb259228f63f7f13714947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; common::LockableReference &gt;</type>
      <name>getLockableReference</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8ac94a62abefcc1703f0926bc6d34ac8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Skeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a000d9ec51f6c4bb1f32c5ce1ad9bfff7</anchor>
      <arglist>(const Skeleton &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Skeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a685e2d238dd0a5a1add6c0b61aa92124</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Skeleton &amp;</type>
      <name>operator=</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5e81d34c420b9bdd90e117ada39f379d</anchor>
      <arglist>(const Skeleton &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>clone</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aeaa4bfb34350887b1083bf9fcd0bdda1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>clone</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>affb62fe1f310b5d1da3818d88cc1ea7e</anchor>
      <arglist>(const std::string &amp;cloneName) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Skeleton::Configuration</name>
    <filename>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</filename>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>a18147a95c137533fcedc89e8c130ef4b</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions=Eigen::VectorXd(), const Eigen::VectorXd &amp;velocities=Eigen::VectorXd(), const Eigen::VectorXd &amp;accelerations=Eigen::VectorXd(), const Eigen::VectorXd &amp;forces=Eigen::VectorXd(), const Eigen::VectorXd &amp;commands=Eigen::VectorXd())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>a9a34528c138d099fbe3ea9137edd96a8</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;indices, const Eigen::VectorXd &amp;positions=Eigen::VectorXd(), const Eigen::VectorXd &amp;velocities=Eigen::VectorXd(), const Eigen::VectorXd &amp;accelerations=Eigen::VectorXd(), const Eigen::VectorXd &amp;forces=Eigen::VectorXd(), const Eigen::VectorXd &amp;commands=Eigen::VectorXd())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>a5703107eff97ff8f4f946b231ac27061</anchor>
      <arglist>(const Configuration &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>a60eb099b39682ff354f0fbca9c27b178</anchor>
      <arglist>(const Configuration &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mIndices</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>aafa9746779d4fdf4529f839a1395e5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mPositions</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>a23e7192e7b83c09a9bf40bb684ea9866</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mVelocities</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>aba0a7f963692dc0ea83822e720f256cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mAccelerations</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>ada42e9e15ec69a0593e9cbbc6f58ae55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mForces</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>aeb1d6270f7dc45963dfa4fc66a3d9cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mCommands</name>
      <anchorfile>d3/d03/structdart_1_1dynamics_1_1Skeleton_1_1Configuration.html</anchorfile>
      <anchor>ae5a1bbe8b00d87305857620ce7eefa9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Skeleton::DataCache</name>
    <filename>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</filename>
    <member kind="variable">
      <type>DirtyFlags</type>
      <name>mDirty</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a921132ce4819f7c2758599620093d2ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>mBodyNodes</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>ae1c0cb157ab62857f17ad5b113c94cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>mConstBodyNodes</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a927b7ae22b845f0456499d075e205273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; DegreeOfFreedom * &gt;</type>
      <name>mDofs</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a96b8924854e22fdb3f89d092e777bbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>mConstDofs</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a4767978efc49a2d1db3c4b8a8f833f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>ae868f810fcf39387277b63ebc0fd287c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mAugM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a5d17187a38211f84d07ed815df27b0cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mInvM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a5a97cb546ec5ec3559b5f8dabf13abd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mInvAugM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a760dd5d30c74c3c82620027d54550e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mCvec</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a587e4c281f13d879240288de332d7bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mG</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a7daeec82ad46168818ba657afe575bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mCg</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>af339414e13c4935196cae13cab59efb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mFext</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a34251eeee23e512bebbd6ae63f2cf53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mFc</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>ae6da8c7c65016ee0b68c831cd0d25055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>math::SupportPolygon</type>
      <name>mSupportPolygon</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a8f8b3d07667edf48cc510ec3bfd3fc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>mSupportIndices</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a0ac2f5c5c9ecd4dbe9f875c02d82ae16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt;</type>
      <name>mSupportAxes</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>adde896c406784bbbaf1a30f41356849c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>math::SupportGeometry</type>
      <name>mSupportGeometry</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>aac6b471b818df8b6da496ed0c6b8c9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector2d</type>
      <name>mSupportCentroid</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>aca236a6ea9df48b799a8be7d41103b33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Skeleton::DirtyFlags</name>
    <filename>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>DirtyFlags</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a911be711833ce675d90b5d1cf34b11b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mArticulatedInertia</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a1cbe671f8d4982d10ab66a1d796c92af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a2de816fbf3da16f642e26b79360d61d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mAugMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a32f02b0bfd15d7d00be7ab4b8f803c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mInvMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>ac87a45026795dde6d6e530ee2c593e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mInvAugMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a1ef56f594bbf12881ee51d044655c41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mGravityForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a7e0b438ddce071bfd39089597ceff22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mCoriolisForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a117e575d37dc0e23386e0626d9c2273f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mCoriolisAndGravityForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>aaf9f8f6e76af738901285e447bcf4c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mExternalForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a14667651a7e51ba005158cdb3a6c13b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mDampingForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a875af7e762d69bbacae3c7eb80e61225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mSupport</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a7547258b9ce46afe8674c53b1e7793e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mSupportVersion</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a54bbe834fa45dfa179355cf3450bb621</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SoftBodyNode</name>
    <filename>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</filename>
    <base>dart::common::EmbedStateAndPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::SoftBodyNodeUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a5403f21b51580545872a442dbcfe1051</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::SoftBodyNodeProperties</type>
      <name>Properties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a247dc8bd1355f4f771331ad0193919ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::SoftBodyNodeBase</type>
      <name>Base</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a8645b134301ffc5255111b6faa7889a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2cb407dfd67de51882b328205b6c8d8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a886bfb4e4fe1ae4c57032075df05a8ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a195ba2b77cffa88c9fb5a14c3ff148d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>abbb69767d1863d48550cb12c5a8a3f9f</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aec4284f25a967703a97b157c927777d3</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a1ccc8a0d5715350d4f57de49136ae5a3</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7bfa092765872c944e1ab159b5313b6d</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a9f0abcf880c44f29e896f10c3bab046d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releaseSoftBodyAspect</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>afba9df6db2d17bf8c7aab81876ac8c37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftBodyNode</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>acb970285c4be28cbae60fb83f87fe7ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode *</type>
      <name>asSoftBodyNode</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ae74acc0724a16c8c129f3ac2d1634452</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>asSoftBodyNode</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a959568bbce422795146154630309fae2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a8e43a8c09a5b6a5c8b9cba70022921fd</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7082c55ad333c7a792a26765b2c0dcca</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a58a39b86cf87cb79bfe83869925a1119</anchor>
      <arglist>(const AspectState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a3c3159570585b415e3b38029235d3285</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getSoftBodyNodeProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad44c064914090604217e7b859d77832a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a139d7fdfc3b50bc4b8bee27534a0bc2b</anchor>
      <arglist>(const SoftBodyNode &amp;_otherSoftBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa5681a3c7f1bb86ede590f59f617f5b7</anchor>
      <arglist>(const SoftBodyNode *_otherSoftBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode &amp;</type>
      <name>operator=</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>abced4c69be287aaa6ad223462a9a9f49</anchor>
      <arglist>(const SoftBodyNode &amp;_otherSoftBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>PointMassNotifier *</type>
      <name>getNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ae452c3212971e0f73ef39f86bb2b56c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PointMassNotifier *</type>
      <name>getNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2e32070a44dea0791ec66838f29e5e74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a35302788cfd48c8d04e6f9315bea605e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a70c1355ab5a3d135a757b61853131d18</anchor>
      <arglist>(double _kv)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVertexSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a78376f202ff9bec23610d463d3a6525e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEdgeSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>af05c1bc3ea6be85c040205e6b28f6e18</anchor>
      <arglist>(double _ke)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEdgeSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a78a2878022d24e944d127256289211c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa7e02966131a1a7c98d885f695514b36</anchor>
      <arglist>(double _damp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ae8d0b2884f076c48654b0128a8190388</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7d2317fc9ded431320454a4285118add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PointMass *</type>
      <name>addPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a49baa020b8e60f90983f66d22dc3ecf9</anchor>
      <arglist>(const PointMass::Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa13de03ee672c111ddaf26d87708763a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PointMass *</type>
      <name>getPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ab14c9a2a7111122b75c96d8fd632eae6</anchor>
      <arglist>(std::size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>const PointMass *</type>
      <name>getPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>acf10f16f77348852fc495dc75a3188fa</anchor>
      <arglist>(std::size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; PointMass * &gt; &amp;</type>
      <name>getPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a68ad23f0b056f7cda7791e69d9408457</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a77b5be3b4b073d6c8c8a8eb1e76e5c3b</anchor>
      <arglist>(std::size_t _idx1, std::size_t _idx2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFace</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a84ce5f2a5cedb682f4c631221089057c</anchor>
      <arglist>(const Eigen::Vector3i &amp;_face)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3i &amp;</type>
      <name>getFace</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a3b5fd2801d83fae36848294c36683556</anchor>
      <arglist>(std::size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumFaces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a415bc3e1cd60e1cd5c30d9072795b64b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearConstraintImpulse</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a612b59db8196238c6bd4474379f2a460</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SoftBodyNode</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>acfd33135b4ab2b126237ecedc5fa8df1</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BodyNode *</type>
      <name>clone</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a568756cc7b3cefcfb7c03a4ea7c4b155</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint, bool cloneNodes) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>configurePointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aae1edc7a0c5f6baab51ee0eddb063a42</anchor>
      <arglist>(ShapeNode *softNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a9894e306f793ee50238422454d1f66fa</anchor>
      <arglist>(const SkeletonPtr &amp;_skeleton) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearExternalForces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>acb3a5bc47e7c581bc907a893b3fd811a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearInternalForces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ab7f6b6fddb7ce9a956251b571fb51e48</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkArticulatedInertiaUpdate</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a3e88ff6987bfbba43c55faf7e6bf714b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransform</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aaeba8572bfd12bbe347e3dfed78c412c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocity</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7837c09d21c4dc859d203d153eb51ccb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updatePartialAcceleration</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a403771dcfc2cbe68a7c190753496e176</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArtInertia</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a27be0d7780049c7d5637226dabf01c14</anchor>
      <arglist>(double _timeStep) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBiasForce</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a8ae51cc49a2704ffb53609b2f56c7c7c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a580fc9fe0e91b267a8ffcfa5eebfba29</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAccelerationID</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>afe905580af1e908fa3aeb73d44ad0229</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAccelerationFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a4e35edc6bfd12ef86d7b4a95a112a96e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChangeFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ab0bc4354fddbaf3dbd8c9260c9d16188</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedForceID</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ace80a0db571f7c161f10f0d85a031f44</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, bool _withExternalForces=false) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedForceFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a246a7ac1c287d1c82a0a3c0c9fd063c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedImpulse</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ae946d701d02c8d18b6a0f6aeb686f2ed</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateJointForceID</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a5c83f5b11d9c9ab335103f15efd0d659</anchor>
      <arglist>(double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateJointForceFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa2ef59d815b2f347a4373dae929a3420</anchor>
      <arglist>(double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateJointImpulseFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2fc7012bb53cc2b3a44dc6df412c0df7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7fc3e3761aec6543498444131696de41</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a38cfebf6a1b7ee261968f946389bfd17</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa59607b868ffc4415c29d5406b544122</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, std::size_t _col) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateAugMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a6b20b97eb3bda05f36d79f065b62ec1a</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, std::size_t _col, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>adc1404f7a6c87f1d95c8185b2275c213</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a92bba4f5f2f86dc3e926c6015947dae1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateInvMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a58874ce3068db54a35150087b34f657f</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, std::size_t _col) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateInvAugMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad55f90650e317e029f07d1abb315f01c</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, std::size_t _col, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateCoriolisForceVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a849112a63c700a8525365f7a1a08a9b8</anchor>
      <arglist>(Eigen::VectorXd &amp;_C) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateGravityForceVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a336280052e6cd11c35dd1513e42b1641</anchor>
      <arglist>(Eigen::VectorXd &amp;_g, const Eigen::Vector3d &amp;_gravity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCombinedVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>add0ee59fb7bcb7e1c4a1e8cecf255c91</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateCombinedVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7fbaeeedc53811320e814a50f5fc9785</anchor>
      <arglist>(Eigen::VectorXd &amp;_Cg, const Eigen::Vector3d &amp;_gravity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateExternalForces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad17426da103ba31b364c00aa7f46e129</anchor>
      <arglist>(Eigen::VectorXd &amp;_Fext) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PointMass * &gt;</type>
      <name>mPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a542d9e831a5f94e1c9cac69004d91f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PointMassNotifier *</type>
      <name>mNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a0b5d44051742fdccc8b3f39cffbb4c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WeakShapeNodePtr</type>
      <name>mSoftShapeNode</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a5b8d7ed5cd3dd35f9a21821da9f93e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mI2</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a8b989c0ae3fb056e0f9ffe3474b44496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertia2</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a65d318b58232344f049fed1bc65d0aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertiaImplicit2</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad58d1e2fea07a9772a3686ae96ffc6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_addPiToArtInertia</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad610ebad95ea72f695c945479fba44c4</anchor>
      <arglist>(const Eigen::Vector3d &amp;_p, double _Pi) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_addPiToArtInertiaImplicit</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a59785f71951fcc96ae1f79222e9c8ecb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_p, double _ImplicitPi) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInertiaWithPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a92a7af34ecfc9ec2447446c3dfccd1f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2891ad00d7d39eadfb0738378a56f5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PointMassNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ac9edd703e63249dd212181b947b8a02a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SoftBodyNodeHelper</name>
    <filename>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</filename>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeBoxProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a8609677d2a88176391f2c672f5827d1a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBox</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a5f4ae6ece7d14231257ca7c3ae4181b7</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeBoxProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>aa8056c6ebc67563349bd98ee603719f0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, const Eigen::Vector3i &amp;_frags, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBox</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a56dd702c1bc0a41b47085f8ec76264ea</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, const Eigen::Vector3i &amp;_frags, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeSinglePointMassProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a877f02436b19c7586955b6d72d84247d</anchor>
      <arglist>(double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSinglePointMass</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a47927fd58b674bf3cd484077b959f20b</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeSphereProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>ac834797017a91dd7fa517ddfec3faea0</anchor>
      <arglist>(double _radius, std::size_t _nSlices, std::size_t _nStacks, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeEllipsoidProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a58564eb81b3e3553d01063698532715b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, std::size_t _nSlices, std::size_t _nStacks, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEllipsoid</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>adadd22b2d53d0db08a18d5d316151b57</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_size, std::size_t _nSlices, std::size_t _nStacks, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeCylinderProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>ab3679b662c3f4293976bb75738592010</anchor>
      <arglist>(double _radius, double _height, std::size_t _nSlices, std::size_t _nStacks, std::size_t _nRings, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCylinder</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a1dd544d4082dff17d82fb1df02db8347</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, double _radius, double _height, std::size_t _nSlices, std::size_t _nStacks, std::size_t _nRings, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SoftMeshShape</name>
    <filename>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>SoftMeshShape</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a9cf37b1e0297a885a7df879317549bfb</anchor>
      <arglist>(SoftBodyNode *_softBodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftMeshShape</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>aedabeae10886a078689c2382742f109d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a1f7c914b6167527c675ad5161f72ec81</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const aiMesh *</type>
      <name>getAssimpMesh</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a92f80322b6192d889afdc0b534bd7142</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a8475e3323299e86d8f6e9eb5dce47bbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>af8a9bcb1f938228688daa64ee019fe24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>ace0853a07d4920c55d29ce60d7acf361</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>aacd18d6ab8e82c45023e3b9a9662ec15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a4da2e805cc80c4f7ba83fbbf19fda547</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a49ff8214717bfa19bb2e168abb77909d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_buildMesh</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a452a2cf0f63fd385f4357bbdd6f606e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SoftBodyNode *</type>
      <name>mSoftBodyNode</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a56d83cf8a2916408f0bdcca2deeb7d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; aiMesh &gt;</type>
      <name>mAssimpMesh</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a868af1a4a861bc27ea1f01d8b2894aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BodyNodeSpecializedFor</name>
    <filename>da/da4/classdart_1_1dynamics_1_1BodyNodeSpecializedFor.html</filename>
    <templarg>OtherSpecNodes</templarg>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BodyNodeSpecializedFor&lt; SpecNode &gt;</name>
    <filename>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">dart::dynamics::detail::BasicNodeManagerForBodyNode</base>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::vector&lt; Node * &gt; &gt;</type>
      <name>NodeMap</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a8dcc8f63283540dda57e2e8966238501</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_set&lt; NodeDestructorPtr &gt;</type>
      <name>NodeDestructorSet</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a452b771d5b6b7490e878ed575a0c5fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, common::NameManager&lt; Node * &gt; &gt;</type>
      <name>NodeNameMgrMap</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>ae6d5ba492910b42b287b8b04d0a50cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::vector&lt; NodeMap::iterator &gt; * &gt;</type>
      <name>SpecializedTreeNodes</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a80556f58806a549611bc92388a3c1493</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BodyNodeSpecializedFor</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a078acd65808836d6d5c74112a1456bc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumNodes</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a4a2c9ad85a44cc27bd0629058632befb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>ad533fd8cf4023e2cb4069246ba6db4ae</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>ade9c8f2f9fc7de8701128693f4526919</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>isSpecializedForNode</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>aa4c57977272c73ff6b70bcc4ee8b3903</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>_getNumNodes</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a4581a2b7756ca7ac0c74ed8ff841c492</anchor>
      <arglist>(type&lt; NodeType &gt;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>_getNumNodes</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>afc6498efe7bea7767575c297786f418d</anchor>
      <arglist>(type&lt; SpecNode &gt;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NodeType *</type>
      <name>_getNode</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>ae7f973ff1416c120e222c87f470af375</anchor>
      <arglist>(type&lt; NodeType &gt;, std::size_t index)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SpecNode *</type>
      <name>_getNode</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>aaf6a22fe52b406fbe5dcc22a4e4475cd</anchor>
      <arglist>(type&lt; SpecNode &gt;, std::size_t index)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static constexpr bool</type>
      <name>_isSpecializedForNode</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a1476988e8865915e8fbbcedf7dd10541</anchor>
      <arglist>(type&lt; NodeType &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static constexpr bool</type>
      <name>_isSpecializedForNode</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a1731964a23339be6b110eaf16e763e88</anchor>
      <arglist>(type&lt; SpecNode &gt;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BasicNodeManagerForBodyNode::NodeMap::iterator</type>
      <name>mSpecNodeIterator</name>
      <anchorfile>d2/d09/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>abcd54299ffea533b44dd72c27816396b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeMap</type>
      <name>mNodeMap</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a87ea0c6b3748138d111ee8c3fde240af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeDestructorSet</type>
      <name>mNodeDestructors</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a458fac200a8a295122f60d8f71826424</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BodyNodeSpecializedFor&lt; SpecNode1, OtherSpecNodes...&gt;</name>
    <filename>de/d76/classdart_1_1dynamics_1_1BodyNodeSpecializedFor_3_01SpecNode1_00_01OtherSpecNodes_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg>OtherSpecNodes</templarg>
    <base>NodeManagerJoinerForBodyNode&lt; common::Virtual&lt; BodyNodeSpecializedFor&lt; SpecNode1 &gt; &gt;, common::Virtual&lt; BodyNodeSpecializedFor&lt; OtherSpecNodes...&gt; &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SkeletonSpecializedFor</name>
    <filename>d1/dd3/classdart_1_1dynamics_1_1SkeletonSpecializedFor.html</filename>
    <templarg>OtherSpecNodes</templarg>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SkeletonSpecializedFor&lt; SpecNode &gt;</name>
    <filename>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">dart::dynamics::detail::BasicNodeManagerForSkeleton</base>
    <base virtualness="virtual">dart::dynamics::BodyNodeSpecializedFor&lt; SpecNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>SkeletonSpecializedFor</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>ad4d0a7f8c681a004584ac4bc598eda71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumNodes</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>af819763f6da66170ee4a70a8443b8728</anchor>
      <arglist>(std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>ae8dd08c8b09e1429ee7e93a2b04b9fd1</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a7e6ca4768a15f289defad61cb8f8b52b</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a87d8a54a8dfc4c2434ae606c6d40ce0c</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a6fa14cdbcb856da6127c0455526f32e9</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>_isSpecializedForNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a1e091bccba387dd9569cb2aa4ddb1165</anchor>
      <arglist>(type&lt; NodeType &gt;)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumNodes</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a8d2ee3d2f125e77d47c01dec9675e5e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a5f143f6e574a01928287801c88ee0296</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a6fdf874a0a684e53790db2fd883c176b</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>isSpecializedForNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a8746034e2865da37d8908e159d904791</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>_getNumNodes</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a350305d7834b40442f95d392f1acd00c</anchor>
      <arglist>(type&lt; NodeType &gt;, std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>_getNumNodes</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a348968012991d6e0ffb11803ec9df384</anchor>
      <arglist>(type&lt; SpecNode &gt;, std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NodeType *</type>
      <name>_getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a3f23d84920367b215752541f3a329dd5</anchor>
      <arglist>(type&lt; NodeType &gt;, std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SpecNode *</type>
      <name>_getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a394eb0dbd7ce0611a8b490dea69b4840</anchor>
      <arglist>(type&lt; SpecNode &gt;, std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NodeType *</type>
      <name>_getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>aae01f7cd356949de339ab7e6df7e964e</anchor>
      <arglist>(type&lt; NodeType &gt;, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SpecNode *</type>
      <name>_getNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a3173beb0bd4493a6640b33d691b375a7</anchor>
      <arglist>(type&lt; SpecNode &gt;, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static constexpr bool</type>
      <name>_isSpecializedForNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>aa88e1584a97cf43eae28a3f61ec7ef25</anchor>
      <arglist>(type&lt; T &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static constexpr bool</type>
      <name>_isSpecializedForNode</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a3620fb67f3178f46fc1b155749dc0159</anchor>
      <arglist>(type&lt; SpecNode &gt;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; BasicNodeManagerForBodyNode::NodeMap::iterator &gt;</type>
      <name>mTreeSpecNodeIterators</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>a38b99877dfcb4ba9d45daf876b8c0d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeNameMgrMap::iterator</type>
      <name>mSpecNodeNameMgrIterator</name>
      <anchorfile>d0/d25/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode_01_4.html</anchorfile>
      <anchor>acce5fbdfc0705c8e03085cdac890b465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeNameMgrMap</type>
      <name>mNodeNameMgrMap</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>acf010e1d4b71b3bccf0bac819fc956f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; NodeMap &gt;</type>
      <name>mTreeNodeMaps</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>a4ea21d55680b3be842ac332847528a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SpecializedTreeNodes</type>
      <name>mSpecializedTreeNodes</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>a988251a8cb1fe8dd8811abafedfd7655</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SkeletonSpecializedFor&lt; SpecNode1, OtherSpecNodes...&gt;</name>
    <filename>d6/d5e/classdart_1_1dynamics_1_1SkeletonSpecializedFor_3_01SpecNode1_00_01OtherSpecNodes_8_8_8_4.html</filename>
    <templarg></templarg>
    <templarg>OtherSpecNodes</templarg>
    <base>NodeManagerJoinerForSkeleton&lt; common::Virtual&lt; SkeletonSpecializedFor&lt; SpecNode1 &gt; &gt;, common::Virtual&lt; SkeletonSpecializedFor&lt; OtherSpecNodes...&gt; &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SphereShape</name>
    <filename>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>SphereShape</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a36463b42c4ddf7786c0f7a27fc180615</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SphereShape</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>aaf37edfa0b7c380cebaa900b2e97886c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a1b59edf7c2cd8773f3614d16537de4f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>ac5021ec0ea042a82ca9059673f24e639</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>af6d544581cdf1ffe0903434ea8cf1a02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a1b73568bd20b2ad7379229ed8c9b6d6b</anchor>
      <arglist>(double mass) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>afb3bad745507029a76093c2d37c9cbd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeVolume</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a0898a59138502b028569752aae9ff570</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a33fabe68736a6b9897a8d4ee3c6ec671</anchor>
      <arglist>(double radius, double mass)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBoundingBox</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a480549eaa0c9257a087a6acfaa0451b6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVolume</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a4efbabebe15cdf3713757cae6fd3f4f4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>d8/dc9/classdart_1_1dynamics_1_1SphereShape.html</anchorfile>
      <anchor>a9f8807f8e606fcd8aad5bd9dac29e9f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplatedJacobianNode</name>
    <filename>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</filename>
    <templarg>NodeType</templarg>
    <base>dart::dynamics::JacobianNode</base>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a8fd81cc04ada6b02ed7c4842fc30f7f8</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a531b80f05b016b0915a4f5e7603ec927</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>afb371c7e47a231166aca6461d7d381eb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af3652e978abed8aa00a5b8e614757ac0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac89ab3e414a897d2b4920b02b06956ee</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a81a6b3668f4b4fd634fd09e8d2fbf06b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>aabb89db808e85b02daf5139e2bcfd819</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a700632cc2ff39a87c2d6e065f2c0084c</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a0d95daa11cd05b002167aa73837b7ba4</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a9b524b02e9c31a3465f7959470c00524</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab733691474b95a7dbec5e31dca1f6b35</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a80d6ff9dc602068fc0cfd539ecd60c21</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab1510f2aa590dfb41eebd761d242792e</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>acf274904bcec4c31e5f9e498ac3263ea</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af57f99782db722f589751f88e1065d6b</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TemplatedJacobianNode</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a54a6ac0f1895efe2836a78620020e6a9</anchor>
      <arglist>(BodyNode *bn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TranslationalJoint</name>
    <filename>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</filename>
    <base>GenericJoint&lt; math::R3Space &gt;</base>
    <class kind="struct">dart::dynamics::TranslationalJoint::Properties</class>
    <member kind="typedef">
      <type>GenericJoint&lt; math::R3Space &gt;</type>
      <name>Base</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>acd1d9a27800bea043a4c30f00f01f4de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericJoint&lt; math::R3Space &gt;</type>
      <name>ThisClass</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acfd79266275691e600f74f5fa4867cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::R3Space::Point</type>
      <name>Point</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac112e84b6e09e3dc3490bf0f80df0cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::R3Space::EuclideanPoint</type>
      <name>EuclideanPoint</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af2aabc4ff535232c9d609fd773341f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::R3Space::Vector</type>
      <name>Vector</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aaf5267bedde8842807a55eb5b97ec0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::R3Space::JacobianMatrix</type>
      <name>JacobianMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6d76587cd89b02fc3220f6d4175bd1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename math::R3Space::Matrix</type>
      <name>Matrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0471a52d2a6eb3c5fd3b760ff4949627</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointUniqueProperties&lt; math::R3Space &gt;</type>
      <name>UniqueProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a549e6f5cc7c2e9e9e1abe5f4980fb945</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::GenericJointProperties&lt; math::R3Space &gt;</type>
      <name>Properties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9a3089245ab839f160ef968632e4f93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectState</type>
      <name>AspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a394ed6fc8c892b5612d250d40310aa46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Base::AspectProperties</type>
      <name>AspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>add694724d879d201d96331a4cc12324f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af19553a83da93ef8e84f5d3e82c6d5c9</anchor>
      <arglist>(const TranslationalJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TranslationalJoint</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a39eea79d09ecaf8c9eb883a8ffc4a740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getTranslationalJointProperties</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a7af5081361f09076073c0230dfebafcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af40657610916e18a8a2f621e0a0c6434</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a365e0a38fe61b4d3bf3c70a416398d76</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>ab010631b8c30955771831479a3a94212</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3e79d6ea6bfdcc06cd63a789d7fda95d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a22e44bfcfa7e8be5838a0a7b2b196daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3b03606625f36aced4f41a257c92adf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>getGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adc7f6dc33d3891dfe0f5bfa9f6deddb5</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad408c920d02f70d7a88cfa8e2aa54bed</anchor>
      <arglist>(const typename ThisClass::Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a52f6187489d93fdf7bf895456204074e</anchor>
      <arglist>(std::unique_ptr&lt; typename ThisClass::Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>ThisClass::Aspect *</type>
      <name>createGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a1c78b33dec233b6cb0fb6a4e880635</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeaee8a79e3bc4399eb0b234f016b9a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; typename ThisClass::Aspect &gt;</type>
      <name>releaseGenericJointAspect</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fadd21f5d73b912f22c0b0516514527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f788c98255e791ab707289767debd68</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3523067d4ff3e9ad8550f2f7ce23a9ce</anchor>
      <arglist>(const UniqueProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectState</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0040637029227fd832d44573723ce99e</anchor>
      <arglist>(const AspectState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a984522e489da796fd4d4720811292b8c</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getGenericJointProperties</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6bee56cc3a2e41b3c78784b5aa117cbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08db2db7a81845f2530d2f30f3566f8f</anchor>
      <arglist>(const ThisClass &amp;otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6c9fe8a8fd9f3eaa984c09cd603f0e7e</anchor>
      <arglist>(const ThisClass *otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ecc4745aad10f031ebce166ad36dc96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4bab8d9105d12abfe9be2f80dc12242f</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5fb3a506f557cbfdb1af2b742d211ecb</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4eb9e627a95c43c0202633966384df4d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaae16cb1c31b56abfff161121f99460</anchor>
      <arglist>(std::size_t index, const std::string &amp;name, bool preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a59ce80703b9e3f60868775b28626a857</anchor>
      <arglist>(size_t index, bool preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56205280218100c7506530db664bd623</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81d7363a74b7e72223e6225727021bf4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afed9c73fc6f50f3dd1e03b043e1bd504</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae57be9982b20b44a850e0c5354c56aa4</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a33fc401935dc63d910d1bad81d45a33b</anchor>
      <arglist>(std::size_t index, double command) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a03d8b73d26cff1b5fe37658cb7d855ae</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab69218dbe9868776d65a76713467f2d8</anchor>
      <arglist>(const Eigen::VectorXd &amp;commands) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a055d196729db854f02ba40c237672d96</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a365ded3be7bb7c5644241cc2490a9a95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a319c5bddebe18f00481c602e9e035ccf</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6d4d257a17185e40ce0b4d9874c7838</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa437a4f00772c2abf60f5c5204ae4c40</anchor>
      <arglist>(const Eigen::VectorXd &amp;positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6f2eb6a3dc43723a866206d271b37050</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a261c1c76668ca98cef95fd8d97134078</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af074da7d0fffa875a40313ca78731cb0</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7c7b377f1dea6a459c7e9600f41237f1</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a56189c370db7512ed8d49c612358f74e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4c9c5ac9df1428c564a32b2ab5a4d6e9</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a818b16aec9e109f01bd07b35d55d730b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2091a3ebc63590a8e5f349c07f458c9</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1a3c465480009c45584703cc84e3fbe8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac328d1b5b1e6b84f122e716bbe7944a9</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3ebb9d44080fb040e3b50dae91e183b</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af130fa6d4c82a20035eaa0593a36d080</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3622d4dde6f34d8ab1cec38c0cb91c47</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abd95cda7923b915fa3eaf488c126928d</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aca687b7cb5f70d368483dffbbcb6a99d</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7b2f0f0c27537be89b21399f3770c5f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a915177768c6b9fb0c731e67383362831</anchor>
      <arglist>(const Vector &amp;positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acf5d6f5fe1dd4144f99886f09251f90b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae30263365345e15f555a29609bb11635</anchor>
      <arglist>(const Vector &amp;velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a06ebc236d884a257e93aff551a60f85f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a08bc31a281a0950acfd9f690e64e527b</anchor>
      <arglist>(const Vector &amp;accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a310c7b86fbacd458cdfb30f9539b5d6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a67f6e5cb08930ff34f24646d134a27c0</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3df75672b028ae7c6ac54d31ff0890e2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2c51c397e915dc11c48f99125677a288</anchor>
      <arglist>(const Eigen::VectorXd &amp;velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a79301b36a7cf4e970512db7321a3a4eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abb2f03e5c32d3574db7db76ce1cb0282</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab9fa2df5d92d77801b6492608ffefde5</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2509969cf54c235f68239ec13eafa327</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a23b5e40b6e7efd4dba8c31295dcda43f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac09ed7eeceb1de17b397022209bf9d1a</anchor>
      <arglist>(std::size_t index, double velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5ac656366ddebb5af26d12832a533efd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d5879a4c9661cf1f73cb9ca2252e197</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae68b99a9f9feb4f7a88f691e7549feed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90aa26d57bd81027c86505f10215b944</anchor>
      <arglist>(std::size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a062edbfb0695b30c8e0a31aa4063df56</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a489c73d485616642c20ebd2759fa7f0f</anchor>
      <arglist>(std::size_t index, double initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d69fbc7c0ddccb0248c25ba5bf732c</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a498decf0c8e6cc672d76299635b38106</anchor>
      <arglist>(const Eigen::VectorXd &amp;initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab611d3ebecade8bb583a1ac6391275f6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afa69ee9d8ed2a4702ba73c4297aa093a</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a74b01b371b5c94d97e45810341ff9278</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0fc7f065c1b48b85fd3e6cfab80df9f4</anchor>
      <arglist>(const Eigen::VectorXd &amp;accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aab693faddac9e163ae2dde6390a7eb06</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae6cf54858df69658ce30e7bde818b3b0</anchor>
      <arglist>(size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aea6b76529cbf28ddab21a093f131e6f2</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a951f5134d43732ed08a5b866643065db</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae2226b5e13836d3cb6f33ab2403ab2ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adaedad85161b1d459e1cbf295e7423e7</anchor>
      <arglist>(std::size_t index, double acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d109ad77448660cd79a5885fc2bd387</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3c8c05f3b0bc1c77dfeb9a68459e578a</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1e0ba59064fb4e62fb70738371264289</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af75fff85fb299a60b5e2544360fc85ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a43dd3ca22950885428e9d65c46823786</anchor>
      <arglist>(std::size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a48d0c690f9cb01fe2fd0fb833d7003ea</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af568531bae6ca2c3474f56f220fb8760</anchor>
      <arglist>(const Eigen::VectorXd &amp;forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a364acf5ea7b44facc5af996ae597be70</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7ed2fa5153368fc645a4cd91ea7c2e8e</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a80c3b50b3f9644036ca6218705be30b3</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a02a7547230a0719cb581ebccae1414a0</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa9d1c91663ef76012d52ae331b6b3e5b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae544a782871da33239a73dd716a8527c</anchor>
      <arglist>(size_t index, double force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad4d5390eb206173ace8add2cee8b6314</anchor>
      <arglist>(size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a090c9734e2b9cf079c129c18c2c0e9c4</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9994aa5f4eb46980e6cee8b1449a4cdc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a510e581b760ee2c8388452721e07be4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a38523b9cdd019e0fdfa649e66c3ccfa5</anchor>
      <arglist>(std::size_t index, double velocityChange) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5b79e7ace836473925a8d1caa33f9c0b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aff19b9148a33dd9b072e49f9753d4d5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad3d5c3ef5328c2a9f43f36ebfd0dc968</anchor>
      <arglist>(std::size_t index, double impulse) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>afe22c1f788901c3005553c8be9c7a2dd</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6228fa5f1e8a10eb63a35ed828bfa5a2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa0e283a0d2b4425090803948b5f843b2</anchor>
      <arglist>(double dt) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6eceb01c0e7e950e158fa5a46f9325a9</anchor>
      <arglist>(double dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7be803c3e7ce77d01bcf8f96c33d6b81</anchor>
      <arglist>(const Eigen::VectorXd &amp;q2, const Eigen::VectorXd &amp;q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a55ca1997e1be3cfd6e0197ac90d2de09</anchor>
      <arglist>(const Vector &amp;q2, const Vector &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7edea01b4d9e982bd308c49970db9d12</anchor>
      <arglist>(std::size_t index, double k) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8aaadb5f07668e5a34d5f4f2b944e94b</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0dcfd0921ececf58033c676472f3f8e1</anchor>
      <arglist>(std::size_t index, double q0) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6a7e404ade71c2b186ab9c72afbf1dfe</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8c3e0f873d2bfd797973d2b04671632d</anchor>
      <arglist>(std::size_t index, double coeff) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb29c90a2439d918beb82731d00901f4</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0b425b68b4b040ad7d68d6a52314c810</anchor>
      <arglist>(std::size_t index, double friction) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ace08d84bb1e048b8cacfa21ae5cc5b47</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a89bdb5e079ef5ef36362f1111c90f911</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4d0ed6515f3b54197bd7d3e24a332035</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa6ece1460a81727104f716b4ff6fea45</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>const GenericJoint&lt; math::R3Space &gt;::JacobianMatrix &amp;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac35806976c9d4bac42246b650d7d60c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual JacobianMatrix</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>adb38eac83601e62c86da2954d0fa6229</anchor>
      <arglist>(const Vector &amp;positions) const =0</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobianTimeDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2b26cb2bcd5234808e46cf1ace4a5c63</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const JacobianMatrix &amp;</type>
      <name>getRelativeJacobianTimeDerivStatic</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af3a6ff49d31d9ce7829f2df717efab86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af26e0b45eba444c686c54a6eadd4a21b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a81106cf3d83e42992e60d19a6feb8bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TranslationalJoint</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a10b0322711c2272788751b1b5b8d00f6</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a21e2cab4edac54cfc82a9f098d90fae0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a9a2d1cccc9e64a1f17885d586c37b599</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af2eb09b3577240d22baf5c4d0b41c00f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a6c6e47b6d98562d58b179b4b75b922f8</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>ae39f9be4818c3049cee999ce8e22cd6f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad744bdac6c626ade6d4ced294e0dbcdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abdc708b0fa38eea703b6c2b25e680577</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Matrix &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e74770ca664e0aceed8023fae2a7753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialVelocity</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae4ca237cb453284ca5a4843ce0c70a10</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae35d4b29954c549ebf5c621ebfde6e55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativePrimaryAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7f3541ab51e26f9a6f00b70de916cba7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5693d3a926198146fd184191e1bfe667</anchor>
      <arglist>(Eigen::Vector6d &amp;vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3ca12fa08835c599d8a6be4d898a9696</anchor>
      <arglist>(Eigen::Vector6d &amp;partialAcceleration, const Eigen::Vector6d &amp;childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3fdb5d24f5f0a5187944b451af88f68e</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad7adf7c47fbcd03cc582cf86d11eb8c6</anchor>
      <arglist>(Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a54ca1558aa00bb19a51721a33db4f145</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertia, const Eigen::Matrix6d &amp;childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a2f520873b892ab4f5f9d1f7a5c5441fd</anchor>
      <arglist>(Eigen::Matrix6d &amp;parentArtInertiaImplicit, const Eigen::Matrix6d &amp;childArtInertiaImplicit) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a8e15407a0387b67b8c39a075adf2f851</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a249c70e9db2fd0c250dc6ff5b2bd7207</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acbc422800715340aa7635ae535df88bc</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce, const Eigen::Vector6d &amp;childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aeab2b61ca97501cbf7057024c377121d</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasImpulse, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6011c89b72a200e08d6d92632ef478f1</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1232b652a7763e11e445a9d855a682be</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aa0cd8e3625c2a2398f0236afdb31419c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abe97b43cd57c209fe35ac73e4f8158cc</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a331c9dcba3ace1d818e2f62e68a3a7b4</anchor>
      <arglist>(const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1d9edceaaed0915c6b5f2c7fca01b161</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForces, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a15b8b58fa6a8222215e7e2d1e1bb35a6</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce, double timeStep, bool withDampingForcese, bool withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>aba2cbf2472754a730d7b8a2022bc17a7</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a9b52a8a7922c399b5ffc233aeef5e40e</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a6da9c563c626c5777c366406292096cb</anchor>
      <arglist>(double timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af19ec6cf064e7e6effbaa1349f5eb0fe</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a925acfefe37823a98f40901cf5c575a1</anchor>
      <arglist>(Eigen::Vector6d &amp;parentBiasForce, const Eigen::Matrix6d &amp;childArtInertia, const Eigen::Vector6d &amp;childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af6206c4544c095a944e39bb9bf399456</anchor>
      <arglist>(const Eigen::Vector6d &amp;bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>af256acd666692cf51831971ef2155aa1</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab7bc4131dcd3e2cd423ab5acb738ab1d</anchor>
      <arglist>(Eigen::MatrixXd &amp;invMassMat, const size_t col, const Eigen::Matrix6d &amp;artInertia, const Eigen::Vector6d &amp;spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>acefd31a0913e34d7e82735b15b6e3ccc</anchor>
      <arglist>(Eigen::Vector6d &amp;acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ab6c950bee49174a19122cfbc383131f0</anchor>
      <arglist>(const Eigen::Vector6d &amp;spatial) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, NumDofs &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a3491b0d1a3f09f41789001d4eec77817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a1cbe6fd5a2edcd4a58469b1a395e3852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ad2496953acc6dd5ce926b19a582d5308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a4530f4ac2b08bde706908cbcd75208c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobian</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ac427840c47eecd6143f156dc00b7cc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianMatrix</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a90e09106897395febf5346283839b33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a7d4729d67f1b8bd09222cd1af03528c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>ae0f8f270603b17142763e62187f857d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a0eb851e094d5899a52f14514dac3e752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a5d317587b9a874fa8e927145ee429833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>a11f84a31fd25f6dbb3fcaa683c24c994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d53/classdart_1_1dynamics_1_1GenericJoint.html</anchorfile>
      <anchor>abfc60c844e4f03af9f77fc657bb4f46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::TranslationalJoint::Properties</name>
    <filename>da/dbc/structdart_1_1dynamics_1_1TranslationalJoint_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>da/dbc/structdart_1_1dynamics_1_1TranslationalJoint_1_1Properties.html</anchorfile>
      <anchor>ad9ecb10879ad85cfb97040d863105370</anchor>
      <arglist>(const Base::Properties &amp;_properties=Base::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>da/dbc/structdart_1_1dynamics_1_1TranslationalJoint_1_1Properties.html</anchorfile>
      <anchor>abd8b8a9b6430f514424a44ae61675a7e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Properties &gt;</type>
      <name>createShared</name>
      <anchorfile>da/dbc/structdart_1_1dynamics_1_1TranslationalJoint_1_1Properties.html</anchorfile>
      <anchor>a2558b476e4c710c18845b34e5fd82a78</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TranslationalJoint2D</name>
    <filename>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</filename>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::PlaneType</type>
      <name>PlaneType</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a11a28bf4b5d2e878cfe80ea6d2372846</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::TranslationalJoint2DUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>af0b697dba2a6d41740e718ecca86faea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::TranslationalJoint2DProperties</type>
      <name>Properties</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a45232c0699f2d319b58693c1a294655a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::TranslationalJoint2DBase</type>
      <name>Base</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a92e32a8c6578cc2cf9f9b338af6a1605</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a39ac8581206005151bdc129510caecd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a49ca03a57f043b434d13720b876a09a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a1e5daa0e1dad1ca394a3f2854a55c2b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a92dccdf9a1229e4eb0e86613055f6865</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a4ade3d6221cbafd367215a2a2d9c85e1</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>ad8b430cf957d4c0eae10ace0cfee0113</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>ac305fa04f613dd59c0011d0ac2b5975b</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a1526da936c7e7dfe979230d25418fc34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releaseTranslationalJoint2DAspect</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a5e856cb31bd7dd25c9e2abfb61317e29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint2D</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a72053e46d152784ade8f650b02edabc7</anchor>
      <arglist>(const TranslationalJoint2D &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TranslationalJoint2D</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>af671d232e5352fcb01c30d9c5cab690a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a51628f6a067e54b1ad4c0789caeee0ff</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>ac72c68465b7364b778ebfdb1b3c9f313</anchor>
      <arglist>(const UniqueProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a60b58273a5e24fd86123b869cc749477</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getTranslationalJoint2DProperties</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a79c8a770f1ecb506c381a69d553e5fd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a3ce250d79f233c0ff2208c7fe5ea3207</anchor>
      <arglist>(const TranslationalJoint2D &amp;otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>ad096856d4b8e1a36df904a170d9745dc</anchor>
      <arglist>(const TranslationalJoint2D *otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>TranslationalJoint2D &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a05d27ea3e1867f1ddd5cffb54a884a00</anchor>
      <arglist>(const TranslationalJoint2D &amp;otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a4d6cccb7e0b5581fec0968fec16e14b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a52ffe2440d2d6b1be7f3a2927b7e722a</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXYPlane</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>ae24235fdd5ec1f5e0b9bca293fbd1930</anchor>
      <arglist>(bool renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYZPlane</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a00c68ba85cfbb7c34f7835353fc656bd</anchor>
      <arglist>(bool renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZXPlane</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a28f6887d9e560f0a2040b2da3d84a475</anchor>
      <arglist>(bool renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryPlane</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>ad2f8e2b6d46967e61381a443b832510d</anchor>
      <arglist>(const Eigen::Vector3d &amp;transAxis1, const Eigen::Vector3d &amp;transAxis2, bool renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>PlaneType</type>
      <name>getPlaneType</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a6e3e7a745acfc1a55089db441e757b6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getTranslationalAxis1</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>ab06aa0e6b41db5e675180d123734411a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getTranslationalAxis2</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a806668c040c253206e137a97713208de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 2 &gt;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a2b1e791cb1ece2f4b4df44edac493bad</anchor>
      <arglist>(const Eigen::Vector2d &amp;positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>acda0509f58e358d23a4992e350b65c8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TranslationalJoint2D</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>aca5b49399a7a28fbd4460051b8ccf703</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a5f6dd1e6b7553961a0156cd6c5f61e21</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a7de4c8e3dc33fb65fbbe3c1b78d3a816</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>adbd4521c30956ddf37ca016336955fa9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a0e45fcbb566cf09df8b7c0977bfa9478</anchor>
      <arglist>(bool mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a03014afe2283aa68b71abbb00356b7bc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d5/d6c/classdart_1_1dynamics_1_1TranslationalJoint2D.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::UniversalJoint</name>
    <filename>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</filename>
    <base>dart::common::EmbedPropertiesOnTopOf</base>
    <member kind="typedef">
      <type>detail::UniversalJointUniqueProperties</type>
      <name>UniqueProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a8cf35db16932055ffcc93b1585a63516</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::UniversalJointProperties</type>
      <name>Properties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>ac60bbd5b62c272f9721e2d35f6d8e7a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::UniversalJointBase</type>
      <name>Base</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a1ee869992b150714a502d0a646959f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>ad7f2c2f2abd5ea051594e07b0df4b731</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a6d5ff8071b6b7560314bd4a59b53cc16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Aspect *</type>
      <name>getUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a0f6bf21917f813227005225570358392</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>getUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>ab682b6a15c1453d82a66ffc2af68bf79</anchor>
      <arglist>(const bool createIfNull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>adf80d4e06e98d3c1f550695de135c714</anchor>
      <arglist>(const Aspect *aspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a4b0cc602013a85dc83ff9ddcf9d8da33</anchor>
      <arglist>(std::unique_ptr&lt; Aspect &gt; &amp;&amp;aspect)</arglist>
    </member>
    <member kind="function">
      <type>Aspect *</type>
      <name>createUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>afebcec139c44b3c37f5b66905181e96c</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a63969d5615a54771953e8ec02c412adb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Aspect &gt;</type>
      <name>releaseUniversalJointAspect</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>ae29bc3124f4c654639309458c55e6e5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniversalJoint</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a7f7bbee55ce998d2e9ba1d672341d400</anchor>
      <arglist>(const UniversalJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniversalJoint</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>aab541e098b35a5d0051ff803e89cab96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>af578d4c0f724af4ce32ceab20f103651</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a2fcc8db95de4e02e65a0bb0659d14ff7</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAspectProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a53d7ec52a98bdf5541c22c41df13f5a5</anchor>
      <arglist>(const AspectProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getUniversalJointProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a9b878e08c5f53575a0d474604e1cee3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a12162592af48bd3b41ac1095614aad35</anchor>
      <arglist>(const UniversalJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>aba73be458b1dc6226d4f493c560b2fd4</anchor>
      <arglist>(const UniversalJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>UniversalJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a77fdff992ff87aab5d542303748e0e06</anchor>
      <arglist>(const UniversalJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a3a67ed6e9ad933ffea31c25719cab61c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>ab18f3974290978750c1b69721db68438</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis1</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>adda6d32cb67d0d0fd944f7bd2035d5e5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis2</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>af727af82848346e26eb1bf0b6fb687b0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis1</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a1fcfebe31b1460305adff7db4966411f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis2</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>aaede6c7d0049bd1bcaba0cd5e8db3586</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 2 &gt;</type>
      <name>getRelativeJacobianStatic</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a72531e86882958636130b6e5480b6478</anchor>
      <arglist>(const Eigen::Vector2d &amp;_positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a9ff29d3abe8c6c3c50dcb5fffc53d7bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>UniversalJoint</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>ac16f83553a251f7da135886f5cab1e28</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a8259d065fee5ebc71c93c127b91b1d21</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a5f3680d7d45dd0ce9bbd367592ea219e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a8ccc587ffc4084db16ca2628401a03ee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a72afeb5631d06e4aa13f59ad6e0611ec</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>abd0a82116262d45f87e4d176b59bafb3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::WeldJoint</name>
    <filename>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</filename>
    <base>dart::dynamics::ZeroDofJoint</base>
    <class kind="struct">dart::dynamics::WeldJoint::Properties</class>
    <member kind="function">
      <type></type>
      <name>WeldJoint</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a9439bcc047a06dfd870a16ecf49a28d1</anchor>
      <arglist>(const WeldJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WeldJoint</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aade5b286041545e5a7b14d32c3ef26ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getWeldJointProperties</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aba4054134ce14aa02700dd379c34aebc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aa1f807727ceafd37f065750b605b3274</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>ab4e4755747d7fb69032cdfc552ef62cd</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransformFromParentBodyNode</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>ae4456fa455ad0428f3d1bab0a2f32b2c</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransformFromChildBodyNode</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a033ab979e33507a6a11bed26cc7854a5</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T) override</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getZeroDofJointProperties</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2ed1ec77714921116cce2e9719dd5f30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab7b91182f40a8bb52247c7de424a83db</anchor>
      <arglist>(std::size_t) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af2d1d4acaa848bf9262921418573584a</anchor>
      <arglist>(std::size_t) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a02c2cda22bee6ef9a976ef205a551a83</anchor>
      <arglist>(std::size_t, const std::string &amp;, bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2e07f1516e113ba05d9abfab77ded2ba</anchor>
      <arglist>(std::size_t, bool) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0dd1b85cdfd2b45487dbd93d94922d1a</anchor>
      <arglist>(std::size_t) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a06309b54dbc0b252df6efd296bae38d4</anchor>
      <arglist>(std::size_t) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumDofs</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a55c516f577b810b8b548907718ebc305</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a86344573fc0e5159cf60cef9a3eb8fd1</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0c01fbe392808d64589277939654dbbe</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7429a1b617fcc8a5898b538ea72c10b4</anchor>
      <arglist>(std::size_t _index, double _command) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1cb25184ea37facae2b7bd2674d36a72</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a11519b4d8a0d49d6328c1de2a646e360</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a83a11f559ea4463d880915acd5cf9372</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a53d3454c333c5eabffc71ad9a5ff15b1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a652859de090b2d07e1b9735b8fc83307</anchor>
      <arglist>(std::size_t, double) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ae878ee403483e50ac87c4153d6fa4e7c</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adf6ea317ff1bcfeb66ea2ffa36fee68d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a23e120f3b7b4d2ba656e34db0a224555</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afbf2a68883eaaf38436256c10f7b2182</anchor>
      <arglist>(std::size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a02cdf88fef3e5da321beb7dc57c53c6d</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a8ec0b1452209cd7fb1a1cc3fc0cbcc11</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a18ef63c3f7adce0fa6ee9fe9be28aac4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afbe2037139d9c23a85c42cf0de66129b</anchor>
      <arglist>(std::size_t index, double position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aba150566f0725e442fd74abfeee9f2a1</anchor>
      <arglist>(std::size_t index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3434b82b6723634c2428a64620847d18</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ac10284cab35814b12a25682d5d56f511</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9bbc2cb9a736a24658875af7827e6be5</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a732ebf2d6b4315ca546ce4712bd0c34d</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a94ef8ce2c33d54101e943d32e78673ae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab773fe7af4adc2c463e093d46ceba1dd</anchor>
      <arglist>(std::size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad02e1183f95e604d2797151f02380eac</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a29fbbef11009ac32d4568b0771f430a7</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad9fbe4e435b4c0c02fd97c04d8925226</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adbe6cf2e8fed529841dfb2b9ec438433</anchor>
      <arglist>(std::size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1f6b4508897e4b58bb728f75bfbac17c</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ac002abbfa56960c4e5ef25c55a582fa7</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a04feb84a483bbc17f8aea1035e821d89</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6808da7ca0d20e94226b0109aca2d214</anchor>
      <arglist>(std::size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a319b863a6dc838ffa8c8fda9ebe158ed</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9ccb4ffa746dfa955d08468406b4d0bd</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af03cd671a3b8407af46c35a084dfc74b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a411c7a7f5a98791a6df019a6a6c51246</anchor>
      <arglist>(std::size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>acd11425b00bf16e42452a3d6eaef13ef</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad6bdb63170fca7f11bcea23a3c641813</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>abff696eb69dd0631c5222d0e68d267ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad88a34676a336ee3d93e6f0f2ab8063c</anchor>
      <arglist>(std::size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a92b6c83ec9d4a18163f9e79ce432d6fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a87ee78c5ba63d8ceb4bf678b22e77f29</anchor>
      <arglist>(std::size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7c750ef4b151430b492a1254ab9bce1e</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5bb969da58bd0241d3796ff7e07d268d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af2795eecad5ccb8051f6695f078c0705</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a861018aec840411fce90e996fa16bced</anchor>
      <arglist>(std::size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ae53b691dc812e5d88fc1176482e8a885</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afd7d7b83c6b135504fe2bddd7862c25b</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a787ad8b7304a6dfeb258fa749cb4df6a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>add3d03281aee67ba95bea1225aa56014</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad9e1fed2dc7fc59234a7cb3929aedc94</anchor>
      <arglist>(std::size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a64578da0efac88753b88993b51ff4fa0</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af783d407990d512e02fd3a13e63956fa</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3f0fbdff086396ce46fac94ec5449cb3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0c990dc588a957c07d8821eecef2649e</anchor>
      <arglist>(std::size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af69aabdcb50cf3bf71ef84bf2541ef61</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4f892f424340e49b46eff811c7689beb</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerationUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aa5876f9aba505e15b05a37d42ac9be2b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5e0b38fcaf6d0d784b158cf16026b50c</anchor>
      <arglist>(std::size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6539c8ed8a59ffb698b6ed666b1e1ee7</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afdb79207395a9e82869370a38cfdb9c8</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab1d81b47e76c6ea1a15a0e5185e804ac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a8750c730976a0b6eea3ba679ec5090cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>abfe2169949e2e0bf5bd71a2b3281f3e4</anchor>
      <arglist>(std::size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3929ff470f9f0c9d5bc285b5d9edd3f6</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a06a7d6d39e53c28765b5af3dd827d681</anchor>
      <arglist>(const Eigen::VectorXd &amp;lowerLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceLowerLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a545575d4f1b7fa46fcab14ca45f0cd79</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ae40e15a5e09a90455e4936fa5333e5ac</anchor>
      <arglist>(std::size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aa2862876338d7f747d0a8060ed270635</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a372446315a0a13585cfc37b5690b06b6</anchor>
      <arglist>(const Eigen::VectorXd &amp;upperLimits) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForceUpperLimits</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3eb2abc9011e43c047cf8eba4d052245</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1d9c462855ffb453b7b6a0504818d3c4</anchor>
      <arglist>(std::size_t _index, double _velocityChange) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7252700195db0ef12f95a8dc5d999744</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6811cb47040f888ce177cf2113852d38</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2005b82a449f8638c7c0b6cf3e8f6f9d</anchor>
      <arglist>(std::size_t _index, double _impulse) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0dd48cc65611e24fd295d9d2ced11df3</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5cf126b514bafc19a0f8aa9050d39254</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adb87daeaf9ea818e1033f25f0580efc8</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3c6ad052126ed830ce0e3b8b6352ab6d</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af56c040ae1fadadf457ca2f7b82d78b6</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computePotentialEnergy</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a326811cbc62a3f3ff713bf9292abf0ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a59c9c9edec62d75c858c952c6c109b93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpringStiffness</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a72f476fd8f5773739526599e10683789</anchor>
      <arglist>(std::size_t _index, double _k) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpringStiffness</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1d02f07fb16b90df1be8e66a36636f50</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a83739ad0fd6b1cea04b48e0952edda0e</anchor>
      <arglist>(std::size_t _index, double _q0) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a386bb314fafe4835ab03ccb4a37e1e46</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aba57134d9f77ac717fb4c480d7b7d9fb</anchor>
      <arglist>(std::size_t _index, double _d) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9ac4a618a60e2094cc8e182559f6251e</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoulombFriction</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a137e73b74f41ea44fa5548dc0c2d5715</anchor>
      <arglist>(std::size_t _index, double _friction) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCoulombFriction</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad1199054a46360384267c555f14e93bc</anchor>
      <arglist>(std::size_t _index) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aa77c549d17f007132828ebd1c935e16a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WeldJoint</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>ae80aa1207eda99857b3ef42c1d92364a</anchor>
      <arglist>(const Properties &amp;properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>af150db4f7f9c4f009c815fc69acaef2e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeTransform</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>ac8c167c31d41701f2e59e9d20ed29bb2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialVelocity</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a11fb4628bb33323c218faaf164e3b155</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeSpatialAcceleration</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>ae20f9ebc3cd44bef28e49600fce88d73</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativePrimaryAcceleration</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a7fdcf2bb100efd535860fafc6d27a51c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobian</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a7edbfc452289916e9f12910635f1ec65</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRelativeJacobianTimeDeriv</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>ae004503894b1ae2bd0c0e5749682c953</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6940d0eee52e92e6d1bf387db0ba2f34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ac4e9f64834adb930882a7674a51c1495</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2547e5f6156b42385db827a194c1ea72</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>math::Jacobian</type>
      <name>getRelativeJacobian</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab206f4b164b4b089e9fccb777d33fd71</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getRelativeJacobianTimeDeriv</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af11377ead873dde75c2186db193f9135</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7c50f03310035341a579a713511c7dfb</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1f726f837917146c1848849585dbb859</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAccelerationTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a511f30d7a1668a51d3adf5a16ff23672</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a02fce9dbbafaaf117e35b8524fb5eab7</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2953a6e0533fefac15f56d3133e7924b</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4a1b4c37b38bd09a9c86d240376df718</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad5ac09922cf45c0ccfd6fb323e3bc75e</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a93e3475b29d48a98c9ac8352cfc4bb80</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a365bbb2836e779859fa7f2ffe6dd631b</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a30011b74bbfd260f6d3a9d8c3ffd9093</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab6044aedf66519825738951a80be1765</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a961c6e58547e81b12900a027430e21da</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad726a9dcab6cb6bf64f568732555e31d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afaca58018997d1d6b687743d86d158ff</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a8d3be36c94f69dbd88048c71a463cc77</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceID</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a46d6809c7e108b7355796562309f032e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceFD</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9041f182d356df03f1e5e222940d3474</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseID</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4777e72f89659e8639397d20c76b2c8e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseFD</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0763e2c0996a206339461c654dbd8583</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9c0b06c8720adbe3e74e9a64514fa5af</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a17239509ea8151b6af2db72689653068</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a048ddf0153d8e3c25cac1350f4887471</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad0b394535f3424d663ec6df17916914b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aa4abcf18689d912d5b9bbd6a252ea399</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const std::size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5deb7e0e2ab29b35c9745f9f3beec142</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const std::size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a160dc181cad600b53c0e1cd8e724d7d5</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a70e86fd73b97028578e2768598779ae3</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial) override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::WeldJoint::Properties</name>
    <filename>d4/d7c/structdart_1_1dynamics_1_1WeldJoint_1_1Properties.html</filename>
    <base>dart::dynamics::ZeroDofJoint::Properties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d4/d7c/structdart_1_1dynamics_1_1WeldJoint_1_1Properties.html</anchorfile>
      <anchor>a11735b57a2c71342bc96b42b8135a7fe</anchor>
      <arglist>(const Joint::Properties &amp;_properties=Joint::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d4/d7c/structdart_1_1dynamics_1_1WeldJoint_1_1Properties.html</anchorfile>
      <anchor>ac0f29d764cc029af4509479618c4ab08</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Properties &gt;</type>
      <name>createShared</name>
      <anchorfile>d4/d7c/structdart_1_1dynamics_1_1WeldJoint_1_1Properties.html</anchorfile>
      <anchor>acef07cc87aefd9b7f2b42c3cf61a3575</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ZeroDofJoint</name>
    <filename>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</filename>
    <base>dart::dynamics::Joint</base>
    <class kind="struct">dart::dynamics::ZeroDofJoint::Properties</class>
    <member kind="function">
      <type></type>
      <name>ZeroDofJoint</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adc06d9e57d0dfab77f0c1ef05cdae291</anchor>
      <arglist>(const ZeroDofJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ZeroDofJoint</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adee652082c06fb6ec481756310e001a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ZeroDofJoint</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4ed1541ee333a05d2efa2b28f2706b1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>emptyString</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a59d8c6a1ce9deaffaa7b9a0ca4362747</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ZeroDofJoint::Properties</name>
    <filename>dc/d8c/structdart_1_1dynamics_1_1ZeroDofJoint_1_1Properties.html</filename>
    <base>dart::dynamics::detail::JointProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1ZeroDofJoint_1_1Properties.html</anchorfile>
      <anchor>aecea39fe423c9f5269eec239aeffbfc3</anchor>
      <arglist>(const Joint::Properties &amp;_properties=Joint::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1ZeroDofJoint_1_1Properties.html</anchorfile>
      <anchor>ae3bd97210629453ea612ea5cb29dd7c7</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::dynamics::detail</name>
    <filename>de/dfe/namespacedart_1_1dynamics_1_1detail.html</filename>
    <class kind="class">dart::dynamics::detail::BasicNodeManagerForBodyNode</class>
    <class kind="class">dart::dynamics::detail::BasicNodeManagerForSkeleton</class>
    <class kind="struct">dart::dynamics::detail::BodyNodeState</class>
    <class kind="struct">dart::dynamics::detail::BodyNodeAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::EndEffectorProperties</class>
    <class kind="struct">dart::dynamics::detail::SupportStateData</class>
    <class kind="struct">dart::dynamics::detail::SupportPropertiesData</class>
    <class kind="struct">dart::dynamics::detail::EntityNodeProperties</class>
    <class kind="class">dart::dynamics::detail::EntityNodeBase</class>
    <class kind="class">dart::dynamics::detail::EntityNodeBase&lt; Base, true &gt;</class>
    <class kind="struct">dart::dynamics::detail::EulerJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::EulerJointProperties</class>
    <class kind="struct">dart::dynamics::detail::FixedFrameProperties</class>
    <class kind="struct">dart::dynamics::detail::GenericJointState</class>
    <class kind="struct">dart::dynamics::detail::GenericJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::GenericJointProperties</class>
    <class kind="struct">dart::dynamics::detail::JointProperties</class>
    <class kind="struct">dart::dynamics::detail::MarkerProperties</class>
    <class kind="struct">dart::dynamics::detail::PlanarJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::PlanarJointProperties</class>
    <class kind="struct">dart::dynamics::detail::PrismaticJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::PrismaticJointProperties</class>
    <class kind="struct">dart::dynamics::detail::RevoluteJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::RevoluteJointProperties</class>
    <class kind="struct">dart::dynamics::detail::ScrewJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::ScrewJointProperties</class>
    <class kind="struct">dart::dynamics::detail::VisualAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::CollisionAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::DynamicsAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::ShapeFrameProperties</class>
    <class kind="struct">dart::dynamics::detail::SkeletonAspectProperties</class>
    <class kind="struct">dart::dynamics::detail::SoftBodyNodeUniqueState</class>
    <class kind="struct">dart::dynamics::detail::SoftBodyNodeUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::SoftBodyNodeProperties</class>
    <class kind="class">dart::dynamics::detail::TranslationalJoint2DUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::TranslationalJoint2DProperties</class>
    <class kind="struct">dart::dynamics::detail::UniversalJointUniqueProperties</class>
    <class kind="struct">dart::dynamics::detail::UniversalJointProperties</class>
    <member kind="typedef">
      <type>common::CloneableVector&lt; std::unique_ptr&lt; Node::State &gt; &gt;</type>
      <name>NodeTypeStateVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0bb77b3df8f4729a1189ebf5e76e79a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; NodeTypeStateVector &gt; &gt;</type>
      <name>NodeStateMap</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a8e01543d64ab01361bcea6831dd01655</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::CloneableMap&lt; NodeStateMap &gt;</type>
      <name>AllNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ac68d5abb54c13d76c09882beda0851e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::CloneableVector&lt; std::unique_ptr&lt; Node::Properties &gt; &gt;</type>
      <name>NodeTypePropertiesVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad09659995f9beca3baf4f082ec8e6a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::type_index, std::unique_ptr&lt; NodeTypePropertiesVector &gt; &gt;</type>
      <name>NodePropertiesMap</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>aa5c53de4d87f7dc0ad7515c12d29eafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::CloneableMap&lt; NodePropertiesMap &gt;</type>
      <name>AllNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>abd946c9ce9009c72a8dd719ba3bd624b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::State, BodyNode, AllNodeStates,&amp;setAllNodeStates,&amp;getAllNodeStates &gt;</type>
      <name>NodeVectorProxyAspectState</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a1f93b7ec0c4d7a16a227206f7d683ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::Properties, BodyNode, AllNodeProperties,&amp;setAllNodeProperties,&amp;getAllNodeProperties &gt;</type>
      <name>NodeVectorProxyAspectProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a91b0675d6e58afb0e87db8d4f3c795ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyStateAndPropertiesAspect&lt; BodyNode, NodeVectorProxyAspectState, NodeVectorProxyAspectProperties &gt;</type>
      <name>NodeVectorProxyAspect</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>aa9a3d57c3321925384db8730cea50723</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedStateAndPropertiesOnTopOf&lt; BodyNode, BodyNodeState, BodyNodeAspectProperties, common::RequiresAspect&lt; NodeVectorProxyAspect &gt; &gt;</type>
      <name>BodyNodeCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a3d48b185c21758d3ba6df083f4ce78ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeNode&lt; common::CompositeJoiner&lt; FixedJacobianNode, common::SpecializedForAspect&lt; Support &gt; &gt; &gt;</type>
      <name>EndEffectorCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af6cde2aadfb7e22b97a31c5c82b379be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedProperties&lt; EntityNode&lt; Base &gt;, EntityNodeProperties &gt;</type>
      <name>EntityNodeAspectBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ac3030876c2da54903586141d1a099615</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; EulerJoint, EulerJointUniqueProperties, GenericJoint&lt; math::R3Space &gt; &gt;</type>
      <name>EulerJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a871bfe90c32e14bbc5ea26a940e07132</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::CompositeJoiner&lt; EntityNode&lt; TemplatedJacobianNode&lt; FixedJacobianNode &gt; &gt;, common::Virtual&lt; FixedFrame &gt; &gt;</type>
      <name>FixedJacobianNodeCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad675665d7dde22b7118bdf65d9ae7372</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedStateAndPropertiesOnTopOf&lt; Derived, GenericJointState&lt; ConfigSpaceT &gt;, GenericJointUniqueProperties&lt; ConfigSpaceT &gt;, Joint &gt;</type>
      <name>GenericJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2ec06480eb51b62082dea00c718660ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; PlanarJoint, PlanarJointUniqueProperties, GenericJoint&lt; math::R3Space &gt; &gt;</type>
      <name>PlanarJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a7734200743d1e31da67838482cb72237</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; PrismaticJoint, PrismaticJointUniqueProperties, GenericJoint&lt; math::R1Space &gt; &gt;</type>
      <name>PrismaticJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a325dabe3143c7fcf19a3ccd480e12a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; RevoluteJoint, RevoluteJointUniqueProperties, GenericJoint&lt; math::R1Space &gt; &gt;</type>
      <name>RevoluteJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>aac8bdbd040dc2165af15d54487722651</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; ScrewJoint, ScrewJointUniqueProperties, GenericJoint&lt; math::R1Space &gt; &gt;</type>
      <name>ScrewJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>abec9e2d5c3505354710b055e839cb1b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; ShapeFrame, ShapeFrameProperties, common::SpecializedForAspect&lt; VisualAspect, CollisionAspect, DynamicsAspect &gt; &gt;</type>
      <name>ShapeFrameCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a4901effea02ce600c09f9f869bb9bdce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CompositeNode&lt; common::CompositeJoiner&lt; FixedJacobianNode, ShapeFrame &gt; &gt;</type>
      <name>ShapeNodeCompositeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ae9264a068658d0df0e25a9136d415651</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::State &gt;</type>
      <name>BodyNodeStateVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a24624b2cd98e5dca494939284e2b7c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::Properties &gt;</type>
      <name>BodyNodePropertiesVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a9400e827a63ecb181e980fcae3426728</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::State &gt;</type>
      <name>JointStateVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0e7e7b6d2bfdce1c2f0f491ca942886e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; common::Composite::Properties &gt;</type>
      <name>JointPropertiesVector</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5dfe831477a4a3c00a0b240b3a7916b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::State, Skeleton, BodyNodeStateVector,&amp;setAllBodyNodeStates,&amp;getAllBodyNodeStates &gt;</type>
      <name>BodyNodeVectorProxyAspectState</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0b09daf7985999916adfa1d7e1eed296</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::Properties, Skeleton, BodyNodePropertiesVector,&amp;setAllBodyNodeProperties,&amp;getAllBodyNodeProperties &gt;</type>
      <name>BodyNodeVectorProxyAspectProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a333d57f02511f2cd03bd38a98b1808c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyStateAndPropertiesAspect&lt; Skeleton, BodyNodeVectorProxyAspectState, BodyNodeVectorProxyAspectProperties &gt;</type>
      <name>BodyNodeVectorProxyAspect</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a839775f80ee2d9bd4f0b06a9ff7f27a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::State, Skeleton, JointStateVector,&amp;setAllJointStates,&amp;getAllJointStates &gt;</type>
      <name>JointVectorProxyAspectState</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2900ec5087e76af09cd275689573af3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyCloneable&lt; common::Aspect::Properties, Skeleton, JointPropertiesVector,&amp;setAllJointProperties,&amp;getAllJointProperties &gt;</type>
      <name>JointVectorProxyAspectProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a3587b3b60b3dc312beb359606cf3ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::ProxyStateAndPropertiesAspect&lt; Skeleton, JointVectorProxyAspectState, JointVectorProxyAspectProperties &gt;</type>
      <name>JointVectorProxyAspect</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af9ca993f938f805c330cc4a753badf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::RequiresAspect&lt; BodyNodeVectorProxyAspect, JointVectorProxyAspect &gt;</type>
      <name>SkeletonProxyAspects</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a86fa99a8336318b3d034e5ab3c465eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; Skeleton, SkeletonAspectProperties, SkeletonProxyAspects &gt;</type>
      <name>SkeletonAspectBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ac9856c632169526cff610581782e328e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedStateAndPropertiesOnTopOf&lt; SoftBodyNode, SoftBodyNodeUniqueState, SoftBodyNodeUniqueProperties, BodyNode &gt;</type>
      <name>SoftBodyNodeBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2af87d640f97d8f79695b3ab43489bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; TranslationalJoint2D, TranslationalJoint2DUniqueProperties, GenericJoint&lt; math::R2Space &gt;&gt;</type>
      <name>TranslationalJoint2DBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a1b9a1a3fb2d13e4b796307cbf4b1c8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::EmbedPropertiesOnTopOf&lt; UniversalJoint, UniversalJointUniqueProperties, GenericJoint&lt; math::R2Space &gt; &gt;</type>
      <name>UniversalJointBase</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af4e6a4cf6d29406aa671d56f9bd8a276</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisOrder</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a0b735c7227b11e97b9323ea1054337c0</anchor>
      <arglist></arglist>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="a0b735c7227b11e97b9323ea1054337c0a6811254e01b3550bdb2dc46f204730dc">ZYX</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="a0b735c7227b11e97b9323ea1054337c0ae65075d550f9b5bf9992fa1d71a131be">XYZ</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ActuatorType</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FORCE</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aa608bb1a5dae8ccdb1d4129e8fc0d45ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PASSIVE</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aa0b6d66b2a41077512e0d881e0fec534d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SERVO</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aad208e58c4d83b05782777f5f4972b547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACCELERATION</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aaa7c6c02911d59c0fc523cc354757ceae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VELOCITY</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aa6fd7d9fb59a285178b4d1df19e42d957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOCKED</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a5ea81df326ac05ff5ab74eeb59c3259aafacacfc07d9f8fa233b29280f25a1a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlaneType</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad2af5d362eab803b59153e85269a2979</anchor>
      <arglist></arglist>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979a74c53bcd3dcb2bb79993b2fec37d362a">XY</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979affa4ba973372c3650fd0881abeca6512">YZ</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979a7d40f0d6c4baa81950b1759d3712a225">ZX</enumvalue>
      <enumvalue file="de/dfe/namespacedart_1_1dynamics_1_1detail.html" anchor="ad2af5d362eab803b59153e85269a2979a936fcdfeb660189dfb3e7907cc099f10">ARBITRARY</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a7e366ec5caeb45e4e6438941fef6845a</anchor>
      <arglist>(BodyNode *bodyNode, const AllNodeStates &amp;states)</arglist>
    </member>
    <member kind="function">
      <type>AllNodeStates</type>
      <name>getAllNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2aff6b16ec63babb4cc302e6e406d08e</anchor>
      <arglist>(const BodyNode *bodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a6236f0f4250283f166a0e24091fdd204</anchor>
      <arglist>(BodyNode *bodyNode, const AllNodeProperties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>AllNodeProperties</type>
      <name>getAllNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a13831b6192989f6e2fdf966bd3caeb82</anchor>
      <arglist>(const BodyNode *bodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SupportUpdate</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad8664b3ecfd84e54059150806c0da334</anchor>
      <arglist>(Support *support)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllBodyNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a9e0324a032e49ef575c49cff81b9e1f6</anchor>
      <arglist>(Skeleton *skel, const BodyNodeStateVector &amp;states)</arglist>
    </member>
    <member kind="function">
      <type>BodyNodeStateVector</type>
      <name>getAllBodyNodeStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad82cc7386f4742977a7f7737d48a4ed5</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllBodyNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a7ad7f537b605edfecb966a31ea70de58</anchor>
      <arglist>(Skeleton *skel, const BodyNodePropertiesVector &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>BodyNodePropertiesVector</type>
      <name>getAllBodyNodeProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a03975ea60dd67170d319696dfaaf2da2</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllJointStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>af3fb2daaef68eab86d8682c0aa820bb3</anchor>
      <arglist>(Skeleton *skel, const JointStateVector &amp;states)</arglist>
    </member>
    <member kind="function">
      <type>JointStateVector</type>
      <name>getAllJointStates</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a732e2426f63fdb95b9c8118a53812624</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllJointProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2d750c44cb460233ca37e5be01e81a13</anchor>
      <arglist>(Skeleton *skel, const JointPropertiesVector &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>JointPropertiesVector</type>
      <name>getAllJointProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a2aaa138b27ccb31c2c299532d6a3c986</anchor>
      <arglist>(const Skeleton *skel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniversalJointUniqueProperties</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a8bbc4754ef6a7586417a9eb0fb136781</anchor>
      <arglist>(universalProperties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllMemberObjectData</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a9e64ffbc1a2eb44b7c8d93442c36a9f6</anchor>
      <arglist>(Owner *owner, const std::vector&lt; Data &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Data &gt;</type>
      <name>getAllMemberObjectData</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>a145658fee7245102b5af5579255b3157</anchor>
      <arglist>(const Owner *owner)</arglist>
    </member>
    <member kind="variable">
      <type>const ActuatorType</type>
      <name>DefaultActuatorType</name>
      <anchorfile>de/dfe/namespacedart_1_1dynamics_1_1detail.html</anchorfile>
      <anchor>ad6a50ba5f92327e066b19284f950b32e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::detail::BasicNodeManagerForBodyNode</name>
    <filename>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</filename>
    <class kind="struct">dart::dynamics::detail::BasicNodeManagerForBodyNode::type</class>
    <member kind="function">
      <type></type>
      <name>BasicNodeManagerForBodyNode</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a36e076686a5190fd838da1ace5f866f6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicNodeManagerForBodyNode</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>ac7b4a2089bc0b3e1654b0ecf2a973616</anchor>
      <arglist>(const BasicNodeManagerForBodyNode &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>BasicNodeManagerForBodyNode &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>ad254a658c27846d61ec209dc8e3f0a9d</anchor>
      <arglist>(const BasicNodeManagerForBodyNode &amp;)=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>isSpecializedForNode</name>
      <anchorfile>d8/d2d/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode.html</anchorfile>
      <anchor>a810a5b9f5fb73929d303169d15253b19</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::BasicNodeManagerForBodyNode::type</name>
    <filename>da/dc8/structdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForBodyNode_1_1type.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::detail::BasicNodeManagerForSkeleton</name>
    <filename>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</filename>
    <base virtualness="virtual">dart::dynamics::detail::BasicNodeManagerForBodyNode</base>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumNodes</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>ad8b5b3e7e92a1d216c5e6b756f979f9e</anchor>
      <arglist>(std::size_t treeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>a3fe59fc255109361f3cfe7c593a04e64</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>ac219ebac95f274fe694b88be3a149406</anchor>
      <arglist>(std::size_t treeIndex, std::size_t nodeIndex) const </arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>a38d89b5cc50d9398404c45f1e3a3721d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const NodeType *</type>
      <name>getNode</name>
      <anchorfile>d0/de8/classdart_1_1dynamics_1_1detail_1_1BasicNodeManagerForSkeleton.html</anchorfile>
      <anchor>a6902e9931e2196cee0dcd6dd7492e3d3</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::BodyNodeState</name>
    <filename>d9/dfa/structdart_1_1dynamics_1_1detail_1_1BodyNodeState.html</filename>
    <member kind="function">
      <type></type>
      <name>BodyNodeState</name>
      <anchorfile>d9/dfa/structdart_1_1dynamics_1_1detail_1_1BodyNodeState.html</anchorfile>
      <anchor>a585d0b5e1c7129ff1c2736d9193fdbc5</anchor>
      <arglist>(const Eigen::Vector6d &amp;Fext=Eigen::Vector6d::Zero())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BodyNodeState</name>
      <anchorfile>d9/dfa/structdart_1_1dynamics_1_1detail_1_1BodyNodeState.html</anchorfile>
      <anchor>abb19dc95e92465fef5049eac93614dbc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector6d</type>
      <name>mFext</name>
      <anchorfile>d9/dfa/structdart_1_1dynamics_1_1detail_1_1BodyNodeState.html</anchorfile>
      <anchor>aa35b2270d87e9b992b046a72f4060f7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::BodyNodeAspectProperties</name>
    <filename>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>BodyNodeAspectProperties</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>a70d48396d3da19675c761d1070c43676</anchor>
      <arglist>(const std::string &amp;name=&quot;BodyNode&quot;, const Inertia &amp;_inertia=Inertia(), bool _isCollidable=true, double _frictionCoeff=DART_DEFAULT_FRICTION_COEFF, double _restitutionCoeff=DART_DEFAULT_RESTITUTION_COEFF, bool _gravityMode=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BodyNodeAspectProperties</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>afc361c2efb21d8a43f45414d58550a23</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>a6745459c8a9104efd3d585548ba9ae59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Inertia</type>
      <name>mInertia</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>a9dfce3850823ff0b02daf5e5f312ebb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsCollidable</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>aebb3c15a2d9f6cf69f3623d2e03f53da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mFrictionCoeff</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>a299544f2d6a14b0d4e67803c0b6f4e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mRestitutionCoeff</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>a4d27ae3295cf475bf95251e8ee2c425a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mGravityMode</name>
      <anchorfile>dc/d15/structdart_1_1dynamics_1_1detail_1_1BodyNodeAspectProperties.html</anchorfile>
      <anchor>a6508e646a7228647c4926acb285da423</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::EndEffectorProperties</name>
    <filename>db/d87/structdart_1_1dynamics_1_1detail_1_1EndEffectorProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>EndEffectorProperties</name>
      <anchorfile>db/d87/structdart_1_1dynamics_1_1detail_1_1EndEffectorProperties.html</anchorfile>
      <anchor>ae2501575d6483cfd312987440441a581</anchor>
      <arglist>(const Eigen::Isometry3d &amp;defaultTf=Eigen::Isometry3d::Identity())</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mDefaultTransform</name>
      <anchorfile>db/d87/structdart_1_1dynamics_1_1detail_1_1EndEffectorProperties.html</anchorfile>
      <anchor>a69f7c98c2780d4cf5a8844ca742fd5a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::SupportStateData</name>
    <filename>dd/dba/structdart_1_1dynamics_1_1detail_1_1SupportStateData.html</filename>
    <member kind="function">
      <type></type>
      <name>SupportStateData</name>
      <anchorfile>dd/dba/structdart_1_1dynamics_1_1detail_1_1SupportStateData.html</anchorfile>
      <anchor>afe649846da2d6e7904bf5656f72e0b63</anchor>
      <arglist>(bool active=false)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>dd/dba/structdart_1_1dynamics_1_1detail_1_1SupportStateData.html</anchorfile>
      <anchor>ab4ac786a3be35524b25741ffb27a041f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::SupportPropertiesData</name>
    <filename>d3/d91/structdart_1_1dynamics_1_1detail_1_1SupportPropertiesData.html</filename>
    <member kind="function">
      <type></type>
      <name>SupportPropertiesData</name>
      <anchorfile>d3/d91/structdart_1_1dynamics_1_1detail_1_1SupportPropertiesData.html</anchorfile>
      <anchor>aa43ad6237583398629594f46abb6e151</anchor>
      <arglist>(const math::SupportGeometry &amp;geometry=math::SupportGeometry())</arglist>
    </member>
    <member kind="variable">
      <type>math::SupportGeometry</type>
      <name>mGeometry</name>
      <anchorfile>d3/d91/structdart_1_1dynamics_1_1detail_1_1SupportPropertiesData.html</anchorfile>
      <anchor>a21633de4b8fac07dd639c4487430c7b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::EntityNodeProperties</name>
    <filename>d3/dea/structdart_1_1dynamics_1_1detail_1_1EntityNodeProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityNodeProperties</name>
      <anchorfile>d3/dea/structdart_1_1dynamics_1_1detail_1_1EntityNodeProperties.html</anchorfile>
      <anchor>aff16313195ab23f57854e5e71d63220a</anchor>
      <arglist>(const std::string &amp;name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const std::string &amp;</name>
      <anchorfile>d3/dea/structdart_1_1dynamics_1_1detail_1_1EntityNodeProperties.html</anchorfile>
      <anchor>a928f3853f94d4a336e38d1d6c76acc3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d3/dea/structdart_1_1dynamics_1_1detail_1_1EntityNodeProperties.html</anchorfile>
      <anchor>a44f874c297636abbc74505cd2dcca9c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::detail::EntityNodeBase</name>
    <filename>d4/d93/classdart_1_1dynamics_1_1detail_1_1EntityNodeBase.html</filename>
    <templarg>Base</templarg>
    <templarg>isCompositeBase</templarg>
    <base>dart::common::EmbedProperties</base>
    <member kind="function">
      <type></type>
      <name>EntityNodeBase</name>
      <anchorfile>d4/d93/classdart_1_1dynamics_1_1detail_1_1EntityNodeBase.html</anchorfile>
      <anchor>abee1006db112179efbdc0a9a17a2a672</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityNodeBase</name>
      <anchorfile>d4/d93/classdart_1_1dynamics_1_1detail_1_1EntityNodeBase.html</anchorfile>
      <anchor>aa16b16a84ea43295990671152b766a22</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::detail::EntityNodeBase&lt; Base, true &gt;</name>
    <filename>d3/d17/classdart_1_1dynamics_1_1detail_1_1EntityNodeBase_3_01Base_00_01true_01_4.html</filename>
    <templarg></templarg>
    <base>CompositeJoiner&lt; EntityNodeAspectBase&lt; Base &gt;, Base &gt;</base>
    <member kind="function">
      <type></type>
      <name>EntityNodeBase</name>
      <anchorfile>d3/d17/classdart_1_1dynamics_1_1detail_1_1EntityNodeBase_3_01Base_00_01true_01_4.html</anchorfile>
      <anchor>abcf1ee1d809be2b9024a0268c2d1f7a7</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityNodeBase</name>
      <anchorfile>d3/d17/classdart_1_1dynamics_1_1detail_1_1EntityNodeBase_3_01Base_00_01true_01_4.html</anchorfile>
      <anchor>aaba8b6c5706266a3c0339a45131efddf</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::EulerJointUniqueProperties</name>
    <filename>d1/d50/structdart_1_1dynamics_1_1detail_1_1EulerJointUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>EulerJointUniqueProperties</name>
      <anchorfile>d1/d50/structdart_1_1dynamics_1_1detail_1_1EulerJointUniqueProperties.html</anchorfile>
      <anchor>a319f5db35433bcac707dadbb1ba940a8</anchor>
      <arglist>(AxisOrder _axisOrder=AxisOrder::XYZ)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EulerJointUniqueProperties</name>
      <anchorfile>d1/d50/structdart_1_1dynamics_1_1detail_1_1EulerJointUniqueProperties.html</anchorfile>
      <anchor>a2c9bddb0895eccde397a3020a946e4de</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>AxisOrder</type>
      <name>mAxisOrder</name>
      <anchorfile>d1/d50/structdart_1_1dynamics_1_1detail_1_1EulerJointUniqueProperties.html</anchorfile>
      <anchor>a7f9dbbdcc83ad46bbcd6e70c1e049605</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::EulerJointProperties</name>
    <filename>df/d81/structdart_1_1dynamics_1_1detail_1_1EulerJointProperties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <base>dart::dynamics::detail::EulerJointUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>EulerJointProperties</name>
      <anchorfile>df/d81/structdart_1_1dynamics_1_1detail_1_1EulerJointProperties.html</anchorfile>
      <anchor>adb6d5119c0447dff980f8c2da8f63be5</anchor>
      <arglist>(const GenericJoint&lt; math::R3Space &gt;::Properties &amp;genericJointProperties=GenericJoint&lt; math::R3Space &gt;::Properties(), const EulerJointUniqueProperties &amp;eulerJointProperties=EulerJointUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EulerJointProperties</name>
      <anchorfile>df/d81/structdart_1_1dynamics_1_1detail_1_1EulerJointProperties.html</anchorfile>
      <anchor>a217a5a4801716abb4ba17f21ac72e78d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; EulerJointProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>df/d81/structdart_1_1dynamics_1_1detail_1_1EulerJointProperties.html</anchorfile>
      <anchor>a38a130a5bd155a97aee3adc6cd0cd9d5</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::FixedFrameProperties</name>
    <filename>d8/d8b/structdart_1_1dynamics_1_1detail_1_1FixedFrameProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>FixedFrameProperties</name>
      <anchorfile>d8/d8b/structdart_1_1dynamics_1_1detail_1_1FixedFrameProperties.html</anchorfile>
      <anchor>a761ee85b99958e69376e62c341f19556</anchor>
      <arglist>(const Eigen::Isometry3d &amp;relativeTf=Eigen::Isometry3d::Identity())</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mRelativeTf</name>
      <anchorfile>d8/d8b/structdart_1_1dynamics_1_1detail_1_1FixedFrameProperties.html</anchorfile>
      <anchor>a2aee6338a5dc93a415526f192634ad1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::GenericJointState</name>
    <filename>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename ConfigSpaceT::EuclideanPoint</type>
      <name>EuclideanPoint</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>a420fa0a1f11847d3b441d8cff3fced86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename ConfigSpaceT::Vector</type>
      <name>Vector</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>aaf59ff3f519ac333b0ac832a1e3adb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericJointState</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>aa40643c2f386810aba949ceec7d60954</anchor>
      <arglist>(const EuclideanPoint &amp;positions=EuclideanPoint::Zero(), const Vector &amp;velocities=Vector::Zero(), const Vector &amp;accelerations=Vector::Zero(), const Vector &amp;forces=Vector::Zero(), const Vector &amp;commands=Vector::Zero())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericJointState</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>ad490ff96895cb72c586901166ec83c89</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>EuclideanPoint</type>
      <name>mPositions</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>a181ff8c34b3c723e3dfdf47acbf03ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mVelocities</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>ac079f90094ffa1dcd59350f1eb86a543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mAccelerations</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>a0ce8b306ed8745c09c53a23ceaa18972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mForces</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>af4bd3ac7a235f529e126d6e9d832c2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mCommands</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>a90056e6309b90d5296e432928e9914e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>d2/d90/structdart_1_1dynamics_1_1detail_1_1GenericJointState.html</anchorfile>
      <anchor>a1290e63fda8ca2d597a1a87d27ff6366</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::GenericJointUniqueProperties</name>
    <filename>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</filename>
    <templarg>ConfigSpaceT</templarg>
    <member kind="function">
      <type></type>
      <name>GenericJointUniqueProperties</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>ab4c54d2e54d434c333000ed38e410bd8</anchor>
      <arglist>(const EuclideanPoint &amp;positionLowerLimits=EuclideanPoint::Constant(-math::constantsd::inf()), const EuclideanPoint &amp;positionUpperLimits=EuclideanPoint::Constant(math::constantsd::inf()), const EuclideanPoint &amp;initialPositions=EuclideanPoint::Zero(), const Vector &amp;velocityLowerLimits=Vector::Constant(-math::constantsd::inf()), const Vector &amp;velocityUpperLimits=Vector::Constant(math::constantsd::inf()), const Vector &amp;initialVelocities=Vector::Zero(), const Vector &amp;accelerationLowerLimits=Vector::Constant(-math::constantsd::inf()), const Vector &amp;accelerationUpperLimits=Vector::Constant(math::constantsd::inf()), const Vector &amp;forceLowerLimits=Vector::Constant(-math::constantsd::inf()), const Vector &amp;forceUpperLimits=Vector::Constant(math::constantsd::inf()), const Vector &amp;springStiffness=Vector::Zero(), const EuclideanPoint &amp;restPosition=EuclideanPoint::Zero(), const Vector &amp;dampingCoefficient=Vector::Zero(), const Vector &amp;coulombFrictions=Vector::Zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericJointUniqueProperties</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a9ea51ce1e2040a22acae97499b5b3716</anchor>
      <arglist>(const GenericJointUniqueProperties &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericJointUniqueProperties</name>
      <anchorfile>d0/de0/structdart_1_1dynamics_1_1detail_1_1GenericJointUniqueProperties.html</anchorfile>
      <anchor>a34ecd22fff625059a992698336241347</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::GenericJointProperties</name>
    <filename>d6/d83/structdart_1_1dynamics_1_1detail_1_1GenericJointProperties.html</filename>
    <templarg></templarg>
    <base>dart::dynamics::detail::JointProperties</base>
    <base>dart::dynamics::detail::GenericJointUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>GenericJointProperties</name>
      <anchorfile>d6/d83/structdart_1_1dynamics_1_1detail_1_1GenericJointProperties.html</anchorfile>
      <anchor>a358e76902eed32d858c50153aae50338</anchor>
      <arglist>(const Joint::Properties &amp;jointProperties=Joint::Properties(), const GenericJointUniqueProperties&lt; ConfigSpaceT &gt; &amp;genericProperties=GenericJointUniqueProperties&lt; ConfigSpaceT &gt;())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericJointProperties</name>
      <anchorfile>d6/d83/structdart_1_1dynamics_1_1detail_1_1GenericJointProperties.html</anchorfile>
      <anchor>aa587512fab6cea6c51a009f27542a71a</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::JointProperties</name>
    <filename>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>JointProperties</name>
      <anchorfile>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</anchorfile>
      <anchor>aee6ff4e4f0c7fe7522fd0d9f88d494f7</anchor>
      <arglist>(const std::string &amp;_name=&quot;Joint&quot;, const Eigen::Isometry3d &amp;_T_ParentBodyToJoint=Eigen::Isometry3d::Identity(), const Eigen::Isometry3d &amp;_T_ChildBodyToJoint=Eigen::Isometry3d::Identity(), bool _isPositionLimitEnforced=false, ActuatorType _actuatorType=DefaultActuatorType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointProperties</name>
      <anchorfile>da/d99/structdart_1_1dynamics_1_1detail_1_1JointProperties.html</anchorfile>
      <anchor>a2d9290e24b37c73cc8789958f56cd42d</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::MarkerProperties</name>
    <filename>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ConstraintType</name>
      <anchorfile>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</anchorfile>
      <anchor>a81206d67359f7e10b2d179a6c47671a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NO</name>
      <anchorfile>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</anchorfile>
      <anchor>a81206d67359f7e10b2d179a6c47671a1aa8bace03b032454677e2c85b11e6a628</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HARD</name>
      <anchorfile>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</anchorfile>
      <anchor>a81206d67359f7e10b2d179a6c47671a1a9fa793ba30684a309e425a2081a140bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SOFT</name>
      <anchorfile>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</anchorfile>
      <anchor>a81206d67359f7e10b2d179a6c47671a1a74a315cb7eb421e0d213dda207c8da61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MarkerProperties</name>
      <anchorfile>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</anchorfile>
      <anchor>a368bda6dc5ee220b74de8b4c5a3fb6ee</anchor>
      <arglist>(const Eigen::Vector4d &amp;color=Color::White(1.0), ConstraintType type=NO)</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector4d</type>
      <name>mColor</name>
      <anchorfile>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</anchorfile>
      <anchor>ac2272a180acfd2ca5c510fa17a90f21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConstraintType</type>
      <name>mType</name>
      <anchorfile>d2/d31/structdart_1_1dynamics_1_1detail_1_1MarkerProperties.html</anchorfile>
      <anchor>a89ec83ad4403bd06e6d40f6821adb40a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::PlanarJointUniqueProperties</name>
    <filename>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>PlanarJointUniqueProperties</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>a0d2d703f6dfd51a446e8ff36620dff50</anchor>
      <arglist>(PlaneType _planeType=PlaneType::XY)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlanarJointUniqueProperties</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>ac44000e4bb8961e9e87ac765bb79eb18</anchor>
      <arglist>(const Eigen::Vector3d &amp;_transAxis1, const Eigen::Vector3d &amp;_transAxis2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlanarJointUniqueProperties</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>a45b5583efa9a98a3551d83587dfa8dd2</anchor>
      <arglist>(const PlanarJointUniqueProperties &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PlanarJointUniqueProperties</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>ab69c34432ddf62e95ef57ff6d3a9886e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXYPlane</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>a090a32b9f900a40f923fe83f237b7e9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYZPlane</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>ad684957c0d278966b2acd05b99f1cd60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZXPlane</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>ab43f1c992af277d88d6494defa8cc1d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryPlane</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>a569bad33cf2a011e0c06841bc1e1506d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_transAxis1, const Eigen::Vector3d &amp;_transAxis2)</arglist>
    </member>
    <member kind="variable">
      <type>PlaneType</type>
      <name>mPlaneType</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>ab1b745de102c29cadb9d252ade30bcc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mTransAxis1</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>af7c20618a98b56bd7954bd2ba7e5d208</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mTransAxis2</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>ad2185f03ea331efdf52281c2dd12da36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mRotAxis</name>
      <anchorfile>d5/d84/structdart_1_1dynamics_1_1detail_1_1PlanarJointUniqueProperties.html</anchorfile>
      <anchor>adeffd97795dc577d1b16694cf0d1d5f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::PlanarJointProperties</name>
    <filename>dc/d06/structdart_1_1dynamics_1_1detail_1_1PlanarJointProperties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <base>dart::dynamics::detail::PlanarJointUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>PlanarJointProperties</name>
      <anchorfile>dc/d06/structdart_1_1dynamics_1_1detail_1_1PlanarJointProperties.html</anchorfile>
      <anchor>a05eed2ecf15a13e0fed6d138c6d25842</anchor>
      <arglist>(const GenericJoint&lt; math::R3Space &gt;::Properties &amp;genericJointProperties=GenericJoint&lt; math::R3Space &gt;::Properties(), const PlanarJointUniqueProperties &amp;planarProperties=PlanarJointUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PlanarJointProperties</name>
      <anchorfile>dc/d06/structdart_1_1dynamics_1_1detail_1_1PlanarJointProperties.html</anchorfile>
      <anchor>a8c4280cc7e53100a8938bb18ec166050</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; PlanarJointProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>dc/d06/structdart_1_1dynamics_1_1detail_1_1PlanarJointProperties.html</anchorfile>
      <anchor>ae85632eb548989999c0235334dba14af</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::PrismaticJointUniqueProperties</name>
    <filename>d4/d0d/structdart_1_1dynamics_1_1detail_1_1PrismaticJointUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>PrismaticJointUniqueProperties</name>
      <anchorfile>d4/d0d/structdart_1_1dynamics_1_1detail_1_1PrismaticJointUniqueProperties.html</anchorfile>
      <anchor>a6aad87ae768dc166b1a69927b06d3e92</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis=Eigen::Vector3d::UnitZ())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrismaticJointUniqueProperties</name>
      <anchorfile>d4/d0d/structdart_1_1dynamics_1_1detail_1_1PrismaticJointUniqueProperties.html</anchorfile>
      <anchor>a1ef5b0eb6aa8a2f4ee0b418b82bc42fb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAxis</name>
      <anchorfile>d4/d0d/structdart_1_1dynamics_1_1detail_1_1PrismaticJointUniqueProperties.html</anchorfile>
      <anchor>a73be4f0362876743a9ae51d3a361012b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::PrismaticJointProperties</name>
    <filename>dd/d5c/structdart_1_1dynamics_1_1detail_1_1PrismaticJointProperties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <base>dart::dynamics::detail::PrismaticJointUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>PrismaticJointProperties</name>
      <anchorfile>dd/d5c/structdart_1_1dynamics_1_1detail_1_1PrismaticJointProperties.html</anchorfile>
      <anchor>abdc2712559f9ff54d7d62ee4efadd84a</anchor>
      <arglist>(const GenericJoint&lt; math::R1Space &gt;::Properties &amp;genericJointProperties=GenericJoint&lt; math::R1Space &gt;::Properties(), const PrismaticJointUniqueProperties &amp;prismaticProperties=PrismaticJointUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrismaticJointProperties</name>
      <anchorfile>dd/d5c/structdart_1_1dynamics_1_1detail_1_1PrismaticJointProperties.html</anchorfile>
      <anchor>a629f4503812250b5c30856e4be0a8016</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; PrismaticJointProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>dd/d5c/structdart_1_1dynamics_1_1detail_1_1PrismaticJointProperties.html</anchorfile>
      <anchor>ab5bd30643714e560e7692e4aaa75d214</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::RevoluteJointUniqueProperties</name>
    <filename>dc/ddd/structdart_1_1dynamics_1_1detail_1_1RevoluteJointUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>RevoluteJointUniqueProperties</name>
      <anchorfile>dc/ddd/structdart_1_1dynamics_1_1detail_1_1RevoluteJointUniqueProperties.html</anchorfile>
      <anchor>adadad95bbf30630c3c38289f123bf478</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis=Eigen::Vector3d::UnitZ())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RevoluteJointUniqueProperties</name>
      <anchorfile>dc/ddd/structdart_1_1dynamics_1_1detail_1_1RevoluteJointUniqueProperties.html</anchorfile>
      <anchor>a984eac2792da4f549fda2731590cb52a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAxis</name>
      <anchorfile>dc/ddd/structdart_1_1dynamics_1_1detail_1_1RevoluteJointUniqueProperties.html</anchorfile>
      <anchor>a47da48a27f4db80da7027458984b443f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::RevoluteJointProperties</name>
    <filename>d2/df4/structdart_1_1dynamics_1_1detail_1_1RevoluteJointProperties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <base>dart::dynamics::detail::RevoluteJointUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>RevoluteJointProperties</name>
      <anchorfile>d2/df4/structdart_1_1dynamics_1_1detail_1_1RevoluteJointProperties.html</anchorfile>
      <anchor>ad8032a08d4d0f1da32abb83d08ae14ce</anchor>
      <arglist>(const GenericJoint&lt; math::R1Space &gt;::Properties &amp;genericJointProperties=GenericJoint&lt; math::R1Space &gt;::Properties(), const RevoluteJointUniqueProperties &amp;revoluteProperties=RevoluteJointUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RevoluteJointProperties</name>
      <anchorfile>d2/df4/structdart_1_1dynamics_1_1detail_1_1RevoluteJointProperties.html</anchorfile>
      <anchor>a3de7d64b836b49a9651d339df30c717e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; RevoluteJointProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>d2/df4/structdart_1_1dynamics_1_1detail_1_1RevoluteJointProperties.html</anchorfile>
      <anchor>ae1bf3e1d667ca5aa288b2c78ce90a183</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::ScrewJointUniqueProperties</name>
    <filename>d6/d8b/structdart_1_1dynamics_1_1detail_1_1ScrewJointUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>ScrewJointUniqueProperties</name>
      <anchorfile>d6/d8b/structdart_1_1dynamics_1_1detail_1_1ScrewJointUniqueProperties.html</anchorfile>
      <anchor>a92c6be3511e77dc1e645ec9a58313094</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis=Eigen::Vector3d::UnitZ(), double _pitch=0.1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ScrewJointUniqueProperties</name>
      <anchorfile>d6/d8b/structdart_1_1dynamics_1_1detail_1_1ScrewJointUniqueProperties.html</anchorfile>
      <anchor>ad8b5e692315c5846e8ef25b5ff2bb6aa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAxis</name>
      <anchorfile>d6/d8b/structdart_1_1dynamics_1_1detail_1_1ScrewJointUniqueProperties.html</anchorfile>
      <anchor>a219c075dc5daab80a16ea3397e41efcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mPitch</name>
      <anchorfile>d6/d8b/structdart_1_1dynamics_1_1detail_1_1ScrewJointUniqueProperties.html</anchorfile>
      <anchor>a1ce8658cd301432439c784fad77f54b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::ScrewJointProperties</name>
    <filename>da/d7f/structdart_1_1dynamics_1_1detail_1_1ScrewJointProperties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <base>dart::dynamics::detail::ScrewJointUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>ScrewJointProperties</name>
      <anchorfile>da/d7f/structdart_1_1dynamics_1_1detail_1_1ScrewJointProperties.html</anchorfile>
      <anchor>a1781863e3129c902c38974a20e4e47ff</anchor>
      <arglist>(const GenericJoint&lt; math::R1Space &gt;::Properties &amp;genericJointProperties=GenericJoint&lt; math::R1Space &gt;::Properties(), const ScrewJointUniqueProperties &amp;screwProperties=ScrewJointUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ScrewJointProperties</name>
      <anchorfile>da/d7f/structdart_1_1dynamics_1_1detail_1_1ScrewJointProperties.html</anchorfile>
      <anchor>a484654b0167a1aa5f8839e05958e44e1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; ScrewJointProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>da/d7f/structdart_1_1dynamics_1_1detail_1_1ScrewJointProperties.html</anchorfile>
      <anchor>a6fa4c5b83992a708e3c944706423dbdd</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::VisualAspectProperties</name>
    <filename>dc/d29/structdart_1_1dynamics_1_1detail_1_1VisualAspectProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>VisualAspectProperties</name>
      <anchorfile>dc/d29/structdart_1_1dynamics_1_1detail_1_1VisualAspectProperties.html</anchorfile>
      <anchor>aa67a35bba006db16c618730fbfea8cdb</anchor>
      <arglist>(const Eigen::Vector4d &amp;color=Eigen::Vector4d(0.5, 0.5, 1.0, 1.0), const bool hidden=false, const bool shadowed=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisualAspectProperties</name>
      <anchorfile>dc/d29/structdart_1_1dynamics_1_1detail_1_1VisualAspectProperties.html</anchorfile>
      <anchor>a8fec1dc1d174bd91a3d021a012ac3d0f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector4d</type>
      <name>mRGBA</name>
      <anchorfile>dc/d29/structdart_1_1dynamics_1_1detail_1_1VisualAspectProperties.html</anchorfile>
      <anchor>a833edf82019c81867cb78fd2004c417a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mUseDefaultColor</name>
      <anchorfile>dc/d29/structdart_1_1dynamics_1_1detail_1_1VisualAspectProperties.html</anchorfile>
      <anchor>aff36f300a9ab24a5b7753da724867503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mHidden</name>
      <anchorfile>dc/d29/structdart_1_1dynamics_1_1detail_1_1VisualAspectProperties.html</anchorfile>
      <anchor>ad7339563b5696d1cf3abe1a02990d306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mShadowed</name>
      <anchorfile>dc/d29/structdart_1_1dynamics_1_1detail_1_1VisualAspectProperties.html</anchorfile>
      <anchor>aa233f80db50877c0c42302fdff443877</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::CollisionAspectProperties</name>
    <filename>d0/d88/structdart_1_1dynamics_1_1detail_1_1CollisionAspectProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>CollisionAspectProperties</name>
      <anchorfile>d0/d88/structdart_1_1dynamics_1_1detail_1_1CollisionAspectProperties.html</anchorfile>
      <anchor>a437c7c3e75198d64aa9eb245e16e5c36</anchor>
      <arglist>(const bool collidable=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CollisionAspectProperties</name>
      <anchorfile>d0/d88/structdart_1_1dynamics_1_1detail_1_1CollisionAspectProperties.html</anchorfile>
      <anchor>a1f35a2b683bcec0613600cc6c62eb42b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mCollidable</name>
      <anchorfile>d0/d88/structdart_1_1dynamics_1_1detail_1_1CollisionAspectProperties.html</anchorfile>
      <anchor>a281bddf1cd14f6385ef60076013c381a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::DynamicsAspectProperties</name>
    <filename>dd/da1/structdart_1_1dynamics_1_1detail_1_1DynamicsAspectProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>DynamicsAspectProperties</name>
      <anchorfile>dd/da1/structdart_1_1dynamics_1_1detail_1_1DynamicsAspectProperties.html</anchorfile>
      <anchor>ac9e82af1366f42339890dd80043658eb</anchor>
      <arglist>(const double frictionCoeff=1.0, const double restitutionCoeff=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicsAspectProperties</name>
      <anchorfile>dd/da1/structdart_1_1dynamics_1_1detail_1_1DynamicsAspectProperties.html</anchorfile>
      <anchor>a1c0d843621a0da40cf5dc93c3e19cd78</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mFrictionCoeff</name>
      <anchorfile>dd/da1/structdart_1_1dynamics_1_1detail_1_1DynamicsAspectProperties.html</anchorfile>
      <anchor>a8091ddb61dad386aadd1089ef6781141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mRestitutionCoeff</name>
      <anchorfile>dd/da1/structdart_1_1dynamics_1_1detail_1_1DynamicsAspectProperties.html</anchorfile>
      <anchor>a4f1891739c8e49dff3647f0bae4a5367</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::ShapeFrameProperties</name>
    <filename>db/d06/structdart_1_1dynamics_1_1detail_1_1ShapeFrameProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>ShapeFrameProperties</name>
      <anchorfile>db/d06/structdart_1_1dynamics_1_1detail_1_1ShapeFrameProperties.html</anchorfile>
      <anchor>a83059f0631c7cf2732e24cf00c987ee8</anchor>
      <arglist>(const ShapePtr &amp;shape=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShapeFrameProperties</name>
      <anchorfile>db/d06/structdart_1_1dynamics_1_1detail_1_1ShapeFrameProperties.html</anchorfile>
      <anchor>a86591565d43f4d82a9b70e80a4091dce</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>ShapePtr</type>
      <name>mShape</name>
      <anchorfile>db/d06/structdart_1_1dynamics_1_1detail_1_1ShapeFrameProperties.html</anchorfile>
      <anchor>a5630669f6692fd00c5d3b254891e065f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::SkeletonAspectProperties</name>
    <filename>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>SkeletonAspectProperties</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>ad78568c982e8e1d12863bd51b4dc48de</anchor>
      <arglist>(const std::string &amp;_name=&quot;Skeleton&quot;, bool _isMobile=true, const Eigen::Vector3d &amp;_gravity=Eigen::Vector3d(0.0, 0.0,-9.81), double _timeStep=0.001, bool _enabledSelfCollisionCheck=false, bool _enableAdjacentBodyCheck=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SkeletonAspectProperties</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>aeb7c43e84188116a788c8f9af9ff604b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>a9db01717e1fd86d1f5687fb4beed54e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsMobile</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>afbcb71dedad21426b3f9899cb0f8636b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mGravity</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>ac0bfd2205d48009452674fb42d29f33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>a6f987608b836c962c7870e295b094339</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mEnabledSelfCollisionCheck</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>ae8c4cabc6a5e9edf671fc10027d86111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mEnabledAdjacentBodyCheck</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1detail_1_1SkeletonAspectProperties.html</anchorfile>
      <anchor>a02b04dbb99b2617e8b5764a33031186a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::SoftBodyNodeUniqueState</name>
    <filename>dc/d20/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueState.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftBodyNodeUniqueState</name>
      <anchorfile>dc/d20/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueState.html</anchorfile>
      <anchor>a74f82396c2ee134531bba5d12180fd9c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PointMass::State &gt;</type>
      <name>mPointStates</name>
      <anchorfile>dc/d20/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueState.html</anchorfile>
      <anchor>ac8050df6a9b8ea11b5c3f58bdc0a2237</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::SoftBodyNodeUniqueProperties</name>
    <filename>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>SoftBodyNodeUniqueProperties</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>a8fd5d6e6050caee804d662f9e70f983f</anchor>
      <arglist>(double _Kv=DART_DEFAULT_VERTEX_STIFFNESS, double _Ke=DART_DEFAULT_EDGE_STIFNESS, double _DampCoeff=DART_DEFAULT_DAMPING_COEFF, const std::vector&lt; PointMass::Properties &gt; &amp;_points=std::vector&lt; PointMass::Properties &gt;(), const std::vector&lt; Eigen::Vector3i &gt; &amp;_faces=std::vector&lt; Eigen::Vector3i &gt;())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftBodyNodeUniqueProperties</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>a65a08e38b93c69d7f50ec2a045e55239</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPointMass</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>a5680e083eaf99fcc2a7269312374400f</anchor>
      <arglist>(const PointMass::Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectPointMasses</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>ab253a46f34549db82e37b0247062445a</anchor>
      <arglist>(std::size_t i1, std::size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFace</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>a206e73847b7de96b31f5b041fb82a76d</anchor>
      <arglist>(const Eigen::Vector3i &amp;_newFace)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mKv</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>ab35bc07080ba6112c8f78c936021af03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mKe</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>a6985f350e11ed6d76e94f578b4864552</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDampCoeff</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>af372694aaa01eaa061c896a85a764102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PointMass::Properties &gt;</type>
      <name>mPointProps</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>aab3a94b5864ccb891abf49cdaa1cdf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Eigen::Vector3i &gt;</type>
      <name>mFaces</name>
      <anchorfile>d8/d4e/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeUniqueProperties.html</anchorfile>
      <anchor>ad5530fe1909caf4b27977542cdc54f65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::SoftBodyNodeProperties</name>
    <filename>d5/db1/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeProperties.html</filename>
    <base>dart::common::detail::ComposeData</base>
    <base>dart::dynamics::detail::SoftBodyNodeUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>SoftBodyNodeProperties</name>
      <anchorfile>d5/db1/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeProperties.html</anchorfile>
      <anchor>a83fa0fe604e147cf4a5c26f1f34bf11b</anchor>
      <arglist>(const BodyNode::Properties &amp;_bodyProperties=BodyNode::Properties(), const SoftBodyNodeUniqueProperties &amp;_softProperties=SoftBodyNodeUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftBodyNodeProperties</name>
      <anchorfile>d5/db1/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeProperties.html</anchorfile>
      <anchor>ac0dfb17d04ddf54d6062eb0c023b3261</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; SoftBodyNodeProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>d5/db1/structdart_1_1dynamics_1_1detail_1_1SoftBodyNodeProperties.html</anchorfile>
      <anchor>a1db13f5a5e6ed27cc54d1737400e24fe</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::detail::TranslationalJoint2DUniqueProperties</name>
    <filename>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint2DUniqueProperties</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>ae66836d75e9d9def815d03c200d34cd4</anchor>
      <arglist>(PlaneType planeType=PlaneType::XY)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint2DUniqueProperties</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a58194d602ed6fc81246cf2ec1c0a61c2</anchor>
      <arglist>(const Eigen::Matrix&lt; double, 3, 2 &gt; &amp;transAxes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint2DUniqueProperties</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a9d8d1a228cd4cd45cf9fd5085772b88d</anchor>
      <arglist>(const Eigen::Vector3d &amp;transAxis1, const Eigen::Vector3d &amp;transAxis2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint2DUniqueProperties</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>af776c962cfac40ade5a958fed1afc72b</anchor>
      <arglist>(const TranslationalJoint2DUniqueProperties &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TranslationalJoint2DUniqueProperties</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>aa4f5d8b47f9a786a7d0ce4825bcf4a2a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXYPlane</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>aba86a88641e98ac5aa4108d734a8dfa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYZPlane</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a470b04a6dce87dad239719dd443d4144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZXPlane</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a4dc2ec986eecd1efe2e1ecc55ed05270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryPlane</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a2fd02d091edd095eac278bc61522cee6</anchor>
      <arglist>(const Eigen::Matrix&lt; double, 3, 2 &gt; &amp;transAxes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryPlane</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a17e50d05ec5af7b1446ad8eb8eec0334</anchor>
      <arglist>(const Eigen::Vector3d &amp;transAxis1, const Eigen::Vector3d &amp;transAxis2)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix&lt; double, 3, 2 &gt; &amp;</type>
      <name>getTranslationalAxes</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a2045ab1485088b94669b382f9644952d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getTranslationalAxis1</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a3c7249482def61ef05d6124a1c527f34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getTranslationalAxis2</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a12dcab5a450107114d7de1f7da3df50a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PlaneType</type>
      <name>getPlaneType</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>aba33080bda7081ac108a245cdc9e7b47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PlaneType</type>
      <name>mPlaneType</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>ad24e3a50f0a17d30a6d452dd0a062e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Matrix&lt; double, 3, 2 &gt;</type>
      <name>mTransAxes</name>
      <anchorfile>d9/d63/classdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DUniqueProperties.html</anchorfile>
      <anchor>a2bcbe416b95f22a45cf6da67a230a75e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::TranslationalJoint2DProperties</name>
    <filename>d9/dbe/structdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DProperties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <base>dart::dynamics::detail::TranslationalJoint2DUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint2DProperties</name>
      <anchorfile>d9/dbe/structdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DProperties.html</anchorfile>
      <anchor>a94666d05651a3bca39400ca4084b3187</anchor>
      <arglist>(const GenericJoint&lt; math::R2Space &gt;::Properties &amp;genericJointProperties=GenericJoint&lt; math::R2Space &gt;::Properties(), const TranslationalJoint2DUniqueProperties &amp;universalProperties=TranslationalJoint2DUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TranslationalJoint2DProperties</name>
      <anchorfile>d9/dbe/structdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DProperties.html</anchorfile>
      <anchor>a62ec844c47c9e22898925043e4acaff9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; TranslationalJoint2DProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>d9/dbe/structdart_1_1dynamics_1_1detail_1_1TranslationalJoint2DProperties.html</anchorfile>
      <anchor>a6f77d1906e4bbad6b7f159ca1ec4d8cc</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::UniversalJointUniqueProperties</name>
    <filename>dd/d4a/structdart_1_1dynamics_1_1detail_1_1UniversalJointUniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>UniversalJointUniqueProperties</name>
      <anchorfile>dd/d4a/structdart_1_1dynamics_1_1detail_1_1UniversalJointUniqueProperties.html</anchorfile>
      <anchor>aa76effaa53b7c359dff2601be6039d97</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniversalJointUniqueProperties</name>
      <anchorfile>dd/d4a/structdart_1_1dynamics_1_1detail_1_1UniversalJointUniqueProperties.html</anchorfile>
      <anchor>a43b927283e0aff4266522eb3fc27fa97</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; Eigen::Vector3d, 2 &gt;</type>
      <name>mAxis</name>
      <anchorfile>dd/d4a/structdart_1_1dynamics_1_1detail_1_1UniversalJointUniqueProperties.html</anchorfile>
      <anchor>abc63753b9947645f6f2ec9955cd50d54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::detail::UniversalJointProperties</name>
    <filename>dc/d79/structdart_1_1dynamics_1_1detail_1_1UniversalJointProperties.html</filename>
    <base>dart::dynamics::detail::GenericJointProperties</base>
    <base>dart::dynamics::detail::UniversalJointUniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>UniversalJointProperties</name>
      <anchorfile>dc/d79/structdart_1_1dynamics_1_1detail_1_1UniversalJointProperties.html</anchorfile>
      <anchor>a8362afa927372ea211ef849eb80ec43b</anchor>
      <arglist>(const GenericJoint&lt; math::R2Space &gt;::Properties &amp;genericJointProperties=GenericJoint&lt; math::R2Space &gt;::Properties(), const UniversalJointUniqueProperties &amp;universalProperties=UniversalJointUniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniversalJointProperties</name>
      <anchorfile>dc/d79/structdart_1_1dynamics_1_1detail_1_1UniversalJointProperties.html</anchorfile>
      <anchor>a72ada2f7eee43f11e2e1c41acde363ca</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; UniversalJointProperties &gt;</type>
      <name>createShared</name>
      <anchorfile>dc/d79/structdart_1_1dynamics_1_1detail_1_1UniversalJointProperties.html</anchorfile>
      <anchor>a56ad92988502b7d1f6b997c6f24cdc41</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::gui</name>
    <filename>d0/dcf/namespacedart_1_1gui.html</filename>
    <namespace>dart::gui::osg</namespace>
    <class kind="class">dart::gui::GlutWindow</class>
    <class kind="class">dart::gui::GraphWindow</class>
    <class kind="class">dart::gui::MotionBlurSimWindow</class>
    <class kind="class">dart::gui::OpenGLRenderInterface</class>
    <class kind="class">dart::gui::RenderInterface</class>
    <class kind="class">dart::gui::SimWindow</class>
    <class kind="class">dart::gui::SoftSimWindow</class>
    <class kind="class">dart::gui::Trackball</class>
    <class kind="class">dart::gui::Win2D</class>
    <class kind="class">dart::gui::Win3D</class>
    <member kind="enumeration">
      <type></type>
      <name>DecoBufferType</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aaca7f10005100bc785533604dfb92f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Front</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aaca7f10005100bc785533604dfb92f94abac97679497a26e922c638dfc0bee86a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Back</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aaca7f10005100bc785533604dfb92f94ac5867ed1776b6aaa8a214faade7ee8e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoColorChannel</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_R</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a17b38b02dde4480232c823671c396311</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_G</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a73def8e8a11bc617efc735fccca88812</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_B</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a094774926a30e17215e50cf5c970444e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_A</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a3cf2bd455fdafbe9ffade2365e5add3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGB</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9aee20d2e084d90d389ced0e45ac8b1f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGBA</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>acea2343cbdfc83034861f3d09a04eec9a3b21deeaeee8633f9466242c06e8ebb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoDrawType</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_WireFrame</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684abfa790e50f15804a359c4bc157105d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_SolidPolygon</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684a5b3e01ab42241a0b9d4ffeef3ec21031</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_FrontPolygon</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684a72f83dc5b58233b658f89347404b20e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_BackPolygon</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684aa39a26f682602f0ed8dc26c3914618ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_Max</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>ab8394fd8ccdf4781d819f403930b7684ac506dd2baa30b88396c90b985e561d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawStringOnScreen</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aed01baef32d8b5e219071ebcdd9f8279</anchor>
      <arglist>(float _x, float _y, const std::string &amp;_s, bool _bigFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow3D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a6737073c5dc3bbeca4c8c3fa02bcf57d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_pt, const Eigen::Vector3d &amp;_dir, const double _length, const double _thickness, const double _arrowThickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow2D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a136a9ef3518f5e063d4b8f8b025723cc</anchor>
      <arglist>(const Eigen::Vector2d &amp;_pt, const Eigen::Vector2d &amp;_vec, double _thickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawProgressBar</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2813fb1495c904db58809b2b7741614d</anchor>
      <arglist>(int _currFrame, int _totalFrame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawOpenCylinderConnectingTwoSpheres</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a14f5a30b86b70102621c36eff99b818e</anchor>
      <arglist>(OpenGLRenderInterface *ri, const std::pair&lt; double, Eigen::Vector3d &gt; &amp;sphere0, const std::pair&lt; double, Eigen::Vector3d &gt; &amp;sphere1, int slices, int stacks)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawOpenDome</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a04f5f1da1e786a77c7f1b8a0c60d1fed</anchor>
      <arglist>(double radius, int slices, int stacks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accFrustum</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a078416ecc6eaca1ef95264f1b20ddb19</anchor>
      <arglist>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accPerspective</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2c941c1d02febca8d5f9828e0eb7887d</anchor>
      <arglist>(GLdouble fovy, GLdouble aspect, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::GlutWindow</name>
    <filename>d1/d33/classdart_1_1gui_1_1GlutWindow.html</filename>
    <member kind="function">
      <type></type>
      <name>GlutWindow</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ade729c55069b099e6b88fac9f18b1f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GlutWindow</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>aef170e75a65e96b1c7ef2948c9059767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initWindow</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a8b41128be04cbe6005e72c6509227810</anchor>
      <arglist>(int _w, int _h, const char *_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reshape</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a73b70ae7440a2441aa46bdc57b565c04</anchor>
      <arglist>(int _w, int _h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>keyEvent</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a64fcaf65679d010aace3f2b91dcb3fe6</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>specKeyEvent</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ac660d2468da9d029d6ae43767e57aff5</anchor>
      <arglist>(int _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>mouseClick</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a837bec2d991a831486dda6d1f38c67f0</anchor>
      <arglist>(int _button, int _state, int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>mouseDrag</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a0829e6f712362a33994cc95a73b29239</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>mouseMove</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a265cd2ef52631f58c9d137ec6f5708c6</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refresh</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>af398c7b13ba369251b5440262378230e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a9c5bded8b84bfea659bdd66ffcc6c8fd</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a2ec6e6ada1d025d83668490f49acb79e</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GlutWindow *</type>
      <name>current</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a391e127f13d571850117714eaa1a8997</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::vector&lt; GlutWindow * &gt;</type>
      <name>mWindows</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>aad788cd617640cfc0fdfa7c3a14d5fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::vector&lt; int &gt;</type>
      <name>mWinIDs</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a44496c041c40292385ce3ab5a18eb47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a02e91a6bdd229d7448e70b4f0e124f70</anchor>
      <arglist>(int _w, int _h)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a1f843290dd635d7f6a2636416a5d3010</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyboard</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a9e7fb1809eb4e9a0ba16f38ddbf5a705</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>specKey</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ae73b27dd2924a7d91510c3759f9eb6b9</anchor>
      <arglist>(int _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>click</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a45f2143f1842c5ed0aa7d67dba83fd79</anchor>
      <arglist>(int _button, int _state, int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drag</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a731c742119aa38a6f648452a647e79f5</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>move</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a403680fb29f83b8c1db9dfc72335e880</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>displayTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>adf919a5f3f1e1a7476f4811802d9339f</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>simTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a7b93bcdf3e582203294ece1190310bfa</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>screenshot</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a462309e471fbf61356db2bae3468b3cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mWinWidth</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a8e0c1faf0fbd6c56a9bd74e1ca59b8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mWinHeight</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a1fedec243e338f96f50fbf9f988d357d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mMouseX</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>abfd95d5ec55d2dc4fb379153fbd9f0bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mMouseY</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a6044c4060180b3b1aed11a642d3ebaa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mDisplayTimeout</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a0cbc77f9ad81caedd41214067a90481b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mMouseDown</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>aad887dd92cacf1ff5ebc441411832186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mMouseDrag</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a7453760e52d92db1310d68e26127a8f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mCapture</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a03d049f3813b0232ef367c855f6a3163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mBackground</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ae6e097cc33fbe9197fe535370930c6f2</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gui::RenderInterface *</type>
      <name>mRI</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a53eb0b7eac4c0e8bdcff317f55692a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; unsigned char &gt;</type>
      <name>mScreenshotTemp</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a909e0f34027645d02193a4ad6d94e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; unsigned char &gt;</type>
      <name>mScreenshotTemp2</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a8b511f1180c2f1014a303bf4bdd78721</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::GraphWindow</name>
    <filename>d4/d40/classdart_1_1gui_1_1GraphWindow.html</filename>
    <base>dart::gui::Win2D</base>
    <member kind="function">
      <type></type>
      <name>GraphWindow</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>ab6de6a3cc80d7eaf4f008abe90773a1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GraphWindow</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a9c9da2ee59f54265176793cc4274b0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a61289363b80726c4d6073589125dbf14</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyboard</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>ac4f273748f0e96ec752b5b385000d4d0</anchor>
      <arglist>(unsigned char _key, int _x, int _y) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a74f36b635c850ec7cba7f52eaa4b2211</anchor>
      <arglist>(Eigen::VectorXd _data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>aeff09aa51dd67eeb84595a06017b911d</anchor>
      <arglist>(int _w, int _h) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>ab05f883e91d07f2bf5e7ccc8cb99b2ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>click</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a90143e018aa177fb9e4d33b3aa75d0d1</anchor>
      <arglist>(int _button, int _state, int _x, int _y) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>aaedd55d2fed873d89e3304ac84c45d24</anchor>
      <arglist>(int _x, int _y) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initGL</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>aaf2e7d1d4cc2d675b4a54e95f706f76c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mData</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a0cffc691ea6fbd06a39477a9fdca4ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mTranslate</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a67ff5dfcb81763aa00dd5a994d6299cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTransX</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a65f721d1252bae6f330b791dd8cb1d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTransY</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a0ab6436a8d8b1606f407529705595b92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::MotionBlurSimWindow</name>
    <filename>db/d8f/classdart_1_1gui_1_1MotionBlurSimWindow.html</filename>
    <base>dart::gui::SimWindow</base>
    <member kind="function">
      <type></type>
      <name>MotionBlurSimWindow</name>
      <anchorfile>db/d8f/classdart_1_1gui_1_1MotionBlurSimWindow.html</anchorfile>
      <anchor>afff2b399c005e69754275f89c2c5ab46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MotionBlurSimWindow</name>
      <anchorfile>db/d8f/classdart_1_1gui_1_1MotionBlurSimWindow.html</anchorfile>
      <anchor>a067053cd0eaa3a9a88a4cf1d064b3962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMotionBlurQuality</name>
      <anchorfile>db/d8f/classdart_1_1gui_1_1MotionBlurSimWindow.html</anchorfile>
      <anchor>a15470503edbf8bca51390f5ede7b1bfa</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>db/d8f/classdart_1_1gui_1_1MotionBlurSimWindow.html</anchorfile>
      <anchor>a7e89fc7a3eb7e5d28b4e168290fb610e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>displayTimer</name>
      <anchorfile>db/d8f/classdart_1_1gui_1_1MotionBlurSimWindow.html</anchorfile>
      <anchor>ada4055028543fa052a3117e1a33d93ce</anchor>
      <arglist>(int _val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>timeStepping</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>ac29a6f682db7f66136fe5644de217caf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawWorld</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>ab37cfee074a6fb75a0e81d9f479730fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawSkeletons</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a6cbd638fae08da1423de279dfe64dc83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawSkels</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a1c2a180ba4be75d2ded8d2f0f499589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawEntities</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>acf691a61bf149feb8412143dab2b9383</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>aeef45af4aa4713eae03076ae15ff81fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyboard</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>aae794b4a7054a238ec1520c6a076aa78</anchor>
      <arglist>(unsigned char _key, int _x, int _y) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorld</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>afb2f6dceb1a9dbb4d52442b4b14a150e</anchor>
      <arglist>(dart::simulation::WorldPtr _world)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveWorld</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a65fc17a37aa640ea4d1ab81c3d94add6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plot</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>af784298c68d6a4c0adce65bfac6a3f3e</anchor>
      <arglist>(Eigen::VectorXd &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initWindow</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a483e2f7607d9128fa94c2d1f1c55854d</anchor>
      <arglist>(int _w, int _h, const char *_name) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a3e239d50abbaa1bc332337e8841f2fdf</anchor>
      <arglist>(int _w, int _h) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>click</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a4f494fe323d66f80dd795958b5c58c48</anchor>
      <arglist>(int _button, int _state, int _x, int _y) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>aaf1323c633c7f5f1f125e8a162d154fe</anchor>
      <arglist>(int _x, int _y) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initGL</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a5ed6a9e23c47c45d545cc29592ccea27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initLights</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a539604adda2e6cc8e514cc433e6e32f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawSkeleton</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a273bfeab3709e3ed24aceb8c442cb5b9</anchor>
      <arglist>(const dynamics::Skeleton *skeleton, const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(0.5), bool useDefaultColor=true) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawEntity</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a8e6ebe51ca04fe71a0205c53737d5741</anchor>
      <arglist>(const dynamics::Entity *entity, const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(0.5), bool useDefaultColor=true) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawBodyNode</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a026496f04bf3647b9ac4e980540cdfef</anchor>
      <arglist>(const dynamics::BodyNode *bodyNode, const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(0.5), bool useDefaultColor=true, bool recursive=false) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawShapeFrame</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>acb47adbe603ad52da4d158f0c9c81786</anchor>
      <arglist>(const dynamics::ShapeFrame *shapeFrame, const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(0.5), bool useDefaultColor=true) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawShape</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>aa928805d5b230264131b38bb49dfbf1d</anchor>
      <arglist>(const dynamics::Shape *shape, const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(0.5)) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPointMasses</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>aaae4ddb6bbc78536c642cff3c4bc21f7</anchor>
      <arglist>(const std::vector&lt; dynamics::PointMass * &gt; pointMasses, const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(0.5), bool useDefaultColor=true) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMarker</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a357e09126427ad28243eea10aa4e6d33</anchor>
      <arglist>(const dynamics::Marker *marker, const Eigen::Vector4d &amp;color=Eigen::Vector4d::Constant(0.5), bool useDefaultColor=true) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mMotionBlurFrequency</name>
      <anchorfile>db/d8f/classdart_1_1gui_1_1MotionBlurSimWindow.html</anchorfile>
      <anchor>a7549b5a91c70a9956953a84f510f1d8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::WorldPtr</type>
      <name>mWorld</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a17abeb350b301503571d125ba1d2f832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mPlayFrame</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a965e0cd4536689bc862205bc848476bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mPlay</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a843dde2a24337c67c70a9f2b046bdfcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSimulating</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a774bf8b65b7b3e1f0a320210e46e84b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShowPointMasses</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a0b7d6df503acf62bd496030ccd4655a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShowMarkers</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>aa5985fa2c00ea209b5b754dcd359fbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; GraphWindow * &gt;</type>
      <name>mGraphWindows</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>ae45ba970bebf1c6b5a8bd33becd83666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Trackball</type>
      <name>mTrackBall</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a4c942b630d04a0e95bccbf84bd413a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mTrans</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ac8402595b842775ed26dde371ff58dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mEye</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a48508a30e4de1fb22bd06e634b5cc351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mUp</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a6b4c9fd4ffa9c72d10abea33ed61088e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mZoom</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a69e0d1a5893daead1ac89aa9c6b02589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mPersp</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ae192f4f9d8f008eba6a1795689367d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mRotate</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a475bc57ebeffa84949439602e73965e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mTranslate</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>aae2c4c90637857acce0cad93430dd448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mZooming</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ae6dcdb24d660877352ad726636bb5ef3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::OpenGLRenderInterface</name>
    <filename>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</filename>
    <base>dart::gui::RenderInterface</base>
    <member kind="function">
      <type></type>
      <name>OpenGLRenderInterface</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a4f4b2ebda8f1ff6e90e9e7fa6f5d5bd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OpenGLRenderInterface</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a4f924636d34a5082fa124babaaf5c8e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>aafebcff79ff962d0afd2365f6c623a51</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a41d41f378070a67388921e42e09a6a5e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewport</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>af1696ae4faa29bc6fa7fde782a76022b</anchor>
      <arglist>(int _x, int _y, int _width, int _height) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getViewport</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a8bf91d9c4cd3ae2c2d52ae33365e45a6</anchor>
      <arglist>(int &amp;_x, int &amp;_y, int &amp;_width, int &amp;_height) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a3722d1d014988b9e88b009f4897712d8</anchor>
      <arglist>(const Eigen::Vector3d &amp;_color) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterial</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ab51aa7d76e0de1c02daf3c374cf480ec</anchor>
      <arglist>(const Eigen::Vector3d &amp;_diffuse, const Eigen::Vector3d &amp;_specular, double _cosinePow) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMaterial</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a5e276a7212a9340049f89970e28a5166</anchor>
      <arglist>(Eigen::Vector3d &amp;_diffuse, Eigen::Vector3d &amp;_specular, double &amp;_cosinePow) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultMaterial</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a654a5d890f44cd8ef1bec00c14ec24d6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushMatrix</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>af7e20f484e318926e7b64620185167ee</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popMatrix</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a767d21b02715a63379a29fd5ca8387e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushName</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>afc025dc3d7123d40d45a776c9787a89b</anchor>
      <arglist>(int _id) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popName</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a37e5ed48b9ae1e1c89dd894cc1a25fd3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a35d9a2da6a974e944c3c2a7c7f144c05</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a3759f580b3b4eae222253b0dd8db00c2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis, double _rad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a0948410845a14e50238bb2c9958d116e</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_transform) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a0671cef053ce74925dea8003b3c46455</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileList</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a2905dfcc06417b57aa8c6f8ebd657549</anchor>
      <arglist>(dynamics::Skeleton *_skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileList</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a6ad2a7c27928b9c942e14cd49ab2f720</anchor>
      <arglist>(dynamics::BodyNode *_node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileList</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a1957e857cf8383bd20ebf2c3205a4b10</anchor>
      <arglist>(dynamics::Shape *_shape)</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>compileList</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a23b63ae4c6dafd9c0fba9bb6cc6a5f7b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawSphere</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ac39c6eab45a0ed18d99540ae61ba2ee4</anchor>
      <arglist>(double radius, int slices=16, int stacks=16) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawMultiSphere</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ab8fd4f7ca7d7add9ffa676c7e95fd01d</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; double, Eigen::Vector3d &gt;&gt; &amp;spheres, int slices=16, int stacks=16) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipsoid</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a1f67649a1227b69e2d508d36b11559be</anchor>
      <arglist>(const Eigen::Vector3d &amp;_diameters) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawCube</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a2f8254118bbe2dd681ac2343b3b0d654</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawOpenCylinder</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>aa383cd50129c33fb4265a3776511399a</anchor>
      <arglist>(double baseRadius, double topRadius, double height, int slices=16, int stacks=16) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawCylinder</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ac2566ebfb34cef9fd0df898cd7dad59d</anchor>
      <arglist>(double _radius, double _height, int slices=16, int stacks=16) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawCapsule</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a124b51e50a65bb76c9c5807b0e41ab04</anchor>
      <arglist>(double radius, double height) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawCone</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>af364d3bffb35f5055dee4030df7cf1cb</anchor>
      <arglist>(double radius, double height) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawMesh</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ad41c0836c7812f37aaf0ddfe7e80d6f8</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawSoftMesh</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a66a3e95b106d6c188d0aaad246be5156</anchor>
      <arglist>(const aiMesh *mesh) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawList</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a26a7ec99f035480d49bb3d9c4e6a2e6a</anchor>
      <arglist>(GLuint index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLineSegments</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ac66ff46538078900ff1436a8d1599206</anchor>
      <arglist>(const std::vector&lt; Eigen::Vector3d &gt; &amp;_vertices, const common::aligned_vector&lt; Eigen::Vector2i &gt; &amp;_connections) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPenColor</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ab266aa8ddbb972fe59c8889230b6a3f3</anchor>
      <arglist>(const Eigen::Vector4d &amp;_col) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPenColor</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a0d17014807d535477eba0067fc95ea2f</anchor>
      <arglist>(const Eigen::Vector3d &amp;_col) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineWidth</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ac223f36a9534ac7f83b525f158ff201c</anchor>
      <arglist>(float _width) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToImage</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a6365a08a73fbfba7a2a7f781ccdbb7f2</anchor>
      <arglist>(const char *_filename, DecoBufferType _buffType=BT_Back) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readFrameBuffer</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a8dfc4aa9dae72246577747255c869ed7</anchor>
      <arglist>(DecoBufferType _buffType, DecoColorChannel _ch, void *_pixels) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawList</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a47bda874dd1ba1e01697540947f80cc8</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>compileDisplayList</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>ab285e4aba811f461a482dc29466775ff</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>color4_to_float4</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>adce44f0bbe89e41b137eeea321dce79a</anchor>
      <arglist>(const aiColor4D *c, float f[4])</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>set_float4</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a6655b4db1e7dfaf3e6c6a4ac4904c4dd</anchor>
      <arglist>(float f[4], float a, float b, float c, float d)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>applyMaterial</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>aa221aa7e493676f96a1c4c490d7e680f</anchor>
      <arglist>(const struct aiMaterial *mtl)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>recursiveRender</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ae18eb5cc3b48270fb1a3dc0537b6fe26</anchor>
      <arglist>(const struct aiScene *sc, const struct aiNode *nd)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportX</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a47b87a84823da5335da4a1500ac0df56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportY</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a905a4b0cb126d345eddbca2e2772bc01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportWidth</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a9815669fad7fdeea82e215941953a2c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportHeight</name>
      <anchorfile>dc/dc5/classdart_1_1gui_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>aaa6dcffae9856e492581e73b55632bd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::RenderInterface</name>
    <filename>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderInterface</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a3bef52a49d27315e1b8549dcf1e850f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RenderInterface</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>afe9ccde30b196d00d19f77c8376d2710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a3317dac5d7e2b78801fb5b1adb99f102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>af76cc8f6df821f4374a2f4b1da6b6fb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setViewport</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a9faa6d10d6f67c8e1275b0c3644ddc84</anchor>
      <arglist>(int _x, int _y, int _width, int _height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getViewport</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a6799c59d0d771e1a2fb3028f651c8168</anchor>
      <arglist>(int &amp;_x, int &amp;_y, int &amp;_width, int &amp;_height) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a0b1276376cbd46bc7d19c51119581d49</anchor>
      <arglist>(const Eigen::Vector3d &amp;_color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaterial</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>abccf000c7c8bc686e8e2e589203f0f57</anchor>
      <arglist>(const Eigen::Vector3d &amp;_diffuse, const Eigen::Vector3d &amp;_specular, double _cosinePow)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMaterial</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a26b94e00822cd1e28acf193993422e75</anchor>
      <arglist>(Eigen::Vector3d &amp;_diffuse, Eigen::Vector3d &amp;_specular, double &amp;_cosinePow) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultMaterial</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a8cd89010b88c95160166130d0306341d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushMatrix</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a18700d926df9d8c918ac8089daef199b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popMatrix</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a933598c06f0267346fc538d13ff73b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushName</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a16ab9e9768be16ca1c807c1440ed5ba2</anchor>
      <arglist>(int _id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popName</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a6fcd1f196d56762530f11c2183f343a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translate</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a6c4e9eaf1ce45dee239d14aa4d775cd8</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rotate</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>ad73a5c2eb22ee0da5bd160718ba1803d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis, double _rad)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>aeffe527e87a5d375fb2e1d6d85433b6d</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_transform)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>ad0653cff3db2be7cb43ba7e6ec828bab</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawSphere</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a20e0cef896a002dfc0e38149d7d14f3c</anchor>
      <arglist>(double radius, int slices=16, int stacks=16)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMultiSphere</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a7a494c475a0b0b44936f3631ebcf7c02</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; double, Eigen::Vector3d &gt;&gt; &amp;spheres, int slices=16, int stacks=16)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawEllipsoid</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a46cdd01c2c3b203fdd9305bc89832e1f</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCube</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a90c14bc7ec645a4049b7458939714603</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawOpenCylinder</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a3146a3ff71b16ef7cd27e057bd3d50d6</anchor>
      <arglist>(double baseRadius, double topRadius, double height, int slices=16, int stacks=16)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCylinder</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a27dc2367724a4da606250f43e89a8862</anchor>
      <arglist>(double _radius, double _height, int slices=16, int stacks=16)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCapsule</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a4a5620c8b8dcbfd06f59dc49c9a97b3d</anchor>
      <arglist>(double _radius, double _height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCone</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a72f92ff83b123940de34c437179d873c</anchor>
      <arglist>(double _radius, double _height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMesh</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a8fb3c2b1db3e9600b7a0f788c1052b8d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawSoftMesh</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a68341839f831c2c5e8a56611c93c18c9</anchor>
      <arglist>(const aiMesh *mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLineSegments</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>af66efe791eb8ea67d5251aa0b669036c</anchor>
      <arglist>(const std::vector&lt; Eigen::Vector3d &gt; &amp;_vertices, const common::aligned_vector&lt; Eigen::Vector2i &gt; &amp;_connections)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPenColor</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a8991b5411b314d29bce08451ca9b771b</anchor>
      <arglist>(const Eigen::Vector4d &amp;_col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPenColor</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>affbcdd9be962f9ceaa059e37a73775c5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineWidth</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>a1a0f119484e96729e2131f19c8e3992a</anchor>
      <arglist>(float _width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveToImage</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>aaab9058d7ca7632bcb2972fe9c6a48df</anchor>
      <arglist>(const char *_filename, DecoBufferType _buffType=BT_Back)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readFrameBuffer</name>
      <anchorfile>d2/d6f/classdart_1_1gui_1_1RenderInterface.html</anchorfile>
      <anchor>aefa18be480167b36ec02104a5e042fd1</anchor>
      <arglist>(DecoBufferType _buffType, DecoColorChannel _ch, void *_pixels)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::SimWindow</name>
    <filename>d9/d05/classdart_1_1gui_1_1SimWindow.html</filename>
    <base>dart::gui::Win3D</base>
    <member kind="function">
      <type></type>
      <name>SimWindow</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a0caa9d9d58d0c346092c396d8a18026d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimWindow</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a84a5efcca016c271be0ffa6b20f50906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>displayTimer</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a6e60afdb7ba308390dc3d18489c38e8b</anchor>
      <arglist>(int _val) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a5dda87fb50458940dba42d9a5a245489</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::SoftSimWindow</name>
    <filename>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</filename>
    <base>dart::gui::SimWindow</base>
    <member kind="function">
      <type></type>
      <name>SoftSimWindow</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>a5d7b69f0d4d5c3f831494faaf5892743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftSimWindow</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>ac185dec9bbf39e608fda0ead16683a1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyboard</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>ac4e1cd1751282aaf40fbc6a6bcc2f03d</anchor>
      <arglist>(unsigned char key, int x, int y) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShowPointMasses</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>ae4a3794f9e547aad6b1064b42d28084b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShowMeshs</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>aa7fd61b498c976d3a295de480f262c10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::Trackball</name>
    <filename>de/d9b/classdart_1_1gui_1_1Trackball.html</filename>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>Trackball</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a4436cc7e00488107b108fa9672acb8cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Trackball</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a10b89406848a04fc067a3b5c0dab2751</anchor>
      <arglist>(const Eigen::Vector2d &amp;_center, double _radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startBall</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ac1c83a44d3f391ff95fd94617548cc99</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBall</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a0947e098c8a03fe1b8e4b00f95aff40c</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyGLRotation</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a9947356fefc862df7948a575ddd469ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a38f979f06c568457c3d55a0ce9e74eb0</anchor>
      <arglist>(int _winWidth, int _winHeight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackball</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ace692a981533cd48b1a9f992517463f8</anchor>
      <arglist>(const Eigen::Vector2d &amp;_center, const double _radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a90dda8bbc6b14bec4a7d34844b42ad43</anchor>
      <arglist>(const Eigen::Vector2d &amp;_center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>aa51687a618a11a5d6d62b3785cf313cc</anchor>
      <arglist>(const double _radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuaternion</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a374f8ccfb35f54ce6723467872da8e43</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Quaterniond</type>
      <name>getCurrQuat</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a5c5ba38c2786f5be125a0a84c5f30b72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>getRotationMatrix</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ac23adb72870c7347de8dcf539879d56c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getCenter</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a33d4112d811dbfe241dc0c0ef0a6a3bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a394239a2ae0efec7281a9f518bab0dc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mouseOnSphere</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a9c5665b4a32f0fe6168401415cb8e559</anchor>
      <arglist>(double _mouseX, double _mouseY) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Eigen::Quaterniond</type>
      <name>quatFromVectors</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ae06b046bb599245ebce8f6f79d63eab0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_from, const Eigen::Vector3d &amp;_to) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector2d</type>
      <name>mCenter</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a21f6d6f9bbb1e6dcff44729d3c3c408b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a88ef4d3274fba5bd9d8fbc376d68094c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mStartPos</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a002ec153aea7cceec825aaea5648bcbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Quaterniond</type>
      <name>mCurrQuat</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a26fffcaef9a39dfcb0560bc52433c2db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::Win2D</name>
    <filename>d2/ded/classdart_1_1gui_1_1Win2D.html</filename>
    <base>dart::gui::GlutWindow</base>
    <member kind="function">
      <type></type>
      <name>Win2D</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a36842239e7e986d2d36a1ecaa993fd60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyboard</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a9db4032745e493cd8a8c217af7286bb2</anchor>
      <arglist>(unsigned char _key, int _x, int _y) override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a73d666aa914c774f330dab2748eb2229</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::Win3D</name>
    <filename>d9/df5/classdart_1_1gui_1_1Win3D.html</filename>
    <base>dart::gui::GlutWindow</base>
    <member kind="function">
      <type></type>
      <name>Win3D</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a6edb95192d918478fd0df82ebcdf0a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyboard</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ac455a0b5ecacf694068e51bc960dec52</anchor>
      <arglist>(unsigned char _key, int _x, int _y) override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a0ed33795c7172f7769ab66a7ab14bcea</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::gui::osg</name>
    <filename>d2/dc1/namespacedart_1_1gui_1_1osg.html</filename>
    <namespace>dart::gui::osg::render</namespace>
    <namespace>dart::gui::osg::sfs_dnd</namespace>
    <class kind="struct">dart::gui::osg::PickInfo</class>
    <class kind="class">dart::gui::osg::DefaultEventHandler</class>
    <class kind="class">dart::gui::osg::InteractiveFrameMouseEvent</class>
    <class kind="class">dart::gui::osg::InteractiveToolDnD</class>
    <class kind="class">dart::gui::osg::DragAndDrop</class>
    <class kind="class">dart::gui::osg::SimpleFrameDnD</class>
    <class kind="class">dart::gui::osg::SimpleFrameShapeDnD</class>
    <class kind="class">dart::gui::osg::InteractiveFrameDnD</class>
    <class kind="class">dart::gui::osg::BodyNodeDnD</class>
    <class kind="struct">dart::gui::osg::ImGuiNewFrameCallback</class>
    <class kind="struct">dart::gui::osg::ImGuiDrawCallback</class>
    <class kind="class">dart::gui::osg::ImGuiHandler</class>
    <class kind="class">dart::gui::osg::ImGuiViewer</class>
    <class kind="class">dart::gui::osg::ImGuiWidget</class>
    <class kind="class">dart::gui::osg::AboutWidget</class>
    <class kind="class">dart::gui::osg::InteractiveTool</class>
    <class kind="class">dart::gui::osg::InteractiveFrame</class>
    <class kind="class">dart::gui::osg::MouseEventHandler</class>
    <class kind="class">dart::gui::osg::ShapeFrameNode</class>
    <class kind="class">dart::gui::osg::SupportPolygonVisual</class>
    <class kind="class">dart::gui::osg::TrackballManipulator</class>
    <class kind="class">dart::gui::osg::SaveScreen</class>
    <class kind="class">dart::gui::osg::ViewerAttachmentCallback</class>
    <class kind="class">dart::gui::osg::ViewerAttachment</class>
    <class kind="class">dart::gui::osg::Viewer</class>
    <class kind="class">dart::gui::osg::WorldNodeCallback</class>
    <class kind="class">dart::gui::osg::WorldNode</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; InteractiveFrame &gt;</type>
      <name>InteractiveFramePtr</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a0e2e2dfb72517d1a3aa51e2f7d4a4b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MouseButton</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LEFT_MOUSE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1af88151c768cce5e2ffa541e4b1b86616</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RIGHT_MOUSE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1a4508d633ce42ad6118fb7679bae25789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MIDDLE_MOUSE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1a0f39746d3bea59e11b837ed6a6519084</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NUM_MOUSE_BUTTONS</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a1bff997d72f974fa7f0cb9872d7a7cd1a4c1a9f6cb2d7b7f6935026e3f440eabc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MouseButtonEvent</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_PUSH</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6acd9003cb66f1b671c8af7db399ad9634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_DRAG</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6a3abec4b6e6e2b4f2d0f4d0b44962f37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_RELEASE</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6a5797265226f59048f46b8f0fa6e6486c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BUTTON_NOTHING</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a68f6eba62440ea0f88f532ed7a4db6b6afcabcdedb4f93e49840afab37e63566e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConstraintType</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNCONSTRAINED</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17a8a11232bac51e07d22936d3af03516a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LINE_CONSTRAINT</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17aab1d8a24cec7f4772ca7d6d068c00f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PLANE_CONSTRAINT</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17a11e4616fb92b01558aa2d544b4e9b4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CUSTOM_CONSTRAINT</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17a3d85d0730e442c3d97e91ea824709475</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NUM_CONSTRAINT_TYPES</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5f5d8f77f2710b1e019a429540dadd17adcaf62cbecb880e7d7edc76f3f66a194</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>wasActive</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a3556b9a259d7fbad5ac33e15ddbaef71</anchor>
      <arglist>(MouseButtonEvent event)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>assignEventToButtons</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a586d152f84b6682d19c0a33a99e2ed13</anchor>
      <arglist>(MouseButtonEvent(&amp;mLastButtonEvent)[NUM_MOUSE_BUTTONS], const ::osgGA::GUIEventAdapter &amp;ea)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ImGui_RenderDrawLists</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a030e354dcfccb6382e9653d68fc70575</anchor>
      <arglist>(ImDrawData *draw_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>warnAboutUnsuccessfulCast</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a35ebeaf15370386db122fe395203f181</anchor>
      <arglist>(const std::string &amp;shapeType, const std::string &amp;entityName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static sfs_dnd::iterator</type>
      <name>getSimpleFrameShapeDnDFromMultimap</name>
      <anchorfile>d2/dc1/namespacedart_1_1gui_1_1osg.html</anchorfile>
      <anchor>a5e83444b359d663f58e874fb5043ccf4</anchor>
      <arglist>(dart::dynamics::SimpleFrame *_frame, dart::dynamics::Shape *_shape, std::multimap&lt; dart::dynamics::Shape *, SimpleFrameShapeDnD * &gt; &amp;map)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::gui::osg::PickInfo</name>
    <filename>d1/d33/structdart_1_1gui_1_1osg_1_1PickInfo.html</filename>
    <member kind="variable">
      <type>dart::dynamics::ShapeFrame *</type>
      <name>frame</name>
      <anchorfile>d1/d33/structdart_1_1gui_1_1osg_1_1PickInfo.html</anchorfile>
      <anchor>a0b3d74775491105708cd5068021d0425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; dart::dynamics::Shape &gt;</type>
      <name>shape</name>
      <anchorfile>d1/d33/structdart_1_1gui_1_1osg_1_1PickInfo.html</anchorfile>
      <anchor>a7b39de72607370ac2c55dc9719db0889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>position</name>
      <anchorfile>d1/d33/structdart_1_1gui_1_1osg_1_1PickInfo.html</anchorfile>
      <anchor>acae9916abaa1ea1e43f94cfa60e3ded4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>normal</name>
      <anchorfile>d1/d33/structdart_1_1gui_1_1osg_1_1PickInfo.html</anchorfile>
      <anchor>a249fc3f4e1f29c80d153bb17183772db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::DefaultEventHandler</name>
    <filename>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <base virtualness="virtual">dart::common::Observer</base>
    <member kind="function">
      <type></type>
      <name>DefaultEventHandler</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a4db6c093e3a754498e5a5e52b06759b0</anchor>
      <arglist>(Viewer *_viewer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DefaultEventHandler</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>ac1fe598826e1e8db5734d47734563c98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MouseButtonEvent</type>
      <name>getButtonEvent</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a224f3f5d9b845b7a264f0fd7c17c169e</anchor>
      <arglist>(MouseButton button) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getModKeyMask</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>aeb4f6a1369724075d4502ce0e7fae1e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getWindowCursorX</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>ac724c1851ad5d34c97490ee0c50e9688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getWindowCursorY</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>aeaccd6d639751ad85c82af9a35837243</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getDeltaCursor</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a2fbbe97aa58f8a8421651af4b13cd13e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_fromPosition, ConstraintType _constraint=UNCONSTRAINED, const Eigen::Vector3d &amp;_constraintVector=Eigen::Vector3d::UnitZ()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNearAndFarPointUnderCursor</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a611ea9a282a71054504e4e232d12a895</anchor>
      <arglist>(Eigen::Vector3d &amp;near, Eigen::Vector3d &amp;far, double distance=1.0) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; PickInfo &gt; &amp;</type>
      <name>getButtonPicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>aff5dfc4b8e526d24fff2bf1436be0321</anchor>
      <arglist>(MouseButton button, MouseButtonEvent event) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; PickInfo &gt; &amp;</type>
      <name>getMovePicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a5a3b2c7f54354a77a36bfd2938f3a358</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppressButtonPicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a3f05ac989a622a43c1040191ffaa6a95</anchor>
      <arglist>(MouseButton button, MouseButtonEvent event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suppressMovePicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a4f862eeaf622e5eb84d2f1bfccb331d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activateButtonPicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a55c136ea8d8717327d8a21d53940ccf5</anchor>
      <arglist>(MouseButton button, MouseButtonEvent event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activateMovePicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a29cb2f8099f4906de4b64c27b3876f68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pick</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a32eac6d074c3bb2087347edf5c95f3a5</anchor>
      <arglist>(std::vector&lt; PickInfo &gt; &amp;infoVector, const ::osgGA::GUIEventAdapter &amp;ea)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMouseEventHandler</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>ab225b2b21ac232209fdc2ba61fd38f83</anchor>
      <arglist>(MouseEventHandler *handler)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; MouseEventHandler * &gt; &amp;</type>
      <name>getMouseEventHandlers</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>ab4e79a462c6ae065e653de7b8eaee85c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handle</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a94d1cb9d7a6462e1e5324f4e4a1ca6e9</anchor>
      <arglist>(const ::osgGA::GUIEventAdapter &amp;ea,::osgGA::GUIActionAdapter &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>triggerMouseEventHandlers</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a3a601129b329a0e49dda78c027ffb262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>eventPick</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a8d1a3d90a07ab114c57d57226e5c5d4c</anchor>
      <arglist>(const ::osgGA::GUIEventAdapter &amp;ea)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearButtonEvents</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a1c4265d399d2c9bd67137128aa09191a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a8df8b96a14ecb92b502b68c2da2fd3be</anchor>
      <arglist>(const dart::common::Subject *_subject) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Viewer *</type>
      <name>mViewer</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>af137b3bc59ac27d419b4cbba25c5eee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; MouseEventHandler * &gt;</type>
      <name>mMouseEventHandlers</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a3830a69e4555a6d4b69c417baa2294ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PickInfo &gt;</type>
      <name>mButtonPicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>ac65fc35ca28b681ac325f51052a5a091</anchor>
      <arglist>[NUM_MOUSE_BUTTONS][BUTTON_NOTHING]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSuppressButtonPicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>adec05aa4d28002aac99dce56546680ca</anchor>
      <arglist>[NUM_MOUSE_BUTTONS][BUTTON_NOTHING]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PickInfo &gt;</type>
      <name>mMovePicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a08f3b456130e37ceddf18d0447191a09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSuppressMovePicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a3e711f872435ff06586a6743a61c1267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PickInfo &gt;</type>
      <name>mTempPicks</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a52f5ac57cbc5fb8f8991770f8972cf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MouseButtonEvent</type>
      <name>mLastButtonEvent</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>ae38de229f74f05b0435fa2c5021331d4</anchor>
      <arglist>[NUM_MOUSE_BUTTONS]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector2d</type>
      <name>mLastCursorPosition</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>a7790884dc5061eb3f8c9655f244b93a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mLastModKeyMask</name>
      <anchorfile>da/db3/classdart_1_1gui_1_1osg_1_1DefaultEventHandler.html</anchorfile>
      <anchor>afacb8001a4ca1a483d3c6c9125d2de03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::InteractiveFrameMouseEvent</name>
    <filename>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</filename>
    <base>dart::gui::osg::MouseEventHandler</base>
    <member kind="function">
      <type></type>
      <name>InteractiveFrameMouseEvent</name>
      <anchorfile>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</anchorfile>
      <anchor>a0d0d133a0fa25e32e26778ec47137710</anchor>
      <arglist>(InteractiveFrame *frame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</anchorfile>
      <anchor>a67d17c476846b0807a2fa0aec9ea8cdf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</anchorfile>
      <anchor>aa6e2a039e26e7b8b984153a5959f4fa9</anchor>
      <arglist>(const Subject *_subject) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InteractiveFrame *</type>
      <name>mFrame</name>
      <anchorfile>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</anchorfile>
      <anchor>a0f2e3dcb4761a1fe987103f13f5cf773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mHighlighting</name>
      <anchorfile>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</anchorfile>
      <anchor>a3cd7ac120eb9f45c68875e1722f6d56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mTool</name>
      <anchorfile>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</anchorfile>
      <anchor>ae1467e4f23aee6cc483e7b1a30435de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mCoordinate</name>
      <anchorfile>da/d38/classdart_1_1gui_1_1osg_1_1InteractiveFrameMouseEvent.html</anchorfile>
      <anchor>a300c332152c365adecd564414a090a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DefaultEventHandler *</type>
      <name>mEventHandler</name>
      <anchorfile>d5/d0b/classdart_1_1gui_1_1osg_1_1MouseEventHandler.html</anchorfile>
      <anchor>a0574619912a727ae2313cd62ff9b1373</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::InteractiveToolDnD</name>
    <filename>d1/ddc/classdart_1_1gui_1_1osg_1_1InteractiveToolDnD.html</filename>
    <base>dart::gui::osg::SimpleFrameDnD</base>
    <member kind="enumeration">
      <type></type>
      <name>RotationOption</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>aa5049ac2589c4f25d705c424fcd9d6bc</anchor>
      <arglist></arglist>
      <enumvalue file="db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html" anchor="aa5049ac2589c4f25d705c424fcd9d6bca41d2442b56c54e2f22c379271eecbc75">HOLD_MODKEY</enumvalue>
      <enumvalue file="db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html" anchor="aa5049ac2589c4f25d705c424fcd9d6bca67aa7694f37e86d4a813d2b0d1dda3a4">ALWAYS_ON</enumvalue>
      <enumvalue file="db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html" anchor="aa5049ac2589c4f25d705c424fcd9d6bcae42fc64a3f94477661688befc212293c">ALWAYS_OFF</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>InteractiveToolDnD</name>
      <anchorfile>d1/ddc/classdart_1_1gui_1_1osg_1_1InteractiveToolDnD.html</anchorfile>
      <anchor>a48ddeee6547864d97cf331d1f715d446</anchor>
      <arglist>(Viewer *viewer, InteractiveFrame *frame, InteractiveTool *tool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>d1/ddc/classdart_1_1gui_1_1osg_1_1InteractiveToolDnD.html</anchorfile>
      <anchor>a63ef9e628aad4d6011af93d67d478694</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InteractiveToolDnD</name>
      <anchorfile>d1/ddc/classdart_1_1gui_1_1osg_1_1InteractiveToolDnD.html</anchorfile>
      <anchor>af34667334cafd035b2281806a54b6659</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::SimpleFrame *</type>
      <name>getSimpleFrame</name>
      <anchorfile>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</anchorfile>
      <anchor>a17cd4616d398a445d1a8f05650055b0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</anchorfile>
      <anchor>a577dfd7101984acbefdc36f23f5919b5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveState</name>
      <anchorfile>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</anchorfile>
      <anchor>aa7129786b40ccc038e5a92358fa1cf97</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::Entity *</type>
      <name>getEntity</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a0c2d99d0ed47af5d8ec7534572efaf50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObstructable</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a599ac96f2160704617ca01fe4ad2c8b0</anchor>
      <arglist>(bool _obstructable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isObstructable</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a066d429b8e645a1f73ee5c4206f224da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>release</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>ac22e724a2917b853d5ef81717c5c4371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector3d</type>
      <name>getConstrainedDx</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>ae30744f7a4a7de97e2979d09e4196608</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::AngleAxisd</type>
      <name>getConstrainedRotation</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a54bf05bf249ace5667633134a852012a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unconstrain</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>ad4bfd0cce293cff907af8f2c06862e6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constrainToLine</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a93d80a852b135dca7f057267c6a695d9</anchor>
      <arglist>(const Eigen::Vector3d &amp;slope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constrainToPlane</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a201947bafa4c9cefb1eb67ec36a96729</anchor>
      <arglist>(const Eigen::Vector3d &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMoving</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>aa161f190c93bf9ccadb74eb39a567875</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotationOption</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a0a2af5b97e9a850da3eae1824c256160</anchor>
      <arglist>(RotationOption option)</arglist>
    </member>
    <member kind="function">
      <type>RotationOption</type>
      <name>getRotationOption</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a4a898a74d2b354856ce940b9db431729</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotationModKey</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>ae79f8b82d06f3abf2056ee61bfc24063</anchor>
      <arglist>(::osgGA::GUIEventAdapter::ModKeyMask rotationModKey)</arglist>
    </member>
    <member kind="function">
      <type>::osgGA::GUIEventAdapter::ModKeyMask</type>
      <name>getRotationModKey</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a1d1a9c45f288953aaeea3376ef34fb40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a4dc0a0d658a6e51aa3d5a471399f5163</anchor>
      <arglist>(const dart::common::Subject *subscription) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::sub_ptr&lt; InteractiveTool &gt;</type>
      <name>mTool</name>
      <anchorfile>d1/ddc/classdart_1_1gui_1_1osg_1_1InteractiveToolDnD.html</anchorfile>
      <anchor>aed0c401f582f0065e238f7b0507bd292</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::SimpleFrame *</type>
      <name>mFrame</name>
      <anchorfile>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</anchorfile>
      <anchor>aaa180da6cfb9b83f567d74bde9f28c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::AngleAxisd</type>
      <name>mSavedRotation</name>
      <anchorfile>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</anchorfile>
      <anchor>a8e8214718456294565780c407d2bcac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Viewer *</type>
      <name>mViewer</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>ab94fee4db770ad990785b5aa0c1a0032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::Entity *</type>
      <name>mEntity</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>ae8827b8226af62217e1c55f6c290fe94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mPickedPosition</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a2102e640427bf86342bbca926038d039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mVector</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>ad6cc44c4df671f182eddb8713905770a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mPivot</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a08ea622f6d34fc0a8e3fbef57c88f476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ConstraintType</type>
      <name>mConstraintType</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a9f9eea6a7b46ef0c513f360b483b4754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAmObstructable</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>aec42741f3e41fe077a49ad9c31c1fa0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAmMoving</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a307d0e9b24f5e17f5fb9d5bcf387ca22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RotationOption</type>
      <name>mRotationOption</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>aa722c8c330404bafcc6aafbceffc9a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osgGA::GUIEventAdapter::ModKeyMask</type>
      <name>mRotationModKey</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a18ea835eb6ff6181cda968f50c63d60f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::DragAndDrop</name>
    <filename>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</filename>
    <base>dart::common::Subject</base>
    <base>dart::common::Observer</base>
    <member kind="function">
      <type></type>
      <name>DragAndDrop</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>adfab895c648c10071025cb518173776d</anchor>
      <arglist>(Viewer *viewer, dart::dynamics::Entity *entity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DragAndDrop</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a99cd7b8e7ea713552ea1a17bffd7ecd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a093c272d039401f56d38e2362f20d0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>move</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a478f915140fb19244135ebeff813686f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>saveState</name>
      <anchorfile>db/d5f/classdart_1_1gui_1_1osg_1_1DragAndDrop.html</anchorfile>
      <anchor>a26762a3dc1dbedc812dab8bdd8b40130</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::SimpleFrameDnD</name>
    <filename>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</filename>
    <base>dart::gui::osg::DragAndDrop</base>
    <member kind="function">
      <type></type>
      <name>SimpleFrameDnD</name>
      <anchorfile>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</anchorfile>
      <anchor>af3c607a794522e4174e0981c9ee35db0</anchor>
      <arglist>(Viewer *viewer, dart::dynamics::SimpleFrame *frame)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleFrameDnD</name>
      <anchorfile>dd/d1a/classdart_1_1gui_1_1osg_1_1SimpleFrameDnD.html</anchorfile>
      <anchor>ab78370a9d0d4352dd88a23b950fc6012</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::SimpleFrameShapeDnD</name>
    <filename>d3/da8/classdart_1_1gui_1_1osg_1_1SimpleFrameShapeDnD.html</filename>
    <base>dart::gui::osg::SimpleFrameDnD</base>
    <member kind="function">
      <type></type>
      <name>SimpleFrameShapeDnD</name>
      <anchorfile>d3/da8/classdart_1_1gui_1_1osg_1_1SimpleFrameShapeDnD.html</anchorfile>
      <anchor>a03d72243be9ab1ee49f719d0af293a96</anchor>
      <arglist>(Viewer *viewer, dart::dynamics::SimpleFrame *frame, dart::dynamics::Shape *shape)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleFrameShapeDnD</name>
      <anchorfile>d3/da8/classdart_1_1gui_1_1osg_1_1SimpleFrameShapeDnD.html</anchorfile>
      <anchor>a9bb6b273ad3804c0f9bda06907ad2822</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::Shape *</type>
      <name>getShape</name>
      <anchorfile>d3/da8/classdart_1_1gui_1_1osg_1_1SimpleFrameShapeDnD.html</anchorfile>
      <anchor>aa008f22d7675c4a5aa27bede5db13f0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>d3/da8/classdart_1_1gui_1_1osg_1_1SimpleFrameShapeDnD.html</anchorfile>
      <anchor>a9ac9b854c01f79ed6b7fb2a8b7592335</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>d3/da8/classdart_1_1gui_1_1osg_1_1SimpleFrameShapeDnD.html</anchorfile>
      <anchor>a5eb2205da64731b4b715a68f5af69e5f</anchor>
      <arglist>(const dart::common::Subject *subscription) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::Shape *</type>
      <name>mShape</name>
      <anchorfile>d3/da8/classdart_1_1gui_1_1osg_1_1SimpleFrameShapeDnD.html</anchorfile>
      <anchor>a7a3c2e932d5d1b829ef9398459b2ec3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::InteractiveFrameDnD</name>
    <filename>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</filename>
    <base>dart::gui::osg::DragAndDrop</base>
    <member kind="function">
      <type></type>
      <name>InteractiveFrameDnD</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>ac2ee9a622b2d8068e233b8e9620b8597</anchor>
      <arglist>(Viewer *viewer, dart::gui::osg::InteractiveFrame *frame)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InteractiveFrameDnD</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>a37b6aa99ed2543ffcef3918018a628e2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>InteractiveFrame *</type>
      <name>getFrame</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>aed4529c03100a095c047607f5a636c27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>ac144971918159737645ef1f9fa4808d8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>a8fc7c2fc4d1d4665c646b4c1f8167a84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveState</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>a339f562d2dda6c1bbf143eab0cd28bc3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DragAndDrop * &gt;</type>
      <name>mDnDs</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>a966f1367afb3624bdf4dd18bd517aedb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InteractiveFrame *</type>
      <name>mInteractiveFrame</name>
      <anchorfile>dc/d88/classdart_1_1gui_1_1osg_1_1InteractiveFrameDnD.html</anchorfile>
      <anchor>a6ccc5b5553a1f73d7f71f03051a92052</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::BodyNodeDnD</name>
    <filename>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</filename>
    <base>dart::gui::osg::DragAndDrop</base>
    <member kind="function">
      <type></type>
      <name>BodyNodeDnD</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a42c20b488fb4f7334780df70f12530e2</anchor>
      <arglist>(Viewer *viewer, dart::dynamics::BodyNode *bn, bool useExternalIK=true, bool useWholeBody=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BodyNodeDnD</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>ac5135ff3eda8e9d26333952f1a6428ac</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>aaecf0f8347dfef9cb3ab774a585ac725</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a08308103cc96009e213419d7f430710e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>abfbe1ecc122a151ffa4819fd3032d29c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveState</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a91696a3402d9c33f6c36eed75fb13567</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>add1d8c302a113868c8f792aa719a853d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useExternalIK</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>afa4e7626997670b2c7bee8fcd451c100</anchor>
      <arglist>(bool external)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingExternalIK</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>af00cd8515288097e15751eb4554d45ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useWholeBody</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a632d6294669a681bad5279c6f92a5024</anchor>
      <arglist>(bool wholeBody)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingWholeBody</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a1ece02f07b402f55f7dec70acd54d986</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreserveOrientationModKey</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a5ea33d70df870c67e6b0e494e214ee28</anchor>
      <arglist>(::osgGA::GUIEventAdapter::ModKeyMask modkey)</arglist>
    </member>
    <member kind="function">
      <type>::osgGA::GUIEventAdapter::ModKeyMask</type>
      <name>getPreserveOrientationModKey</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>ae97802116c68254892036da5fe228e7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointRestrictionModKey</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a39447718907dfdb027a1a3840844693e</anchor>
      <arglist>(::osgGA::GUIEventAdapter::ModKeyMask modkey)</arglist>
    </member>
    <member kind="function">
      <type>::osgGA::GUIEventAdapter::ModKeyMask</type>
      <name>getJointRestrictionModKey</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a003d7689d2a6ebcd6c8d6e523bc02cd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::WeakBodyNodePtr</type>
      <name>mBodyNode</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a7e4eb57a25b6d81ee83c7f995d3405d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::InverseKinematicsPtr</type>
      <name>mIK</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>ae5f30892c42e3f804a97efccb1affbc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mSavedGlobalOffset</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>abad92565a7c1b46756ecc5c5a7a4d8d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mSavedLocalOffset</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>aa2759dab753abaa54833dcee606b09c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::AngleAxisd</type>
      <name>mSavedRotation</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a2c5f92a6f0f87e5f149447721fed1dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mUseExternalIK</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>aaf94b3534d0365c5a1055495e52f6313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mUseWholeBody</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a8af254f0215a048a00d0d48f057148fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osgGA::GUIEventAdapter::ModKeyMask</type>
      <name>mPreserveOrientationModKey</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a38de7a67cd762e49dd6c6a28b4fca7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osgGA::GUIEventAdapter::ModKeyMask</type>
      <name>mJointRestrictionModKey</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a65d158013334eac1d28ddeb4cd4e7241</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mAdditionalBodyNodes</name>
      <anchorfile>d2/d22/classdart_1_1gui_1_1osg_1_1BodyNodeDnD.html</anchorfile>
      <anchor>a3f6490bb8263f48d244e4652f9b7c44d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::gui::osg::ImGuiNewFrameCallback</name>
    <filename>d4/db2/structdart_1_1gui_1_1osg_1_1ImGuiNewFrameCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>ImGuiNewFrameCallback</name>
      <anchorfile>d4/db2/structdart_1_1gui_1_1osg_1_1ImGuiNewFrameCallback.html</anchorfile>
      <anchor>af58fdcde825d9c517ce89c9880bc17a9</anchor>
      <arglist>(ImGuiHandler &amp;handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>d4/db2/structdart_1_1gui_1_1osg_1_1ImGuiNewFrameCallback.html</anchorfile>
      <anchor>afa4f5964b7f34e9b401bfe174738b317</anchor>
      <arglist>(::osg::RenderInfo &amp;renderInfo) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ImGuiHandler &amp;</type>
      <name>mHandler</name>
      <anchorfile>d4/db2/structdart_1_1gui_1_1osg_1_1ImGuiNewFrameCallback.html</anchorfile>
      <anchor>a816899ea92b8dc72b5497e753ed0301b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::gui::osg::ImGuiDrawCallback</name>
    <filename>d5/d80/structdart_1_1gui_1_1osg_1_1ImGuiDrawCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>ImGuiDrawCallback</name>
      <anchorfile>d5/d80/structdart_1_1gui_1_1osg_1_1ImGuiDrawCallback.html</anchorfile>
      <anchor>ac0c1dcc4b9f4fa398f24d4b9532958db</anchor>
      <arglist>(ImGuiHandler &amp;handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>d5/d80/structdart_1_1gui_1_1osg_1_1ImGuiDrawCallback.html</anchorfile>
      <anchor>ae4eda6ef4122475931a1305158df86f2</anchor>
      <arglist>(::osg::RenderInfo &amp;renderInfo) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ImGuiHandler &amp;</type>
      <name>mHandler</name>
      <anchorfile>d5/d80/structdart_1_1gui_1_1osg_1_1ImGuiDrawCallback.html</anchorfile>
      <anchor>a88d1b3f4224bf9d3ee2c363c4295d7e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::ImGuiHandler</name>
    <filename>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>ImGuiHandler</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a2b9bbfdae69a1877468dc23b02aa95bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a17654c699d9093baef31980591cf932a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newFrame</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>af63c41f325e9284b05803ff61a408bb5</anchor>
      <arglist>(::osg::RenderInfo &amp;renderInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a066c6f2d81c3bc884cfcf5d99aa1395b</anchor>
      <arglist>(::osg::RenderInfo &amp;renderInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraCallbacks</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a49a0c4ac29d9109c116edf1c3e4c67c3</anchor>
      <arglist>(::osg::Camera *camera)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handle</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>af454a176629da450b468c1d3238a8368</anchor>
      <arglist>(const osgGA::GUIEventAdapter &amp;eventAdapter, osgGA::GUIActionAdapter &amp;actionAdapter,::osg::Object *object,::osg::NodeVisitor *nodeVisitor) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasWidget</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a00623ad974145e99bfba4ee0dbee8ce8</anchor>
      <arglist>(const std::shared_ptr&lt; ImGuiWidget &gt; &amp;widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a6fcfec783d7a368988d80c449ea6d4a9</anchor>
      <arglist>(const std::shared_ptr&lt; ImGuiWidget &gt; &amp;widget, bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWidget</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>ac94bb2607106ef5dc42a8650333cbf91</anchor>
      <arglist>(const std::shared_ptr&lt; ImGuiWidget &gt; &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllWidget</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a836150590fe747fcb452fe1ff5b2acda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTime</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a5fcc804005ff86f994b9ff43e5a6e20f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; bool, 3 &gt;</type>
      <name>mMousePressed</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>aade6b298a3e1834f7cf48ff502ba22cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mMouseWheel</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>ac5979b1dd3d2be10aebcafb96fc6395d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLuint</type>
      <name>mFontTexture</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>a3789154f89f17d260396b76b68d3ca20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::shared_ptr&lt; ImGuiWidget &gt; &gt;</type>
      <name>mWidgets</name>
      <anchorfile>d9/db1/classdart_1_1gui_1_1osg_1_1ImGuiHandler.html</anchorfile>
      <anchor>aecfc0da5d5aeb99762368e2f2f5fc0b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::ImGuiViewer</name>
    <filename>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</filename>
    <base>dart::gui::osg::Viewer</base>
    <member kind="function">
      <type></type>
      <name>ImGuiViewer</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>a1615d99fc38c2685e8e00883d0c9407f</anchor>
      <arglist>(const ::osg::Vec4 &amp;clearColor=::osg::Vec4(0.9f, 0.9f, 0.9f, 1.0f))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImGuiViewer</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>ab4288962ca20acd11a13b136239274cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ImGuiHandler *</type>
      <name>getImGuiHandler</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>ab6488f780399f62aab9983e53e4c01d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ImGuiHandler *</type>
      <name>getImGuiHandler</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>ae4b72d7d2907be8c3b215e3c5fddb4a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAbout</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>af6f4d4adaf3c6b977d07d1938c37dc4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideAbout</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>a72480891c778453336e28de8be02c6fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>captureScreen</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a8c2cff5b9fe69492e8bb5f5364fc492a</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a335ca4263df4ac8c80278a36c3fb1c6d</anchor>
      <arglist>(const std::string &amp;directory, const std::string &amp;prefix=&quot;image&quot;, bool restart=false, std::size_t digits=6)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseRecording</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ab9df40b2c302adc3c727651f5973c33a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecording</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a2aa1095d9d1d31e118d03bb776a655a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>switchDefaultEventHandler</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ac80c442aa91fc089ea4101dbfe0c7d33</anchor>
      <arglist>(bool _on)</arglist>
    </member>
    <member kind="function">
      <type>DefaultEventHandler *</type>
      <name>getDefaultEventHandler</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a6159b778a365818d59facd23b6eadc8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>switchHeadlights</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a14d549ddda1c1f4485ff6e420d2b47bc</anchor>
      <arglist>(bool _on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkHeadlights</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ac8cbdaa06ba2285ba11dced475cd9e50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWorldNode</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a1210057f6e792654a67d6c24eba675e6</anchor>
      <arglist>(WorldNode *_newWorldNode, bool _active=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWorldNode</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a0816069b4bc9371c8099c37a3304d262</anchor>
      <arglist>(WorldNode *_oldWorldNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWorldNode</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ac8a0e7fbfbbd1f98634d2f03a829f3a9</anchor>
      <arglist>(std::shared_ptr&lt; dart::simulation::World &gt; _oldWorld)</arglist>
    </member>
    <member kind="function">
      <type>WorldNode *</type>
      <name>getWorldNode</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a801d186d065fe892560a001ce960c4e5</anchor>
      <arglist>(std::shared_ptr&lt; dart::simulation::World &gt; _world) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttachment</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a31535c6f92276d7d007d19ed8bf0bbe2</anchor>
      <arglist>(ViewerAttachment *_attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAttachment</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>adadd78bbbb88273397eec4ed40c8f948</anchor>
      <arglist>(ViewerAttachment *_attachment)</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_set&lt; ViewerAttachment * &gt; &amp;</type>
      <name>getAttachments</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a359e9cc79b13747e4a28eb3b46a1cf5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::osg::Group *</type>
      <name>getLightGroup</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a8a17eb22a91ae02efbfb6075c364f68b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ::osg::Group *</type>
      <name>getLightGroup</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a7cc8ded9ad60e746bea9d42502b620ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ::osg::ref_ptr&lt;::osg::LightSource &gt; &amp;</type>
      <name>getLightSource</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a69d1716a866f0e3d72fcfb5282acab34</anchor>
      <arglist>(std::size_t index=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupDefaultLights</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a7be06c979487c5dd8014af43723928f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpwardsDirection</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a00ec5e94a83479c163811f44383251fa</anchor>
      <arglist>(const ::osg::Vec3 &amp;_up)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpwardsDirection</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a041b1869fbbe2824f8314d50a4bdd3e2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_up)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorldNodeActive</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ac02971b6f688056eed56841b81e52b14</anchor>
      <arglist>(WorldNode *_node, bool _active=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorldNodeActive</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a9eee7f6653b14ebba07039d401162dc3</anchor>
      <arglist>(std::shared_ptr&lt; dart::simulation::World &gt; _world, bool _active=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simulate</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a10bacb2075e7f509102c2b032b85b544</anchor>
      <arglist>(bool _on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSimulating</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a055508a5f4ab6b0810e8b2fa7d12c42f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allowSimulation</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a4f236614e87306fd142258adb2dee8d6</anchor>
      <arglist>(bool _allow)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllowingSimulation</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a4acadb2706f561962b020c46c42878ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DragAndDrop *</type>
      <name>enableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a2d8b2c99c7968db7abb7d3853ef6cb06</anchor>
      <arglist>(dart::dynamics::Entity *_entity)</arglist>
    </member>
    <member kind="function">
      <type>SimpleFrameDnD *</type>
      <name>enableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a71564b8751a1bf370cfcaa797088ad95</anchor>
      <arglist>(dart::dynamics::SimpleFrame *_frame)</arglist>
    </member>
    <member kind="function">
      <type>SimpleFrameShapeDnD *</type>
      <name>enableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a85b8ca155d2111c17d87998523f6a24d</anchor>
      <arglist>(dart::dynamics::SimpleFrame *_frame, dart::dynamics::Shape *_shape)</arglist>
    </member>
    <member kind="function">
      <type>InteractiveFrameDnD *</type>
      <name>enableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a068f878b2b6b36107377b8a56459e1d7</anchor>
      <arglist>(InteractiveFrame *_frame)</arglist>
    </member>
    <member kind="function">
      <type>BodyNodeDnD *</type>
      <name>enableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a4aaabebf1d85386ab5dead7986b35b57</anchor>
      <arglist>(dart::dynamics::BodyNode *_bn, bool _useExternalIK=true, bool _useWholeBody=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a798e1661e1ae86759e61f2fc6b6f4d95</anchor>
      <arglist>(DragAndDrop *_dnd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>af83b4a33ab9d596c7c35fd45fe139b97</anchor>
      <arglist>(SimpleFrameDnD *_dnd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a91a5a4adbca24405da6bada854f00590</anchor>
      <arglist>(SimpleFrameShapeDnD *_dnd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a9965c70e3f6f52e2c9a7934bae38dfb3</anchor>
      <arglist>(InteractiveFrameDnD *_dnd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableDragAndDrop</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a96071bed5253e50ec94ef3abc00b198c</anchor>
      <arglist>(BodyNodeDnD *_dnd)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getInstructions</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ab678a8bd10582769e01d7b7ccd7921c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstructionText</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a939633654a5200b402ab5c6e90d4bf50</anchor>
      <arglist>(const std::string &amp;_instruction)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateViewer</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a536a2f45a8afff56955050addb93c6c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDragAndDrops</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a6f38e27b77bfddcb18031a265b1d7f6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ::osg::ref_ptr&lt;::osg::Group &gt; &amp;</type>
      <name>getRootGroup</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a4aa459f5320b2fa2ca1ddd632d740875</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalFieldOfView</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a4c3feade905e489c42b6b6ab72a65b93</anchor>
      <arglist>(double fov)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVerticalFieldOfView</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a60cbdaf0c0485ebc55e9801b422efe20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ImGuiHandler *</type>
      <name>mImGuiHandler</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>a41b2a1b772b450acbc1ac2eeccdda67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AboutWidget &gt;</type>
      <name>mAboutWidget</name>
      <anchorfile>da/d5f/classdart_1_1gui_1_1osg_1_1ImGuiViewer.html</anchorfile>
      <anchor>a8a21a8dbdcaa741797730332f156498e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mImageSequenceNum</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a5c54c2309604785d016e4e2d3dc05feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mImageDigits</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>adebe0592a3c3ae64cd4c84689651eb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mRecording</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>af8ad2c4d4c1667bcd86c8d4afcecf103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mScreenCapture</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>af56855eaebb80e42ba9c1402dc66515e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mImageDirectory</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a26562737910a2385a8b6f1d28612d8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mImagePrefix</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ac91f32eb551effd6f95fdb4250b2fb9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mScreenCapName</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a4178b15b75a29a1686112b88a60c3ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt; DefaultEventHandler &gt;</type>
      <name>mDefaultEventHandler</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a41bf9e92a269f600d2d90b277a0b6e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Group &gt;</type>
      <name>mRootGroup</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ac5e1f759feba6e6d3e8fdc5515ab8f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Group &gt;</type>
      <name>mLightGroup</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a97010c2cabb1a8d3416b6233fef547a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Light &gt;</type>
      <name>mLight1</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a720cf5b62c8858cea2461432170956bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::LightSource &gt;</type>
      <name>mLightSource1</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ad3698e4b61203b11e695153a3628fcf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Light &gt;</type>
      <name>mLight2</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a461411449fb675db5405fa6f60a7fa5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::LightSource &gt;</type>
      <name>mLightSource2</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a8ad755237edb47806679169800634adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::Vec3</type>
      <name>mUpwards</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a68154710e03ec450dae814b553711a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::Vec3</type>
      <name>mOver</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a63e1f013b225927d74f85310883133e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSimulating</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a22ea0d202dfd646a4b793556fa3968f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAllowSimulation</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ae51343ff09e3ba714c33487ed27f9177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mHeadlights</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a7cf6d32bde804e04be90f64ea3e879e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; WorldNode *, bool &gt;</type>
      <name>mWorldNodes</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>acbb791bf24c73110a75e00e4e3259461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; ViewerAttachment * &gt;</type>
      <name>mAttachments</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ac1697799ed22c58cf9d4a466c1024fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mInstructions</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a37f0656ac13f4b890d2e9144ee122206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; dart::dynamics::SimpleFrame *, SimpleFrameDnD * &gt;</type>
      <name>mSimpleFrameDnDMap</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ad5eff370ef8ea675fcc4e2b11ecfbf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::multimap&lt; dart::dynamics::Shape *, SimpleFrameShapeDnD * &gt;</type>
      <name>mSimpleFrameShapeDnDMap</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a33d66af17b485c5d20ade225256443af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; InteractiveFrame *, InteractiveFrameDnD * &gt;</type>
      <name>mInteractiveFrameDnDMap</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ae1375c267afc4e840ae9341f159ce4f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; dart::dynamics::BodyNode *, BodyNodeDnD * &gt;</type>
      <name>mBodyNodeDnDMap</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>aea83298c5f80704fb027ef221292b4f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::ImGuiWidget</name>
    <filename>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</filename>
    <member kind="function">
      <type></type>
      <name>ImGuiWidget</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>a830794fcfb16808b7cbeaefa45e97d92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImGuiWidget</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>a3b70fa5fe32084d22c5b9648280a2602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>ac95d4b5ed3e25b19e2c7043a17c1f73a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>a604565021dbfcd6f81777dcd35afd51a</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleVisible</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>a51177495c9cb0a9beb73c958c8e9994b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>ac4a07375eb1ff74d589fcf026fc391d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>a075af664a4f35f7be8f7f3d6627847c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVisible</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>a64da0e8797c2668440bcf33dcd3e592d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsVisible</name>
      <anchorfile>db/db4/classdart_1_1gui_1_1osg_1_1ImGuiWidget.html</anchorfile>
      <anchor>aebe20c534d8a290b4c372fcee69faf96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::AboutWidget</name>
    <filename>dd/da5/classdart_1_1gui_1_1osg_1_1AboutWidget.html</filename>
    <base>dart::gui::osg::ImGuiWidget</base>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>dd/da5/classdart_1_1gui_1_1osg_1_1AboutWidget.html</anchorfile>
      <anchor>aa1273f606d284e7141d44a3884dc5c59</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::InteractiveTool</name>
    <filename>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</filename>
    <base>dart::dynamics::SimpleFrame</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aa72ba6e417be5aae7c6a66537981a2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LINEAR</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aa72ba6e417be5aae7c6a66537981a2bda9a8c66c0d7f5d5271a0d56a16dc3f11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ANGULAR</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aa72ba6e417be5aae7c6a66537981a2bda4ffe0035d37e0f418d5d39c70cf8cd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PLANAR</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aa72ba6e417be5aae7c6a66537981a2bda0674d2a7051e4e4d41d3132b36346cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NUM_TYPES</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aa72ba6e417be5aae7c6a66537981a2bda0cbce9d840d0cfaa9fd2fc26de8d6c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InteractiveTool</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>ac3827f930caf6f372dfe596f35b7a4a7</anchor>
      <arglist>(InteractiveFrame *frame, double defaultAlpha, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>ae9c7802883062b378b09a7ce86d75a35</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getEnabled</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a1ae367b0a109858ba9727fe06973d04f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlpha</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>ab71cf0f47195165b9411473a437f30d6</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAlpha</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a52a52d7ed73b97d62684c587e317a9c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultAlpha</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a99fec965eed3aa4043c75b58397aa1dd</anchor>
      <arglist>(double alpha, bool reset=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDefaultAlpha</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>af03a9b32eaab71e2ba6108a30f3720a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InteractiveFrame *</type>
      <name>getInteractiveFrame</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a23e80814f15a528718f837005f6b8220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const InteractiveFrame *</type>
      <name>getInteractiveFrame</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aadc61d011f2b5712555bee648fb2926a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::SimpleFrame *</type>
      <name>addShapeFrame</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a84cecf26ebbc146ad097e6e8fc9ede77</anchor>
      <arglist>(const dart::dynamics::ShapePtr &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; dart::dynamics::SimpleFrame * &gt;</type>
      <name>getShapeFrames</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a462353ae510c50f9482ed025c3600fc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const dart::dynamics::SimpleFrame * &gt;</type>
      <name>getShapeFrames</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a20859d3b3c335b4bcf3cdffd3daac317</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllShapeFrames</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aa56065a204f3d8c74b73f13ca16f4957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::unique_ptr&lt; dart::dynamics::SimpleFrame &gt; &gt;</type>
      <name>mSimpleFrames</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>aa08fe10ace74d9a04734adcc347b6ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mDefaultAlpha</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a4e39c9b0ae4f61f87409eee6c3f7f69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEnabled</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>a06566db2c2df930216028421c18a1df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InteractiveFrame *</type>
      <name>mInteractiveFrame</name>
      <anchorfile>d7/dd9/classdart_1_1gui_1_1osg_1_1InteractiveTool.html</anchorfile>
      <anchor>ab3b4825bc242b637b13562ace25f32c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::InteractiveFrame</name>
    <filename>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</filename>
    <base>dart::dynamics::SimpleFrame</base>
    <member kind="function">
      <type></type>
      <name>InteractiveFrame</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a62107bf698f5e48f28a8968db8955dd4</anchor>
      <arglist>(dart::dynamics::Frame *referenceFrame, const std::string &amp;name=&quot;interactive_frame&quot;, const Eigen::Isometry3d &amp;relativeTransform=Eigen::Isometry3d::Identity(), double size_scale=0.2, double thickness_scale=2.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InteractiveFrame</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>aa6667b0db96e4c8d9edb3b9ea58268d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeStandardVisuals</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a050b780a2be649a86d9f8f60a8379510</anchor>
      <arglist>(double size_scale=0.2, double thickness_scale=2.0)</arglist>
    </member>
    <member kind="function">
      <type>InteractiveTool *</type>
      <name>getTool</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>acb0143bd714f593ef4caff81fdf26117</anchor>
      <arglist>(InteractiveTool::Type tool, std::size_t coordinate)</arglist>
    </member>
    <member kind="function">
      <type>const InteractiveTool *</type>
      <name>getTool</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>aff51f30c495cbe55fea2d0a7d4f8979a</anchor>
      <arglist>(InteractiveTool::Type tool, std::size_t coordinate) const </arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::SimpleFrame *</type>
      <name>addShapeFrame</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a3f8bfab273bba120e8e089249b79a53d</anchor>
      <arglist>(const dart::dynamics::ShapePtr &amp;shape)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; dart::dynamics::SimpleFrame * &gt;</type>
      <name>getShapeFrames</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a57a328aee80827c1f49d6ed147a7f771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const dart::dynamics::SimpleFrame * &gt;</type>
      <name>getShapeFrames</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>af6bf877dd5131dd89582f0944e047c46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllShapeFrames</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a68652d19900416e7aacb6a1ba424e874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; InteractiveFrame &gt;</type>
      <name>createShared</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a5ee0811c723ec16d031b9b023c089c3d</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createStandardVisualizationShapes</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>ac954903801195f3a16f4b6154fcbe832</anchor>
      <arglist>(double size, double thickness)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllVisualizationShapes</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a38f7b045cc05e7a9bba98a16d35387e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllTools</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a5ed59a9e3a1ee6683b06bf14e91d33eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InteractiveTool *</type>
      <name>mTools</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>acc96833d9c8144e44e8d529b19a9363f</anchor>
      <arglist>[InteractiveTool::NUM_TYPES][3]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::unique_ptr&lt; dart::dynamics::SimpleFrame &gt; &gt;</type>
      <name>mSimpleFrames</name>
      <anchorfile>dd/d40/classdart_1_1gui_1_1osg_1_1InteractiveFrame.html</anchorfile>
      <anchor>a4cfc67d1a25b44983828c9428803fc35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::MouseEventHandler</name>
    <filename>d5/d0b/classdart_1_1gui_1_1osg_1_1MouseEventHandler.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <base virtualness="virtual">dart::common::Observer</base>
    <member kind="function">
      <type></type>
      <name>MouseEventHandler</name>
      <anchorfile>d5/d0b/classdart_1_1gui_1_1osg_1_1MouseEventHandler.html</anchorfile>
      <anchor>a3aeec365f881950cf4bdc4588a6bb9d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d5/d0b/classdart_1_1gui_1_1osg_1_1MouseEventHandler.html</anchorfile>
      <anchor>a910d91f39046cb7f63356a95ad5db5b7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>d5/d0b/classdart_1_1gui_1_1osg_1_1MouseEventHandler.html</anchorfile>
      <anchor>a185132f1a3ed2c632ef727723f4c38e4</anchor>
      <arglist>(const Subject *_subject) override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>DefaultEventHandler</name>
      <anchorfile>d5/d0b/classdart_1_1gui_1_1osg_1_1MouseEventHandler.html</anchorfile>
      <anchor>aa4a4b96b1d389718a6480563d1632a3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::ShapeFrameNode</name>
    <filename>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</filename>
    <member kind="function">
      <type></type>
      <name>ShapeFrameNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a17f8ab1283081e5a11e0b2d2a0f21108</anchor>
      <arglist>(dart::dynamics::ShapeFrame *frame, WorldNode *worldNode)</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::ShapeFrame *</type>
      <name>getShapeFrame</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a94ace1c43e0e57b9c9733ffc3aa9ea99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dart::dynamics::ShapeFrame *</type>
      <name>getShapeFrame</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>af2b7b1275ac186b39dd918f5df29ab92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WorldNode *</type>
      <name>getWorldNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a90fd5555cd9c5f929f9239fa4e7ce1e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WorldNode *</type>
      <name>getWorldNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>aa2cf4d99279fdc7c0f8dc52f8bc84450</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a13a43ecafe0cffaa02515012d273997c</anchor>
      <arglist>(bool shortCircuitIfUtilized=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasUtilized</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>ab832aeadc90771029fb31d2ae7e13596</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearUtilization</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a63ad8dc57360d535d7db9e6d08188939</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ShapeFrameNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>aea927dd09c5d3e01529eb6baaaa1a6de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshShapeNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>aea002d9151285bc2f9bca1e4faa4a01f</anchor>
      <arglist>(const std::shared_ptr&lt; dart::dynamics::Shape &gt; &amp;shape)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createShapeNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a4f05727970dfad256db0596e01f2e29e</anchor>
      <arglist>(const std::shared_ptr&lt; dart::dynamics::Shape &gt; &amp;shape)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::ShapeFrame *</type>
      <name>mShapeFrame</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a43e7731bef13ca2c313af9a58cbc1db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorldNode *</type>
      <name>mWorldNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a40e7074343ed909ff49aba7c9568afe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>render::ShapeNode *</type>
      <name>mRenderShapeNode</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>ab336b052caa71b7a9da01ad78adb32cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mUtilized</name>
      <anchorfile>d8/df8/classdart_1_1gui_1_1osg_1_1ShapeFrameNode.html</anchorfile>
      <anchor>a8cbc14414f3bc4ffebf7330976af5ff0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::SupportPolygonVisual</name>
    <filename>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</filename>
    <base>dart::gui::osg::ViewerAttachment</base>
    <member kind="function">
      <type></type>
      <name>SupportPolygonVisual</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>adfda2b8311e9a360df505af8ac2b3fe7</anchor>
      <arglist>(const dart::dynamics::SkeletonPtr &amp;skeleton=nullptr, double elevation=0.02)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SupportPolygonVisual</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a95767dd261dc60cc6281e6408542c064</anchor>
      <arglist>(const dart::dynamics::SkeletonPtr &amp;skeleton, std::size_t treeIndex, double elevation=0.02)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSkeleton</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a851f7527ded8946b85ec99793729a240</anchor>
      <arglist>(const dart::dynamics::SkeletonPtr &amp;skeleton)</arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>ad85f2083c279ac302b1882dec19c574b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visualizeWholeSkeleton</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a3ce9d850038b112a7ef744e609af00b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visualizeTree</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a5e56bbed5d2827c656e93cb386f8afa4</anchor>
      <arglist>(std::size_t treeIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayElevation</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a8df4a1287ad093e588c7e9ff5b6cc9e4</anchor>
      <arglist>(double elevation)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDisplayElevation</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>aef0c842ccc5957e815098c4cf9eaf472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>displayPolygon</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>ad8dff043e897fb9e8308d83fb85a1cd3</anchor>
      <arglist>(bool display)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPolygonDisplayed</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a955e74a60904d499efd94fc30429b26f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPolygonColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a7fe730f5b5adc1a30c62698c4d4f8659</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>getPolygonColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>ad2afd9d1250fe4e13bba0eeca0d12875</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>displayCentroid</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a3e683dfe4ae44a5979f2467b991c8103</anchor>
      <arglist>(bool display)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCentroidDisplayed</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a3c09ac3c4f9321aad12a5d7f69fe3b6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCentroidRadius</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a2f4aff51b6cf76324dd5be6b1050f034</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCentroidRadius</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a2e7fbead074c68e15a468857285a3d5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>displayCenterOfMass</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a9bc97730cb2c0d8b52a8fe563dee08b7</anchor>
      <arglist>(bool display)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCenterOfMassDisplayed</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a25b3ffb54adc999b1ad518a58d5228d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenterOfMassRadius</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a61d97840bf5eaccbaf1ef87d3af85829</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCenterOfMassRadius</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>ab9c103987d7ebfae1ded0d441f53ea14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidCOMColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>acf9f5b60e4a27b6062a8b8ad037df015</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector4d &amp;</type>
      <name>getValidCOMColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a3f5b6fc9404e7a54e103c0cacdbc9926</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidCOMColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>aa4783003fd35c8021fd3466894251bff</anchor>
      <arglist>(const Eigen::Vector4d &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector4d &amp;</type>
      <name>getInvalidCOMColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>aff51348a39567938d3273061e111da9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>ab0c0b94db8ad75c6249248ea391aa818</anchor>
      <arglist>() overridefinal</arglist>
    </member>
    <member kind="function">
      <type>Viewer *</type>
      <name>getViewer</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>a4c4034b2c886b74052aede99c5e68e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Viewer *</type>
      <name>getViewer</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>afc97c72692cb6d5b0365aa2334c92352</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a066d655b86d559b1fb8e0c87782c9a0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>customAttach</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>addfc90e74fa975097c5a898f719c2a40</anchor>
      <arglist>(Viewer *newViewer)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>attach</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>a87e82f70ffd57bc61c9899ffb32a3887</anchor>
      <arglist>(Viewer *newViewer)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::WeakSkeletonPtr</type>
      <name>mSkeleton</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>ace2a0fd4225612fcf1672d8d57e10b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mTreeIndex</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a71713362aa6e912e81b5561b5d2a3dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mElevation</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>af57050bf906feb398887cb9645bba328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mDisplayPolygon</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a23df86675548f1544030168beedf371c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mDisplayCentroid</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a85e24bb1f87fa3dc783c50e88a88e758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::SimpleFramePtr</type>
      <name>mCentroid</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a3464a9eb8f47c8bbfab172bf26475385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mCentroidRadius</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a1355d84a83f08640e6dffa1b272f2fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mDisplayCOM</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a1f5d56536135d24095f891919305f807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::SimpleFramePtr</type>
      <name>mCom</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a0a8cd28df8b665f197e66b4a389dfde5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mComRadius</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a22e98eb59b8fd875978ebcced1de8b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector4d</type>
      <name>mValidColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>adec3e9199f67505b2c0846405848a2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector4d</type>
      <name>mInvalidColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a791a66716f4ace138bee7c96d2653716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec4Array &gt;</type>
      <name>mPolygonColor</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a11063a5428f9a64ba45de628393c6a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Geode &gt;</type>
      <name>mPolygonGeode</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>af7ae3e65c1cc9d7977161cc4049aa9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Geometry &gt;</type>
      <name>mPolygonGeom</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a1bbf3a210eba23ffa993f509a2e6048b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec3Array &gt;</type>
      <name>mVertices</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>aaceb7a01c560d44a2c3395c8b0840e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::DrawElementsUShort &gt;</type>
      <name>mFaces</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a574b7cdb55b1c910d3cb4b7c85ca868a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt; ShapeFrameNode &gt;</type>
      <name>mCentroidNode</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>af2827edbff1aed28c1222306c672f888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt; ShapeFrameNode &gt;</type>
      <name>mComNode</name>
      <anchorfile>d6/d61/classdart_1_1gui_1_1osg_1_1SupportPolygonVisual.html</anchorfile>
      <anchor>a1c319fe4ffd57fdebf2d69205e88e5de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::TrackballManipulator</name>
    <filename>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</filename>
    <member kind="function">
      <type></type>
      <name>TrackballManipulator</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>aad9e55ea9a9f764c071d3987989eb769</anchor>
      <arglist>(int flags=DEFAULT_SETTINGS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackballManipulator</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>ac85ee644bcf9075937a59d74ba6cbcf0</anchor>
      <arglist>(const TrackballManipulator &amp;tm, const ::osg::CopyOp &amp;copyOp=::osg::CopyOp::SHALLOW_COPY)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TrackballManipulator</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>a00705b7bccc6deac60b6a3d2a5b6805f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performMovementLeftMouseButton</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>a6e533eeefcb36ca40dfa9137d9db8f3f</anchor>
      <arglist>(const double eventTimeDelta, const double dx, const double dy) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performMovementRightMouseButton</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>a46dd5bf577d8ba6e53aaf17cac472ad4</anchor>
      <arglist>(const double eventTimeDelta, const double dx, const double dy) override</arglist>
    </member>
    <member kind="function">
      <type>::osg::Object *</type>
      <name>cloneType</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>a0785da24870a552e7156e94519274b7d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>::osg::Object *</type>
      <name>clone</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>ac431fe2657442d5d55fa27490fc158fd</anchor>
      <arglist>(const ::osg::CopyOp &amp;copyop) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameKindAs</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>a90b260468825d97c4669130ef81f9faf</anchor>
      <arglist>(const ::osg::Object *obj) const override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>libraryName</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>a675b80b70257451bea4a663a088ee21a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>className</name>
      <anchorfile>d7/d4f/classdart_1_1gui_1_1osg_1_1TrackballManipulator.html</anchorfile>
      <anchor>a5355e0ef4cca37c744ac6502c97b084d</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::SaveScreen</name>
    <filename>de/d72/classdart_1_1gui_1_1osg_1_1SaveScreen.html</filename>
    <member kind="function">
      <type></type>
      <name>SaveScreen</name>
      <anchorfile>de/d72/classdart_1_1gui_1_1osg_1_1SaveScreen.html</anchorfile>
      <anchor>ab70a3e65e2343f831b29b0b2138d76ef</anchor>
      <arglist>(Viewer *viewer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>de/d72/classdart_1_1gui_1_1osg_1_1SaveScreen.html</anchorfile>
      <anchor>a129379105b5fea20cf6cf38b933f28cb</anchor>
      <arglist>(::osg::RenderInfo &amp;renderInfo) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Viewer *</type>
      <name>mViewer</name>
      <anchorfile>de/d72/classdart_1_1gui_1_1osg_1_1SaveScreen.html</anchorfile>
      <anchor>a90db9e37c409791ff9cbfa01a92d4fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Image &gt;</type>
      <name>mImage</name>
      <anchorfile>de/d72/classdart_1_1gui_1_1osg_1_1SaveScreen.html</anchorfile>
      <anchor>ad6a62f05016d12bac965f7ca98cf7f32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Camera &gt;</type>
      <name>mCamera</name>
      <anchorfile>de/d72/classdart_1_1gui_1_1osg_1_1SaveScreen.html</anchorfile>
      <anchor>a6fcc45aaecb6f77b93cafc56ca4533af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::ViewerAttachmentCallback</name>
    <filename>d7/d17/classdart_1_1gui_1_1osg_1_1ViewerAttachmentCallback.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>d7/d17/classdart_1_1gui_1_1osg_1_1ViewerAttachmentCallback.html</anchorfile>
      <anchor>ae03849c67fde5deee18cebb02e6992c3</anchor>
      <arglist>(::osg::Node *node,::osg::NodeVisitor *nv)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::ViewerAttachment</name>
    <filename>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</filename>
    <member kind="function">
      <type></type>
      <name>ViewerAttachment</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>a3aa5fce3140552cca71a7153739fe0d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ViewerAttachment</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>ad9712f1d4bfc6061a5f66ec82eb27bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>ae3f0f20440cff88e66d28fb02bc584d7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Viewer *</type>
      <name>mViewer</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>a928e117891ede5691660dda50117ffbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Viewer</name>
      <anchorfile>d0/d32/classdart_1_1gui_1_1osg_1_1ViewerAttachment.html</anchorfile>
      <anchor>a8d1f62258b0d11e43cd20938f011fc2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::Viewer</name>
    <filename>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</filename>
    <base>dart::common::Subject</base>
    <member kind="function">
      <type></type>
      <name>Viewer</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a03b21c99eded06939b2b7350ee364160</anchor>
      <arglist>(const ::osg::Vec4 &amp;clearColor=::osg::Vec4(0.9, 0.9, 0.9, 1.0))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Viewer</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>ab1eb174c2f529221540fc75dcba9af1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>SaveScreen</name>
      <anchorfile>da/d56/classdart_1_1gui_1_1osg_1_1Viewer.html</anchorfile>
      <anchor>a523dc17a889372d76ecdab1297251094</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::WorldNodeCallback</name>
    <filename>d1/d90/classdart_1_1gui_1_1osg_1_1WorldNodeCallback.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>d1/d90/classdart_1_1gui_1_1osg_1_1WorldNodeCallback.html</anchorfile>
      <anchor>a9e5ecf3b8421a9a30d47d7f41d1a95ce</anchor>
      <arglist>(::osg::Node *node,::osg::NodeVisitor *nv)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::WorldNode</name>
    <filename>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</filename>
    <member kind="function">
      <type></type>
      <name>WorldNode</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a7bd63fb888dbdd69bf7e8a1c8fd31167</anchor>
      <arglist>(std::shared_ptr&lt; dart::simulation::World &gt; world=nullptr,::osg::ref_ptr&lt; osgShadow::ShadowTechnique &gt; shadowTechnique=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorld</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a640d808a52adf6cebf9261797fdbabde</anchor>
      <arglist>(std::shared_ptr&lt; dart::simulation::World &gt; newWorld)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; dart::simulation::World &gt;</type>
      <name>getWorld</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a3d2709f7f40edd752818493e370f748a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a6a050b81a755383d0c314d09ca22fda5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>customPreRefresh</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>af2e85bd36285b0aed373a7799e345546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>customPostRefresh</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>ac730b1d2d9022856a5655b302e23506d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>customPreStep</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a7c4250f3b555a63ccc8123aed8a801ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>customPostStep</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>abf482a87345705ab11e7600085b11489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSimulating</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a04c8a7f2fb82778e50edc8bd9519276f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simulate</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>aadc85c833d22790d93c8f188c096ac53</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumStepsPerCycle</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a5b1660052160ef64730ab2383a1d8823</anchor>
      <arglist>(std::size_t steps)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumStepsPerCycle</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a28602d512f8008bd73bd7630cadc7add</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShadowed</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>af8324af8c638f91de9e80bc2fef2ed9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadowTechnique</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a8d14dd57e616cf8800115601b98f91bb</anchor>
      <arglist>(::osg::ref_ptr&lt; osgShadow::ShadowTechnique &gt; shadowTechnique=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>::osg::ref_ptr&lt; osgShadow::ShadowTechnique &gt;</type>
      <name>getShadowTechnique</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a92edde8d62e8a0a23eb0040ade9ed56b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>static::osg::ref_ptr&lt; osgShadow::ShadowTechnique &gt;</type>
      <name>createDefaultShadowTechnique</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a971bc3d94b4c21449ad0b0ce4d063bac</anchor>
      <arglist>(const Viewer *viewer)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::unordered_map&lt; dart::dynamics::Frame *, ShapeFrameNode * &gt;</type>
      <name>NodeMap</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a0641f8f56df1bd2b1c33d97879cf353b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~WorldNode</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a285921bf5be652c45d6790a5e84515e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupViewer</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a3eeca5ef88ffb4afb803d9830333b435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearChildUtilizationFlags</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>aed845cec16a0bfc0de7b1cdf906f74ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearUnusedNodes</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>ab5640cfc04ad740e9d412084a5057f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshSkeletons</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a07aecc69c995343e6572ea027d9a91ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshSimpleFrames</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a7c01971b0532847bb6773dcfa3e482bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshBaseFrameNode</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a0a86455175a0d37a018ea694c4d16d28</anchor>
      <arglist>(dart::dynamics::Frame *frame)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshShapeFrameNode</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>ac00c44e4cf10eeaa98a6deaa67954bff</anchor>
      <arglist>(dart::dynamics::Frame *frame)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeMap</type>
      <name>mFrameToNode</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a2ca3502a692719a9a1f19d3d32bdc056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::simulation::World &gt;</type>
      <name>mWorld</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>af5acca26210496fa4b3a5146d6f0ea0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSimulating</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a3c13d930e34111c625261798bb1dfd4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mNumStepsPerCycle</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>afd887f9cb0e504631548efc5ffb872fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Viewer *</type>
      <name>mViewer</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a203b35ad4208c67498c9bc72e0f13333</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Group &gt;</type>
      <name>mNormalGroup</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a730c249a3d332fb79961f057c8a09ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Group &gt;</type>
      <name>mShadowedGroup</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>afcdd3c97a39cc13593fce2ae5210c6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShadowed</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a9b11e02eec2ad39654696951d8658060</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Viewer</name>
      <anchorfile>d8/d6f/classdart_1_1gui_1_1osg_1_1WorldNode.html</anchorfile>
      <anchor>a8d1f62258b0d11e43cd20938f011fc2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::gui::osg::render</name>
    <filename>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</filename>
    <class kind="class">dart::gui::osg::render::BoxShapeGeode</class>
    <class kind="class">dart::gui::osg::render::BoxShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::BoxShapeNode</class>
    <class kind="class">dart::gui::osg::render::CapsuleShapeGeode</class>
    <class kind="class">dart::gui::osg::render::CapsuleShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::CapsuleShapeNode</class>
    <class kind="class">dart::gui::osg::render::ConeShapeGeode</class>
    <class kind="class">dart::gui::osg::render::ConeShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::ConeShapeNode</class>
    <class kind="class">dart::gui::osg::render::CylinderShapeGeode</class>
    <class kind="class">dart::gui::osg::render::CylinderShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::CylinderShapeNode</class>
    <class kind="class">dart::gui::osg::render::EllipsoidShapeGeode</class>
    <class kind="class">dart::gui::osg::render::EllipsoidShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::EllipsoidShapeNode</class>
    <class kind="class">dart::gui::osg::render::LineSegmentShapeGeode</class>
    <class kind="class">dart::gui::osg::render::LineSegmentShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::LineSegmentShapeNode</class>
    <class kind="class">dart::gui::osg::render::osgAiNode</class>
    <class kind="class">dart::gui::osg::render::MeshShapeGeode</class>
    <class kind="class">dart::gui::osg::render::MeshShapeGeometry</class>
    <class kind="class">dart::gui::osg::render::MeshShapeNode</class>
    <class kind="class">dart::gui::osg::render::MultiSphereShapeGeode</class>
    <class kind="class">dart::gui::osg::render::MultiSphereShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::MultiSphereShapeNode</class>
    <class kind="class">dart::gui::osg::render::PlaneShapeGeode</class>
    <class kind="class">dart::gui::osg::render::PlaneShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::PlaneShapeNode</class>
    <class kind="class">dart::gui::osg::render::ShapeNode</class>
    <class kind="class">dart::gui::osg::render::SoftMeshShapeGeode</class>
    <class kind="class">dart::gui::osg::render::SoftMeshShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::SoftMeshShapeNode</class>
    <class kind="class">dart::gui::osg::render::SphereShapeGeode</class>
    <class kind="class">dart::gui::osg::render::SphereShapeDrawable</class>
    <class kind="class">dart::gui::osg::render::SphereShapeNode</class>
    <class kind="class">dart::gui::osg::render::WarningShapeNode</class>
    <member kind="function">
      <type>double</type>
      <name>smallestComponent</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>a7922fd9dd179cc78e77e8e626205aeea</anchor>
      <arglist>(const Eigen::Vector3d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>a14021ccf40cdcdcb610fe76a6d0942fd</anchor>
      <arglist>(std::ostream &amp;str, const aiColor4D &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSpecularSanity</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>aad3bfc925154d7978d5a74b3b5114137</anchor>
      <arglist>(const aiColor4D &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>normalFromVertex</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>a916393944fb4380018dfc0fa956eb320</anchor>
      <arglist>(const dart::dynamics::SoftBodyNode *bn, const Eigen::Vector3i &amp;face, std::size_t v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNormals</name>
      <anchorfile>d4/d7f/namespacedart_1_1gui_1_1osg_1_1render.html</anchorfile>
      <anchor>abca60ce1b7d29bd3975af4be2ed606b9</anchor>
      <arglist>(std::vector&lt; Eigen::Vector3d &gt; &amp;normals, const dart::dynamics::SoftBodyNode *bn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::BoxShapeGeode</name>
    <filename>d2/d7a/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>BoxShapeGeode</name>
      <anchorfile>d2/d7a/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeGeode.html</anchorfile>
      <anchor>a4134b109ef8bbdba539080ba1dbfb6b7</anchor>
      <arglist>(const std::shared_ptr&lt; dart::dynamics::BoxShape &gt; &amp;shape, ShapeFrameNode *parentShapeFrame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d2/d7a/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeGeode.html</anchorfile>
      <anchor>a9427de49e014496ae803588a0869c569</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d2/d7a/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeGeode.html</anchorfile>
      <anchor>a74adae973648ed304429add4137e408f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; dart::dynamics::Shape &gt; &amp;</type>
      <name>getShape</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a1c606a71ad654674c78debbadd1b7993</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dart::dynamics::ShapeFrame *</type>
      <name>getShapeFrame</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a9168565d1a61b2abd63c2f507b22b38a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dart::dynamics::VisualAspect *</type>
      <name>getVisualAspect</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a2e4bb18a6b7b0866894bcc0bf98b4d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dart::dynamics::VisualAspect *</type>
      <name>getVisualAspect</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a492ce50a6a995e0148dea69a1d3aae3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::osg::Node *</type>
      <name>getNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>ad84d151d8c368ff3e8011334b3024293</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ::osg::Node *</type>
      <name>getNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>aff4e745855ce2de2f10d927773c1649d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeFrameNode *</type>
      <name>getParentShapeFrameNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a5df9d4b50556afca1b234fbc78d6d1a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ShapeFrameNode *</type>
      <name>getParentShapeFrameNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a1ab45def5ee0bfeb9c145935971741fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasUtilized</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>ab39746a68dfda2f4e521a400e5407b41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearUtilization</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>aec1312d507a8cb4f78a1b977644bd297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxShapeGeode</name>
      <anchorfile>d2/d7a/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeGeode.html</anchorfile>
      <anchor>aea94960ee0bcdf7f40a802bfa97fb2ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::BoxShape &gt;</type>
      <name>mBoxShape</name>
      <anchorfile>d2/d7a/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeGeode.html</anchorfile>
      <anchor>a0e33fba2e030a0c395d607f35c109e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BoxShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>d2/d7a/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeGeode.html</anchorfile>
      <anchor>a408d1fc8f41da319cf89f221c5203930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::shared_ptr&lt; dart::dynamics::Shape &gt;</type>
      <name>mShape</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a7345754e4d7fa928e5945d2c6d1bc1d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::ShapeFrame *</type>
      <name>mShapeFrame</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>afc526a221544a5e8ca7ccadef9d66324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a7f19c73db390bb2f7da584985dae66c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ShapeFrameNode *</type>
      <name>mParentShapeFrameNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a7a45df6c1e0454f9c1fef2a161c3b20f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::Node *</type>
      <name>mNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a91c9ab8023e837482e7d40fd3e2326aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mUtilized</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>afa75cd213eb88dd688c3d37fe1fac3ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::BoxShapeDrawable</name>
    <filename>d1/de2/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxShapeDrawable</name>
      <anchorfile>d1/de2/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeDrawable.html</anchorfile>
      <anchor>ab154751505ed29f1e0eedb394f4e536a</anchor>
      <arglist>(dart::dynamics::BoxShape *shape, dart::dynamics::VisualAspect *visualAspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d1/de2/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeDrawable.html</anchorfile>
      <anchor>a7d38e6ed5fdfdf447b8dfc4bfcea7d27</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxShapeDrawable</name>
      <anchorfile>d1/de2/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeDrawable.html</anchorfile>
      <anchor>a6feac515880c555af594db7c549db6b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::BoxShape *</type>
      <name>mBoxShape</name>
      <anchorfile>d1/de2/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeDrawable.html</anchorfile>
      <anchor>ad599c4888631219e64bffe0f0762019d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>d1/de2/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeDrawable.html</anchorfile>
      <anchor>ab56dfd973982bd77894b5215db1308f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::BoxShapeNode</name>
    <filename>d0/d8f/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>BoxShapeNode</name>
      <anchorfile>d0/d8f/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeNode.html</anchorfile>
      <anchor>a3ae8fff79fe623b78c673823f1e5bac9</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::BoxShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d0/d8f/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeNode.html</anchorfile>
      <anchor>a235b6610af2988b6706b0fa940d6e9e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d0/d8f/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeNode.html</anchorfile>
      <anchor>abf3694802ff2e325f8372ad520725c37</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxShapeNode</name>
      <anchorfile>d0/d8f/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeNode.html</anchorfile>
      <anchor>a390b60597b60806e79f4216f614a6654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::BoxShape &gt;</type>
      <name>mBoxShape</name>
      <anchorfile>d0/d8f/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeNode.html</anchorfile>
      <anchor>ac8f73d17c9980755594440db1bb5c15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BoxShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>d0/d8f/classdart_1_1gui_1_1osg_1_1render_1_1BoxShapeNode.html</anchorfile>
      <anchor>ae53e706fa9ca05776d207f9fc3f6b619</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::CapsuleShapeGeode</name>
    <filename>d6/df1/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>CapsuleShapeGeode</name>
      <anchorfile>d6/df1/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeGeode.html</anchorfile>
      <anchor>ac1acd87e31b9d0090d85e23b4b9741c3</anchor>
      <arglist>(dart::dynamics::CapsuleShape *shape, ShapeFrameNode *parent, CapsuleShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d6/df1/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeGeode.html</anchorfile>
      <anchor>a7c3a92f792f968c5b8318992dae78e4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d6/df1/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeGeode.html</anchorfile>
      <anchor>a97b954bea4ed8d6359fab9bef43404e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~CapsuleShapeGeode</name>
      <anchorfile>d6/df1/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeGeode.html</anchorfile>
      <anchor>a5715b3f1425cefc5ce0dcbdc2fe4e26f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::CapsuleShape *</type>
      <name>mCapsuleShape</name>
      <anchorfile>d6/df1/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeGeode.html</anchorfile>
      <anchor>a136475c8238e825b7cd5c53c059392d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CapsuleShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>d6/df1/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeGeode.html</anchorfile>
      <anchor>a2b62f66434ed6a3ec81c4a156bf93524</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::CapsuleShapeDrawable</name>
    <filename>dd/d47/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>CapsuleShapeDrawable</name>
      <anchorfile>dd/d47/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeDrawable.html</anchorfile>
      <anchor>aca512704156834830ed1aab9a5e613e5</anchor>
      <arglist>(dart::dynamics::CapsuleShape *shape, dart::dynamics::VisualAspect *visualAspect, CapsuleShapeGeode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>dd/d47/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeDrawable.html</anchorfile>
      <anchor>aabe13a36e743ac03498226bada0ce692</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~CapsuleShapeDrawable</name>
      <anchorfile>dd/d47/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeDrawable.html</anchorfile>
      <anchor>a58791843f87c6bbf4899f200b073d0c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::CapsuleShape *</type>
      <name>mCapsuleShape</name>
      <anchorfile>dd/d47/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeDrawable.html</anchorfile>
      <anchor>a84265efd1fcb328d950db773a1cec9e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>dd/d47/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeDrawable.html</anchorfile>
      <anchor>a2c91630ce4b8dc02eb422b33d1c9b7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CapsuleShapeGeode *</type>
      <name>mParent</name>
      <anchorfile>dd/d47/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeDrawable.html</anchorfile>
      <anchor>a8c0c4fef2446b9ca0485033888db9a0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::CapsuleShapeNode</name>
    <filename>d1/db3/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>CapsuleShapeNode</name>
      <anchorfile>d1/db3/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeNode.html</anchorfile>
      <anchor>ad7e452f59cd0c9d7d63a42dc8e3f17a1</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::CapsuleShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d1/db3/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeNode.html</anchorfile>
      <anchor>a6f214240e7cc1f084166e60649a76fc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d1/db3/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeNode.html</anchorfile>
      <anchor>a7fc6a1e4af4d362a9695941b4f71a484</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~CapsuleShapeNode</name>
      <anchorfile>d1/db3/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeNode.html</anchorfile>
      <anchor>adcafb3e9489f0d516e8bb1c42a6baf28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::CapsuleShape &gt;</type>
      <name>mCapsuleShape</name>
      <anchorfile>d1/db3/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeNode.html</anchorfile>
      <anchor>a2534139357889cbb72cea5e299c8f466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CapsuleShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>d1/db3/classdart_1_1gui_1_1osg_1_1render_1_1CapsuleShapeNode.html</anchorfile>
      <anchor>ab70e40710a2735092c67c6da9e56fcad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::ConeShapeGeode</name>
    <filename>dc/dbc/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>ConeShapeGeode</name>
      <anchorfile>dc/dbc/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeGeode.html</anchorfile>
      <anchor>afe6276cd251026222610ac4023877d07</anchor>
      <arglist>(dart::dynamics::ConeShape *shape, ShapeFrameNode *parent, ConeShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>dc/dbc/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeGeode.html</anchorfile>
      <anchor>aa24fbce627e9f30e1122a05e4f067c3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>dc/dbc/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeGeode.html</anchorfile>
      <anchor>a43aff852c336645f635e597ef367ecdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ConeShapeGeode</name>
      <anchorfile>dc/dbc/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeGeode.html</anchorfile>
      <anchor>a9c7884f9996008613433562772c06659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::ConeShape *</type>
      <name>mConeShape</name>
      <anchorfile>dc/dbc/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeGeode.html</anchorfile>
      <anchor>aff8fd95b1134e415c12b5d3d74f61e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ConeShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>dc/dbc/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeGeode.html</anchorfile>
      <anchor>a891b061b99e693a565560200ed1e1a61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::ConeShapeDrawable</name>
    <filename>db/d18/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>ConeShapeDrawable</name>
      <anchorfile>db/d18/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeDrawable.html</anchorfile>
      <anchor>aafa4ccd451c91f28320d9a54af56635a</anchor>
      <arglist>(dart::dynamics::ConeShape *shape, dart::dynamics::VisualAspect *visualAspect, ConeShapeGeode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>db/d18/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeDrawable.html</anchorfile>
      <anchor>a21f8f9fdaa7eacd7bef104dca1db3b4b</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ConeShapeDrawable</name>
      <anchorfile>db/d18/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeDrawable.html</anchorfile>
      <anchor>aa643094fba1ae62169a20467d246fb64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::ConeShape *</type>
      <name>mConeShape</name>
      <anchorfile>db/d18/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeDrawable.html</anchorfile>
      <anchor>a37225d91a7208ce2c237a364fd79cda5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>db/d18/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeDrawable.html</anchorfile>
      <anchor>a358f73d9b937decaa69c78f3234903c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ConeShapeGeode *</type>
      <name>mParent</name>
      <anchorfile>db/d18/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeDrawable.html</anchorfile>
      <anchor>a9a819c01e2207199a51f87dc3bec2a6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::ConeShapeNode</name>
    <filename>da/dc3/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>ConeShapeNode</name>
      <anchorfile>da/dc3/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeNode.html</anchorfile>
      <anchor>a2d618bad582eba515b22094bb2088c58</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::ConeShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>da/dc3/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeNode.html</anchorfile>
      <anchor>a4dc61ac63fd5b3c70a8b2db95efd1795</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>da/dc3/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeNode.html</anchorfile>
      <anchor>a6a1af6d37aa6fd047f74bb2f305ebd7d</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ConeShapeNode</name>
      <anchorfile>da/dc3/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeNode.html</anchorfile>
      <anchor>aa263dff7ddac26176bd969e977de4bbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::ConeShape &gt;</type>
      <name>mConeShape</name>
      <anchorfile>da/dc3/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeNode.html</anchorfile>
      <anchor>a84d21062497fd03d837a90dd99460d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ConeShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>da/dc3/classdart_1_1gui_1_1osg_1_1render_1_1ConeShapeNode.html</anchorfile>
      <anchor>ae44010150b979947ea27136b7958772c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::CylinderShapeGeode</name>
    <filename>d3/d40/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>CylinderShapeGeode</name>
      <anchorfile>d3/d40/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeGeode.html</anchorfile>
      <anchor>ac02d444b062938dceb7fc04bfc555af5</anchor>
      <arglist>(dart::dynamics::CylinderShape *shape, ShapeFrameNode *parent, CylinderShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d3/d40/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeGeode.html</anchorfile>
      <anchor>a6424cf2c03250bbbd45db8db1d025f97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d3/d40/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeGeode.html</anchorfile>
      <anchor>a58b903d807cd8be56f71db9c1d4b1632</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~CylinderShapeGeode</name>
      <anchorfile>d3/d40/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeGeode.html</anchorfile>
      <anchor>a470551e676a930a502d28b2d990ff438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::CylinderShape *</type>
      <name>mCylinderShape</name>
      <anchorfile>d3/d40/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeGeode.html</anchorfile>
      <anchor>a0b71db473c96cc330ad2f804f616f09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CylinderShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>d3/d40/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeGeode.html</anchorfile>
      <anchor>a2d97b6d95db18bfd5faffab3c63ece28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::CylinderShapeDrawable</name>
    <filename>df/d98/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>CylinderShapeDrawable</name>
      <anchorfile>df/d98/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeDrawable.html</anchorfile>
      <anchor>a9f8d4db9635297386221f2cf56722d6d</anchor>
      <arglist>(dart::dynamics::CylinderShape *shape, dart::dynamics::VisualAspect *visualAspect, CylinderShapeGeode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>df/d98/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeDrawable.html</anchorfile>
      <anchor>a38db90dd6fd11d4caf5993d280595f74</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~CylinderShapeDrawable</name>
      <anchorfile>df/d98/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeDrawable.html</anchorfile>
      <anchor>a67a6bc7bc6566bbf9bf540924ca6fc87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::CylinderShape *</type>
      <name>mCylinderShape</name>
      <anchorfile>df/d98/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeDrawable.html</anchorfile>
      <anchor>a7297143550cfa8427e259b9bbef0f493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>df/d98/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeDrawable.html</anchorfile>
      <anchor>a5598f6380d1a9b223c1b565cff570bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CylinderShapeGeode *</type>
      <name>mParent</name>
      <anchorfile>df/d98/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeDrawable.html</anchorfile>
      <anchor>a1e23fd5f1a7fa7b8067031b819c8cc46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::CylinderShapeNode</name>
    <filename>df/d82/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>CylinderShapeNode</name>
      <anchorfile>df/d82/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeNode.html</anchorfile>
      <anchor>a845abb270735288dbf3b0cbaf68d2035</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::CylinderShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>df/d82/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeNode.html</anchorfile>
      <anchor>a6140d2ace3749ca41dbaeddd1fa69ea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>df/d82/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeNode.html</anchorfile>
      <anchor>a4589e78b500967fb3b60d9bb4f187b04</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~CylinderShapeNode</name>
      <anchorfile>df/d82/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeNode.html</anchorfile>
      <anchor>a02c05b47c07efccad63954831b92baf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::CylinderShape &gt;</type>
      <name>mCylinderShape</name>
      <anchorfile>df/d82/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeNode.html</anchorfile>
      <anchor>aaaeec4e3ddd0a9f26f635cbef0d71a57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CylinderShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>df/d82/classdart_1_1gui_1_1osg_1_1render_1_1CylinderShapeNode.html</anchorfile>
      <anchor>aa1400de312cde62e30d556f37eca4054</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::EllipsoidShapeGeode</name>
    <filename>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>EllipsoidShapeGeode</name>
      <anchorfile>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</anchorfile>
      <anchor>a1a0b5767e5245d109176e0550fe24b9b</anchor>
      <arglist>(dart::dynamics::EllipsoidShape *shape, ShapeFrameNode *parentShapeFrame, EllipsoidShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</anchorfile>
      <anchor>a3207f0ebbc6b3fb8ad05c9aab77f3708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</anchorfile>
      <anchor>a41a252056d945f8b687ee27a3aec9274</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~EllipsoidShapeGeode</name>
      <anchorfile>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</anchorfile>
      <anchor>afceea2393098f4c898d8f6931b7eccdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EllipsoidShapeNode *</type>
      <name>mParentNode</name>
      <anchorfile>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</anchorfile>
      <anchor>afc296a48f4a49a50568398ba47408bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::EllipsoidShape *</type>
      <name>mEllipsoidShape</name>
      <anchorfile>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</anchorfile>
      <anchor>abe6f7cc94cef7b7ccf95f2d024184967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EllipsoidShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>d7/d54/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeGeode.html</anchorfile>
      <anchor>a329f01ed600c5d8418fffaf7609f7146</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::EllipsoidShapeDrawable</name>
    <filename>db/dd2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>EllipsoidShapeDrawable</name>
      <anchorfile>db/dd2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeDrawable.html</anchorfile>
      <anchor>acd928e75414b7cae77c110385ee92ef6</anchor>
      <arglist>(dart::dynamics::EllipsoidShape *shape, dart::dynamics::VisualAspect *visualAspect, EllipsoidShapeGeode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>db/dd2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeDrawable.html</anchorfile>
      <anchor>aa67520816b49c5c9c7538467fde7e23b</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~EllipsoidShapeDrawable</name>
      <anchorfile>db/dd2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeDrawable.html</anchorfile>
      <anchor>ab827d3d9b1e21dfb5917597e8ca3568b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::EllipsoidShape *</type>
      <name>mEllipsoidShape</name>
      <anchorfile>db/dd2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeDrawable.html</anchorfile>
      <anchor>a67081f2e07fa9aa46ba11600d4d5e367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>db/dd2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeDrawable.html</anchorfile>
      <anchor>a1254a65a874ab3e398c517cbc14d3368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EllipsoidShapeGeode *</type>
      <name>mParent</name>
      <anchorfile>db/dd2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeDrawable.html</anchorfile>
      <anchor>a93ab926cb47d45e0b3b5cb544afbd5e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::EllipsoidShapeNode</name>
    <filename>df/df2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>EllipsoidShapeNode</name>
      <anchorfile>df/df2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeNode.html</anchorfile>
      <anchor>a2d9c21d1530fd2b13f6d16e7b7ff43d0</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::EllipsoidShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>df/df2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeNode.html</anchorfile>
      <anchor>af6a7a4c70faff8f1bd8279d4629d8486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>df/df2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeNode.html</anchorfile>
      <anchor>ab3a8e2bf7d594ca05c41f11815ba02ff</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~EllipsoidShapeNode</name>
      <anchorfile>df/df2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeNode.html</anchorfile>
      <anchor>ae7c35c82529bae1674824a85b1693833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::EllipsoidShape &gt;</type>
      <name>mEllipsoidShape</name>
      <anchorfile>df/df2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeNode.html</anchorfile>
      <anchor>ab1d4f83afb9637a54372fa58bd776ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EllipsoidShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>df/df2/classdart_1_1gui_1_1osg_1_1render_1_1EllipsoidShapeNode.html</anchorfile>
      <anchor>aadb15ad8a32945fbac7124b6026c7fbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::LineSegmentShapeGeode</name>
    <filename>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>LineSegmentShapeGeode</name>
      <anchorfile>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</anchorfile>
      <anchor>a112e0efcec1f20418e80b396e0dff83f</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::LineSegmentShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</anchorfile>
      <anchor>a895148c5d9af7a5c2c5cfc92c71abad5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</anchorfile>
      <anchor>ae3afd17965aa35eb56d6f8ea65786b18</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~LineSegmentShapeGeode</name>
      <anchorfile>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</anchorfile>
      <anchor>a4b0153576f8bb68169593234243b9e6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::LineSegmentShape &gt;</type>
      <name>mLineSegmentShape</name>
      <anchorfile>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</anchorfile>
      <anchor>a14edf5eff6b6fdb14f58f6cb83f2b643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineSegmentShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</anchorfile>
      <anchor>af749c84de22a49d03b15be48f96e3723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::LineWidth &gt;</type>
      <name>mLineWidth</name>
      <anchorfile>df/da7/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeGeode.html</anchorfile>
      <anchor>aa31ff4c3aef9942ef19226d5fd32265c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::LineSegmentShapeDrawable</name>
    <filename>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>LineSegmentShapeDrawable</name>
      <anchorfile>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</anchorfile>
      <anchor>aa48490ae6a28eeae719725e621ab2a86</anchor>
      <arglist>(dart::dynamics::LineSegmentShape *shape, dart::dynamics::VisualAspect *visualAspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</anchorfile>
      <anchor>a8015ab007bab0005f79b5a3379f8173b</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~LineSegmentShapeDrawable</name>
      <anchorfile>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</anchorfile>
      <anchor>a5b06bfdc1f11d368cd4985d26382c27a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::LineSegmentShape *</type>
      <name>mLineSegmentShape</name>
      <anchorfile>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</anchorfile>
      <anchor>ae3b95dbf54c72bc894da388529a6bac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</anchorfile>
      <anchor>a1d03c59dfc290749c3b90d61df2f8e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec3Array &gt;</type>
      <name>mVertices</name>
      <anchorfile>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</anchorfile>
      <anchor>af0a6cba61f26932f42f12eef51fa2a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec4Array &gt;</type>
      <name>mColors</name>
      <anchorfile>d9/da8/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeDrawable.html</anchorfile>
      <anchor>a07edd159317d99803cde14890cc509ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::LineSegmentShapeNode</name>
    <filename>de/da6/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>LineSegmentShapeNode</name>
      <anchorfile>de/da6/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeNode.html</anchorfile>
      <anchor>a3d393d83793c2c2db531de80ba56670d</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::LineSegmentShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>de/da6/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeNode.html</anchorfile>
      <anchor>a35ce3994a930b01e0c21cf6401bd70dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>de/da6/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeNode.html</anchorfile>
      <anchor>a38bd22e13e6a86a784ecff2b33b768aa</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~LineSegmentShapeNode</name>
      <anchorfile>de/da6/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeNode.html</anchorfile>
      <anchor>a4fc3761d2d7a9df641584252d44aa1a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::LineSegmentShape &gt;</type>
      <name>mLineSegmentShape</name>
      <anchorfile>de/da6/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeNode.html</anchorfile>
      <anchor>a6d5d3715089cd39b105c0af0d8362ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineSegmentShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>de/da6/classdart_1_1gui_1_1osg_1_1render_1_1LineSegmentShapeNode.html</anchorfile>
      <anchor>aecc710e6931c752941463fc113a309f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::osgAiNode</name>
    <filename>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>osgAiNode</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a6889c2d5c35abe685cea387c28223def</anchor>
      <arglist>(dart::dynamics::MeshShape *shape, ShapeFrameNode *parentEntity, MeshShapeNode *parentNode, const aiNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a515bec571585b0eee4c78555e7f84ba4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>adbab6d1a8193fd12d34c934ccb5fe317</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function">
      <type>const aiNode *</type>
      <name>getAiNodePtr</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a1c3eda0b0a68536156231bb7b4a79fba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~osgAiNode</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a7643fb2d905794969b518f4e6a97f34e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearChildUtilizationFlags</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>aa8b9d5b972f7ce92bde87935931ba379</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearUnusedNodes</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>adc58cc34e105103d4e980764a2f124ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MeshShapeNode *</type>
      <name>mMainNode</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a5792f71579cb6783351a1c8e06878f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::MeshShape *</type>
      <name>mMeshShape</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a74fb228deb6be7e36caeae523c1ad6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const aiNode *</type>
      <name>mAiNode</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a55e6bcc3f577781c7a85296816c63173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MeshShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>aebb55f0ac64c993f8b25a5be7ddaefd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; const aiNode *, osgAiNode * &gt;</type>
      <name>mChildNodes</name>
      <anchorfile>d2/d09/classdart_1_1gui_1_1osg_1_1render_1_1osgAiNode.html</anchorfile>
      <anchor>a8e9a90d4f678cd85f24c0140c803ca6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::MeshShapeGeode</name>
    <filename>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>MeshShapeGeode</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>ae05370ee74dbea7fd3393b2c72173d34</anchor>
      <arglist>(dart::dynamics::MeshShape *shape, ShapeFrameNode *parentShapeFrame, MeshShapeNode *parentNode, const aiNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>a447758832981f3605a76e08e4e25cf57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>ad5686e24016786262e4fa53bbac10b7f</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MeshShapeGeode</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>a2d5d953290563c7c14311fc54856d8b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearChildUtilizationFlags</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>a57a6733622982cd2c8ea61dc5457986c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearUnusedMeshes</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>ac928cad71d4b14288188c7408283ae3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::MeshShape *</type>
      <name>mMeshShape</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>a90d314056fd36398746daadc89514936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const aiNode *</type>
      <name>mAiNode</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>a0f8c1ac286250f9fb77a28b2d767b838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MeshShapeNode *</type>
      <name>mMainNode</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>a305be3367763570f6e043a1cc9abf8b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; const aiMesh *, MeshShapeGeometry * &gt;</type>
      <name>mMeshes</name>
      <anchorfile>de/d09/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeode.html</anchorfile>
      <anchor>a840ed09ee860273af4e873b6bb33cc4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::MeshShapeGeometry</name>
    <filename>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>MeshShapeGeometry</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a82701bbb7c3e43c35b986c67c5f0a469</anchor>
      <arglist>(dart::dynamics::MeshShape *shape, ShapeFrameNode *parentShapeFrame, MeshShapeNode *parentNode, MeshShapeGeode *parentGeode, aiMesh *mesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a208aac90823f76f52d8e4c0efe5b3eaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a7946175cfa27bca744173f95011eb787</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MeshShapeGeometry</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a70ee7a0cec1a31cb4b8245765e46b7ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec3Array &gt;</type>
      <name>mVertices</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>ad480b0451707e54d551863114371afdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec3Array &gt;</type>
      <name>mNormals</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a678040018fc3e13f5ee1fb451c8e23ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec4Array &gt;</type>
      <name>mColors</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>aafe6c6f38f0560449feeea930798bc0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::MeshShape *</type>
      <name>mMeshShape</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a962a71eb5e3f3382e8d0989881a3c5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const aiMesh *</type>
      <name>mAiMesh</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a1b48dfe540ad8afb040dd253db25973a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MeshShapeNode *</type>
      <name>mMainNode</name>
      <anchorfile>d2/d4f/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeGeometry.html</anchorfile>
      <anchor>a293b9d96d758add03ed822c337f29282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::MeshShapeNode</name>
    <filename>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>MeshShapeNode</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>a085edcb112bca59f475d8a871fcce963</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::MeshShape &gt; shape, ShapeFrameNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>a55db2de7e59dec9dfe43ec3f489af53b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>a18a78b5ac8bdbe63e3a6ca68d44bbe97</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function">
      <type>::osg::Material *</type>
      <name>getMaterial</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>a992f68ac08380dbd84511b20420d0bf7</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getTextureImagePaths</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>aa9ced1b62e09f09118bff816366bd4c3</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MeshShapeNode</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>af0ffa5ecd142c6aab495740d47ed0dfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::MeshShape &gt;</type>
      <name>mMeshShape</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>a28a0b4d339cce0a797506245ea657004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>osgAiNode *</type>
      <name>mRootAiNode</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>a17e3d7504266413e23137ff27bdd938e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ::osg::ref_ptr&lt;::osg::Material &gt; &gt;</type>
      <name>mMaterials</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>aed471cc31560c79c11aea4b874e20892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>mTextureImageArrays</name>
      <anchorfile>d0/d9b/classdart_1_1gui_1_1osg_1_1render_1_1MeshShapeNode.html</anchorfile>
      <anchor>afab9a1c8565c008872da142c75f3bf97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::MultiSphereShapeGeode</name>
    <filename>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>MultiSphereShapeGeode</name>
      <anchorfile>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</anchorfile>
      <anchor>a4d52c5ed60fc576a23a35c9d4681fa3b</anchor>
      <arglist>(dart::dynamics::MultiSphereConvexHullShape *shape, ShapeFrameNode *parentShapeFrame, MultiSphereShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</anchorfile>
      <anchor>a872bd966418c92c984427db4e407b0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</anchorfile>
      <anchor>a80a74c9464e232a3c8001804ab8c7072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiSphereShapeGeode</name>
      <anchorfile>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</anchorfile>
      <anchor>ada630f17b7e313c56ca4989a8f32143e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiSphereShapeNode *</type>
      <name>mParentNode</name>
      <anchorfile>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</anchorfile>
      <anchor>a23f7f9a218ff0ec1c5a376241f780be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::MultiSphereConvexHullShape *</type>
      <name>mMultiSphereShape</name>
      <anchorfile>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</anchorfile>
      <anchor>a496bc816c9a0638d8cbea0f38a3d97a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiSphereShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>da/dcf/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeGeode.html</anchorfile>
      <anchor>a2dac79d16187950d049e710b2e860b2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::MultiSphereShapeDrawable</name>
    <filename>de/d2a/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiSphereShapeDrawable</name>
      <anchorfile>de/d2a/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeDrawable.html</anchorfile>
      <anchor>a7860d691ddcf196938b5b91cf4b0d01e</anchor>
      <arglist>(dart::dynamics::MultiSphereConvexHullShape *shape, dart::dynamics::VisualAspect *visualAspect, MultiSphereShapeGeode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>de/d2a/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeDrawable.html</anchorfile>
      <anchor>a691aa5ff987ea0989f297ae494d41b0e</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiSphereShapeDrawable</name>
      <anchorfile>de/d2a/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeDrawable.html</anchorfile>
      <anchor>a95ba9e57b593988601c8bc282f5f46bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::MultiSphereConvexHullShape *</type>
      <name>mMultiSphereShape</name>
      <anchorfile>de/d2a/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeDrawable.html</anchorfile>
      <anchor>a9f4774c4d50c8fc01ee87d5805e364ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>de/d2a/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeDrawable.html</anchorfile>
      <anchor>a420f69e48a31feb3db0f9a17e0e4e473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiSphereShapeGeode *</type>
      <name>mParent</name>
      <anchorfile>de/d2a/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeDrawable.html</anchorfile>
      <anchor>aa4350b8c84c3c9de31b902c734356aca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::MultiSphereShapeNode</name>
    <filename>d3/dea/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>MultiSphereShapeNode</name>
      <anchorfile>d3/dea/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeNode.html</anchorfile>
      <anchor>ac15ff199f7fd1ec30d1620d1c146e8fb</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::MultiSphereConvexHullShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d3/dea/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeNode.html</anchorfile>
      <anchor>a44ee5dce96327fb49a1b9af020c9c961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d3/dea/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeNode.html</anchorfile>
      <anchor>afb0e3ae59165ffd949f78533251839c7</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiSphereShapeNode</name>
      <anchorfile>d3/dea/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeNode.html</anchorfile>
      <anchor>ab689fb827bf601619afbbcf98c23294f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::MultiSphereConvexHullShape &gt;</type>
      <name>mMultiSphereShape</name>
      <anchorfile>d3/dea/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeNode.html</anchorfile>
      <anchor>ada2bec7a8dd8258c7c45446bb65f8b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiSphereShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>d3/dea/classdart_1_1gui_1_1osg_1_1render_1_1MultiSphereShapeNode.html</anchorfile>
      <anchor>a5d810b3d2672d2f0f1080ce27e3152a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::PlaneShapeGeode</name>
    <filename>d6/d1a/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>PlaneShapeGeode</name>
      <anchorfile>d6/d1a/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeGeode.html</anchorfile>
      <anchor>a20c6a23fbb15c238ea3e793375fc8bd2</anchor>
      <arglist>(dart::dynamics::PlaneShape *shape, ShapeFrameNode *parentShapeFrame, PlaneShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d6/d1a/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeGeode.html</anchorfile>
      <anchor>ac5f28bbc4b4b9a36cfceed3f1fb51157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d6/d1a/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeGeode.html</anchorfile>
      <anchor>a3d1fe8afefc3fb78182c906a5354fe7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PlaneShapeGeode</name>
      <anchorfile>d6/d1a/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeGeode.html</anchorfile>
      <anchor>a937f5510e7142555bc5ffcf6393a57fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::PlaneShape *</type>
      <name>mPlaneShape</name>
      <anchorfile>d6/d1a/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeGeode.html</anchorfile>
      <anchor>a594bd3216004956ca0f156b225cfa30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlaneShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>d6/d1a/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeGeode.html</anchorfile>
      <anchor>a4ea3358f94abdfe41d89edde6a823a6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::PlaneShapeDrawable</name>
    <filename>d5/d00/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>PlaneShapeDrawable</name>
      <anchorfile>d5/d00/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeDrawable.html</anchorfile>
      <anchor>ad1e391903824cc09c7e204f8bcbddcae</anchor>
      <arglist>(dart::dynamics::PlaneShape *shape, dart::dynamics::VisualAspect *visualAspect, PlaneShapeGeode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d5/d00/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeDrawable.html</anchorfile>
      <anchor>a031f4e0c10d23da324d1ba94b17605e5</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PlaneShapeDrawable</name>
      <anchorfile>d5/d00/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeDrawable.html</anchorfile>
      <anchor>adca906437c13d7ce56e3c817376372fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::PlaneShape *</type>
      <name>mPlaneShape</name>
      <anchorfile>d5/d00/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeDrawable.html</anchorfile>
      <anchor>ade81404a2789c5e6f7c158c706727767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>d5/d00/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeDrawable.html</anchorfile>
      <anchor>a9194ca97859b1271f5050843072642ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlaneShapeGeode *</type>
      <name>mParent</name>
      <anchorfile>d5/d00/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeDrawable.html</anchorfile>
      <anchor>aee87d917a9a7a5ed64cf477bea32e4d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::PlaneShapeNode</name>
    <filename>d7/dd3/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>PlaneShapeNode</name>
      <anchorfile>d7/dd3/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeNode.html</anchorfile>
      <anchor>a1b41501a498d7c5b98e5944aa590d219</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::PlaneShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d7/dd3/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeNode.html</anchorfile>
      <anchor>a216c160ba407ae3a7465edf3a107490d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d7/dd3/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeNode.html</anchorfile>
      <anchor>af9ec1e9e0d47f5fd6c7b7b81c351b310</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PlaneShapeNode</name>
      <anchorfile>d7/dd3/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeNode.html</anchorfile>
      <anchor>ad9976c42e2296f8055ac52fb7b4a81d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::PlaneShape &gt;</type>
      <name>mPlaneShape</name>
      <anchorfile>d7/dd3/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeNode.html</anchorfile>
      <anchor>a1e3163940bee500e33b72fb311859e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlaneShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>d7/dd3/classdart_1_1gui_1_1osg_1_1render_1_1PlaneShapeNode.html</anchorfile>
      <anchor>aa59310b188d78523bcb93925d03b3962</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::ShapeNode</name>
    <filename>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</filename>
    <member kind="function">
      <type></type>
      <name>ShapeNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a4889b0018c39ef6310b9411426ee542b</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::Shape &gt; shape, ShapeFrameNode *parentNode,::osg::Node *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShapeNode</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>a10f78c7630deeef0e62770f4d50298cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>d3/d4c/classdart_1_1gui_1_1osg_1_1render_1_1ShapeNode.html</anchorfile>
      <anchor>ac5cc8dc2983c38dff565da4d6c5c11d9</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::SoftMeshShapeGeode</name>
    <filename>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>SoftMeshShapeGeode</name>
      <anchorfile>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</anchorfile>
      <anchor>ab75e1c7813c7252c33ce206e6c0a5ea4</anchor>
      <arglist>(dart::dynamics::SoftMeshShape *shape, ShapeFrameNode *parentShapeFrame, SoftMeshShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</anchorfile>
      <anchor>a86cc18429ecfc214f6fd8e8b73b6752e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</anchorfile>
      <anchor>a45e52a93e2a82f64337d2e0831a0530a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftMeshShapeGeode</name>
      <anchorfile>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</anchorfile>
      <anchor>a8cc8ec9767cb1bc5d66de07b0ef40d80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::SoftMeshShape *</type>
      <name>mSoftMeshShape</name>
      <anchorfile>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</anchorfile>
      <anchor>ad5a0efee850941395a1449821a205527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</anchorfile>
      <anchor>ac9b098a419ad81270602fc95f51fae79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SoftMeshShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>d8/dfd/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeGeode.html</anchorfile>
      <anchor>aa6e18334c32ec5b28dc7f79e374eefa1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::SoftMeshShapeDrawable</name>
    <filename>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>SoftMeshShapeDrawable</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>aabbdd9519229887a4d3a87575a3e618f</anchor>
      <arglist>(dart::dynamics::SoftMeshShape *shape, dart::dynamics::VisualAspect *visualAspect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>af0f21bef534efc484422f4228e79552c</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftMeshShapeDrawable</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>a6237cd22db86f9c7fa2c206ec36568af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec3Array &gt;</type>
      <name>mVertices</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>af30290d5982b2844d1f9438b17e91464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec3Array &gt;</type>
      <name>mNormals</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>aedc53a5000b086d59bae592c34565c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ref_ptr&lt;::osg::Vec4Array &gt;</type>
      <name>mColors</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>a2c5c74b5a6cc275bddbf0df1e7e25159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>mEigNormals</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>a9be4a63b140ea66f300885f15b11d3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::SoftMeshShape *</type>
      <name>mSoftMeshShape</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>a860fda5de0bcc353e1961e75005f6793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>d0/df6/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeDrawable.html</anchorfile>
      <anchor>a73137be52d1d88dc75bb30bf4a8bfdc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::SoftMeshShapeNode</name>
    <filename>d9/d4d/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>SoftMeshShapeNode</name>
      <anchorfile>d9/d4d/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeNode.html</anchorfile>
      <anchor>a81359ee00868987002a3d740e3eba4d5</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::SoftMeshShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d9/d4d/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeNode.html</anchorfile>
      <anchor>a46da06b651fae1ce04ee3b2477216e5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>d9/d4d/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeNode.html</anchorfile>
      <anchor>ae58f5f304bd26c931365537a02cc901e</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftMeshShapeNode</name>
      <anchorfile>d9/d4d/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeNode.html</anchorfile>
      <anchor>a814e73bcca52f909df7302e98bb03808</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::SoftMeshShape &gt;</type>
      <name>mSoftMeshShape</name>
      <anchorfile>d9/d4d/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeNode.html</anchorfile>
      <anchor>a3f05a6aed0ad04f2ef1fd28feffc8710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SoftMeshShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>d9/d4d/classdart_1_1gui_1_1osg_1_1render_1_1SoftMeshShapeNode.html</anchorfile>
      <anchor>a71aff9f554916bab1d38d8483fd84420</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::SphereShapeGeode</name>
    <filename>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>SphereShapeGeode</name>
      <anchorfile>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</anchorfile>
      <anchor>a4cbf9da470d384f7462dbf2dc5564c1b</anchor>
      <arglist>(dart::dynamics::SphereShape *shape, ShapeFrameNode *parentShapeFrame, SphereShapeNode *parentNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</anchorfile>
      <anchor>a9feb27ff6e5cf353d3ba61afc22fa0b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</anchorfile>
      <anchor>a78f3b4f4499decb85c72ae5a5c28acfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~SphereShapeGeode</name>
      <anchorfile>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</anchorfile>
      <anchor>a012d2ef9b9005737098ca29a9acf4ede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SphereShapeNode *</type>
      <name>mParentNode</name>
      <anchorfile>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</anchorfile>
      <anchor>adde5f188f90932fa185283aaedae53c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::SphereShape *</type>
      <name>mSphereShape</name>
      <anchorfile>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</anchorfile>
      <anchor>a774d9810d3017923791dfd00435c593c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SphereShapeDrawable *</type>
      <name>mDrawable</name>
      <anchorfile>dd/dde/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeGeode.html</anchorfile>
      <anchor>add739ae3fc669f1d5a1490c89b45e9a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::SphereShapeDrawable</name>
    <filename>d4/d51/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeDrawable.html</filename>
    <member kind="function">
      <type></type>
      <name>SphereShapeDrawable</name>
      <anchorfile>d4/d51/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeDrawable.html</anchorfile>
      <anchor>a14d034db361cbcd6a387a65ddce1180f</anchor>
      <arglist>(dart::dynamics::SphereShape *shape, dart::dynamics::VisualAspect *visualAspect, SphereShapeGeode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d4/d51/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeDrawable.html</anchorfile>
      <anchor>ae5655c7bbdf5cfd3b69fd1d3a79d2cc1</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~SphereShapeDrawable</name>
      <anchorfile>d4/d51/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeDrawable.html</anchorfile>
      <anchor>a59daaabe970133abc70808e2f729cb7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::SphereShape *</type>
      <name>mSphereShape</name>
      <anchorfile>d4/d51/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeDrawable.html</anchorfile>
      <anchor>aed2151ffca38418d1d35fdd36c2e65c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::dynamics::VisualAspect *</type>
      <name>mVisualAspect</name>
      <anchorfile>d4/d51/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeDrawable.html</anchorfile>
      <anchor>af9380e706f5d81b2578275e7cd06352d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SphereShapeGeode *</type>
      <name>mParent</name>
      <anchorfile>d4/d51/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeDrawable.html</anchorfile>
      <anchor>a6853df53bfa506f82008e99074144f91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::SphereShapeNode</name>
    <filename>dd/dbe/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>SphereShapeNode</name>
      <anchorfile>dd/dbe/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeNode.html</anchorfile>
      <anchor>a6b95361593e39554d8d1a6ff16f1c093</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::SphereShape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>dd/dbe/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeNode.html</anchorfile>
      <anchor>a7a66836ec89cb3a5e19a5810769621ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractData</name>
      <anchorfile>dd/dbe/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeNode.html</anchorfile>
      <anchor>a2ccd8828165c52f777a72a1af535b26e</anchor>
      <arglist>(bool firstTime)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~SphereShapeNode</name>
      <anchorfile>dd/dbe/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeNode.html</anchorfile>
      <anchor>a5bf997970c8145b07d2866aa9bbd6e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; dart::dynamics::SphereShape &gt;</type>
      <name>mSphereShape</name>
      <anchorfile>dd/dbe/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeNode.html</anchorfile>
      <anchor>a225d4e71a19730118d1681fb4f1d1f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SphereShapeGeode *</type>
      <name>mGeode</name>
      <anchorfile>dd/dbe/classdart_1_1gui_1_1osg_1_1render_1_1SphereShapeNode.html</anchorfile>
      <anchor>a1043e8f10fe82f672ba59b9440322dd9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::osg::render::WarningShapeNode</name>
    <filename>d8/d9b/classdart_1_1gui_1_1osg_1_1render_1_1WarningShapeNode.html</filename>
    <base>dart::gui::osg::render::ShapeNode</base>
    <member kind="function">
      <type></type>
      <name>WarningShapeNode</name>
      <anchorfile>d8/d9b/classdart_1_1gui_1_1osg_1_1render_1_1WarningShapeNode.html</anchorfile>
      <anchor>a10bb7e638f30b9af0e2936c917cc12e2</anchor>
      <arglist>(std::shared_ptr&lt; dart::dynamics::Shape &gt; shape, ShapeFrameNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>d8/d9b/classdart_1_1gui_1_1osg_1_1render_1_1WarningShapeNode.html</anchorfile>
      <anchor>adc3a74ffeb2248753fda775484d6f0e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~WarningShapeNode</name>
      <anchorfile>d8/d9b/classdart_1_1gui_1_1osg_1_1render_1_1WarningShapeNode.html</anchorfile>
      <anchor>a2fbac65e0910741c05761788c9f898ab</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::gui::osg::sfs_dnd</name>
    <filename>d2/d41/namespacedart_1_1gui_1_1osg_1_1sfs__dnd.html</filename>
    <member kind="typedef">
      <type>std::multimap&lt; dart::dynamics::Shape *, SimpleFrameShapeDnD * &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>d2/d41/namespacedart_1_1gui_1_1osg_1_1sfs__dnd.html</anchorfile>
      <anchor>a0b17718bdefa36a430f29160bad4a921</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::integration</name>
    <filename>d2/d08/namespacedart_1_1integration.html</filename>
    <class kind="class">dart::integration::EulerIntegrator</class>
    <class kind="class">dart::integration::IntegrableSystem</class>
    <class kind="class">dart::integration::Integrator</class>
    <class kind="class">dart::integration::RK4Integrator</class>
    <class kind="class">dart::integration::SemiImplicitEulerIntegrator</class>
  </compound>
  <compound kind="class">
    <name>dart::integration::EulerIntegrator</name>
    <filename>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</filename>
    <base>dart::integration::Integrator</base>
    <member kind="function">
      <type></type>
      <name>EulerIntegrator</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>a6965c805658806e1123d0a981d913beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EulerIntegrator</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>ad7b2c699890aea80b139dc40fc7495fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>ae5965b687f4a2058b4c75b32f0b645ff</anchor>
      <arglist>(IntegrableSystem *_system, double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePos</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>a7eb69cab339177b6cdab6f460b7aadd0</anchor>
      <arglist>(IntegrableSystem *_system, double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVel</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>a957d2e5eb04823516928c844256c4ce8</anchor>
      <arglist>(IntegrableSystem *_system, double _dt) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::IntegrableSystem</name>
    <filename>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</filename>
    <member kind="function">
      <type></type>
      <name>IntegrableSystem</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a82342896aa990aef8fae025d1f202aac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IntegrableSystem</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>adc88a004620d328a173427f252e9ea12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setConfigs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>aa36000aa29b07865ebe092c863c5e1ba</anchor>
      <arglist>(const Eigen::VectorXd &amp;_configs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setGenVels</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a35052d65dc82d87fefeffc8bdaca569a</anchor>
      <arglist>(const Eigen::VectorXd &amp;_genVels)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getConfigs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a0cc4665f3ceb9ac93f767918094dd9b0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getGenVels</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a5ab08d4449cb3ef37dc6a08a2300a152</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>evalGenAccs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a776a6ac9ca1bac3f639cef2ccfee5314</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrateConfigs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a30d9e370716d7b5d77df84c29ccf4ec4</anchor>
      <arglist>(const Eigen::VectorXd &amp;_genVels, double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrateGenVels</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>abc70edea248c79de22b5fa23dada3690</anchor>
      <arglist>(const Eigen::VectorXd &amp;_genVels, double _dt)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::Integrator</name>
    <filename>de/d6a/classdart_1_1integration_1_1Integrator.html</filename>
    <member kind="function">
      <type></type>
      <name>Integrator</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a91c61669cc390c4f9d444d05e99c2cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Integrator</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a964ade6f361c91b12f6b468c922a83a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrate</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a8a2cd1a325345d1e2818041db23264e8</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integratePos</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>af50fdbf511543a0f2eee8ceff70c572c</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrateVel</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>afc5e083f6bd257f1fb6e2414aa1925c1</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::RK4Integrator</name>
    <filename>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</filename>
    <base>dart::integration::Integrator</base>
    <member kind="function">
      <type></type>
      <name>RK4Integrator</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>acfa64ece4e5e8233ab8bfe5491568e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RK4Integrator</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a22f0812e3224a3900c1d3db926e22c86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a07f4179f57e8ea4f867447bf98a293b7</anchor>
      <arglist>(IntegrableSystem *_system, double _dt) override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>q1</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a54b735fe63e6eb4868cbf781d1e6f37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq1</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>aa4dbaa5dd6d816e616092eb21080bcd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq2</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ad7a8f93418ed2432bfe207dd189c1f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq3</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ac6ab56a179a630c1ccabb0304c1ff879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq4</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>aae776af3b770a73e0c0e315da6da121e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq1</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ad491f0043edd8f934aae95e9063a3922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq2</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a3ae493b284c9259bc60fc25817d57700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq3</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ab1eb8d6ba49f8b26205f56cd3d20e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq4</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>afc40f3721c025af6f979b47b591187e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::SemiImplicitEulerIntegrator</name>
    <filename>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</filename>
    <base>dart::integration::Integrator</base>
    <member kind="function">
      <type></type>
      <name>SemiImplicitEulerIntegrator</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>af6a738542090e0c0a2502cc203b126bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SemiImplicitEulerIntegrator</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>a6eca5fda3f412c1a388ade941f22e6d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>af93de02051be3c46ca1dfe4ed307908b</anchor>
      <arglist>(IntegrableSystem *_system, double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePos</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>afeff9b240ae55e753407d5761d2fc8aa</anchor>
      <arglist>(IntegrableSystem *_system, double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVel</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>a77a5d538d605b13d27ea5976a0768a58</anchor>
      <arglist>(IntegrableSystem *_system, double _dt) override</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::lcpsolver</name>
    <filename>d4/d05/namespacedart_1_1lcpsolver.html</filename>
    <class kind="class">dart::lcpsolver::ODELCPSolver</class>
    <member kind="function">
      <type>int</type>
      <name>Lemke</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>ab1b433bd881c42c773799c25053272bd</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_q, Eigen::VectorXd *_z)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>a9762b4ca0686aa114c73d7e8f951e6e1</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_z, const Eigen::VectorXd &amp;_q)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::lcpsolver::ODELCPSolver</name>
    <filename>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>ODELCPSolver</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>adf33dcbd5405bfbfe61eb28b72be01a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ODELCPSolver</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>af7030f2791a6455880404706f3e94a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Solve</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a8b88ae06a0d3855d18efd51492d6049d</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_A, const Eigen::VectorXd &amp;_b, Eigen::VectorXd *_x, int numContacts, double mu=0, int numDir=0, bool bUseODESolver=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>transferToODEFormulation</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a350df3d8fa53b8fc9d61cbcf9125c2bc</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_A, const Eigen::VectorXd &amp;_b, Eigen::MatrixXd *_AOut, Eigen::VectorXd *_bOut, int _numDir, int _numContacts)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>transferSolFromODEFormulation</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a2e42f432b12118cee8f73d25179c3faf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::VectorXd *_xOut, int _numDir, int _numContacts)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>checkIfSolution</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a15fafa037ad1b9fc4f7963872dc10301</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_A, const Eigen::VectorXd &amp;_b, const Eigen::VectorXd &amp;_x)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::math</name>
    <filename>d8/d96/namespacedart_1_1math.html</filename>
    <namespace>dart::math::detail</namespace>
    <namespace>dart::math::suffixes</namespace>
    <class kind="struct">dart::math::RealVectorSpace</class>
    <class kind="struct">dart::math::SO3Space</class>
    <class kind="struct">dart::math::SE3Space</class>
    <class kind="struct">dart::math::MapsToManifoldPoint</class>
    <class kind="struct">dart::math::constants</class>
    <class kind="struct">dart::math::HullAngle</class>
    <class kind="class">dart::math::BoundingBox</class>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 0u &gt;</type>
      <name>NullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2e6eb0a4590dec732af1b119739d5189</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 1u &gt;</type>
      <name>R1Space</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a98800600df3afbffb81dc27146c76acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 2u &gt;</type>
      <name>R2Space</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3ffd01ccc936845571cb1c61bb20c67e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RealVectorSpace&lt; 3u &gt;</type>
      <name>R3Space</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8e29b2372aaaa279ee9041a06354ce57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constants&lt; float &gt;</type>
      <name>constantsf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1027d05442d4a125f9433130258395a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constants&lt; double &gt;</type>
      <name>constantsd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af7b4c9122f7a9882c85d4613109633dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>SupportGeometry</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae600b44172da50dfaf79a6bb02493e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::aligned_vector&lt; Eigen::Vector2d &gt;</type>
      <name>SupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>afe00691d18a940ea75ac1d1693b57ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix6d</type>
      <name>Inertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>afbfbeee4dd315cd92be8d0008b32e06d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>LinearJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aae98472b61ec9cd58aa0575cc5fce4e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>AngularJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8431d241e83ad9cd44d2404eeefc44c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, Eigen::Dynamic &gt;</type>
      <name>Jacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a286372dc0bcfc154fc772b53f23534e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisType</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_X</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204a6a2125f0004a8b2dcbb449c9640762de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Y</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204a593bd8d4d09fb8d2d46d30c3a93ef32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Z</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a263c1ce494ba2a8cf1e1c738e3bb2204ae68d9690f23ba6033eaa9225b15e909c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IntersectionResult</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INTERSECTING</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927a092c53833ef135d6d824e61467ac63cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PARALLEL</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927ae0bd9f4a8d9f0863eafccd58ed9dd75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BEYOND_ENDPOINTS</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa6dea7601b767f84a165bcdaf3c3a927ad29cba0b7fcfeffda98892d6ac27fa83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Matrix</type>
      <name>inverse</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a02f7adb2b0f73f673f9aed01c1b92479</anchor>
      <arglist>(const typename SpaceT::Matrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::EuclideanPoint</type>
      <name>toEuclideanPoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a23db23495ff34a91d90a13cbe148292e</anchor>
      <arglist>(const typename SpaceT::Point &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Point</type>
      <name>toManifoldPoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a558674cbdad333f45b95d75988c0b906</anchor>
      <arglist>(const typename SpaceT::EuclideanPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Point</type>
      <name>integratePosition</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adf6a062113a89fd5a22feee0423d74a6</anchor>
      <arglist>(const typename SpaceT::Point &amp;pos, const typename SpaceT::Vector &amp;vel, double dt)</arglist>
    </member>
    <member kind="function">
      <type>SpaceT::Vector</type>
      <name>integrateVelocity</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8394dd01bb256146e982a3094bd4ab6d</anchor>
      <arglist>(const typename SpaceT::Vector &amp;vel, const typename SpaceT::Vector &amp;acc, double dt)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Quaterniond</type>
      <name>expToQuat</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af7d1a1edd8644935ddf7d40e7c39139a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>quatToExp</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a141d99b2112e9037173869b04db2f2f1</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2cc210efedf46185991c7d7a48041302</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a53e69e887f81c59d26779a25fbe6ea7d</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad2b40ea6672026a84497098ac5cb1397</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXZY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aba375c47a8f4c23887c774f919414394</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYZX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac6b7603b1f1331d7325d4f839d5b9f94</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZXY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a300bb57a417ec13fea861862d5fc515c</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYXZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ab1e6567ea0da8425074d0aeaf33eccf4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abb994d2ee6ea73bb6cbe905cd1315b84</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, int _el)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatSecondDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a84d204205a4aab3f25b2d6eec85c43d7</anchor>
      <arglist>(const Eigen::Quaterniond &amp;, int _el1, int _el2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7ea25a547fac6b565c3648d4ff166015</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, const Eigen::Vector3d &amp;_pt)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abe4adfd592c2583df0a781858b2fb95e</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, double _x, double _y, double _z)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapRot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af297b066593714b7d7006d531c2328ac</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a412fc66129eb82f75db6583bdf92bee0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a522cc1f979c523b9cc941314ef12617a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, const Eigen::Vector3d &amp;_qdot)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a34115fbab9140a00f3b487988af277a2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, int _qi)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a91021e58843804e7ca334848ff9f0323</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ace4da4be316f9118106f4aacfe8f64f9</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae84a491564ace03bafae3c722aa34625</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix6d</type>
      <name>getAdTMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a19a4d72416c58021ea930b2abfd43bd8</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a94ee36ccaecf43cd56f76436a162c739</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad93b6aeae970e23802f8414fd9e6a04a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_w)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a74e4177978a837724e6e7a0cb245dbf2</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9101a1475e595473ff3f10a4327c8298</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvRLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7e6d60f0c41f72b7882c0d5284dad923</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>ad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adff5879e39b18ee5960c5a08d5df2e4d</anchor>
      <arglist>(const Eigen::Vector6d &amp;_X, const Eigen::Vector6d &amp;_Y)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adeb4234a66c0ed1421dcd29f93019ec6</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9854a5049755e2a650b3991b6d3f5e7a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af711369d6350070cfa4c77755a2ab7cd</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a20617208f9bbe866879599ec6dd9f786</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b38698e6201d7b0e4aaf2e6b911ca11</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a802f1b38213ae193e12a240bc62a9185</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a96f028b28d5e6a7b8cc5655b68a06742</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a39ba5e09917d711d74c2f8d0ec0479a7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acef3b0a3efc7e66ec7d15ca3bdd32fb2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa10f381ffdb7c81e65a9b774a745718e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae44c2d83cb238e105321c14fc7055ecf</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3449f3b223c59177be45caff72055d9e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7666b356f04c3c164d5163941c9163d3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a264c003134882cd1dfbd24b555e73ee3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a33ad7519de3e0ea3ff49070cb670a191</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a941645eb9bd1432d03c8c1c895f61f22</anchor>
      <arglist>(const Eigen::Vector6d &amp;_S)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81ae793a0afa85624599fdde127531f2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_s)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a04344c560b26fbaa456dbb0ed4a09c21</anchor>
      <arglist>(const Eigen::Vector6d &amp;_s, const Eigen::Vector6d &amp;_t)</arglist>
    </member>
    <member kind="function">
      <type>Inertia</type>
      <name>transformInertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a729c89efdeb2557f1106bf89275e5b2a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Inertia &amp;_I)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>parallelAxisTheorem</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81735893e4f6d1cf950a0aa181db367e</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_original, const Eigen::Vector3d &amp;_comShift, double _mass)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyRotation</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a251a976dbb610f07df4ef5b3efba4f00</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyTransform</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a87b8aed61a081a0130e6e24759af13e4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>fromSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a60ed1d87345d9718ff7f9a6cb337eac4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>makeSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc4b6c2f5202c6ee0d82ff84812dae6b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>computeRotation</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a41a8812fdab8b93d6f56ed9aa71f232a</anchor>
      <arglist>(const Eigen::Vector3d &amp;axis, AxisType axisType=AxisType::AXIS_X)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>computeTransform</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a807b856a5b9a535010ab036c90803aa2</anchor>
      <arglist>(const Eigen::Vector3d &amp;axis, const Eigen::Vector3d &amp;translation, AxisType axisType=AxisType::AXIS_X)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getFrameOriginAxisZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f897dd4d484e992da657fcbabb0f919</anchor>
      <arglist>(const Eigen::Vector3d &amp;_origin, const Eigen::Vector3d &amp;_axisZ)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a29ae6cceff278dcf8050c1d898d74ce6</anchor>
      <arglist>(const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a088fa4b195a93e9590f778ddbff43799</anchor>
      <arglist>(std::vector&lt; std::size_t &gt; &amp;_originalIndices, const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>HullAngleComparison</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae49e071956594129e38963ee5658b352</anchor>
      <arglist>(const HullAngle &amp;a, const HullAngle &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa51acb5d0b72768b14d41d537f7491ce</anchor>
      <arglist>(const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeCentroidOfHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7428be3f6b672574f5d88ab0b151679e</anchor>
      <arglist>(const SupportPolygon &amp;_convexHull)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLeftTurn</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aedf772d885972a89cdfb838ba4ed7d30</anchor>
      <arglist>(const Eigen::Vector2d &amp;p1, const Eigen::Vector2d &amp;p2, const Eigen::Vector2d &amp;p3)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa2833b1c9065038e031d234d7cd5ecfc</anchor>
      <arglist>(std::vector&lt; std::size_t &gt; &amp;_originalIndices, const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>IntersectionResult</type>
      <name>computeIntersection</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a077c96b2a7fd326681e31d5d947d4108</anchor>
      <arglist>(Eigen::Vector2d &amp;_intersectionPoint, const Eigen::Vector2d &amp;a1, const Eigen::Vector2d &amp;a2, const Eigen::Vector2d &amp;b1, const Eigen::Vector2d &amp;b2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cross</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a95a0f98be589c708f9506e634eb5df77</anchor>
      <arglist>(const Eigen::Vector2d &amp;_v1, const Eigen::Vector2d &amp;_v2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInsideSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a797012fe8e744db0d506962babc459e9</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support, bool _includeEdge=true)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnLineSegment</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a691f20bdcabbd8698298956308e2d161</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const Eigen::Vector2d &amp;_s1, const Eigen::Vector2d &amp;_s2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae496bd6bc2539f04e3d896beea4ca076</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4a2a8bb71cecea244a69dc3f823bdf79</anchor>
      <arglist>(std::size_t &amp;_index1, std::size_t &amp;_index2, const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adcd54cb5639a2593346270b2c53db123</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabbaeab2e1963d804100e12d8074c721</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b9e504bac01072086e0c5b193977471</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRInvJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8f0824887c01f56cb9fcaa1c378c6e97</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>adJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad451eb0dab3653087e5c4a2796142fcd</anchor>
      <arglist>(const Eigen::Vector6d &amp;_V, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0a8894d3fc25851007d2e017e72bbbb7</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a131e114a83953cf9d09ef1f2023b3a72</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wrapToPi</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4e75a92567b885d3c77c8f80643a880a</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabe11a905af9d37de0be1d8ef240e5f9</anchor>
      <arglist>(const Eigen::JacobiSVD&lt; MatrixType &gt; &amp;_SVD, ReturnType &amp;_NS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abdcb569c37a9d5877249411ec09b8975</anchor>
      <arglist>(const MatrixType &amp;_M, ReturnType &amp;_NS)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>toRadian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa23cf0ab5553dad2fc716d82382b13e3</anchor>
      <arglist>(const T &amp;degree)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>toDegree</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2d8342225136c6cc6ab19eed0210ffd3</anchor>
      <arglist>(const T &amp;radian)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix2d</type>
      <name>CR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a016887264359b2adec638f50b2f521d9</anchor>
      <arglist>((Eigen::Matrix2d()&lt;&lt; 0.0,-1.0, 1.0, 0.0).finished())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delta</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae6aede87f5eb5a1e43f0c8421dc237fa</anchor>
      <arglist>(int _i, int _j)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9eef8bbcf51caedb89883c2379e3f1bd</anchor>
      <arglist>(T x, std::false_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac8163ea1c30b0bea0518b73f3a64bad1</anchor>
      <arglist>(T x, std::true_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc6974b0afdc5c38c0d708ac527a9e94</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sqr</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaf35aa090d0b6f33e81c40697334df61</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tsinc</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9f15082c7168daabbfddd223e1fe0158</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0ad9bb6d4eb0eeaa2f5d8181da7a0fb3</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asinh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adbdd4d2bd45b418902a972396060ab83</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5c44bf9370aa09e62340dd61475c11be</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>atanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a607feabb775dd93e2b935cb0fef3f712</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad24a2a30d51d65525d2214ef57cb01e7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4d0c4511a8ead15fb3b6ddc00b474b80</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acotanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad7e59127fc4e27b67a6851eb785591c7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa69de55cf8cae77bea99419a278bf436</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round2</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a897a62e960b3fe0f95a529fe911eff7d</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a245be608b49628752ed042179cd818fc</anchor>
      <arglist>(const T &amp;val, const T &amp;lower, const T &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>DerivedA::PlainObject</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac03ac59520bf6338921471e34af439bb</anchor>
      <arglist>(const Eigen::MatrixBase&lt; DerivedA &gt; &amp;val, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;lower, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3660a2b791e39ec186f8632c94ba0dbb</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInt</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aecdb589c0ea301a4d55e79780479b0b3</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af5b30515f57b6a7eea27ace602bb346b</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a17ab5a7cba3e8f0f27e6b5f300c290ed</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac722257c75263b69e7997d672ffe0126</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af1b073e98b687a9aa406af54ad68d3d2</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aca0a14a88fdfa483185ffa5fe66feeba</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m, double _tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>seedRand</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f60c93c6ccddec2989611956bce69bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaebe9dfa697cd24a66650059b1bc743a</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5133c95e7c1213b2af0de0696047c5f3</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adfee9c8e11ec79925fefa99e527dd781</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9ef2cf4752be899a945fe26a9ee36626</anchor>
      <arglist>(std::size_t size, double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae6937beb7b25f2898f06d1aaf7745460</anchor>
      <arglist>(std::size_t size, double limit)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::math::RealVectorSpace</name>
    <filename>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</filename>
    <templarg>Dimension</templarg>
    <member kind="typedef">
      <type>RealVectorSpace&lt; NumDofs &gt;</type>
      <name>TangentSpace</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>ad659a921f601e2eb0b4719b15fb61ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, NumDofs, 1 &gt;</type>
      <name>Point</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>a3b8fe77a51843041eae2b24ae469c89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, NumDofs, 1 &gt;</type>
      <name>EuclideanPoint</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>a84e1becc3aec1728309701dd239cf0a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, NumDofs, 1 &gt;</type>
      <name>Vector</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>a430402b4193aa7ab37ec3b6f872605ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, NumDofs, NumDofs &gt;</type>
      <name>Matrix</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>a16fc5b0a05e0a6f00d35b9f296ba063b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, NumDofs &gt;</type>
      <name>JacobianMatrix</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>ad4f230fb29c1926b89cd725e3f12a058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>af665edbe8ec586d8b64e92d2a17c3ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int</type>
      <name>NumDofsEigen</name>
      <anchorfile>d7/d50/structdart_1_1math_1_1RealVectorSpace.html</anchorfile>
      <anchor>a4d541cc2b0afa1b97f54615420442ba7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::math::SO3Space</name>
    <filename>d3/df4/structdart_1_1math_1_1SO3Space.html</filename>
    <member kind="typedef">
      <type>RealVectorSpace&lt; NumDofs &gt;</type>
      <name>TangentSpace</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>a59311b900ffa7eabcea205669e7462f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix3d</type>
      <name>Point</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>aefc797fd36457cd0aae3a000cdd95fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Vector3d</type>
      <name>EuclideanPoint</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>a0f939bdf6a4f89b6e92c128d23d74fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Vector3d</type>
      <name>Vector</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>a4b56f71f1b000743973ecd09cc131549</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix3d</type>
      <name>Matrix</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>aa82dbc3c3281d98cf49c00c13e173814</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, NumDofs &gt;</type>
      <name>JacobianMatrix</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>a85df7c07a30a96a098193c4fe0c27b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>a02323ab097a830a4089d11f8745198f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int</type>
      <name>NumDofsEigen</name>
      <anchorfile>d3/df4/structdart_1_1math_1_1SO3Space.html</anchorfile>
      <anchor>a7624d04dc90aadd21b38d8396258ae2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::math::SE3Space</name>
    <filename>d8/db9/structdart_1_1math_1_1SE3Space.html</filename>
    <member kind="typedef">
      <type>RealVectorSpace&lt; NumDofs &gt;</type>
      <name>TangentSpace</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>af336aa9fdc0e5ddcb141c4890ba96a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Isometry3d</type>
      <name>Point</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>a57fea96d15dd981ff30af429e7103d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Vector6d</type>
      <name>EuclideanPoint</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>a1710ceebec07c0e256a33dc3f73173e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Vector6d</type>
      <name>Vector</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>ae1b4e6d48ed17211b18012492f29e762</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix6d</type>
      <name>Matrix</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>ac78e4fcfa7031f6bb030e074474d1425</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix6d</type>
      <name>JacobianMatrix</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>a7d12ebf573592a64ed762ed3ab55e87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::size_t</type>
      <name>NumDofs</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>a1d7b46804c9b7ea2654470cc18cab8d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int</type>
      <name>NumDofsEigen</name>
      <anchorfile>d8/db9/structdart_1_1math_1_1SE3Space.html</anchorfile>
      <anchor>a6afa854bad3f307d53f796c13a56f115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::math::MapsToManifoldPoint</name>
    <filename>d6/d67/structdart_1_1math_1_1MapsToManifoldPoint.html</filename>
  </compound>
  <compound kind="struct">
    <name>dart::math::constants</name>
    <filename>d4/d7f/structdart_1_1math_1_1constants.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>pi</name>
      <anchorfile>d4/d7f/structdart_1_1math_1_1constants.html</anchorfile>
      <anchor>a0ba60217d1ec2e4fbeb76a65c9b98321</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>two_pi</name>
      <anchorfile>d4/d7f/structdart_1_1math_1_1constants.html</anchorfile>
      <anchor>a25c0fd857c3557f5c4704454fa752cd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>half_pi</name>
      <anchorfile>d4/d7f/structdart_1_1math_1_1constants.html</anchorfile>
      <anchor>a44a17c99d4b6d73a564f903b18863ad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>pi_sqr</name>
      <anchorfile>d4/d7f/structdart_1_1math_1_1constants.html</anchorfile>
      <anchor>a585d9e42f771b944c08b4b9a34126851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>phi</name>
      <anchorfile>d4/d7f/structdart_1_1math_1_1constants.html</anchorfile>
      <anchor>a752d4cb8997bcc3563664873b1b18833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr T</type>
      <name>inf</name>
      <anchorfile>d4/d7f/structdart_1_1math_1_1constants.html</anchorfile>
      <anchor>a0ebb219a7e821659611c1d065a904757</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::math::HullAngle</name>
    <filename>d7/dc6/structdart_1_1math_1_1HullAngle.html</filename>
    <member kind="function">
      <type></type>
      <name>HullAngle</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>a632f46c231a826985ee0f944ee1b582a</anchor>
      <arglist>(double angle, double distance, std::size_t index)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mAngle</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>aceb5d36428ee02e0e0ca14cdfa5495ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDistance</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>af0e82d62420aaf09166307e56c430124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mIndex</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>a9fb150ac10616352e8ea2b200a767d61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::math::BoundingBox</name>
    <filename>da/d06/classdart_1_1math_1_1BoundingBox.html</filename>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>BoundingBox</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>ac140d73d5ca8d1c3d787e109c3ec6c0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundingBox</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>aefdf0e633bd2772a4f8eaa6026b01880</anchor>
      <arglist>(const Eigen::Vector3d &amp;min, const Eigen::Vector3d &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getMin</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>a9b3206685ef021545efc12569418e71b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getMax</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>a0bcec91bbd31eede79a71728e52cbf2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMin</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>a20d35577d893dd49ffa4f05e64205c45</anchor>
      <arglist>(const Eigen::Vector3d &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMax</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>aba66d0355968eab405962a766714170f</anchor>
      <arglist>(const Eigen::Vector3d &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>computeCenter</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>a399b1b021abb1d633c09e33ab1659a1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>computeHalfExtents</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>a782d9672478ff4d427e0923a80b6c804</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>computeFullExtents</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>ac802393048ca820032f0b2b37f8eaf26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mMin</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>aa9655c374dea8ddf63b32842d72dc121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mMax</name>
      <anchorfile>da/d06/classdart_1_1math_1_1BoundingBox.html</anchorfile>
      <anchor>a48b1338bb5bffa6ad1a1225f5f9abaa3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::math::detail</name>
    <filename>d7/da2/namespacedart_1_1math_1_1detail.html</filename>
    <class kind="struct">dart::math::detail::Range</class>
    <class kind="struct">dart::math::detail::inverseImpl</class>
  </compound>
  <compound kind="struct">
    <name>dart::math::detail::Range</name>
    <filename>d6/d32/structdart_1_1math_1_1detail_1_1Range.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>dart::math::detail::inverseImpl</name>
    <filename>d2/d99/structdart_1_1math_1_1detail_1_1inverseImpl.html</filename>
    <templarg></templarg>
    <templarg>Size</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>run</name>
      <anchorfile>d2/d99/structdart_1_1math_1_1detail_1_1inverseImpl.html</anchorfile>
      <anchor>ad0e28f92d99854830dbeac265979390d</anchor>
      <arglist>(const MatrixType &amp;matrix, MatrixType &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::math::suffixes</name>
    <filename>db/de8/namespacedart_1_1math_1_1suffixes.html</filename>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_pi</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>ac81d5a7db4dd34422738774904d73209</anchor>
      <arglist>(long double x)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_pi</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>a17cb157a2daa50a594a210b7a490dd4e</anchor>
      <arglist>(unsigned long long int x)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>a402c072f064c67b29a08f034abf756fb</anchor>
      <arglist>(long double angle)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_rad</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>a8063db69077d5c2d33d56420a5dc1d3a</anchor>
      <arglist>(unsigned long long int angle)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>ab49e0609341b831df966b5bb2b587cbe</anchor>
      <arglist>(long double angle)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>operator&quot;&quot;_deg</name>
      <anchorfile>db/de8/namespacedart_1_1math_1_1suffixes.html</anchorfile>
      <anchor>aa34ad219e393212f643d3f6a08084cf1</anchor>
      <arglist>(unsigned long long int angle)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::optimizer</name>
    <filename>d4/d47/namespacedart_1_1optimizer.html</filename>
    <namespace>dart::optimizer::snopt</namespace>
    <class kind="class">dart::optimizer::Function</class>
    <class kind="class">dart::optimizer::ModularFunction</class>
    <class kind="class">dart::optimizer::NullFunction</class>
    <class kind="class">dart::optimizer::MultiFunction</class>
    <class kind="class">dart::optimizer::GradientDescentSolver</class>
    <class kind="class">dart::optimizer::IpoptSolver</class>
    <class kind="class">dart::optimizer::DartTNLP</class>
    <class kind="class">dart::optimizer::NloptSolver</class>
    <class kind="class">dart::optimizer::Problem</class>
    <class kind="class">dart::optimizer::Solver</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Function &gt;</type>
      <name>FunctionPtr</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a091d108c3f5c8ca77baeae7abe86c31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; double(const Eigen::VectorXd &amp;)&gt;</type>
      <name>CostFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af80afcab7fabba4d4448dda1c1dc67a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd &gt;)&gt;</type>
      <name>GradientFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a0b89e9da6eecfd2bddffa178f9c2e9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt;)&gt;</type>
      <name>HessianFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a5655d552729d314fa9ed6e1674c0b10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>convertToStd</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a36ec915bdf1142fda333b8f9097897fb</anchor>
      <arglist>(const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>convertToEigen</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af02d36b8a16c293b1f7f3d8e3cff14e3</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;_v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a92585cfcd9282db4f1f543a7cccebcf7</anchor>
      <arglist>(std::size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::Function</name>
    <filename>d9/dae/classdart_1_1optimizer_1_1Function.html</filename>
    <member kind="function">
      <type></type>
      <name>Function</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a6a5c1eb0d6e16b61d00ec720f3811500</anchor>
      <arglist>(const std::string &amp;_name=&quot;function&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Function</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a990d67a98dc2e125e0e06d07eae615ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a784a3d006fa04c88b78770060e68399e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalGradient</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>afe460f53b91a4e0445d9a10f77bcf827</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::ModularFunction</name>
    <filename>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</filename>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>ModularFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a9a62e3a8edb7666d2501af39b1812597</anchor>
      <arglist>(const std::string &amp;_name=&quot;modular_function&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModularFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a9cdbcedfae40cabf3cd89a00021dcff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>aa01834a9a48e4cb2d0b2a30690a108de</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>aa676e52319c2159a6edb2a378162c40c</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalHessian</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a1d9f92a5b42e265bab72d35909d3e423</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt; _Hess) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCostFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>ad742eb80e1910a96ea603f8a8ff11e90</anchor>
      <arglist>(CostFunction _cost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCostFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a01e21a00f2dea82dfa271cba916cc77f</anchor>
      <arglist>(bool _printWarning=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGradientFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>ab7a7074eb43851f8d74b020dd125fd7c</anchor>
      <arglist>(GradientFunction _gradient)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearGradientFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a5550bfc0185f6d224f115c02281d28a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHessianFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>ad943114af84c4c3106de9222b7fc856c</anchor>
      <arglist>(HessianFunction _hessian)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHessianFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a809579ef69fda39410655dfd86c68b22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CostFunction</type>
      <name>mCostFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a386fde0fc7b3e00cb550501ad669a64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GradientFunction</type>
      <name>mGradientFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>aa9e1099f5a2408c705f46387b74f6fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HessianFunction</type>
      <name>mHessianFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a0a7cf770906c224cf88400ab1af88664</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::NullFunction</name>
    <filename>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</filename>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>NullFunction</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>a6e75d90f421c0dc3f133f27ea153ce3b</anchor>
      <arglist>(const std::string &amp;_name=&quot;null_function&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullFunction</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>ac8157d173b7ce19455b6dc804718b3e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>acb4e30788249d26c15fed53f61c40502</anchor>
      <arglist>(const Eigen::VectorXd &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>a63db7cdd1ca136bd990fe4d98ae24952</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalHessian</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>a06930265e8ba6903674648dd0a0ea31e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt; _Hess) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::MultiFunction</name>
    <filename>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiFunction</name>
      <anchorfile>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</anchorfile>
      <anchor>af76236970e4d820a8d66ab23df4ec8b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiFunction</name>
      <anchorfile>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</anchorfile>
      <anchor>a72cfb5b6147e1d12d591d782a0c30204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</anchorfile>
      <anchor>a19a969b227a0b092dee23fff37e46180</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; &amp;_f, Eigen::Map&lt; Eigen::MatrixXd &gt; &amp;_grad)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::GradientDescentSolver</name>
    <filename>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <class kind="struct">dart::optimizer::GradientDescentSolver::Properties</class>
    <class kind="struct">dart::optimizer::GradientDescentSolver::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>GradientDescentSolver</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a644f62a228d00429b0c99d70263a1874</anchor>
      <arglist>(const Properties &amp;_properties=Properties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GradientDescentSolver</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>acd81a622ba20191af3735e15a1f85062</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GradientDescentSolver</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a18fc49f7c50b8a501faf0ab99135a8a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aec4f05450d464144040a1801f8dabf6a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getLastConfiguration</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aac0865feb998704f5d073867f614d712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getType</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>af33b5d6bcf408eff837cc0968f1f4214</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>af5af360ac4623c2f8ca07307d6f5cdab</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a8f61d39098cb0eb41f5a4e6254383f6b</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ae1a2cb45cb1e024ab0f976cb754283a3</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getGradientDescentProperties</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>abb7c5916501ccd752e1328dfb4aaca38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>acb67ff9dfd56b985b03324adc12ca61f</anchor>
      <arglist>(const GradientDescentSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>GradientDescentSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a6b8ea8149cba43f25dc0177dbbbb3b9b</anchor>
      <arglist>(const GradientDescentSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStepSize</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a2eb4366b4aadb1d4c569331101696e68</anchor>
      <arglist>(double _newMultiplier)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepSize</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a9aa52337f59adeaf7de70368914019c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxAttempts</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ae07e11cdf229bcbe1c3e221d1489fa18</anchor>
      <arglist>(std::size_t _maxAttempts)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getMaxAttempts</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a3d9885c99d2d85d2405df96b920f2014</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerturbationStep</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a4815d100e40decff2e297596509c3291</anchor>
      <arglist>(std::size_t _step)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getPerturbationStep</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a885c4205b7daad2b2961b762f7dabda7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxPerturbationFactor</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ab02173a3e286320198b1d902ed713cdb</anchor>
      <arglist>(double _factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxPerturbationFactor</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a1eb571e12f67953c0bb9a4becfbd1844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultConstraintWeight</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ad68d1b651e2debe330192cd3e9a03d3a</anchor>
      <arglist>(double _newDefault)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDefaultConstraintWeight</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a41577e77b2c9f1660ef433f9a74b5bba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd &amp;</type>
      <name>getEqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ad9ef0c4501c91f1dc8a7d7cc81b6f7b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getEqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>af0d044516719d51ad554ee9a4e9c7902</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd &amp;</type>
      <name>getIneqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a0cd5a88a9e989e642ec5aadf6c9f7e0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getIneqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aabcd09277bc3c0d4be3d1faaac442df5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomizeConfiguration</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a83342b3771414e67b7ebc992109ba81e</anchor>
      <arglist>(Eigen::VectorXd &amp;_x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clampToBoundary</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a9dc72d54240a31a8e09ff20f4d6c2871</anchor>
      <arglist>(Eigen::VectorXd &amp;_x)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getLastNumIterations</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a7dc4b7256c798677459b52b0473bd5dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ab13e2b57c01c5da82f131166797ba6c7</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getSolverProperties</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a16387723a2325619c709b8b92ce7030f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a34042a8350719ae993014080da507b84</anchor>
      <arglist>(const Solver &amp;_otherSolver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProblem</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a28c784c676becce01d7c4392478102dc</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _newProblem)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Problem &gt;</type>
      <name>getProblem</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a41ebe9ea5dd127a939a63f4473c25f5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerance</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ab049613cfaed036f0bd2e1187ade5bce</anchor>
      <arglist>(double _newTolerance)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTolerance</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a910fab01853329b0fb05384a98e889d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNumMaxIterations</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>aa09df5d9b4356d459569c7947136245b</anchor>
      <arglist>(std::size_t _newMax)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumMaxIterations</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>aa911af120087b79532a9579433963612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIterationsPerPrint</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a86aa1e861104d9bb2f3070bec5aff350</anchor>
      <arglist>(std::size_t _newRatio)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getIterationsPerPrint</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a57ad9b6a100a71bbd73428b01a88ccfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOutStream</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a246afc16ee8bbec331187e709b1a2e02</anchor>
      <arglist>(std::ostream *_os)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream *</type>
      <name>getOutStream</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a26213fddc87b237d26d0d9c10f8c77be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPrintFinalResult</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a196a3118b57acfb70848e6498ee0943d</anchor>
      <arglist>(bool _print)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPrintFinalResult</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a2b8822485d72a57260bca897323812a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setResultFileName</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ab48523a7f3a48333fbdd2b5ae5ddc9e5</anchor>
      <arglist>(const std::string &amp;_resultFile)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getResultFileName</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ac4b4febb53a738891172acaa5e2530d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>Type</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a4ccdcadea280697ea9ef919c43451dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mGradientP</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a41e0a42caab656366e6af4996e0d7545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mLastNumIterations</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>abc56e9e97a6a40181f4baef96c41fe02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::random_device</type>
      <name>mRD</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a427e408ac8a00741ade70f8cbbf382ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mt19937</type>
      <name>mMT</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ad1ec0e6a39ab8a5253cc732ef9f3736a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uniform_real_distribution&lt; double &gt;</type>
      <name>mDistribution</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a7c9a5c23d2b606c18a7baa7c0d16c070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mEqConstraintCostCache</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a55aa0cbe1c550d420f3d5840dc4b8aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mIneqConstraintCostCache</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a70cb526de1022b8d9bbf76d618d385b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastConfig</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aa96842fec8a2a2b160c26099cf7016bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a4eba45b7e2fe9a3585c918a0483f1753</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::GradientDescentSolver::Properties</name>
    <filename>d5/d12/structdart_1_1optimizer_1_1GradientDescentSolver_1_1Properties.html</filename>
    <base>dart::optimizer::Solver::Properties</base>
    <base>dart::optimizer::GradientDescentSolver::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d5/d12/structdart_1_1optimizer_1_1GradientDescentSolver_1_1Properties.html</anchorfile>
      <anchor>a1f3430f3f36bdc9d9741244b06071a58</anchor>
      <arglist>(const Solver::Properties &amp;_solverProperties=Solver::Properties(), const UniqueProperties &amp;_descentProperties=UniqueProperties())</arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Problem &gt;</type>
      <name>mProblem</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>afa79c2c6b67637bb2528d7f6b120a0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mTolerance</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>ae5b85eee23e8e90f78aacc16ad3abc7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mNumMaxIterations</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>abd79f2a154981485c057edf9bbe2db97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mIterationsPerPrint</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a59aa953fe282de851e4ef521a3560276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream *</type>
      <name>mOutStream</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a1257be23c85527e679cfac6ef666bcb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mPrintFinalResult</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a75388b53777f1ee5625b11458ef69643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mResultFile</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a41df1a1c0cfaf6b8548563c4f86ebe54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mStepSize</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a2649167e2f901db9c671162f75642c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mMaxAttempts</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a1f2afedbe93fec2ac4360b83db89d223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>mPerturbationStep</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>ac3a3c250bdd8f164cc0861bbae22ef45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxPerturbationFactor</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>ac8ff3573c74cd0053bbb82712bf0ce14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxRandomizationStep</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>ac35a58bf6521cd532ffd69950f37d832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDefaultConstraintWeight</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a689ff1bc4202bf543a2a3bbb5110c21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mEqConstraintWeights</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a6298e647fedb8bf31b2783e742e07176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mIneqConstraintWeights</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>afd812ecc7889b8fdb4b9dde4ae751c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::GradientDescentSolver::UniqueProperties</name>
    <filename>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</filename>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a139f14119e2ec39d39d6181536a15cc1</anchor>
      <arglist>(double _stepMultiplier=0.1, std::size_t _maxAttempts=1, std::size_t _perturbationStep=0, double _maxPerturbationFactor=1.0, double _maxRandomizationStep=1e10, double _defaultConstraintWeight=1.0, Eigen::VectorXd _eqConstraintWeights=Eigen::VectorXd(), Eigen::VectorXd _ineqConstraintWeights=Eigen::VectorXd())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::IpoptSolver</name>
    <filename>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <member kind="function">
      <type></type>
      <name>IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>ab66018cb25bc979d5068377a44a5a68d</anchor>
      <arglist>(const Solver::Properties &amp;_properties=Solver::Properties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a4c190a86f23ac8ae7d9255d3e9ae7ae8</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>aedd686fe69a89653c40fcee763de7938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>ad952e5ef7191a43fd4c1337a8e9fdf4e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getType</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>ab80e0a71160db928c7c11d13b8beafcb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a049097ac4f97334d419203bede258ed8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Ipopt::SmartPtr&lt; Ipopt::IpoptApplication &gt; &amp;</type>
      <name>getApplication</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a56d63ee6a99d1332859b64659d37fd5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ipopt::SmartPtr&lt; const Ipopt::IpoptApplication &gt;</type>
      <name>getApplication</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a94eacb0556dbbc1b4788fba349145269</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>aa01c4d861be8af8e01796f3a22a0f24c</anchor>
      <arglist>(const Properties &amp;_properties, const Ipopt::SmartPtr&lt; Ipopt::IpoptApplication &gt; &amp;_app)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ipopt::SmartPtr&lt; Ipopt::TNLP &gt;</type>
      <name>mNlp</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>afb4059d40814c14cbbf8f243eced2991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ipopt::SmartPtr&lt; Ipopt::IpoptApplication &gt;</type>
      <name>mIpoptApp</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a2be0de7e94cb9ace34072ea0f5a3d748</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::DartTNLP</name>
    <filename>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DartTNLP</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a5bbbf091dca46bea0f3778d7ed41d073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_nlp_info</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a420f807cbc8b6c72407aefa8e2609d5d</anchor>
      <arglist>(Ipopt::Index &amp;n, Ipopt::Index &amp;m, Ipopt::Index &amp;nnz_jac_g, Ipopt::Index &amp;nnz_h_lag, Ipopt::TNLP::IndexStyleEnum &amp;index_style) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bounds_info</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a66fc616b7334e54e73284d1aff004499</anchor>
      <arglist>(Ipopt::Index n, Ipopt::Number *x_l, Ipopt::Number *x_u, Ipopt::Index m, Ipopt::Number *g_l, Ipopt::Number *g_u) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_starting_point</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a0eb8a6e43c309bffeb869358856f2265</anchor>
      <arglist>(Ipopt::Index n, bool init_x, Ipopt::Number *x, bool init_z, Ipopt::Number *z_L, Ipopt::Number *z_U, Ipopt::Index m, bool init_lambda, Ipopt::Number *lambda) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_f</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>aabeb9c4cd9cfae5b955acf63603cbeeb</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Number &amp;_obj_value) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_grad_f</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a3b3f67ef3c47dc020d99b91cac3cdc24</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Number *_grad_f) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_g</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>ae1907394130992b28809496139a7bca5</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Index _m, Ipopt::Number *_g) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_jac_g</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>aba52ede8617a3ad57be2884ab3b2cd3c</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Index _m, Ipopt::Index _nele_jac, Ipopt::Index *_iRow, Ipopt::Index *_jCol, Ipopt::Number *_values) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_h</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a8f8d3bec5dcc01df08c1205a349a1d3d</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Number _obj_factor, Ipopt::Index _m, const Ipopt::Number *_lambda, bool _new_lambda, Ipopt::Index _nele_hess, Ipopt::Index *_iRow, Ipopt::Index *_jCol, Ipopt::Number *_values) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize_solution</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a3451ce9fcd5e194d3a2c1e9023cff327</anchor>
      <arglist>(Ipopt::SolverReturn _status, Ipopt::Index _n, const Ipopt::Number *_x, const Ipopt::Number *_z_L, const Ipopt::Number *_z_U, Ipopt::Index _m, const Ipopt::Number *_g, const Ipopt::Number *_lambda, Ipopt::Number _obj_value, const Ipopt::IpoptData *_ip_data, Ipopt::IpoptCalculatedQuantities *_ip_cq) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DartTNLP</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>af6c6434e5f6751fd7af97b9c0a6884cd</anchor>
      <arglist>(IpoptSolver *_solver)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IpoptSolver *</type>
      <name>mSolver</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a5e9e560babbc67d3fb15a6dbbf9cca5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ipopt::Number</type>
      <name>mObjValue</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>ac75b1d438c47a07f6c83c1e904a9fdc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>mObjGradient</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a5f3e4f4e53cc294ed1555b03b5f6bb4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::MatrixXd</type>
      <name>mObjHessian</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>aa7d9c1124464b1abaf1c0ffee84358a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>IpoptSolver</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>ab7a6727f9083807e04f404d44fb028b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::NloptSolver</name>
    <filename>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <member kind="function">
      <type></type>
      <name>NloptSolver</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>abe1b82421da21c9738c491749f0e8fb9</anchor>
      <arglist>(const Solver::Properties &amp;_properties=Solver::Properties(), nlopt::algorithm _alg=nlopt::LN_COBYLA)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NloptSolver</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a6b63f2ed7d7b6b0bc236daee5aca2171</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem, nlopt::algorithm _alg=nlopt::LN_COBYLA)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NloptSolver</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ad79cea312a068e78db1f57620a0280eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ad79971f94b37832ad0e0c01816a869a1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getLastConfiguration</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a7a491ca0a6459504f029b6e2183a0069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getType</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a10cf16baaf5c301ea72ffa8eb8b97d48</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a6b8a0b0bd24baae2f2fca4b5b4389e3a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>abfbb45cba3d3e46e8ef39aab43a10fdb</anchor>
      <arglist>(const NloptSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>NloptSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>aee60a27f712c70489468965071a8b6b7</anchor>
      <arglist>(const NloptSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlgorithm</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a4af1775dd455a34e1cf1bbc702771fb9</anchor>
      <arglist>(nlopt::algorithm _alg)</arglist>
    </member>
    <member kind="function">
      <type>nlopt::algorithm</type>
      <name>getAlgorithm</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ab2f5308303039e63b60893c817917cf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static double</type>
      <name>_nlopt_func</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ac10965b50628d80818145a367e7adc02</anchor>
      <arglist>(unsigned _n, const double *_x, double *_gradient, void *_func_data)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>_nlopt_mfunc</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ad92a4904738b4402da3d516481f51898</anchor>
      <arglist>(unsigned _m, double *_result, unsigned _n, const double *_x, double *_gradient, void *_func_data)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; nlopt::opt &gt;</type>
      <name>mOpt</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a6f026724e6cc699d24929878bc206896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>nlopt::algorithm</type>
      <name>mAlg</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>aca3d06519bb33d974e53d8a73816dd12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>mX</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a994a719ce5eba02b770a57d72f65128c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mMinF</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ac169a3887d43f20b8e4d9d2a253b3244</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::Problem</name>
    <filename>df/dbc/classdart_1_1optimizer_1_1Problem.html</filename>
    <member kind="function">
      <type></type>
      <name>Problem</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a2475e23233aa50bcae2f52bd3d52d493</anchor>
      <arglist>(std::size_t _dim=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Problem</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a55529a9f7ffbc93c65831a0aead18d03</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDimension</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a5c1180efd426d16647fb66ca5addb58a</anchor>
      <arglist>(std::size_t _dim)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getDimension</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a1de481d8b6df5187cdc371c4e0ad9e70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialGuess</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>adbb327b9c086baf45cf50354f729a8df</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initGuess)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getInitialGuess</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a8183e5c497241df121934d391d752a0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeed</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ac193f361cbc8bcf9fcd6166448e72f8c</anchor>
      <arglist>(const Eigen::VectorXd &amp;_seed)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd &amp;</type>
      <name>getSeed</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a9c2af5dbeb36c7fe2a75943329fa51da</anchor>
      <arglist>(std::size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getSeed</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a933b69e8c29d836b015397215284ca59</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
      <name>getSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae0138cc20fc9b3dece6e6623e0e47041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
      <name>getSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ad92708e5838235023877c4e668e956a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ac5156ed1dd9f2fc8bbf20c3e8b6500e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowerBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a16160aee4cafd7b4619d673dd30ad9f0</anchor>
      <arglist>(const Eigen::VectorXd &amp;_lb)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getLowerBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>abe7f0169446754ad6c163ccef93b3541</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpperBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a488043ea0c891777bcfd64d4b05d1880</anchor>
      <arglist>(const Eigen::VectorXd &amp;_ub)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getUpperBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ab93784216b85c044d6d2a6a38d36aaca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjective</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae9d21a8188e698db509707fec181fca9</anchor>
      <arglist>(FunctionPtr _obj)</arglist>
    </member>
    <member kind="function">
      <type>FunctionPtr</type>
      <name>getObjective</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>af10b216be34ea08421aacacd40a50b46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a7d339af8e30e114bda97458328ba9cae</anchor>
      <arglist>(FunctionPtr _eqConst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIneqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a00ea5c3e28459bd06f7b3fb13cabfe7e</anchor>
      <arglist>(FunctionPtr _ineqConst)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumEqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a37f6b3aaf0f275670bc6cb3852e25285</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumIneqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a79ebacd4a7f1fcc939b3346ef2dcc168</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FunctionPtr</type>
      <name>getEqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ade21acde9c15dd951ac8926c6650f7db</anchor>
      <arglist>(std::size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>FunctionPtr</type>
      <name>getIneqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a3c5c9f8d245103a56bf01f5feca6f2cf</anchor>
      <arglist>(std::size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a85a1bb550de1be0ab972413db924d6c5</anchor>
      <arglist>(FunctionPtr _eqConst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIneqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae0390b7ac3b823664996ae42c010cc00</anchor>
      <arglist>(FunctionPtr _ineqConst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllEqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a2a35cca066c1781a7a38ed73a6b808a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllIneqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>aaa83504feff013e8923181da53b9bda2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptimumValue</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>aece739ccd1fc4c00440a6a8f4cf861c3</anchor>
      <arglist>(double _val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOptimumValue</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a02f20bc31c21bf502bc7dbd9d06cfda5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptimalSolution</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a188897d458238f9c2780b58b1ee132e5</anchor>
      <arglist>(const Eigen::VectorXd &amp;_optParam)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getOptimalSolution</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>aae4169e7cb4b073f270cd9f90bc8e515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mDimension</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a583d427be4a769d1e262dcc87519b3a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mInitialGuess</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a058f35c9e6ca6be6aba8c09526f247e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::VectorXd &gt;</type>
      <name>mSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a9620456cef740b0af8b8bd348ecbccb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLowerBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a85de78a841ed3ebc768c1ca9a3c56acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mUpperBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a9a7bceb1fa75e9cca3444f2b40af2400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FunctionPtr</type>
      <name>mObjective</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>afba35354993dbf68a061bd2ca593551a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; FunctionPtr &gt;</type>
      <name>mEqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a713a7ef206a722ae68fe8e9de9dce83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; FunctionPtr &gt;</type>
      <name>mIneqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae61a1858242e0c925f27e9482bb62373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mOptimumValue</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a375ff405f430cb2618fa21bc74bc2589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mOptimalSolution</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a5986732b804682ee3dfb2ec0b7003e37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::Solver</name>
    <filename>d0/d68/classdart_1_1optimizer_1_1Solver.html</filename>
    <class kind="struct">dart::optimizer::Solver::Properties</class>
    <member kind="function">
      <type></type>
      <name>Solver</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>af480f5200ed42551a9f1392545aa772a</anchor>
      <arglist>(const Properties &amp;_properties=Properties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Solver</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>aee36c5d2b25195ef86a08759274e1a27</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a69bd13c0d9ad96746697909fb4ae1d7b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>solve</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a9621b9518a482293b035e234a796efa9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>af5bce8c03145ba5fca2a9756960f4c5e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>af81a4a4f69a787883fa2c13c46a85237</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>Solver &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a3f963399dad37543faa3bc71bb62b72a</anchor>
      <arglist>(const Solver &amp;_otherSolver)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::Solver::Properties</name>
    <filename>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a5ff9e5773d1bd6ffa2b233d8f36af7cb</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem=nullptr, double _tolerance=1e-9, std::size_t _numMaxIterations=500, std::size_t _iterationsPerPrint=0, std::ostream *_ostream=&amp;std::cout, bool _printFinalResult=false, const std::string &amp;_resultFile=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::optimizer::snopt</name>
    <filename>de/db4/namespacedart_1_1optimizer_1_1snopt.html</filename>
    <class kind="class">dart::optimizer::snopt::SnoptInterface</class>
    <class kind="class">dart::optimizer::snopt::SnoptSolver</class>
    <member kind="function">
      <type>void</type>
      <name>sninit_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>ac4d80d6aa69bceefb825308489173acf</anchor>
      <arglist>(int *iprint, int *isum, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snopt_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a28ab814ab3f9117ebadc4ed597891a8f</anchor>
      <arglist>(char *start, int *m, int *n, int *ne, int *nName, int *nnCon, int *nnObj, int *nnJac, int *iObj, double *ObjAdd, char *Prob, void(*funCon)(int *mode, int *nnCon, int *nnJac, int *neJac, double *x, double *fCon, double *gCon, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), void(*funObj)(int *mode, int *nnObj, double *x, double *fObj, double *gObj, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), double *a, int *ha, int *ka, double *bl, double *bu, char *Names, int *hs, double *xs, double *pi, double *rc, int *inform, int *mincw, int *miniw, int *minrw, int *nS, int *nInf, double *sInf, double *Obj, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw, int start_len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snspec_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a8ced2e4dc5d7956273deb318e6887922</anchor>
      <arglist>(int *ispecs, int *inform, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>s1user_</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a67d30ce1d6f2d858adec1ee6cfe7da9b</anchor>
      <arglist>(int *iAbort, char *MjrMsg, int *KTcond, int *m, int *n, int *nb, int *nR, int *nS, int *nMajor, int *nMinor, int *nSwap, double *condHz, double *duInf, double *emaxS, double *fObj, double *fMrt, double gMrt, double *PenNrm, double *prInf, double *step, double *vimax, double *dxnrm, double *dxrel, int *ne, int *nka, double *a, int *ha, int *ka, int *hs, double *bl, double *bu, double *pi, double *rc, double *xs, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::snopt::SnoptInterface</name>
    <filename>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</filename>
    <class kind="struct">dart::optimizer::snopt::SnoptInterface::Slack</class>
    <member kind="enumeration">
      <type></type>
      <name>Return</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Solution</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a2df07e69137a4a7638e80f24444d33f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UserStop</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a6205954ad8b806747ddc4e7beb80c2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Error</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4ae6494a9b646b13a5a3c3c21e4af463f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Stop</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a24bcd68d9ae245dbc08e0ecc0ecadb23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Infeasible</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a6cd96d98ac9df0240eff119a8b74f589</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UpdateType</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9c539367f6ec94e75ecbf03246ff4474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Obj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9c539367f6ec94e75ecbf03246ff4474a4aa05f0ca9900403bb082e20fec59339</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Constr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9c539367f6ec94e75ecbf03246ff4474ad17d04fdfe71399533ae5cf2125e356f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SlackType</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NoSlack</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538a9cc52aa60ee2ba206ad957dbfe4c3381</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Vslack</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538a60fb3ca2a1f7c6d0bf0bb738746bbc34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Wslack</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538ad16d481e18679700c8a5a2aa78fb7fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AbnormalType</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NONE</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7ba35dbe549f6d720df433a65e32591a397</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INFEASIBLE</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7ba9424649079bb058d3e9551ef62e742ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HESSIAN_UPDATE</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7ba7771d5556c089bb695a0e517e8dc7fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HESSIAN_RESET</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7bac1062a3c8b4dd9aca587e1f4b08d7546</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>updateFunc</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a6618ad09f1f5436ac7f056d8a2431eb8</anchor>
      <arglist>)(long mask, int compute_gradients, double *coef_values, void *update_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SnoptInterface</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ace54711f7175f79c7545e841f75120df</anchor>
      <arglist>(int constr_total, int coef_total, int nonlin_constr_total, int nonlin_obj_coef, int nonlin_jac_coef, int *constr_eqns, int has_objective, VVD J, VVB JMap, std::vector&lt; double &gt; *constraints, double *objective, std::vector&lt; double &gt; *gradient, updateFunc update_f, void *update_d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SnoptInterface</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ad514cf92a321e502c559606c2fff1b26</anchor>
      <arglist>(int has_objective, VVD J, VVB JMap, std::vector&lt; double &gt; *constraints, double *objective, std::vector&lt; double &gt; *gradient, updateFunc update_f, void *update_d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SnoptInterface</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ab9e79f64abeccc018c8ae0b90aa9a26b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Return</type>
      <name>solve</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>af69e5b7c5f9bbd26c32b6ab4e49967fa</anchor>
      <arglist>(double *x, double *lo_bounds, double *hi_bounds, int unit=4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1a45316cb6f914119b5a69da0d36cdd1</anchor>
      <arglist>(long mask, int compute_derivs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeJacobian</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a47ed11cf4f232bb145ca2b546e98db09</anchor>
      <arglist>(int coef_total, int nonlin_coef_total, int constr_total, int nonlin_constr_total)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>aa2ebd14b3c25526aa168b61e81aee9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSolverX</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a36208c2bbf78d5a7ae51412d16609d9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a5c7bfcbb825c9f4ad2ee09fce819bf3d</anchor>
      <arglist>(long mask, int compute_derivs, double *x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>checkTermination</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a916e03462a9fef52029ec9dbbf33fc26</anchor>
      <arglist>(int *iAbort, double *xs)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumConstr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ada78d0c2545ebd74bfed1aac254b9542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>adbac83d2de262676aadd582c7b0bf338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumNonlinConstr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ad05d6abb7a53c1ee88d0f17ec6cf3ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumNonlinObjCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a2b2b3fbce0decd7e741514aad6f57553</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumNonlinJacCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>abb66ff2edd6cca21a2ba7677a529f5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mSolverX</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a019e2b7550f25d5b113ead14cdc44ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mProblemX</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a4a682f4da379dc6231327aa4013f7123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mBoundsLo</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a35e8a5817df8cd6fcc041e15f81211f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mBoundsHi</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>aa8afc1d912e090ab54fe65167cc9791c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>mConstrEqns</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9a048272ca01655f7d37f4107cd5a129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mHasObjective</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ab681a481d910e4b649f79009d358b5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mObj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ac8529e70d31afd8da2c84b4e7867c18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt; *</type>
      <name>mdObjdCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a78c03bac36a03e6452604856a9e193fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt; *</type>
      <name>mConstr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>aab05df435acaf72a28b4aed2696022d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VVD</type>
      <name>mdConstrdCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a76debbc74c13e1308e769299228e203c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mConstrScale</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1ea5b06379978b2119f6181bd3990f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mCoefScale</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae8e687b3b518c1dd7c24428bfd9ca4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VVB</type>
      <name>mCoefMap</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a46f6c5388cac040149feb43e0664ec95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mReturnedObj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>adc3c3a25991bd1560c063c5c2188d416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mOutput</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a7271b8433af334912f62206fc785437e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mSum</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae4cd77d79219cefb47bf5c6a13fba9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mCheckTerm</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae796e1680514d97d465c79eae8964a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mTermination</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a5bb16eccf9f8347b95943138a11b5bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AbnormalType</type>
      <name>mAbnormal</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1644a7fb6bd89fee5300c5549a2b25be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mBreak</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ac310fb00bab4e949e5b2447d96f8699b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static SnoptInterface *</type>
      <name>mRef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae1335fd3899686f198b03847b4667af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>scaleValues</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>afd2830fc236a2b0e2835d76ff5cde3ed</anchor>
      <arglist>(long update_type, int compute_derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SnoptInterface::updateFunc</type>
      <name>mUpdateFunc</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae2965273aa43a1ee2e4200446c91a5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>mUpdateData</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c63d82114b9477815444e9e558a956e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>fillUpSnoptFormat</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a18c96ed2e1b5551ff9b2bbd5a211739e</anchor>
      <arglist>(VVD jacobian, double **a, int **ha, int **ka)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>sparseCount</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae4328c1c31dfaea2058a6fa349651b62</anchor>
      <arglist>(int col)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>snoptObj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1cc3aa0b6b4505423408d86f9229fff7</anchor>
      <arglist>(int *mode, int *nn_obj, double *x, double *f_obj, double *g_obj, int *nstate, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>snoptJac</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a103ef49b611c9c6e041f8dfc4e8a43f1</anchor>
      <arglist>(int *mode, int *nn_con, int *nn_jac, int *ne_jac, double *x, double *f_con, double *g_con, int *nstate, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::snopt::SnoptInterface::Slack</name>
    <filename>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>constr_idx</name>
      <anchorfile>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</anchorfile>
      <anchor>add0bae8cb263c3e2c0b74bfa7a9a8e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SlackType</type>
      <name>type</name>
      <anchorfile>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</anchorfile>
      <anchor>a4a348f75eb2a1eada9609397f3ea6aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>val</name>
      <anchorfile>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</anchorfile>
      <anchor>a3dcc6c3d80c0e29541433cc35d230ae9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::snopt::SnoptSolver</name>
    <filename>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <member kind="function">
      <type></type>
      <name>SnoptSolver</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a328a2a953fe6bcf3d88839964239d73c</anchor>
      <arglist>(Problem *problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SnoptSolver</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a72993e9c17db7d2fb4bb822ded099a8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>solve</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a900ac57a07254f8b83f14eb8e5ec2511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetSolver</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>ad8b1390b26d7cd065f0e945cb683e467</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>iterUpdate</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>ac1c76a9535aace94b54586ebb60dfd53</anchor>
      <arglist>(long mask, int compute_gradients, double *coefs, void *update_data)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstraintSet *</type>
      <name>conBox</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a5b454bc90ea804e2d7ed5f824f642dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ObjectiveSet *</type>
      <name>objBox</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a02d5c36f5df888d1906f6f4313cba516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SnoptInterface *</type>
      <name>mSnopt</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>afb4a634059abbd82d14143cb3de8e4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mNoDisplay</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a8b9f157e716f0e1a5d334afd46cc4a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mSolverIter</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a906059fa53b006a8623d227d2b1243bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mTotalDofs</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a217ec889ad7170055946e19ca60a41e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mOptCount</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a31cc0e7e1e1d32d623a754af7804247f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mPrint</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a232888f487ab481ea6a72388e0dde50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mUnit</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a8e3431411520c873c3dab215f3a5a7fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::planning</name>
    <filename>d6/dc4/namespacedart_1_1planning.html</filename>
    <class kind="class">dart::planning::LinearPathSegment</class>
    <class kind="class">dart::planning::CircularPathSegment</class>
    <class kind="class">dart::planning::PathSegment</class>
    <class kind="class">dart::planning::Path</class>
    <class kind="class">dart::planning::PathFollowingTrajectory</class>
    <class kind="class">dart::planning::PathPlanner</class>
    <class kind="class">dart::planning::PathShortener</class>
    <class kind="class">dart::planning::RRT</class>
    <class kind="class">dart::planning::Trajectory</class>
  </compound>
  <compound kind="class">
    <name>dart::planning::LinearPathSegment</name>
    <filename>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</filename>
    <base>dart::planning::PathSegment</base>
    <member kind="function">
      <type></type>
      <name>LinearPathSegment</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a2f7c0c41debfa726eb57290051216b6f</anchor>
      <arglist>(const Eigen::VectorXd &amp;start, const Eigen::VectorXd &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a1c0254f077c60dd408b78c9f6df86e3a</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ae99384182e454b92462d14daf63579ab</anchor>
      <arglist>(double) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a86a2cbf1b3154069a58396f7bb2f72fa</anchor>
      <arglist>(double) const </arglist>
    </member>
    <member kind="function">
      <type>list&lt; double &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ac2e8a480f96178c658234beaf8bb9f05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LinearPathSegment *</type>
      <name>clone</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ae92bfb152c405bec5b2c555ec8583959</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a89454471747e1f1d343309f8bc126831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>position</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a0dc43b15b057edd6057addb68507f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>length</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a4fc83115b6a411a0ed3438be6fc198dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>start</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a466ad10e409ab4960fa69095e85c14d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>end</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ac445dbc42641ffb4f7641c72d294e736</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::CircularPathSegment</name>
    <filename>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</filename>
    <base>dart::planning::PathSegment</base>
    <member kind="function">
      <type></type>
      <name>CircularPathSegment</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a3a7e9a50e776589bd71bcb7122ddc8d7</anchor>
      <arglist>(const Eigen::VectorXd &amp;start, const Eigen::VectorXd &amp;intersection, const Eigen::VectorXd &amp;end, double maxDeviation)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a1d366ff935259f7a79af0a3e5ffc7e05</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a274641d1d4a5333b3e268a75bde67ac3</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a378bc732930c821472307768d7cd1215</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>list&lt; double &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>aba73c56944a28caeeb9846a39baf2d7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CircularPathSegment *</type>
      <name>clone</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>aa0a46192ac907b8b56a625022bb398b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>radius</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a22b1c44a039d76ad0f69f63d1fedf561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>center</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a02acf7bbc739d7f7953f38123f248ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>x</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a3ca6135d26743cb4e5a9be00a97d3577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>y</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>adead96859fc702f8242f49a37b78ab54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathSegment</name>
    <filename>d9/d64/classdart_1_1planning_1_1PathSegment.html</filename>
    <member kind="function">
      <type></type>
      <name>PathSegment</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a9e21ea93e6bbb6fe4a757e3c6c196f00</anchor>
      <arglist>(double length=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PathSegment</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a0cc6eff7706e495f0be3d8e99dd7d98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>aea8a05ee9b05b37ce34504f4b4fdb742</anchor>
      <arglist>(double s) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a3b5d78d023470befd20de575a39604a7</anchor>
      <arglist>(double s) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a30dd3374db6e15ed09cb6361a60bf3d5</anchor>
      <arglist>(double s) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; double &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a91a1f3cce4d139d5b36cc949681d07d1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PathSegment *</type>
      <name>clone</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a4096f33d3d3f4230ab2298b4a16201fe</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::Path</name>
    <filename>d6/de6/classdart_1_1planning_1_1Path.html</filename>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a5f339f2881222e19dcdb1e7c3e55bcc8</anchor>
      <arglist>(const std::list&lt; Eigen::VectorXd &gt; &amp;path, double maxDeviation=0.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a12863a508b5aac89ee9b65769f84acd9</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Path</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a734cd2720eee72f1a810e8d1fe2e7e95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>ac95a615ab3db4afe04a13cea16695639</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>ab2e71db0320eaabb5046101edc1a6567</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a2a2325f2cca5dec3f2206fc1493a47f9</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a76bcb5342077d8251929a877b7acb949</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextSwitchingPoint</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>abfe9e5e17651520457f1d9755426dac4</anchor>
      <arglist>(double s, bool &amp;discontinuity) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; double, bool &gt; &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>aa8c297ceeb9b0907ea91984535f15f93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>PathSegment *</type>
      <name>getPathSegment</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a389d2395cb68c7d4d193a978050180c8</anchor>
      <arglist>(double &amp;s) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>length</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>aebe0a80368ecab6e3e1d97f5ebbd5937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::pair&lt; double, bool &gt; &gt;</type>
      <name>switchingPoints</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a9cb108e49cf2dbd2b49214997bcebd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; PathSegment * &gt;</type>
      <name>pathSegments</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>ade18c4af7044bcd5443a5fbb4edd1686</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathFollowingTrajectory</name>
    <filename>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</filename>
    <base>dart::planning::Trajectory</base>
    <class kind="struct">dart::planning::PathFollowingTrajectory::TrajectoryStep</class>
    <member kind="function">
      <type></type>
      <name>PathFollowingTrajectory</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a88862d81d5045aa77e7357fb0b929081</anchor>
      <arglist>(const Path &amp;path, const Eigen::VectorXd &amp;maxVelocity, const Eigen::VectorXd &amp;maxAcceleration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PathFollowingTrajectory</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a2bf5eb836549bf350e124849a82f37af</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>ac18c93bcb5d3f50dbdd754ad5614371d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDuration</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>acaba29c8541a179875a2fa408fef470d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPosition</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a43dfdfee9631f1bf0b008bf47cf056e1</anchor>
      <arglist>(double time) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a27f0a49ec370eb9e16ab375ba8cbbf3d</anchor>
      <arglist>(double time) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxAccelerationError</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a51c4a2eeda3ac2c42fed73458c411beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>getNextSwitchingPoint</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a1f1341ebe370965a5aca05138fcb01bd</anchor>
      <arglist>(double pathPos, TrajectoryStep &amp;nextSwitchingPoint, double &amp;beforeAcceleration, double &amp;afterAcceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>getNextAccelerationSwitchingPoint</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aaa0bd512e86a6fae9461bff1b0bac3c8</anchor>
      <arglist>(double pathPos, TrajectoryStep &amp;nextSwitchingPoint, double &amp;beforeAcceleration, double &amp;afterAcceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>getNextVelocitySwitchingPoint</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>ab0bab10102e00b75db1a24f8bf26a823</anchor>
      <arglist>(double pathPos, TrajectoryStep &amp;nextSwitchingPoint, double &amp;beforeAcceleration, double &amp;afterAcceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>integrateForward</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a905027474f1f7d70a14455def5067015</anchor>
      <arglist>(std::list&lt; TrajectoryStep &gt; &amp;trajectory, double acceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>integrateBackward</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a02be39d9c12c41cdb7e8a13b89690710</anchor>
      <arglist>(std::list&lt; TrajectoryStep &gt; &amp;trajectory, std::list&lt; TrajectoryStep &gt; &amp;startTrajectory, double acceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getMinMaxPathAcceleration</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a9ebfffa0ec292d1cfe31fcb36461fc76</anchor>
      <arglist>(double pathPosition, double pathVelocity, bool max)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getMinMaxPhaseSlope</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a43c091c8a05ffd77bfaed3a116864132</anchor>
      <arglist>(double pathPosition, double pathVelocity, bool max)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getAccelerationMaxPathVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a9bf6edefde3ab32445d29a836eb141fb</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getVelocityMaxPathVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a37fa804100bc88f57fbfcf6c206e8097</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getAccelerationMaxPathVelocityDeriv</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>af176abce483f5817a7383a8e4083f984</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getVelocityMaxPathVelocityDeriv</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aaa7b72cb92413321ff1ecfb0cdd1603d</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>TrajectoryStep</type>
      <name>getIntersection</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aad6318e64edb777e668cc2ccf98ccf69</anchor>
      <arglist>(const std::list&lt; TrajectoryStep &gt; &amp;trajectory, std::list&lt; TrajectoryStep &gt;::iterator &amp;it, const TrajectoryStep &amp;linePoint1, const TrajectoryStep &amp;linePoint2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getSlope</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a158ea2263521a283bebc16573a7734b2</anchor>
      <arglist>(const TrajectoryStep &amp;point1, const TrajectoryStep &amp;point2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getSlope</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a7e3a5b92ab370a91f1531e40052a030b</anchor>
      <arglist>(std::list&lt; TrajectoryStep &gt;::const_iterator lineEnd)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::list&lt; TrajectoryStep &gt;::const_iterator</type>
      <name>getTrajectorySegment</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a5aac6519f0e3c00755fb331a025b5a87</anchor>
      <arglist>(double time) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Path</type>
      <name>path</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a01455eb28a2210e6abf2496a2c300b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>maxVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a0633b6c439b7ba63f6a9cb8a8fbdfb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>maxAcceleration</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aa35a31469d452c2be5a16d6d79585bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>n</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a0782e6282d270d9bdb4ff1f4c9afbfae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a15cea98f2ea2d4102680f6718414f3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; TrajectoryStep &gt;</type>
      <name>trajectory</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a4556c8737f329a458e67abd34d6dae4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cachedTime</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a6a3b52db309000a8403b66abc10a6330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; TrajectoryStep &gt;::const_iterator</type>
      <name>cachedTrajectorySegment</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a539168245348cb01ce1b7c5d3b45f8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const double</type>
      <name>eps</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>ac9e92ee37323908a6e8ff54f2ae6e11d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const double</type>
      <name>timeStep</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>acccad32c54ccb9cdb58619f029a4ffcf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::planning::PathFollowingTrajectory::TrajectoryStep</name>
    <filename>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</filename>
    <member kind="function">
      <type></type>
      <name>TrajectoryStep</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>a51c6a9fe5f2ac595a7a7579ed2eb6363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrajectoryStep</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>a3f8a1829875efee70672f3a7b96ea07a</anchor>
      <arglist>(double pathPos, double pathVel)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pathPos</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>a2d90ff6e956796ae4f4c0df78a246004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pathVel</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>addd6aa1daa06b554103020f2aa00d659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>time</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>ab3709dbe676ef83cbab23a6d378efa77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathPlanner</name>
    <filename>d5/d78/classdart_1_1planning_1_1PathPlanner.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>PathPlanner</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ab9dc2cdafbe89cefebea994bfe07d98c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PathPlanner</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a14e6026e1727686ed96aa4ec721df8d7</anchor>
      <arglist>(simulation::World &amp;world, bool bidirectional_=true, bool connect_=true, double stepSize_=0.1, std::size_t maxNodes_=1e6, double goalBias_=0.3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PathPlanner</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a0dbc01a9ef0611103becc7510df20691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>planPath</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a9274294ccba1cc5da1de333b30e29071</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; int &gt; &amp;dofs, const Eigen::VectorXd &amp;start, const Eigen::VectorXd &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>planPath</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a560ca14db78a3718b924fa4ff3540ef9</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; std::size_t &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;start, const std::vector&lt; Eigen::VectorXd &gt; &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ae7f2151164ab6a2f2a09fdb2241756e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bidirectional</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>aae9b3daf00efcf1ffb52bfea743473e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ac587f04fc4a6f81dd9446594715a210c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>goalBias</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ab8ce7158030f93c75c5fafc552d5e987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>maxNodes</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a38d20b307f8daeacc04c3eb2c2972bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>simulation::WorldPtr</type>
      <name>world</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>aa19d63ffe4a313566d78fc0a5cb9a7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>R *</type>
      <name>start_rrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>aec2de4cb48295ce8bd9e25139fdfb9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>R *</type>
      <name>goal_rrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a4bab31112002b7be20a3ef824b71426f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>planSingleTreeRrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ad137bf4ca8ebc2f372b57ebcb446cc83</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; int &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;start, const Eigen::VectorXd &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>planBidirectionalRrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a150cca7308767573e954b4a53ddc19fd</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; int &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;start, const std::vector&lt; Eigen::VectorXd &gt; &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathShortener</name>
    <filename>d9/da3/classdart_1_1planning_1_1PathShortener.html</filename>
    <member kind="function">
      <type></type>
      <name>PathShortener</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>ab2aea4410fa25f2a1b4a528dd1332266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PathShortener</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>ac99bf82857018bd407c7d6404fd568f6</anchor>
      <arglist>(simulation::WorldPtr world, dynamics::SkeletonPtr robot, const std::vector&lt; std::size_t &gt; &amp;dofs, double stepSize=0.1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PathShortener</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>afd0cdff9509bc79595d1d89c930b49a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shortenPath</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a2f34c4351735550bc35a6bccca07e480</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;rawPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>segmentCollisionFree</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a9d6942523ac5c3bde4d5742e22494554</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;waypoints, const Eigen::VectorXd &amp;config1, const Eigen::VectorXd &amp;config2)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>localPlanner</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a4d38631dc319b05b3298e00f2b64ccca</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;waypoints, std::list&lt; Eigen::VectorXd &gt;::const_iterator it1, std::list&lt; Eigen::VectorXd &gt;::const_iterator it2)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::WorldPtr</type>
      <name>world</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a798038d98ac047aff4d7195950d86231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>robot</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>ad9f83553d45c4ee94679ca3eec3bdf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>dofs</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a8675e94e9f18d7680de82ec61b579a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a8ad62815cbaba087d00d5d430ae49a7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::RRT</name>
    <filename>d7/dd6/classdart_1_1planning_1_1RRT.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>StepResult</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STEP_COLLISION</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357ad3b80a815ac2e4b6dd1deed007ba36c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STEP_REACHED</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357ab6063599a97693cf474a827c0928c12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STEP_PROGRESS</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357a3288cfb4d8915f3ac364c1aaf82e999a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RRT</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a50b22c0b1d15850d44b4f1e97a563c82</anchor>
      <arglist>(dart::simulation::WorldPtr world, dart::dynamics::SkeletonPtr robot, const std::vector&lt; std::size_t &gt; &amp;dofs, const Eigen::VectorXd &amp;root, double stepSize=0.02)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RRT</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a5560b9249484bfd12e36642b1fab928e</anchor>
      <arglist>(simulation::WorldPtr world, dynamics::SkeletonPtr robot, const std::vector&lt; std::size_t &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;roots, double stepSize=0.02)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RRT</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ade135508c7ae8bf68053717d17086e94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ab609e1f7fa7eef91bcced8f6a0193646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ac7a50a64b5279c701e5eff1d9bc3fbd2</anchor>
      <arglist>(const Eigen::VectorXd &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>StepResult</type>
      <name>tryStep</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a2bff503512b314d3064e2c84dc1cd475</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StepResult</type>
      <name>tryStep</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a6b6b1ad947c12d607d7b5c057199bf6b</anchor>
      <arglist>(const Eigen::VectorXd &amp;qtry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StepResult</type>
      <name>tryStepFromNode</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>af54d3c4706c389b0e7f33990e7bec13d</anchor>
      <arglist>(const Eigen::VectorXd &amp;qtry, int NNidx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>newConfig</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a3e1c739f1ef601282623392c3d31177a</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;intermediatePoints, Eigen::VectorXd &amp;qnew, const Eigen::VectorXd &amp;qnear, const Eigen::VectorXd &amp;qtarget)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGap</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a648b7c4079feeaf67419d4fbbdc68bde</anchor>
      <arglist>(const Eigen::VectorXd &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tracePath</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ad6ca538536f6e706c531e534eb3f0005</anchor>
      <arglist>(int node, std::list&lt; Eigen::VectorXd &gt; &amp;path, bool reverse=false)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getSize</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>aaea5436688082d794fddccbf82792629</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkCollisions</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ab54a80092a4ff46e844dffbbf451ede3</anchor>
      <arglist>(const Eigen::VectorXd &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getRandomConfig</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a5300d3f63e68c0725e19fef5dc13b1f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ndim</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a26e8d49708915c80f223745de93ea071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stepSize</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a1418ade624849da6ac89f5e7c1cc76a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>activeNode</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a4f3deb3c7dc7a905ee46d4e529771c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>parentVector</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a22c4713758198d9608229d2ea18d6bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; const Eigen::VectorXd * &gt;</type>
      <name>configVector</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ad033b222671adabdc106aa0802bd5ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>randomInRange</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ae2cfcce67f5f5e0fdc80c842c0a916de</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>getNearestNeighbor</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a9555f355bc66cf9ffc6a72a6546607e2</anchor>
      <arglist>(const Eigen::VectorXd &amp;qsamp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>addNode</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a1bee295679a662a2ff9b2f394296440f</anchor>
      <arglist>(const Eigen::VectorXd &amp;qnew, int parentId)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::WorldPtr</type>
      <name>world</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a889d8e011b343728e9b40c3b0d3acc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>robot</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a56369f4a252648e20f871e03ec7ef1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>dofs</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ac2815f814c2707ae6cb5508fde02dd7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>flann::Index&lt; flann::L2&lt; double &gt; &gt; *</type>
      <name>index</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a3918a515d42c45f4a53cee22de5c0622</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::Trajectory</name>
    <filename>d6/d3a/classdart_1_1planning_1_1Trajectory.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getDuration</name>
      <anchorfile>d6/d3a/classdart_1_1planning_1_1Trajectory.html</anchorfile>
      <anchor>a104fbf2d811c6c47652cc04d3dbd1907</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPosition</name>
      <anchorfile>d6/d3a/classdart_1_1planning_1_1Trajectory.html</anchorfile>
      <anchor>a575aa9e0e3e4b2e9ee9d46a0de29f214</anchor>
      <arglist>(double time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getVelocity</name>
      <anchorfile>d6/d3a/classdart_1_1planning_1_1Trajectory.html</anchorfile>
      <anchor>af3a96d14827546b1137733defe07fb70</anchor>
      <arglist>(double time) const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::simulation</name>
    <filename>d4/d0b/namespacedart_1_1simulation.html</filename>
    <class kind="class">dart::simulation::Recording</class>
    <class kind="class">dart::simulation::World</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>WorldPtr</name>
      <anchorfile>d4/d0b/namespacedart_1_1simulation.html</anchorfile>
      <anchor>a1db1abe159f77736177ead5172d44206</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::simulation::Recording</name>
    <filename>dd/d87/classdart_1_1simulation_1_1Recording.html</filename>
    <member kind="function">
      <type></type>
      <name>Recording</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a8a7ce1a9619cedeef427f1e079f38a8d</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;_skeletons)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Recording</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ac9c1bb8c70b7d0e25a1bfebd5789906c</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;_skelDofs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Recording</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ada494ecb5ac212818e246a5b28e8d422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFrames</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>aaddd24f208ff7e95e21ae192b6e0013b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSkeletons</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>acc9b7e6a559044e36c06f7ca2b82559a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumDofs</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a0d0f4e17455cc4a5dbb70a311642fc3c</anchor>
      <arglist>(int _skelIdx) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumContacts</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>abb0f68eb663a57780bf507f96cbfda9f</anchor>
      <arglist>(int _frameIdx) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a6b9e42db4147db5ffebf91306ae322a2</anchor>
      <arglist>(int _frameIdx, int _skelIdx) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGenCoord</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>aad41fc01640824e1cef87da80e1cf6d9</anchor>
      <arglist>(int _frameIdx, int _skelIdx, int _dofIdx) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getContactPoint</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a57866a0d81e1820074a3a98138cabf1f</anchor>
      <arglist>(int _frameIdx, int _contactIdx) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getContactForce</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ae68963e725df407ca8ce2f9b2dda7c53</anchor>
      <arglist>(int _frameIdx, int _contactIdx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ad77059abae51944bcce5ca3c6641e5f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addState</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a1083cd0643e37980929b837e68387bae</anchor>
      <arglist>(const Eigen::VectorXd &amp;_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNumGenCoords</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>afa801118a1d85dccf0d35b18b5c23f70</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;_skeletons)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Eigen::VectorXd &gt;</type>
      <name>mBakedStates</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ad0a3a2724fc4cd9a9abfbeb668872262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>mNumGenCoordsForSkeletons</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a37758e3197ec54395e7d8d7723af8bd6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::simulation::World</name>
    <filename>d7/d41/classdart_1_1simulation_1_1World.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="typedef">
      <type>common::Signal&lt; void(const std::string &amp;_oldName, const std::string &amp;_newName)&gt;</type>
      <name>NameChangedSignal</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a897dd05d707d41e1f6e41f4a6e521a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>World</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>acf10565ff7edcccf806c556c3e3a9d65</anchor>
      <arglist>(const std::string &amp;_name=&quot;world&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~World</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a012bbbc562d0d11d1ff311db3223a027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>clone</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a359feb0d23bf0a517f329f4b38702391</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ab2e3c6c8a93ed8260c9f9d98c26541ee</anchor>
      <arglist>(const std::string &amp;_newName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a779a1d947049192ff99abd22344eec9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGravity</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>aca6b178778492c5881182047d8a0b24b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getGravity</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>af7a436a034a3250c670c553d55175c57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a93b9b1d8e28ce7432dac1292da705e8c</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a8ab96c5aaa4676ddea35d9a309c9680d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a0f5b3d35623d82c8105fe068bd1f3048</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>aa37316c0d59fdeffd0f0e12877e18efe</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a6c3622e3304ad923806beae052f8d168</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>addSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ae016beb18ed985f2cdd2bb882757f463</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a6d53c76bc16ed9b0c3aff1041696ae81</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; dynamics::SkeletonPtr &gt;</type>
      <name>removeAllSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a4e16c729076a67e36fe6e7af31c1c359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a8967d970826359ef98641107c19ca3ec</anchor>
      <arglist>(const dynamics::ConstSkeletonPtr &amp;skeleton) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a49df83216e5015f198046d737e19a90f</anchor>
      <arglist>(int _index) const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SimpleFramePtr</type>
      <name>getSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a80ac678633c9c5accdd5a0914d677ca7</anchor>
      <arglist>(std::size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SimpleFramePtr</type>
      <name>getSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a58f50b12c440263a6d050cb469d8086c</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ae6e7117de7a5a54d32716c281bdb92af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>addSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a9deb69dc4e21f50126fe6300763b92af</anchor>
      <arglist>(const dynamics::SimpleFramePtr &amp;_frame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a9fa2776290d75cf00344c28bc5a0273f</anchor>
      <arglist>(const dynamics::SimpleFramePtr &amp;_frame)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; dynamics::SimpleFramePtr &gt;</type>
      <name>removeAllSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ad7d9761552dd73877b6c5eebb1cfe6b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCollision</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ac4d41631adc9693f691ba5f6b3507d8c</anchor>
      <arglist>(bool checkAllCollisions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCollision</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a5058e3b4e2b96f935014becf9b8a2d68</anchor>
      <arglist>(const collision::CollisionOption &amp;option=collision::CollisionOption(false, 1u, nullptr), collision::CollisionResult *result=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>const collision::CollisionResult &amp;</type>
      <name>getLastCollisionResult</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a372d0ef93fcca3ea1c7160017b634848</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ab7212df7957a3d17941dda4d199a30ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>step</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a58347241b736644fbc671d55a0f76d38</anchor>
      <arglist>(bool _resetCommand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a4cff8eb25601695d80f2ef8b9871ec4e</anchor>
      <arglist>(double _time)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTime</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>af8ccaec63c40f01c240f4659127dadc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSimFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>acd7a94b138ed0358535f5badd11d0819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constraint::ConstraintSolver *</type>
      <name>getConstraintSolver</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a6bbd6a9af74b286d9dd522d8bfef3a36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bake</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a9818ee9fc3e6e5a402ccc93b530d872a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Recording *</type>
      <name>getRecording</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ae602e49e836f4f305b0b8a08d7656695</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; World &gt;</type>
      <name>create</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a35756fdef638b05bffb9e39c1fd5c1a4</anchor>
      <arglist>(const std::string &amp;name=&quot;world&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; NameChangedSignal &gt;</type>
      <name>onNameChanged</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a7bd499d3b626eb82e890bbbeaa543206</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleSkeletonNameChange</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ad6e9a33692caa411be686be012177b31</anchor>
      <arglist>(const dynamics::ConstMetaSkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleSimpleFrameNameChange</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a2f33f2cf8a5979fadb2b5a9899b400da</anchor>
      <arglist>(const dynamics::Entity *_entity)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a32175b63fe2cf7e430594c273cb9febb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; dynamics::SkeletonPtr &gt;</type>
      <name>mSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a6b7a89ecfafb6044bf95fe4b06684d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; dynamics::ConstMetaSkeletonPtr, dynamics::SkeletonPtr &gt;</type>
      <name>mMapForSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a0fb3ba2ac90d62510662e130e09fb83b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; common::Connection &gt;</type>
      <name>mNameConnectionsForSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ae6786cba173e827d89534e5a2f4e717c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; dynamics::SkeletonPtr &gt;</type>
      <name>mNameMgrForSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a38de24ec125489bb764627e6eb638c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; dynamics::SimpleFramePtr &gt;</type>
      <name>mSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a8823a427785826bf07dbad9f1da9ec61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; common::Connection &gt;</type>
      <name>mNameConnectionsForSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>abe2caf13ebd38283fd68785f7baea4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; const dynamics::SimpleFrame *, dynamics::SimpleFramePtr &gt;</type>
      <name>mSimpleFrameToShared</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a480f00ee2c5ad32043a3c05ef55e535a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; dynamics::SimpleFramePtr &gt;</type>
      <name>mNameMgrForSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>adcfcf7daf4fc391e50ec0cd78575d0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>mIndices</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a950a0b55028b7b6c13734782a475317b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mGravity</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a5ede55fe21cae927c035fb67576c2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a9499ae70cc78463e92d9972da6a74f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTime</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>afe673269f4d344f74bef467804b76886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>abff4aab9c284d535ae96aa0635515071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>constraint::ConstraintSolver *</type>
      <name>mConstraintSolver</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a0fc64a7f541b3b15658c3e2a72f8a3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Recording *</type>
      <name>mRecording</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>aefb693f716a3b86e241df77ba80b4d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameChangedSignal</type>
      <name>mNameChangedSignal</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ac0f95fe4b02f62e599166c42f0f93e81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::utils</name>
    <filename>d8/d28/namespacedart_1_1utils.html</filename>
    <namespace>dart::utils::SdfParser</namespace>
    <namespace>dart::utils::SkelParser</namespace>
    <namespace>dart::utils::urdf_parsing</namespace>
    <namespace>dart::utils::VskParser</namespace>
    <class kind="struct">dart::utils::c3d_head_t</class>
    <class kind="struct">dart::utils::c3d_param_t</class>
    <class kind="struct">dart::utils::c3d_frameSI_t</class>
    <class kind="struct">dart::utils::c3d_frame_t</class>
    <class kind="class">dart::utils::CompositeResourceRetriever</class>
    <class kind="class">dart::utils::DartResourceRetriever</class>
    <class kind="class">dart::utils::FileInfoC3D</class>
    <class kind="class">dart::utils::FileInfoDof</class>
    <class kind="class">dart::utils::FileInfoWorld</class>
    <class kind="class">dart::utils::PackageResourceRetriever</class>
    <class kind="class">dart::utils::DartLoader</class>
    <class kind="class">dart::utils::TemplatedElementEnumerator</class>
    <member kind="typedef">
      <type>struct dart::utils::c3d_head_t</type>
      <name>c3d_head</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3def68c5794a81e2309c716b523c6fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_param_t</type>
      <name>c3d_param</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad95ee720fe5a2e7f47f18ad92593990c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frameSI_t</type>
      <name>c3d_frameSI</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d23a7d5dab1c15d3db9070bc56da5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frame_t</type>
      <name>c3d_frame</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a79fae4bb8e83049b9ba12b3c4be507bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CompositeResourceRetriever &gt;</type>
      <name>CompositeResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a02b215ff0eb5b6981a9effd2e3b121b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; DartResourceRetriever &gt;</type>
      <name>DartResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad285b6a796a9b4ad7f23540aaf74c3a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PackageResourceRetriever &gt;</type>
      <name>PackageResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8192795044e4474bdecb0daf5c3a3b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>urdf_shared_ptr&lt; urdf::ModelInterface &gt;</type>
      <name>ModelInterfacePtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a07b8511877e0c1607dc16415de735bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplatedElementEnumerator&lt; tinyxml2::XMLElement &gt;</type>
      <name>ElementEnumerator</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aca9b6628dbe888926901fa25ac1379c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TemplatedElementEnumerator&lt; const tinyxml2::XMLElement &gt;</type>
      <name>ConstElementEnumerator</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab10c84093cc5dcbba72069f85ce02172</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>convertDecToFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aee22589a8d85518529348c2db8f2763e</anchor>
      <arglist>(char _bytes[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatToDec</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1cb5c82f6b3724ff3b2023dc5d9d9f29</anchor>
      <arglist>(float _f, char *_bytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a2e66c9922323d9ddb8b819fe16d77c21</anchor>
      <arglist>(const char *_fileName, std::vector&lt; std::vector&lt; Eigen::Vector3d &gt;&gt; &amp;_pointData, int *_nFrame, int *_nMarker, double *_freq)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8e50426153dbd954f42b7d773b905096</anchor>
      <arglist>(const char *_fileName, std::vector&lt; std::vector&lt; Eigen::Vector3d &gt;&gt; &amp;_pointData, int _nFrame, int _nMarker, double _freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterial</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7c62debee37d3459f9191ddb4b6af5c7</anchor>
      <arglist>(const urdf::ModelInterface *model, dynamics::VisualAspect *visualAspect, const urdf::Visual *viz)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Visual &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac48712a52ea3a23fd68dc73a0539f23f</anchor>
      <arglist>(const urdf::Visual *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Collision &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae0dccbcd41c0661ed42f77f0835ab004</anchor>
      <arglist>(const urdf::Collision *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaf0991ca23da84cda8333b698bfc6f12</anchor>
      <arglist>(bool v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1650e56a57b5017472f94725d9322bad</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abab96c43d769f15500a3b702e27f4666</anchor>
      <arglist>(unsigned int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a940dc66fba1f0ee5fc99f320fb85eda2</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a71fe7f1536b4651e57e56d83113bb39f</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a6300c4d6d990d3c1cae8b8d08b6659d2</anchor>
      <arglist>(char v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac7334737de601e396c253e4c4401d0f3</anchor>
      <arglist>(const Eigen::Vector2d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa874d45abcc70bb929fc4e6bc181cfc7</anchor>
      <arglist>(const Eigen::Vector3d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ade97b2796a68870258e06e5315d0be4a</anchor>
      <arglist>(const Eigen::Vector3i &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7537e627c6a90286e25482b12bc73eac</anchor>
      <arglist>(const Eigen::Vector6d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>af2b223e8a456b9258af73536f831aaf6</anchor>
      <arglist>(const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae36194488ef10299d87b5e6306ed99a2</anchor>
      <arglist>(const Eigen::Isometry3d &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad0f47286d2826039414ba6155dfd278c</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a72f6f200690eb7c4cd58f95eb8720932</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>toUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0a5ed0581b4baeb125c120adfe990704</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>toFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa362549a1a1256f1dcb42716a30d7d98</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3eaa83373efcf7c9e1fc1f5fad404185</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>toChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaa1281a93cf8e2f8d5bc6af0a33ad0c0</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>toVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7a857a5a2f5d07ffa24827d9db7e609d</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>toVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d26bcb948ce1dad6ebc03b0132873dd</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>toVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8ff1b108a74593f1c21e680667c7d017</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>toVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae386eb2654833eeedbe5ef63fa285fc8</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>toVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9908fa2e4c843612d86db4f9130d5746</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a307050199c4344c73ce74b882c26c9e7</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa23bc793bee3c16f618529ed4b2e6899</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getValueString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abfe8c33e28bc1ca68724ba090522669e</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getValueBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a065213a59f051f979997553c5138cf8c</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValueInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa521647c04f8868a90138721bfca7723</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getValueUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a2b402c075831463ed21ddea14cfba443</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8a7f116a66ef33b51d9a60577b9332db</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValueDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad8c57dfa56669120dc0a2a60688a4cd5</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getValueChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab7ce28e8229f577f05d3c78f9fd3fb74</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getValueVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aabaccb50bae3ed6dcd6d6fbe7495f523</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a772def0e95fcf2c7c44247373a437dc3</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>getValueVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaafb7e135132c814897fc7634a0736c8</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getValueVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0c95918ca7516424e23b3166a5c38bca</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getValueVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a394490b0cf4dce2320f706c7f572e661</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVec3</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9046e89fc5b72db912003178feebfc8e</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a59baa147c86d2f99cbb7cc2b1f6fd427</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1e95b5a95a76cdae7bee98a98ede0ac4</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a00d145efe9e4a5abf5521e6960bc849c</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const tinyxml2::XMLElement *</type>
      <name>getElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d265def48b699cecc9b07c66ad8a8b8</anchor>
      <arglist>(const tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>tinyxml2::XMLElement *</type>
      <name>getElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa7cac679e0978d89779f9cc15b9502a1</anchor>
      <arglist>(tinyxml2::XMLElement *parentElement, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openXMLFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aed983198d7b707ff3c59d66e1b651b31</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc, const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;retrieverOrNullPtr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aecf1b5722b24698776999f5e839ff8c1</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a58942c589535c4d34afdc5458dbb105b</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>acc1b51980d8ca734760d0e92cb419cc6</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name, double *d)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAttributeString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa8ed0f68cccb781b5ec07c9919613a69</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAttributeBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad6f9630ec7e0208d87db09e7a11687fb</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAttributeInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae7407196237e7493accf9b5b6e364b10</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getAttributeUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>af5087ea7c898f84a4ef3fb96a52d9a23</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getAttributeFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4519a719e9d6742be68448e5238536c5</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAttributeDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a03b346cde0dd7cc1d875330b1cb1cb4c</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getAttributeChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a384a5531b7b7502111306c4878ff7c2e</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getAttributeVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac458418a8a53b99b85bb2456b75a1957</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAttributeVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a339caae505e6c4465ae6c18cf60a76c8</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getAttributeVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4796ef15ee434643c06a95137133a569</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAttributeVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a799ecd67b92a6f1688f1e67d6b24a560</anchor>
      <arglist>(const tinyxml2::XMLElement *element, const std::string &amp;attributeName)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_head_t</name>
    <filename>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>prec_start</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ad2b77b4d9bb62833851054aeffb48a57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>key</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ad0e2ddb63516ef2e488e0e9100a83970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>pnt_cnt</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a7d805ed7c61da628d09a5c5eb48c1487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>a_channels</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>aa61315b2473f5b7d24efb653bc85d410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>start_frame</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a1472a0bb76e90430f31f9f0b5130186c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>end_frame</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>aa43f91e9beb30861a7f5de16fcab4913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>int_gap</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a359b415fbbe538d59d485c799f67edfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>scale</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ae42705591a5f93213b4ad395f5a0d537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rec_start</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>aec6fbcdcbc10791c792ecdd080f8f881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>a_frames</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ad4db586f54e8e837bf4bfbd1675454f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>freq</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a603abb565a9057c7fd78baf1a616bb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>stuff</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a05723c903b65bf2377bc92c3cbd331a1</anchor>
      <arglist>[244]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_param_t</name>
    <filename>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>reserved</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>a3f1790944ef19d5337e510a5fa067eae</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>pblocks</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>a91e8c2d6d63d2605fd1ed4a0cd580982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>ftype</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>aa17b055263b61c1829b9044c61cd94af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stuff</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>accc75ede28012d06cd33d09ef4f5a03e</anchor>
      <arglist>[512-4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_frameSI_t</name>
    <filename>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>x</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>ada8d17aae483c8ae47f0da829b16424f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>y</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a917dd01b44900daddc0b74fb51e5ca8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>z</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a502b6b61538cfbf9307056c854486109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>cam_byte</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a056efb1734172f68139f9c60808e833d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>residual</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a656004eddcff29185b6dee20664d8651</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_frame_t</name>
    <filename>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>ae158cfea924f7a4aedf0839d8588c485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>aa99173542b07a1accecbf0dcf792e055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>aed040cb4587b65330081d27972903ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>residual</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>a3508d8b223329f1c1e8fa7fa14ffdb48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::CompositeResourceRetriever</name>
    <filename>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</filename>
    <base virtualness="virtual">dart::common::ResourceRetriever</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositeResourceRetriever</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a85272fa7d8d5b1a94d35ac1647198c90</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDefaultRetriever</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a201f12aac4d844c35ac25cddf5960f38</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSchemaRetriever</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a11c3e8e39dabcef23f46a29fd24aa778</anchor>
      <arglist>(const std::string &amp;_schema, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a98cee7096982c0dc472301566d54bb56</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>common::ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>ac3ebe91c37dd635c68d404adc4203c14</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilePath</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a1685ccdfabe9d41fcd26c84affa14249</anchor>
      <arglist>(const common::Uri &amp;uri) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; common::ResourceRetrieverPtr &gt;</type>
      <name>getRetrievers</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a58f9f6c8751947cc1f7daa64be2a6adc</anchor>
      <arglist>(const common::Uri &amp;_uri) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::vector&lt; common::ResourceRetrieverPtr &gt; &gt;</type>
      <name>mResourceRetrievers</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a516393a97215a713d76bd91a98977411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; common::ResourceRetrieverPtr &gt;</type>
      <name>mDefaultResourceRetrievers</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a934eebde3862477791421c629642609e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::DartResourceRetriever</name>
    <filename>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</filename>
    <base>dart::common::ResourceRetriever</base>
    <member kind="function">
      <type></type>
      <name>DartResourceRetriever</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>a4ccb486f3ffac81c5e736d8872f0af5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DartResourceRetriever</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>af54253f7add7bacd985c888aae10d046</anchor>
      <arglist>() override=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>aad0298f370f15e46e90a3e91d97e9dc3</anchor>
      <arglist>(const common::Uri &amp;uri) override</arglist>
    </member>
    <member kind="function">
      <type>common::ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>ace2cbd4952de0b0c53a7758aaa570b93</anchor>
      <arglist>(const common::Uri &amp;uri) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilePath</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>a9bb4d36ea4d1de83ff65bbac27a67ac4</anchor>
      <arglist>(const common::Uri &amp;uri) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; DartResourceRetriever &gt;</type>
      <name>create</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>abac361c827aa68f31a772c115a643066</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addDataDirectory</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>a010ddc5dc79a86fccc18a2a273b1218d</anchor>
      <arglist>(const std::string &amp;packageDirectory)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>resolveDataUri</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>ad0f62c240ed10f95935b278e3e956066</anchor>
      <arglist>(const common::Uri &amp;uri, std::string &amp;relativePath) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::ResourceRetrieverPtr</type>
      <name>mLocalRetriever</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>a728818dd08865687f27d115692408cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>mDataDirectories</name>
      <anchorfile>d5/d87/classdart_1_1utils_1_1DartResourceRetriever.html</anchorfile>
      <anchor>ade876b3cc7ae9ccffbeda330f1399c06</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::FileInfoC3D</name>
    <filename>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</filename>
    <member kind="function">
      <type></type>
      <name>FileInfoC3D</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ac97cf8308be104cd3ef76ec2addb59be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInfoC3D</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a2deee3c842e8b1a05c4f14e61db7a1cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMarkers</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ada484dcffafabfb4c607d9c8b2000b89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFrames</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a4e7edc0223898588f6c82827258b0f6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFPS</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ae6617be3210ba24f656a1f23924f4ac1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getDataAt</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a43e2a31cee5dc5c539d2ad452be66300</anchor>
      <arglist>(int _frame, int _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addData</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>af7f222f9a05b2401a57ddd0b0dcf769f</anchor>
      <arglist>(const std::vector&lt; Eigen::Vector3d &gt; &amp;_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loadFile</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>adc084e88c1ee3b86576a0f271e87563f</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>saveFile</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ad57ecdce2165bbccc1618b21759fc0b9</anchor>
      <arglist>(const char *, int _start, int _end, double _sampleRate=1)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNumMarkers</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a08647a34dbc8f0e7f34597b185681a17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNumFrames</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>aef269a648b2171027858aa2ad41915a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; Eigen::Vector3d &gt; &gt;</type>
      <name>mData</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ad6175019fc65b8635d83210d317b0adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mFPS</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ad1f1a05f7b2fb25b77f61cdd9743bd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>mFileName</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ab0f94892d2f92893667aa0e2bda1490a</anchor>
      <arglist>[256]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::FileInfoDof</name>
    <filename>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</filename>
    <member kind="function">
      <type></type>
      <name>FileInfoDof</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a19eb607103244cafe8752640d965641b</anchor>
      <arglist>(dynamics::Skeleton *_skel, double _fps=120.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInfoDof</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>aa9e3a3a68ea1b9222130e2296f518783</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a94d9636b3b4fb8e847671bb09a8bca1a</anchor>
      <arglist>(const char *_fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveFile</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a004604b3f11ca99e23cae1247f283420</anchor>
      <arglist>(const char *_fileName, std::size_t _start, std::size_t _end, double _sampleRate=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDof</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a42e382ca8d929d60807b946f17f41e1a</anchor>
      <arglist>(const Eigen::VectorXd &amp;_dofs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDofAt</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>aba81d86fc496e18f925da5d095a84f1e</anchor>
      <arglist>(std::size_t _frame, std::size_t _id) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPoseAtFrame</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a095803e056b8421ea6caf67a19fdd104</anchor>
      <arglist>(int _frame) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFPS</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a52d51aca3f9940fc341d0a47e6e8a4e3</anchor>
      <arglist>(double _fps)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFPS</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a0008ea1cea4ce2ca5a71484695d3c736</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFrames</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>aeec061c8de04c42c2b3ea15011db2eca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::Skeleton *</type>
      <name>getSkel</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>ac797aa9acc3112099d2fa103f213dd21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::Skeleton *</type>
      <name>mSkel</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a36e305c83799f754a38546e121d7e576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mFPS</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a5f8d54438cdb4e8dd34f2c16291d5f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>mNumFrames</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a42adcda7398366b8535517263e1dc231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>mFileName</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>ae88ede7a7a0b8812febd7269fb317d79</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::VectorXd &gt;</type>
      <name>mDofs</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a501aad9f9adf5a8bb8b562af6c2f29d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::FileInfoWorld</name>
    <filename>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</filename>
    <member kind="function">
      <type></type>
      <name>FileInfoWorld</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>aba43add1c6200235e265c02702e51dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInfoWorld</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>ae465ad3637493134b9339abe3034fe76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>ab212dd2783b7809e70c17c19dab1eef5</anchor>
      <arglist>(const char *_fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveFile</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a5e514a30d00f7012a359a7ce5c2dd967</anchor>
      <arglist>(const char *_fileName, simulation::Recording *_record)</arglist>
    </member>
    <member kind="function">
      <type>simulation::Recording *</type>
      <name>getRecording</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a13812052ba4c248f114b823505f0b94a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>mFileName</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a2025a7b17a046acc2393fe00d613aa71</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::Recording *</type>
      <name>mRecord</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a2b5306d96023cad9800f9ef988869555</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::PackageResourceRetriever</name>
    <filename>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</filename>
    <base virtualness="virtual">dart::common::ResourceRetriever</base>
    <member kind="function">
      <type></type>
      <name>PackageResourceRetriever</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>abb4c74ac7d6f15f612fd9ba00ad8b97d</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_localRetriever=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PackageResourceRetriever</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a4169130db19c1c4200fe316afbc6befc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPackageDirectory</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a252db2d0346dc20ddb9eda44bab76cc1</anchor>
      <arglist>(const std::string &amp;_packageName, const std::string &amp;_packageDirectory)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a565a38bb690d63fdd25f1a1affcc907c</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>common::ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a4f19c0190dd81d8acf1c5f2a1433ec92</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilePath</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a0e27f0acabb3c8a483ce44f41e61ab0a</anchor>
      <arglist>(const common::Uri &amp;uri) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getPackagePaths</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a8d6cc8993491f0c25a0a843f8de04754</anchor>
      <arglist>(const std::string &amp;_packageName) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>resolvePackageUri</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a88ea5ca9ec7c3ca133068baa4ba2bb0d</anchor>
      <arglist>(const common::Uri &amp;_uri, std::string &amp;_packageName, std::string &amp;_relativePath) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::ResourceRetrieverPtr</type>
      <name>mLocalRetriever</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>ad56d953a1c1e345b7c052addf9b2261e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>mPackageMap</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a1400f414fb9544de0c88795739a76ea2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::DartLoader</name>
    <filename>d8/d29/classdart_1_1utils_1_1DartLoader.html</filename>
    <member kind="function">
      <type></type>
      <name>DartLoader</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>aea41be468ccb93b05744ee7622b3c739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPackageDirectory</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a54d46f3fc7e0d9bb20b07dac4d87fa6d</anchor>
      <arglist>(const std::string &amp;_packageName, const std::string &amp;_packageDirectory)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>parseSkeleton</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>af90a1a2ecd8a855ef826035754d7bcaf</anchor>
      <arglist>(const common::Uri &amp;_uri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>parseSkeletonString</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>adad475ef7c8051c0fdd58855796a5953</anchor>
      <arglist>(const std::string &amp;_urdfString, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dart::simulation::WorldPtr</type>
      <name>parseWorld</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a2c427e98bc36ef00bb66ec0f42e1b648</anchor>
      <arglist>(const common::Uri &amp;_uri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dart::simulation::WorldPtr</type>
      <name>parseWorldString</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a6bac27b58b13196b342c8c4621380bd6</anchor>
      <arglist>(const std::string &amp;_urdfString, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::shared_ptr&lt; dynamics::BodyNode::Properties &gt;</type>
      <name>BodyPropPtr</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>ad32e354ef1c16caa2794094356bfa646</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::shared_ptr&lt; dynamics::Joint::Properties &gt;</type>
      <name>JointPropPtr</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>aa087dce657ab67a763b995935fd2f6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>common::ResourceRetrieverPtr</type>
      <name>getResourceRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a7913d3f19e1d6bab426ec204cfe08c94</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static dart::dynamics::SkeletonPtr</type>
      <name>modelInterfaceToSkeleton</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a34a30d37290706d6d28c8e213cf61fb0</anchor>
      <arglist>(const urdf::ModelInterface *_model, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>createSkeletonRecursive</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a57f94c3f02cee7bcf3095f2c76c98512</anchor>
      <arglist>(const urdf::ModelInterface *model, dynamics::SkeletonPtr _skel, const urdf::Link *_lk, dynamics::BodyNode *_parent, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static dynamics::ShapePtr</type>
      <name>createShape</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a141993f728bffb4e7aea5287cfebcff3</anchor>
      <arglist>(const VisualOrCollision *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static dynamics::BodyNode *</type>
      <name>createDartJointAndNode</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a9be96c086885f68097d5847743cb8ad3</anchor>
      <arglist>(const urdf::Joint *_jt, const dynamics::BodyNode::Properties &amp;_body, dynamics::BodyNode *_parent, dynamics::SkeletonPtr _skeleton, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>createDartNodeProperties</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>aed7b65ebca78d70b4f712ec4076c54fa</anchor>
      <arglist>(const urdf::Link *_lk, dynamics::BodyNode::Properties &amp;properties, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>createShapeNodes</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>ad6290fc8aa16b29e60cda764dc14f28b</anchor>
      <arglist>(const urdf::ModelInterface *model, const urdf::Link *lk, dynamics::BodyNode *bodyNode, const common::Uri &amp;baseUri, const common::ResourceRetrieverPtr &amp;resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>toEigen</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a18adad8888cbbbfb99cae596585f46bf</anchor>
      <arglist>(const urdf::Pose &amp;_pose)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>toEigen</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a69bbd9cd02c35b2439f8d6d8dd318aac</anchor>
      <arglist>(const urdf::Vector3 &amp;_vector)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>readFileToString</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>ac4dc552244f97e3e1e00d4fbe306d061</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever, const common::Uri &amp;_uri, std::string &amp;_output)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::LocalResourceRetrieverPtr</type>
      <name>mLocalRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a9f0d4e5fb7d17460f0ecf2d70db7b037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>utils::PackageResourceRetrieverPtr</type>
      <name>mPackageRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>af01e3aeb3a05ac8fb71615cbc4a67bf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>utils::CompositeResourceRetrieverPtr</type>
      <name>mRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a0a203558ed53f49daf0b65ed09fa211b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::TemplatedElementEnumerator</name>
    <filename>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</filename>
    <templarg>ElementType</templarg>
    <member kind="function">
      <type></type>
      <name>TemplatedElementEnumerator</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>af500d334a5d2215e1b33c89730570ed1</anchor>
      <arglist>(ElementPtr parentElement, const std::string &amp;childElementName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TemplatedElementEnumerator</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>a67f642414d1e20d1de213c5d92c6d08e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>next</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>a0daa5703de447ef32c40c4c51a4de600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ElementPtr</type>
      <name>get</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>a23a6f7b449d09b758c38cb52f0bfc250</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ElementPtr</type>
      <name>operator-&gt;</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>a4d7781c91bed3bb5be60033f189fa599</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ElementRef</type>
      <name>operator*</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>a8bcfaf8d743b4da846832d1b76d84591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>afbcc89a11b0f242c32f30dcec6490d8b</anchor>
      <arglist>(const TemplatedElementEnumerator&lt; ElementType &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>TemplatedElementEnumerator&lt; ElementType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>a9162eb6212bc700420e748a855f57112</anchor>
      <arglist>(const TemplatedElementEnumerator&lt; ElementType &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>ElementType *</type>
      <name>ElementPtr</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>ae54494ce5153a461a7a380fe33fcf34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>ElementType &amp;</type>
      <name>ElementRef</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>a5c1db0b90f17653e67d85d519697007c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>ae4da9518d11f785f6f249bd85c0320dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ElementPtr</type>
      <name>mParentElement</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>af8a3b0e34e76c4d6fc8b0db1057ee874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mChildElementName</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>abed75f70362b4aba89c547922bb13e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ElementPtr</type>
      <name>mCurrentElement</name>
      <anchorfile>d3/dd6/classdart_1_1utils_1_1TemplatedElementEnumerator.html</anchorfile>
      <anchor>ab03c81d4d4a53bd14ccb9f681ef3275b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::utils::SdfParser</name>
    <filename>d5/d5c/namespacedart_1_1utils_1_1SdfParser.html</filename>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readSdfFile</name>
      <anchorfile>d5/d5c/namespacedart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a8236ff4ce0486373c4992f480178f4e0</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;nullOrRetriever)</arglist>
    </member>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>d5/d5c/namespacedart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a30be058062f1453fdd05bf0049ca38bf</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;nullOrRetriever)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d5/d5c/namespacedart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a9881d806fcbc00870bdd21c151793341</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;nullOrRetriever)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::utils::SkelParser</name>
    <filename>d3/dcc/namespacedart_1_1utils_1_1SkelParser.html</filename>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>d3/dcc/namespacedart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>ad4da1c4d7febd41fb3004a3bbad3bd70</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;retriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>simulation::WorldPtr</type>
      <name>readWorldXML</name>
      <anchorfile>d3/dcc/namespacedart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a64d84997a11629dc9499aa0ac7d99f96</anchor>
      <arglist>(const std::string &amp;xmlString, const common::Uri &amp;baseUri=&quot;&quot;, const common::ResourceRetrieverPtr &amp;retriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d3/dcc/namespacedart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a22917f8275a73d84543e89eff6c09eb0</anchor>
      <arglist>(const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;retriever=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::utils::urdf_parsing</name>
    <filename>d0/d4c/namespacedart_1_1utils_1_1urdf__parsing.html</filename>
    <class kind="class">dart::utils::urdf_parsing::Entity</class>
    <class kind="class">dart::utils::urdf_parsing::World</class>
    <member kind="function">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>parseWorldURDF</name>
      <anchorfile>d0/d4c/namespacedart_1_1utils_1_1urdf__parsing.html</anchorfile>
      <anchor>a7eb3d95cafc38f932832d0b9ba141c6e</anchor>
      <arglist>(const std::string &amp;_xml_string, const dart::common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;retriever)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::urdf_parsing::Entity</name>
    <filename>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</filename>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a8a89bce6933404f2ab4462eb1aee0a3d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a624cbbd664d470b6c1fc7a71388ca32c</anchor>
      <arglist>(const urdf::Entity &amp;urdfEntity)</arglist>
    </member>
    <member kind="variable">
      <type>urdf_shared_ptr&lt; urdf::ModelInterface &gt;</type>
      <name>model</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a1b8d7995492728e1e8b588ffeaa21fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>urdf::Pose</type>
      <name>origin</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a220569966e8f25bc16b9fb204583b84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>urdf::Twist</type>
      <name>twist</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a13ea7d9de4cf8605e12d9640c5e58a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dart::common::Uri</type>
      <name>uri</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>aa009120ab67a9c6c2122a42628ad12b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::urdf_parsing::World</name>
    <filename>d5/d46/classdart_1_1utils_1_1urdf__parsing_1_1World.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d5/d46/classdart_1_1utils_1_1urdf__parsing_1_1World.html</anchorfile>
      <anchor>a91457c42a13c3975a32674e2fe006a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Entity &gt;</type>
      <name>models</name>
      <anchorfile>d5/d46/classdart_1_1utils_1_1urdf__parsing_1_1World.html</anchorfile>
      <anchor>abb21099dce92b15982dd29f0c258b76b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::utils::VskParser</name>
    <filename>d3/d0e/namespacedart_1_1utils_1_1VskParser.html</filename>
    <class kind="struct">dart::utils::VskParser::Options</class>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d3/d0e/namespacedart_1_1utils_1_1VskParser.html</anchorfile>
      <anchor>ae7db5995328e71746c12785494eb5ae6</anchor>
      <arglist>(const common::Uri &amp;fileUri, Options options=Options())</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::VskParser::Options</name>
    <filename>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</filename>
    <member kind="function">
      <type></type>
      <name>Options</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a3dec66c539b1df16fbbf04a4806883f3</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;retrieverOrNullptr=nullptr, const Eigen::Vector3d &amp;defaultEllipsoidSize=Eigen::Vector3d::Constant(0.05), double thicknessRatio=0.35, double density=1e+3, double jointPositionLowerLimit=-math::constantsd::pi(), double jointPositionUpperLimit=+math::constantsd::pi(), double jointDampingCoefficient=0.1, double jointFriction=0.0, bool removeEndBodyNodes=false)</arglist>
    </member>
    <member kind="variable">
      <type>common::ResourceRetrieverPtr</type>
      <name>retrieverOrNullptr</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a8d66e9c092aea090fe569b189ca32083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>defaultEllipsoidSize</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a84eb5dac5effbd71ae973d541ca20be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>thicknessRatio</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>afd3d5d10edb158beae27fb4872329a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>density</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a0793fda6aa81c60e09b4f5bafca18896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>jointPositionLowerLimit</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a5bfe53879bcb5ba662866514a309b44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>jointPositionUpperLimit</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>ad784540dedf985da601cf7fa70ee14ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>jointDampingCoefficient</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a2ac8a879ce8f2deab572d5fd776778d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>jointFriction</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a3f4e84aa059bb114d0df6489df2fd072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>removeEndBodyNodes</name>
      <anchorfile>d9/df8/structdart_1_1utils_1_1VskParser_1_1Options.html</anchorfile>
      <anchor>a1b0041006f61372d95a57108502d7e98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Eigen</name>
    <filename>d1/d62/namespaceEigen.html</filename>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 1 &gt;</type>
      <name>Vector6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a256bc41e53605f5abb08663701978077</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 6 &gt;</type>
      <name>Matrix6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac472a7c3ac8e9babc4efd3f3286e4b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>EIGEN_V_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a6e551a25f1ce7ec40859614c2640649b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; Eigen::Vector3d &gt;&gt;</type>
      <name>EIGEN_VV_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>af55914dc073a93e64d1d4ec875c4e178</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; _Tp, Eigen::aligned_allocator&lt; _Tp &gt;&gt;</type>
      <name>aligned_vector</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a8dfe4f733de0543cf4067932f2ce7efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; _Key, _Tp, _Compare, Eigen::aligned_allocator&lt; std::pair&lt; const _Key, _Tp &gt;&gt;&gt;</type>
      <name>aligned_map</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac7d9b3d70dd2fee4a4e69d3328060c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector6d</type>
      <name>compose</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a5ddf9ce6ff40e8e0a562b80953064149</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angular, const Eigen::Vector3d &amp;_linear)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; _Tp &gt;</type>
      <name>make_aligned_shared</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ab5662ca881d3d41dc8716964a2a9f5ac</anchor>
      <arglist>(_Args &amp;&amp;...__args)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>flann</name>
    <filename>da/dd9/namespaceflann.html</filename>
    <class kind="class">flann::L2</class>
    <class kind="class">flann::Index</class>
  </compound>
  <compound kind="class">
    <name>flann::L2</name>
    <filename>d6/dd6/classflann_1_1L2.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>flann::Index</name>
    <filename>d6/d7d/classflann_1_1Index.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>d8/dcc/namespacestd.html</filename>
    <class kind="struct">std::hash&lt; boost::filesystem::path &gt;</class>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; boost::filesystem::path &gt;</name>
    <filename>dc/de2/structstd_1_1hash_3_01boost_1_1filesystem_1_1path_01_4.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>dc/de2/structstd_1_1hash_3_01boost_1_1filesystem_1_1path_01_4.html</anchorfile>
      <anchor>aca28289be26e2b9f97e3769c1d967509</anchor>
      <arglist>(const boost::filesystem::path &amp;p) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>urdf</name>
    <filename>dc/de5/namespaceurdf.html</filename>
  </compound>
  <compound kind="dir">
    <name>dart/collision/bullet</name>
    <path>/dart/collision/bullet/</path>
    <filename>dir_b637490a2ad2244ddde6a51ab145510e.html</filename>
    <dir>dart/collision/bullet/detail</dir>
    <file>BulletCollisionDetector.cpp</file>
    <file>BulletCollisionDetector.hpp</file>
    <file>BulletCollisionGroup.cpp</file>
    <file>BulletCollisionGroup.hpp</file>
    <file>BulletCollisionObject.cpp</file>
    <file>BulletCollisionObject.hpp</file>
    <file>BulletCollisionShape.cpp</file>
    <file>BulletCollisionShape.hpp</file>
    <file>BulletTypes.cpp</file>
    <file>BulletTypes.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/collision</name>
    <path>/dart/collision/</path>
    <filename>dir_7aaf2eefc9c12d3855f042d5a221f589.html</filename>
    <dir>dart/collision/bullet</dir>
    <dir>dart/collision/dart</dir>
    <dir>dart/collision/detail</dir>
    <dir>dart/collision/fcl</dir>
    <dir>dart/collision/ode</dir>
    <file>CollisionDetector.cpp</file>
    <file>CollisionDetector.hpp</file>
    <file>CollisionFilter.cpp</file>
    <file>CollisionFilter.hpp</file>
    <file>CollisionGroup.cpp</file>
    <file>CollisionGroup.hpp</file>
    <file>CollisionObject.cpp</file>
    <file>CollisionObject.hpp</file>
    <file>CollisionOption.cpp</file>
    <file>CollisionOption.hpp</file>
    <file>CollisionResult.cpp</file>
    <file>CollisionResult.hpp</file>
    <file>Contact.cpp</file>
    <file>Contact.hpp</file>
    <file>DistanceFilter.cpp</file>
    <file>DistanceFilter.hpp</file>
    <file>DistanceOption.cpp</file>
    <file>DistanceOption.hpp</file>
    <file>DistanceResult.cpp</file>
    <file>DistanceResult.hpp</file>
    <file>Option.hpp</file>
    <file>Result.hpp</file>
    <file>SmartPointer.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/common</name>
    <path>/dart/common/</path>
    <filename>dir_038ecf057a57cc1982efaa71edfdbdcb.html</filename>
    <dir>dart/common/detail</dir>
    <file>Aspect.cpp</file>
    <file>Aspect.hpp</file>
    <file>AspectWithVersion.hpp</file>
    <file>Cloneable.hpp</file>
    <file>Composite.cpp</file>
    <file>Composite.hpp</file>
    <file>CompositeJoiner.hpp</file>
    <file>Console.cpp</file>
    <file>Console.hpp</file>
    <file>Deprecated.hpp</file>
    <file>EmbeddedAspect.hpp</file>
    <file>Empty.hpp</file>
    <file>Factory.hpp</file>
    <file>LocalResource.cpp</file>
    <file>LocalResource.hpp</file>
    <file>LocalResourceRetriever.cpp</file>
    <file>LocalResourceRetriever.hpp</file>
    <file>LockableReference.hpp</file>
    <file>Memory.hpp</file>
    <file>NameManager.hpp</file>
    <file>Observer.cpp</file>
    <file>Observer.hpp</file>
    <file>Platform.hpp</file>
    <file>ProxyAspect.hpp</file>
    <file>RequiresAspect.hpp</file>
    <file>Resource.cpp</file>
    <file>Resource.hpp</file>
    <file>ResourceRetriever.cpp</file>
    <file>ResourceRetriever.hpp</file>
    <file>SharedLibrary.cpp</file>
    <file>SharedLibrary.hpp</file>
    <file>Signal.cpp</file>
    <file>Signal.hpp</file>
    <file>Singleton.hpp</file>
    <file>SmartPointer.hpp</file>
    <file>SpecializedForAspect.hpp</file>
    <file>StlHelpers.hpp</file>
    <file>sub_ptr.hpp</file>
    <file>Subject.cpp</file>
    <file>Subject.hpp</file>
    <file>Timer.cpp</file>
    <file>Timer.hpp</file>
    <file>Uri.cpp</file>
    <file>Uri.hpp</file>
    <file>VersionCounter.cpp</file>
    <file>VersionCounter.hpp</file>
    <file>Virtual.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/constraint</name>
    <path>/dart/constraint/</path>
    <filename>dir_f2ed43681a1f94b8b6b590eee51c5fa9.html</filename>
    <file>BalanceConstraint.cpp</file>
    <file>BalanceConstraint.hpp</file>
    <file>BallJointConstraint.cpp</file>
    <file>BallJointConstraint.hpp</file>
    <file>ConstrainedGroup.cpp</file>
    <file>ConstrainedGroup.hpp</file>
    <file>ConstraintBase.cpp</file>
    <file>ConstraintBase.hpp</file>
    <file>ConstraintSolver.cpp</file>
    <file>ConstraintSolver.hpp</file>
    <file>ContactConstraint.cpp</file>
    <file>ContactConstraint.hpp</file>
    <file>DantzigLCPSolver.cpp</file>
    <file>DantzigLCPSolver.hpp</file>
    <file>JointConstraint.cpp</file>
    <file>JointConstraint.hpp</file>
    <file>JointCoulombFrictionConstraint.cpp</file>
    <file>JointCoulombFrictionConstraint.hpp</file>
    <file>JointLimitConstraint.cpp</file>
    <file>JointLimitConstraint.hpp</file>
    <file>LCPSolver.cpp</file>
    <file>LCPSolver.hpp</file>
    <file>PGSLCPSolver.cpp</file>
    <file>PGSLCPSolver.hpp</file>
    <file>ServoMotorConstraint.cpp</file>
    <file>ServoMotorConstraint.hpp</file>
    <file>SmartPointer.hpp</file>
    <file>SoftContactConstraint.cpp</file>
    <file>SoftContactConstraint.hpp</file>
    <file>WeldJointConstraint.cpp</file>
    <file>WeldJointConstraint.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/collision/dart</name>
    <path>/dart/collision/dart/</path>
    <filename>dir_131dbabb1e3b2d47fa0af3a8336591fd.html</filename>
    <file>DARTCollide.cpp</file>
    <file>DARTCollide.hpp</file>
    <file>DARTCollisionDetector.cpp</file>
    <file>DARTCollisionDetector.hpp</file>
    <file>DARTCollisionGroup.cpp</file>
    <file>DARTCollisionGroup.hpp</file>
    <file>DARTCollisionObject.cpp</file>
    <file>DARTCollisionObject.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart</name>
    <path>/dart/</path>
    <filename>dir_bdca9e024c7189a7f761273aaa65cff0.html</filename>
    <dir>dart/collision</dir>
    <dir>dart/common</dir>
    <dir>dart/constraint</dir>
    <dir>dart/dynamics</dir>
    <dir>dart/gui</dir>
    <dir>dart/integration</dir>
    <dir>dart/lcpsolver</dir>
    <dir>dart/math</dir>
    <dir>dart/optimizer</dir>
    <dir>dart/planning</dir>
    <dir>dart/simulation</dir>
    <dir>dart/utils</dir>
    <file>dart.cpp</file>
    <file>dart.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/math/detail</name>
    <path>/dart/math/detail/</path>
    <filename>dir_a53829240df94e71802b85203276f990.html</filename>
    <file>ConfigurationSpace.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/dynamics/detail</name>
    <path>/dart/dynamics/detail/</path>
    <filename>dir_d3413d487e3f281ac8dda0a2946d4186.html</filename>
    <file>BasicNodeManager.hpp</file>
    <file>BodyNode.hpp</file>
    <file>BodyNodeAspect.hpp</file>
    <file>BodyNodePtr.hpp</file>
    <file>CompositeNode.hpp</file>
    <file>DegreeOfFreedomPtr.hpp</file>
    <file>EndEffectorAspect.hpp</file>
    <file>EntityNode.hpp</file>
    <file>EntityNodeAspect.cpp</file>
    <file>EntityNodeAspect.hpp</file>
    <file>EulerJointAspect.cpp</file>
    <file>EulerJointAspect.hpp</file>
    <file>FixedFrameAspect.hpp</file>
    <file>FixedJacobianNode.hpp</file>
    <file>GenericJoint.hpp</file>
    <file>GenericJointAspect.hpp</file>
    <file>HeightmapShape-impl.hpp</file>
    <file>InverseKinematics.hpp</file>
    <file>InverseKinematicsPtr.hpp</file>
    <file>JointAspect.hpp</file>
    <file>JointPtr.hpp</file>
    <file>MarkerAspect.hpp</file>
    <file>Node.hpp</file>
    <file>NodeManagerJoiner.hpp</file>
    <file>NodePtr.hpp</file>
    <file>PlanarJointAspect.cpp</file>
    <file>PlanarJointAspect.hpp</file>
    <file>PrismaticJointAspect.cpp</file>
    <file>PrismaticJointAspect.hpp</file>
    <file>RevoluteJointAspect.cpp</file>
    <file>RevoluteJointAspect.hpp</file>
    <file>ScrewJointAspect.cpp</file>
    <file>ScrewJointAspect.hpp</file>
    <file>Shape.hpp</file>
    <file>ShapeFrameAspect.hpp</file>
    <file>ShapeNode.hpp</file>
    <file>Skeleton.hpp</file>
    <file>SkeletonAspect.hpp</file>
    <file>SoftBodyNodeAspect.hpp</file>
    <file>SpecializedNodeManager.hpp</file>
    <file>TemplatedJacobianNode.hpp</file>
    <file>TranslationalJoint2DAspect.cpp</file>
    <file>TranslationalJoint2DAspect.hpp</file>
    <file>UniversalJointAspect.cpp</file>
    <file>UniversalJointAspect.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/common/detail</name>
    <path>/dart/common/detail/</path>
    <filename>dir_201a2942a46777912343adccc75a2706.html</filename>
    <file>AlignedAllocator.hpp</file>
    <file>Aspect.hpp</file>
    <file>AspectWithVersion.hpp</file>
    <file>Cloneable.hpp</file>
    <file>Composite.hpp</file>
    <file>CompositeData.hpp</file>
    <file>CompositeJoiner.hpp</file>
    <file>ConnectionBody.cpp</file>
    <file>ConnectionBody.hpp</file>
    <file>EmbeddedAspect.hpp</file>
    <file>Factory-impl.hpp</file>
    <file>LockableReference-impl.hpp</file>
    <file>Memory-impl.hpp</file>
    <file>NameManager.hpp</file>
    <file>NoOp.hpp</file>
    <file>ProxyAspect.hpp</file>
    <file>RequiresAspect.hpp</file>
    <file>SharedLibraryManager.cpp</file>
    <file>SharedLibraryManager.hpp</file>
    <file>Signal.hpp</file>
    <file>Singleton-impl.hpp</file>
    <file>SpecializedForAspect.hpp</file>
    <file>sub_ptr.hpp</file>
    <file>TemplateJoinerDispatchMacro.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/collision/ode/detail</name>
    <path>/dart/collision/ode/detail/</path>
    <filename>dir_d731ad480c02130ac97d13d2fde2897d.html</filename>
    <file>OdeBox.cpp</file>
    <file>OdeBox.hpp</file>
    <file>OdeCapsule.cpp</file>
    <file>OdeCapsule.hpp</file>
    <file>OdeCylinder.cpp</file>
    <file>OdeCylinder.hpp</file>
    <file>OdeGeom.cpp</file>
    <file>OdeGeom.hpp</file>
    <file>OdeHeightmap-impl.hpp</file>
    <file>OdeHeightmap.hpp</file>
    <file>OdeMesh.cpp</file>
    <file>OdeMesh.hpp</file>
    <file>OdePlane.cpp</file>
    <file>OdePlane.hpp</file>
    <file>OdeSphere.cpp</file>
    <file>OdeSphere.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/collision/detail</name>
    <path>/dart/collision/detail/</path>
    <filename>dir_d37fbd86ac25490fcdffc3a13c046523.html</filename>
    <file>CollisionDetector.hpp</file>
    <file>CollisionGroup.hpp</file>
    <file>Contact-impl.hpp</file>
    <file>UnorderedPairs.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/collision/bullet/detail</name>
    <path>/dart/collision/bullet/detail/</path>
    <filename>dir_4aed9f446e6fe8cb1e0f873d21b405fc.html</filename>
    <file>BulletCollisionDispatcher.cpp</file>
    <file>BulletCollisionDispatcher.hpp</file>
    <file>BulletOverlapFilterCallback.cpp</file>
    <file>BulletOverlapFilterCallback.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/dynamics</name>
    <path>/dart/dynamics/</path>
    <filename>dir_ce1d750ba4a7950ac0659613f96015b8.html</filename>
    <dir>dart/dynamics/detail</dir>
    <file>ArrowShape.cpp</file>
    <file>ArrowShape.hpp</file>
    <file>AssimpInputResourceAdaptor.cpp</file>
    <file>AssimpInputResourceAdaptor.hpp</file>
    <file>BallJoint.cpp</file>
    <file>BallJoint.hpp</file>
    <file>BodyNode.cpp</file>
    <file>BodyNode.hpp</file>
    <file>BoxShape.cpp</file>
    <file>BoxShape.hpp</file>
    <file>Branch.cpp</file>
    <file>Branch.hpp</file>
    <file>CapsuleShape.cpp</file>
    <file>CapsuleShape.hpp</file>
    <file>Chain.cpp</file>
    <file>Chain.hpp</file>
    <file>CompositeNode.hpp</file>
    <file>ConeShape.cpp</file>
    <file>ConeShape.hpp</file>
    <file>CylinderShape.cpp</file>
    <file>CylinderShape.hpp</file>
    <file>DegreeOfFreedom.cpp</file>
    <file>DegreeOfFreedom.hpp</file>
    <file>EllipsoidShape.cpp</file>
    <file>EllipsoidShape.hpp</file>
    <file>EndEffector.cpp</file>
    <file>EndEffector.hpp</file>
    <file>Entity.cpp</file>
    <file>Entity.hpp</file>
    <file>EntityNode.hpp</file>
    <file>EulerJoint.cpp</file>
    <file>EulerJoint.hpp</file>
    <file>FixedFrame.cpp</file>
    <file>FixedFrame.hpp</file>
    <file>FixedJacobianNode.cpp</file>
    <file>FixedJacobianNode.hpp</file>
    <file>Frame.cpp</file>
    <file>Frame.hpp</file>
    <file>FreeJoint.cpp</file>
    <file>FreeJoint.hpp</file>
    <file>GenericJoint.hpp</file>
    <file>Group.cpp</file>
    <file>Group.hpp</file>
    <file>HeightmapShape.hpp</file>
    <file>HierarchicalIK.cpp</file>
    <file>HierarchicalIK.hpp</file>
    <file>IkFast.cpp</file>
    <file>IkFast.hpp</file>
    <file>Inertia.cpp</file>
    <file>Inertia.hpp</file>
    <file>InvalidIndex.hpp</file>
    <file>InverseKinematics.cpp</file>
    <file>InverseKinematics.hpp</file>
    <file>JacobianNode.cpp</file>
    <file>JacobianNode.hpp</file>
    <file>Joint.cpp</file>
    <file>Joint.hpp</file>
    <file>LineSegmentShape.cpp</file>
    <file>LineSegmentShape.hpp</file>
    <file>Linkage.cpp</file>
    <file>Linkage.hpp</file>
    <file>Marker.cpp</file>
    <file>Marker.hpp</file>
    <file>MeshShape.cpp</file>
    <file>MeshShape.hpp</file>
    <file>MetaSkeleton.cpp</file>
    <file>MetaSkeleton.hpp</file>
    <file>MultiSphereConvexHullShape.cpp</file>
    <file>MultiSphereConvexHullShape.hpp</file>
    <file>MultiSphereShape.hpp</file>
    <file>Node.cpp</file>
    <file>Node.hpp</file>
    <file>NodeManagerJoiner.hpp</file>
    <file>PlanarJoint.cpp</file>
    <file>PlanarJoint.hpp</file>
    <file>PlaneShape.cpp</file>
    <file>PlaneShape.hpp</file>
    <file>PointMass.cpp</file>
    <file>PointMass.hpp</file>
    <file>PrismaticJoint.cpp</file>
    <file>PrismaticJoint.hpp</file>
    <file>ReferentialSkeleton.cpp</file>
    <file>ReferentialSkeleton.hpp</file>
    <file>RevoluteJoint.cpp</file>
    <file>RevoluteJoint.hpp</file>
    <file>ScrewJoint.cpp</file>
    <file>ScrewJoint.hpp</file>
    <file>Shape.cpp</file>
    <file>Shape.hpp</file>
    <file>ShapeFrame.cpp</file>
    <file>ShapeFrame.hpp</file>
    <file>ShapeNode.cpp</file>
    <file>ShapeNode.hpp</file>
    <file>SharedLibraryIkFast.cpp</file>
    <file>SharedLibraryIkFast.hpp</file>
    <file>SimpleFrame.cpp</file>
    <file>SimpleFrame.hpp</file>
    <file>Skeleton.cpp</file>
    <file>Skeleton.hpp</file>
    <file>SmartPointer.hpp</file>
    <file>SoftBodyNode.cpp</file>
    <file>SoftBodyNode.hpp</file>
    <file>SoftMeshShape.cpp</file>
    <file>SoftMeshShape.hpp</file>
    <file>SpecializedNodeManager.hpp</file>
    <file>SphereShape.cpp</file>
    <file>SphereShape.hpp</file>
    <file>TemplatedJacobianNode.hpp</file>
    <file>TranslationalJoint.cpp</file>
    <file>TranslationalJoint.hpp</file>
    <file>TranslationalJoint2D.cpp</file>
    <file>TranslationalJoint2D.hpp</file>
    <file>UniversalJoint.cpp</file>
    <file>UniversalJoint.hpp</file>
    <file>VoxelGridShape.cpp</file>
    <file>VoxelGridShape.hpp</file>
    <file>WeldJoint.cpp</file>
    <file>WeldJoint.hpp</file>
    <file>ZeroDofJoint.cpp</file>
    <file>ZeroDofJoint.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/collision/fcl</name>
    <path>/dart/collision/fcl/</path>
    <filename>dir_d9bc0d3f4e4fe81f6b2799c71d86043d.html</filename>
    <file>BackwardCompatibility.cpp</file>
    <file>BackwardCompatibility.hpp</file>
    <file>CollisionShapes.hpp</file>
    <file>FCLCollisionDetector.cpp</file>
    <file>FCLCollisionDetector.hpp</file>
    <file>FCLCollisionGroup.cpp</file>
    <file>FCLCollisionGroup.hpp</file>
    <file>FCLCollisionObject.cpp</file>
    <file>FCLCollisionObject.hpp</file>
    <file>FCLTypes.cpp</file>
    <file>FCLTypes.hpp</file>
    <file>tri_tri_intersection_test.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/gui</name>
    <path>/dart/gui/</path>
    <filename>dir_77df7651d5de09f92d5a9d7a4e71e16d.html</filename>
    <dir>dart/gui/osg</dir>
    <file>GLFuncs.cpp</file>
    <file>GLFuncs.hpp</file>
    <file>GlutWindow.cpp</file>
    <file>GlutWindow.hpp</file>
    <file>GraphWindow.cpp</file>
    <file>GraphWindow.hpp</file>
    <file>LoadGlut.hpp</file>
    <file>LoadOpengl.hpp</file>
    <file>MotionBlurSimWindow.cpp</file>
    <file>MotionBlurSimWindow.hpp</file>
    <file>OpenGLRenderInterface.cpp</file>
    <file>OpenGLRenderInterface.hpp</file>
    <file>RenderInterface.cpp</file>
    <file>RenderInterface.hpp</file>
    <file>SimWindow.cpp</file>
    <file>SimWindow.hpp</file>
    <file>SoftSimWindow.cpp</file>
    <file>SoftSimWindow.hpp</file>
    <file>Trackball.cpp</file>
    <file>Trackball.hpp</file>
    <file>Win2D.cpp</file>
    <file>Win2D.hpp</file>
    <file>Win3D.cpp</file>
    <file>Win3D.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/integration</name>
    <path>/dart/integration/</path>
    <filename>dir_11d0e0a9ed3d34dad67cb53c0e080e16.html</filename>
    <file>EulerIntegrator.cpp</file>
    <file>EulerIntegrator.hpp</file>
    <file>Integrator.cpp</file>
    <file>Integrator.hpp</file>
    <file>RK4Integrator.cpp</file>
    <file>RK4Integrator.hpp</file>
    <file>SemiImplicitEulerIntegrator.cpp</file>
    <file>SemiImplicitEulerIntegrator.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/optimizer/ipopt</name>
    <path>/dart/optimizer/ipopt/</path>
    <filename>dir_4de723071857cd11b72eb1e970a1f59e.html</filename>
    <file>IpoptSolver.cpp</file>
    <file>IpoptSolver.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/lcpsolver</name>
    <path>/dart/lcpsolver/</path>
    <filename>dir_10253f68b8645be175f3db557703e448.html</filename>
    <file>Lemke.cpp</file>
    <file>Lemke.hpp</file>
    <file>ODELCPSolver.cpp</file>
    <file>ODELCPSolver.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/math</name>
    <path>/dart/math/</path>
    <filename>dir_89aa97c1afb8f2f06c6371ad36082490.html</filename>
    <dir>dart/math/detail</dir>
    <file>ConfigurationSpace.cpp</file>
    <file>ConfigurationSpace.hpp</file>
    <file>Constants.hpp</file>
    <file>Geometry.cpp</file>
    <file>Geometry.hpp</file>
    <file>Helpers.hpp</file>
    <file>MathTypes.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/optimizer/nlopt</name>
    <path>/dart/optimizer/nlopt/</path>
    <filename>dir_3053eca09ba05573ef0e564df3ddfcd1.html</filename>
    <file>NloptSolver.cpp</file>
    <file>NloptSolver.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/collision/ode</name>
    <path>/dart/collision/ode/</path>
    <filename>dir_684954adc504023c4471066a5c3fd957.html</filename>
    <dir>dart/collision/ode/detail</dir>
    <file>OdeCollisionDetector.cpp</file>
    <file>OdeCollisionDetector.hpp</file>
    <file>OdeCollisionGroup.cpp</file>
    <file>OdeCollisionGroup.hpp</file>
    <file>OdeCollisionObject.cpp</file>
    <file>OdeCollisionObject.hpp</file>
    <file>OdeTypes.cpp</file>
    <file>OdeTypes.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/optimizer</name>
    <path>/dart/optimizer/</path>
    <filename>dir_17ecb0674ae43a7dd53465ba621feab7.html</filename>
    <dir>dart/optimizer/ipopt</dir>
    <dir>dart/optimizer/nlopt</dir>
    <dir>dart/optimizer/snopt</dir>
    <file>Function.cpp</file>
    <file>Function.hpp</file>
    <file>GradientDescentSolver.cpp</file>
    <file>GradientDescentSolver.hpp</file>
    <file>Problem.cpp</file>
    <file>Problem.hpp</file>
    <file>Solver.cpp</file>
    <file>Solver.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/gui/osg</name>
    <path>/dart/gui/osg/</path>
    <filename>dir_2b4f801031e8bcc2ca977d4a2c08cce1.html</filename>
    <dir>dart/gui/osg/render</dir>
    <file>DefaultEventHandler.cpp</file>
    <file>DefaultEventHandler.hpp</file>
    <file>DragAndDrop.cpp</file>
    <file>DragAndDrop.hpp</file>
    <file>ImGuiHandler.cpp</file>
    <file>ImGuiHandler.hpp</file>
    <file>ImGuiViewer.cpp</file>
    <file>ImGuiViewer.hpp</file>
    <file>ImGuiWidget.cpp</file>
    <file>ImGuiWidget.hpp</file>
    <file>InteractiveFrame.cpp</file>
    <file>InteractiveFrame.hpp</file>
    <file>MouseEventHandler.hpp</file>
    <file>ShapeFrameNode.cpp</file>
    <file>ShapeFrameNode.hpp</file>
    <file>SupportPolygonVisual.cpp</file>
    <file>SupportPolygonVisual.hpp</file>
    <file>TrackballManipulator.cpp</file>
    <file>TrackballManipulator.hpp</file>
    <file>Utils.hpp</file>
    <file>Viewer.cpp</file>
    <file>Viewer.hpp</file>
    <file>WorldNode.cpp</file>
    <file>WorldNode.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/planning</name>
    <path>/dart/planning/</path>
    <filename>dir_ab9efa6cf5da43fa1504765d33dbe254.html</filename>
    <file>Path.cpp</file>
    <file>Path.hpp</file>
    <file>PathFollowingTrajectory.cpp</file>
    <file>PathFollowingTrajectory.hpp</file>
    <file>PathPlanner.hpp</file>
    <file>PathShortener.cpp</file>
    <file>PathShortener.hpp</file>
    <file>RRT.cpp</file>
    <file>RRT.hpp</file>
    <file>Trajectory.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/gui/osg/render</name>
    <path>/dart/gui/osg/render/</path>
    <filename>dir_af5f6e55beb8de631156bab63c0de554.html</filename>
    <file>BoxShapeNode.cpp</file>
    <file>BoxShapeNode.hpp</file>
    <file>CapsuleShapeNode.cpp</file>
    <file>CapsuleShapeNode.hpp</file>
    <file>ConeShapeNode.cpp</file>
    <file>ConeShapeNode.hpp</file>
    <file>CylinderShapeNode.cpp</file>
    <file>CylinderShapeNode.hpp</file>
    <file>EllipsoidShapeNode.cpp</file>
    <file>EllipsoidShapeNode.hpp</file>
    <file>LineSegmentShapeNode.cpp</file>
    <file>LineSegmentShapeNode.hpp</file>
    <file>MeshShapeNode.cpp</file>
    <file>MeshShapeNode.hpp</file>
    <file>MultiSphereShapeNode.cpp</file>
    <file>MultiSphereShapeNode.hpp</file>
    <file>PlaneShapeNode.cpp</file>
    <file>PlaneShapeNode.hpp</file>
    <file>ShapeNode.cpp</file>
    <file>ShapeNode.hpp</file>
    <file>SoftMeshShapeNode.cpp</file>
    <file>SoftMeshShapeNode.hpp</file>
    <file>SphereShapeNode.cpp</file>
    <file>SphereShapeNode.hpp</file>
    <file>WarningShapeNode.cpp</file>
    <file>WarningShapeNode.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/utils/sdf</name>
    <path>/dart/utils/sdf/</path>
    <filename>dir_aac3146568c74976f5f3de3ab0035948.html</filename>
    <file>SdfParser.cpp</file>
    <file>SdfParser.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/simulation</name>
    <path>/dart/simulation/</path>
    <filename>dir_422824466fd7ee9e505d8e54ec516d72.html</filename>
    <file>Recording.cpp</file>
    <file>Recording.hpp</file>
    <file>World.cpp</file>
    <file>World.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/optimizer/snopt</name>
    <path>/dart/optimizer/snopt/</path>
    <filename>dir_080be38898392fe9d3f60365d59fdb03.html</filename>
    <file>SnoptInterface.cpp</file>
    <file>SnoptInterface.hpp</file>
    <file>SnoptSolver.cpp</file>
    <file>SnoptSolver.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/utils/urdf</name>
    <path>/dart/utils/urdf/</path>
    <filename>dir_3167900535d36e4d345e8f71f69e35cd.html</filename>
    <file>DartLoader.cpp</file>
    <file>DartLoader.hpp</file>
    <file>urdf_world_parser.cpp</file>
    <file>urdf_world_parser.hpp</file>
    <file>URDFTypes.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dart/utils</name>
    <path>/dart/utils/</path>
    <filename>dir_558fb1470c9a14158ce5db1674bc31a0.html</filename>
    <dir>dart/utils/sdf</dir>
    <dir>dart/utils/urdf</dir>
    <file>C3D.cpp</file>
    <file>C3D.hpp</file>
    <file>CompositeResourceRetriever.cpp</file>
    <file>CompositeResourceRetriever.hpp</file>
    <file>DartResourceRetriever.cpp</file>
    <file>DartResourceRetriever.hpp</file>
    <file>FileInfoC3D.cpp</file>
    <file>FileInfoC3D.hpp</file>
    <file>FileInfoDof.cpp</file>
    <file>FileInfoDof.hpp</file>
    <file>FileInfoWorld.cpp</file>
    <file>FileInfoWorld.hpp</file>
    <file>PackageResourceRetriever.cpp</file>
    <file>PackageResourceRetriever.hpp</file>
    <file>SkelParser.cpp</file>
    <file>SkelParser.hpp</file>
    <file>VskParser.cpp</file>
    <file>VskParser.hpp</file>
    <file>XmlHelpers.cpp</file>
    <file>XmlHelpers.hpp</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>DART - Dynamic Animation and Robotics Toolkits</title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">intro</docanchor>
  </compound>
</tagfile>
